/* No Include Guard! */

/* This file describes domains and relations used by class IRManager */
/* These info will be used to generate fields of class IRManager and generate a AnalysisInfo struct */

#ifndef HANDLE_PRODUCE_DOM
#define HANDLE_PRODUCE_DOM(name, desc)
#endif

/* Since there is no handful tooling for iterating over lists of domain-ids, we use a ATTR macro to wrap around it */
#ifndef HANDLE_PRODUCE_REL
#define HANDLE_PRODUCE_REL(name, doms, ...)
#define ATTR(name, dname)
#else
#ifndef ATTR
#define ATTR(name, dname)
#endif
#endif

HANDLE_PRODUCE_DOM( \
B, \
"basic blocks" \
)
HANDLE_PRODUCE_DOM( \
P, \
"instructions" \
)
HANDLE_PRODUCE_DOM( \
V, \
"variables" \
)
HANDLE_PRODUCE_DOM( \
T, \
"llvm types" \
)
HANDLE_PRODUCE_DOM( \
M, \
"functions" \
)
HANDLE_PRODUCE_DOM( \
C, \
"constants" \
)
HANDLE_PRODUCE_DOM( \
Z, \
"cardinals" \
)
/* "ORD" = "atomic orderings"   */
/* "AS" = "address space"       */

/* control flow */
HANDLE_PRODUCE_REL( \
basicblock_pred, \
"", \
ATTR(pred,B), ATTR(next,B) \
)
HANDLE_PRODUCE_REL( \
basicblock_entry, \
"", \
ATTR(bb,B), ATTR(entry,P) \
)
HANDLE_PRODUCE_REL( \
basicblock_exit, \
"", \
ATTR(bb,B), ATTR(exit,P) \
)
HANDLE_PRODUCE_REL( \
instruction_basicblock, \
"an instruction `inst` belongs to a basicblock `bb`", \
ATTR(inst,P), ATTR(bb,B) \
)
HANDLE_PRODUCE_REL( \
instruction_next, \
"", \
ATTR(inst,P), ATTR(next,P) \
)
HANDLE_PRODUCE_REL( \
basicblock_function, \
"", \
ATTR(bb,B), ATTR(f,M) \
)
/* types */
HANDLE_PRODUCE_REL( \
void_type, \
"", \
ATTR(t,T) \
)
HANDLE_PRODUCE_REL( \
fn_type, \
"", \
ATTR(t,T) \
)
HANDLE_PRODUCE_REL( \
fn_type_varargs, \
"this function type `ty` can accept variable arguments", \
ATTR(t,T) \
)
HANDLE_PRODUCE_REL( \
fn_type_return, \
"this function type `fn_ty` has return type `ret_ty`", \
ATTR(fnty,T), ATTR(retty,T) \
)
HANDLE_PRODUCE_REL( \
fn_type_nparams, \
"this function type `fn_ty` has `n` parameters", \
ATTR(fnty,T), ATTR(n,Z) \
)
HANDLE_PRODUCE_REL( \
fn_type_param, \
"the `i`-th parameter of function type `fn_ty` has type `param_ty`", \
ATTR(fnty,T), ATTR(i,Z), ATTR(paramty,T) \
)
HANDLE_PRODUCE_REL( \
integer_type, \
"", \
ATTR(ty,T) \
)
HANDLE_PRODUCE_REL( \
floatingpoint_type, \
"", \
ATTR(ty,T) \
)
HANDLE_PRODUCE_REL( \
pointer_type, \
"", \
ATTR(ty,T) \
)
HANDLE_PRODUCE_REL( \
pointer_type_opaque, \
"the pointer type `ty` is opaque.", \
ATTR(ty,T) \
)
/* Warning: as of LLVM >= 15, typed-pointers are deprecated */
HANDLE_PRODUCE_REL( \
pointer_type_component, \
"", \
ATTR(ty,T), ATTR(pty,T) \
)
/*
 * HANDLE_PRODUCE_REL( \
 * pointer_type_addrspace, \
 * "", \
 * ATTR(ty,T), ATTR(addr,AS) \
 * )
 */
HANDLE_PRODUCE_REL( \
vector_type, \
"", \
ATTR(ty,T) \
)
HANDLE_PRODUCE_REL( \
vector_type_size, \
"a fixed-length vector type `ty` has length `size`", \
ATTR(ty,T), ATTR(size,C) \
)
/* TODO: learn more about scalable vector */
HANDLE_PRODUCE_REL( \
vector_type_min_size, \
"a scalable vector type `ty` has minimum length `min_size`", \
ATTR(ty,T), ATTR(size,C) \
)
HANDLE_PRODUCE_REL( \
vector_type_component, \
"", \
ATTR(ty,T), ATTR(comp,T) \
)
HANDLE_PRODUCE_REL( \
array_type, \
"", \
ATTR(ty,T) \
)
HANDLE_PRODUCE_REL( \
array_type_size, \
"", \
ATTR(ty,T), ATTR(size,C) \
)
HANDLE_PRODUCE_REL( \
array_type_component, \
"", \
ATTR(ty,T), ATTR(comp,T) \
)
HANDLE_PRODUCE_REL( \
struct_type, \
"", \
ATTR(ty,T) \
)
/*
 * HANDLE_PRODUCE_REL( \
 * struct_type_name, \
 * "a struct type my have a name", \
 * ATTR(ty,T), ATTR(n,V) \
 * )
 */
HANDLE_PRODUCE_REL( \
opaque_struct_type, \
"a struct type may be opaque", \
ATTR(ty,T) \
)
HANDLE_PRODUCE_REL( \
struct_type_nfields, \
"a struct type `ty` has `n` fields", \
ATTR(ty,T), ATTR(n,Z) \
)
HANDLE_PRODUCE_REL( \
struct_type_field, \
"", \
ATTR(ty,T), ATTR(i,Z),ATTR(fty,T) \
)
HANDLE_PRODUCE_REL( \
label, \
"", \
ATTR(ty,T) \
)
HANDLE_PRODUCE_REL( \
token, \
"", \
ATTR(ty,T) \
)
HANDLE_PRODUCE_REL( \
metadata, \
"", \
ATTR(ty,T) \
)
HANDLE_PRODUCE_REL( \
x86mmx, \
"", \
ATTR(ty,T) \
)
HANDLE_PRODUCE_REL( \
x86amx, \
"", \
ATTR(ty,T) \
)

/* variables */
HANDLE_PRODUCE_REL( \
variable_type, \
"", \
ATTR(v,V), ATTR(ty,T) \
)
HANDLE_PRODUCE_REL( \
variable_const_int, \
"", \
ATTR(v,V), ATTR(c,C) \
)
HANDLE_PRODUCE_REL( \
variable_const_fp, \
"", \
ATTR(v,V), ATTR(c,C) \
)
HANDLE_PRODUCE_REL( \
variable_const_ptr_null, \
"", \
ATTR(v,V) \
)
HANDLE_PRODUCE_REL( \
variable_const_token_none, \
"", \
ATTR(v,V) \
)
HANDLE_PRODUCE_REL( \
variable_const_struct, \
"", \
ATTR(v,V) \
)
HANDLE_PRODUCE_REL( \
variable_const_struct_nfields, \
"", \
ATTR(v,V), ATTR(n,Z) \
)
HANDLE_PRODUCE_REL( \
variable_const_struct_field, \
"", \
ATTR(v,V), ATTR(i,Z), ATTR(fval,V) \
)
HANDLE_PRODUCE_REL( \
variable_const_array, \
"", \
ATTR(v,V) \
)
HANDLE_PRODUCE_REL( \
variable_const_array_len, \
"", \
ATTR(v,V), ATTR(l,C) \
)
HANDLE_PRODUCE_REL( \
variable_const_array_elem, \
"", \
ATTR(v,V), ATTR(elem,V) \
)
HANDLE_PRODUCE_REL( \
variable_const_vector, \
"", \
ATTR(v,V) \
)
HANDLE_PRODUCE_REL( \
variable_const_vector_len, \
"", \
ATTR(v,V), ATTR(l,C) \
)
HANDLE_PRODUCE_REL( \
variable_const_vector_elem, \
"", \
ATTR(v,V), ATTR(elem,V) \
)
HANDLE_PRODUCE_REL( \
variable_const_aggzero, \
"", \
ATTR(v,V) \
)
HANDLE_PRODUCE_REL( \
variable_undef, \
"", \
ATTR(v,V) \
)
HANDLE_PRODUCE_REL( \
variable_undef_poison, \
"", \
ATTR(v,V) \
)
HANDLE_PRODUCE_REL( \
variable_local, \
"variable is local to a function", \
ATTR(v,V), ATTR(m,M) \
)
HANDLE_PRODUCE_REL( \
variable_global, \
"", \
ATTR(v,V) \
)
HANDLE_PRODUCE_REL( \
variable_global_type, \
"", \
ATTR(v,V), ATTR(vty,T) \
)
/*
 * HANDLE_PRODUCE_REL( \
 * variable_global_linkage, \
 * "", \
 * ATTR(v,V), ATTR(l,L) \
 * )
 */
HANDLE_PRODUCE_REL( \
variable_global_align, \
"", \
ATTR(v,V), ATTR(align,C) \
)
HANDLE_PRODUCE_REL( \
variable_global_init, \
"", \
ATTR(v,V), ATTR(init,V) \
)
HANDLE_PRODUCE_REL( \
variable_alias, \
"", \
ATTR(v,V) \
)
HANDLE_PRODUCE_REL( \
variable_alias_aliasee, \
"", \
ATTR(v,V), ATTR(alias,V) \
)
HANDLE_PRODUCE_REL( \
variable_ifunc, \
"", \
ATTR(v,V) \
)
HANDLE_PRODUCE_REL( \
variable_ifunc_resolver, \
"", \
ATTR(v,V), ATTR(res,M) \
)
HANDLE_PRODUCE_REL( \
variable_func, \
"", \
ATTR(v,V), ATTR(f,M) \
)
HANDLE_PRODUCE_REL( \
variable_blockaddr, \
"", \
ATTR(v,V), ATTR(b,B) \
)
HANDLE_PRODUCE_REL( \
variable_constexpr, \
"", \
ATTR(v,V) \
)
HANDLE_PRODUCE_REL( \
operation_unary_fneg, \
"", \
ATTR(res,V), ATTR(inner,V) \
)
HANDLE_PRODUCE_REL( \
operation_binary_add, \
"", \
ATTR(res,V), ATTR(l,V), ATTR(r,V) \
)
HANDLE_PRODUCE_REL( \
operation_binary_fadd, \
"", \
ATTR(res,V), ATTR(l,V), ATTR(r,V) \
)
HANDLE_PRODUCE_REL( \
operation_binary_sub, \
"", \
ATTR(res,V), ATTR(l,V), ATTR(r,V) \
)
HANDLE_PRODUCE_REL( \
operation_binary_fsub, \
"", \
ATTR(res,V), ATTR(l,V), ATTR(r,V) \
)
HANDLE_PRODUCE_REL( \
operation_binary_mul, \
"", \
ATTR(res,V), ATTR(l,V), ATTR(r,V) \
)
HANDLE_PRODUCE_REL( \
operation_binary_fmul, \
"", \
ATTR(res,V), ATTR(l,V), ATTR(r,V) \
)
HANDLE_PRODUCE_REL( \
operation_binary_udiv, \
"", \
ATTR(res,V), ATTR(l,V), ATTR(r,V) \
)
HANDLE_PRODUCE_REL( \
operation_binary_sdiv, \
"", \
ATTR(res,V), ATTR(l,V), ATTR(r,V) \
)
HANDLE_PRODUCE_REL( \
operation_binary_fdiv, \
"", \
ATTR(res,V), ATTR(l,V), ATTR(r,V) \
)
HANDLE_PRODUCE_REL( \
operation_binary_urem, \
"", \
ATTR(res,V), ATTR(l,V), ATTR(r,V) \
)
HANDLE_PRODUCE_REL( \
operation_binary_srem, \
"", \
ATTR(res,V), ATTR(l,V), ATTR(r,V) \
)
HANDLE_PRODUCE_REL( \
operation_binary_frem, \
"", \
ATTR(res,V), ATTR(l,V), ATTR(r,V) \
)
HANDLE_PRODUCE_REL( \
operation_binary_shl, \
"", \
ATTR(res,V), ATTR(l,V), ATTR(r,V) \
)
HANDLE_PRODUCE_REL( \
operation_binary_lshr, \
"", \
ATTR(res,V), ATTR(l,V), ATTR(r,V) \
)
HANDLE_PRODUCE_REL( \
operation_binary_ashr, \
"", \
ATTR(res,V), ATTR(l,V), ATTR(r,V) \
)
HANDLE_PRODUCE_REL( \
operation_binary_and, \
"", \
ATTR(res,V), ATTR(l,V), ATTR(r,V) \
)
HANDLE_PRODUCE_REL( \
operation_binary_or, \
"", \
ATTR(res,V), ATTR(l,V), ATTR(r,V) \
)
HANDLE_PRODUCE_REL( \
operation_binary_xor, \
"", \
ATTR(res,V), ATTR(l,V), ATTR(r,V) \
)
HANDLE_PRODUCE_REL( \
operation_extractelement, \
"", \
ATTR(res,V), ATTR(l,V), ATTR(r,V) \
)
HANDLE_PRODUCE_REL( \
operation_insertelement, \
"", \
ATTR(res,V), ATTR(base,V), ATTR(elem,V), ATTR(idx,V) \
)
HANDLE_PRODUCE_REL( \
operation_shufflevector, \
"", \
ATTR(res,V), ATTR(v1,V), ATTR(v2,V), ATTR(mask,V) \
)
HANDLE_PRODUCE_REL( \
operation_extractvalue_base, \
"", \
ATTR(res,V), ATTR(base,V) \
)
HANDLE_PRODUCE_REL( \
operation_extractvalue_nindices, \
"", \
ATTR(res,V), ATTR(n,Z) \
)
HANDLE_PRODUCE_REL( \
operation_extractvalue_index, \
"", \
ATTR(res,V), ATTR(i,Z), ATTR(idx,Z) \
)
HANDLE_PRODUCE_REL( \
operation_insertvalue_base, \
"", \
ATTR(res,V), ATTR(base,V) \
)
HANDLE_PRODUCE_REL( \
operation_insertvalue_elem, \
"", \
ATTR(res,V), ATTR(elem,V) \
)
HANDLE_PRODUCE_REL( \
operation_insertvalue_nindices, \
"", \
ATTR(res,V), ATTR(n,Z) \
)
HANDLE_PRODUCE_REL( \
operation_insertvalue_index, \
"", \
ATTR(res,V), ATTR(i,Z), ATTR(idx,Z) \
)
HANDLE_PRODUCE_REL( \
operation_gep_inbounds, \
"", \
ATTR(res,V) \
)
HANDLE_PRODUCE_REL( \
operation_gep_base, \
"", \
ATTR(res,V), ATTR(gep,V) \
)
HANDLE_PRODUCE_REL( \
operation_gep_type, \
"", \
ATTR(res,V), ATTR(ty,T) \
)
HANDLE_PRODUCE_REL( \
operation_gep_nindices, \
"", \
ATTR(res,V), ATTR(n,Z) \
)
HANDLE_PRODUCE_REL( \
operation_gep_index_field, \
"", \
ATTR(res,V), ATTR(i,Z), ATTR(f,Z) \
)
HANDLE_PRODUCE_REL( \
operation_gep_index_offset, \
"", \
ATTR(res,V), ATTR(i,Z), ATTR(off,V) \
)
HANDLE_PRODUCE_REL( \
operation_cast_trunc, \
"", \
ATTR(res,V), ATTR(src,V), ATTR(fromty,T), ATTR(toty,T) \
)
HANDLE_PRODUCE_REL( \
operation_cast_zext, \
"", \
ATTR(res,V), ATTR(src,V), ATTR(fromty,T), ATTR(toty,T) \
)
HANDLE_PRODUCE_REL( \
operation_cast_sext, \
"", \
ATTR(res,V), ATTR(src,V), ATTR(fromty,T), ATTR(toty,T) \
)
HANDLE_PRODUCE_REL( \
operation_cast_fptoui, \
"", \
ATTR(res,V), ATTR(src,V), ATTR(fromty,T), ATTR(toty,T) \
)
HANDLE_PRODUCE_REL( \
operation_cast_fptosi, \
"", \
ATTR(res,V), ATTR(src,V), ATTR(fromty,T), ATTR(toty,T) \
)
HANDLE_PRODUCE_REL( \
operation_cast_uitofp, \
"", \
ATTR(res,V), ATTR(src,V), ATTR(fromty,T), ATTR(toty,T) \
)
HANDLE_PRODUCE_REL( \
operation_cast_sitofp, \
"", \
ATTR(res,V), ATTR(src,V), ATTR(fromty,T), ATTR(toty,T) \
)
HANDLE_PRODUCE_REL( \
operation_cast_fptrunc, \
"", \
ATTR(res,V), ATTR(src,V), ATTR(fromty,T), ATTR(toty,T) \
)
HANDLE_PRODUCE_REL( \
operation_cast_fpext, \
"", \
ATTR(res,V), ATTR(src,V), ATTR(fromty,T), ATTR(toty,T) \
)
HANDLE_PRODUCE_REL( \
operation_cast_ptrtoint, \
"", \
ATTR(res,V), ATTR(src,V), ATTR(fromty,T), ATTR(toty,T) \
)
HANDLE_PRODUCE_REL( \
operation_cast_inttoptr, \
"", \
ATTR(res,V), ATTR(src,V), ATTR(fromty,T), ATTR(toty,T) \
)
HANDLE_PRODUCE_REL( \
operation_cast_bitcast, \
"", \
ATTR(res,V), ATTR(src,V), ATTR(fromty,T), ATTR(toty,T) \
)
HANDLE_PRODUCE_REL( \
operation_cast_addrspacecast, \
"", \
ATTR(res,V), ATTR(src,V), ATTR(fromty,T), ATTR(toty,T) \
)
HANDLE_PRODUCE_REL( \
operation_icmp_eq, \
"", \
ATTR(res,V), ATTR(l,V), ATTR(r,V) \
)
HANDLE_PRODUCE_REL( \
operation_icmp_ne, \
"", \
ATTR(res,V), ATTR(l,V), ATTR(r,V) \
)
HANDLE_PRODUCE_REL( \
operation_icmp_ugt, \
"", \
ATTR(res,V), ATTR(l,V), ATTR(r,V) \
)
HANDLE_PRODUCE_REL( \
operation_icmp_uge, \
"", \
ATTR(res,V), ATTR(l,V), ATTR(r,V) \
)
HANDLE_PRODUCE_REL( \
operation_icmp_ult, \
"", \
ATTR(res,V), ATTR(l,V), ATTR(r,V) \
)
HANDLE_PRODUCE_REL( \
operation_icmp_ule, \
"", \
ATTR(res,V), ATTR(l,V), ATTR(r,V) \
)
HANDLE_PRODUCE_REL( \
operation_icmp_sgt, \
"", \
ATTR(res,V), ATTR(l,V), ATTR(r,V) \
)
HANDLE_PRODUCE_REL( \
operation_icmp_sge, \
"", \
ATTR(res,V), ATTR(l,V), ATTR(r,V) \
)
HANDLE_PRODUCE_REL( \
operation_icmp_slt, \
"", \
ATTR(res,V), ATTR(l,V), ATTR(r,V) \
)
HANDLE_PRODUCE_REL( \
operation_icmp_sle, \
"", \
ATTR(res,V), ATTR(l,V), ATTR(r,V) \
)
HANDLE_PRODUCE_REL( \
operation_fcmp_false, \
"", \
ATTR(res,V), ATTR(l,V), ATTR(r,V) \
)
HANDLE_PRODUCE_REL( \
operation_fcmp_oeq, \
"", \
ATTR(res,V), ATTR(l,V), ATTR(r,V) \
)
HANDLE_PRODUCE_REL( \
operation_fcmp_ogt, \
"", \
ATTR(res,V), ATTR(l,V), ATTR(r,V) \
)
HANDLE_PRODUCE_REL( \
operation_fcmp_oge, \
"", \
ATTR(res,V), ATTR(l,V), ATTR(r,V) \
)
HANDLE_PRODUCE_REL( \
operation_fcmp_olt, \
"", \
ATTR(res,V), ATTR(l,V), ATTR(r,V) \
)
HANDLE_PRODUCE_REL( \
operation_fcmp_ole, \
"", \
ATTR(res,V), ATTR(l,V), ATTR(r,V) \
)
HANDLE_PRODUCE_REL( \
operation_fcmp_one, \
"", \
ATTR(res,V), ATTR(l,V), ATTR(r,V) \
)
HANDLE_PRODUCE_REL( \
operation_fcmp_ord, \
"", \
ATTR(res,V), ATTR(l,V), ATTR(r,V) \
)
HANDLE_PRODUCE_REL( \
operation_fcmp_ueq, \
"", \
ATTR(res,V), ATTR(l,V), ATTR(r,V) \
)
HANDLE_PRODUCE_REL( \
operation_fcmp_ugt, \
"", \
ATTR(res,V), ATTR(l,V), ATTR(r,V) \
)
HANDLE_PRODUCE_REL( \
operation_fcmp_uge, \
"", \
ATTR(res,V), ATTR(l,V), ATTR(r,V) \
)
HANDLE_PRODUCE_REL( \
operation_fcmp_ult, \
"", \
ATTR(res,V), ATTR(l,V), ATTR(r,V) \
)
HANDLE_PRODUCE_REL( \
operation_fcmp_ule, \
"", \
ATTR(res,V), ATTR(l,V), ATTR(r,V) \
)
HANDLE_PRODUCE_REL( \
operation_fcmp_une, \
"", \
ATTR(res,V), ATTR(l,V), ATTR(r,V) \
)
HANDLE_PRODUCE_REL( \
operation_fcmp_uno, \
"", \
ATTR(res,V), ATTR(l,V), ATTR(r,V) \
)
HANDLE_PRODUCE_REL( \
operation_fcmp_true, \
"", \
ATTR(res,V), ATTR(l,V), ATTR(r,V) \
)

/* functions */
HANDLE_PRODUCE_REL( \
main_function, \
"", \
ATTR(f,M) \
)
HANDLE_PRODUCE_REL( \
function_type, \
"", \
ATTR(f,M), ATTR(ty,T) \
)
/*
 * HANDLE_PRODUCE_REL( \
 * function_name, \
 * "", \
 * ATTR(f,M), ATTR(name,V) \
 * )
 */
/*
 * HANDLE_PRODUCE_REL( \
 * function_linkage, \
 * "", \
 * ATTR(f,M), ATTR(l,L) \
 * )
 */
HANDLE_PRODUCE_REL( \
function_nparams, \
"", \
ATTR(f,M), ATTR(n,Z) \
)
HANDLE_PRODUCE_REL( \
function_param, \
"", \
ATTR(f,M), ATTR(i,Z), ATTR(arg,V) \
)
HANDLE_PRODUCE_REL( \
function_extern, \
"", \
ATTR(f,M) \
)
HANDLE_PRODUCE_REL( \
function_entry, \
"", \
ATTR(f,M), ATTR(bb,B) \
)
/*
 * ProgramRel rel_function_visibility;
 * ProgramRel rel_function_calling_convention;
 * ProgramRel rel_function_unnamed_addr;
 * ProgramRel rel_function_alignment;
 * ProgramRel rel_function_gc;
 * ProgramRel rel_function_pers_fn;
 * ProgramRel rel_function_attribute;
 * ProgramRel rel_function_return_attribute;
 * ProgramRel rel_function_param_attribute;
 * ProgramRel rel_function_section;
 */

/* instructions */
HANDLE_PRODUCE_REL( \
instruction_ret, \
"", \
ATTR(p,P) \
)
HANDLE_PRODUCE_REL( \
instruction_ret_var, \
"instruction `inst` returns value of variable `v`", \
ATTR(inst,P), ATTR(v,V) \
)
HANDLE_PRODUCE_REL( \
instruction_ret_void, \
"instruction `inst` has no return value", \
ATTR(inst,P) \
)
HANDLE_PRODUCE_REL( \
instruction_br, \
"", \
ATTR(inst,P) \
)
HANDLE_PRODUCE_REL( \
instruction_br_cond, \
"instruction `inst` is a conditional branch", \
ATTR(inst,P) \
)
HANDLE_PRODUCE_REL( \
instruction_br_cond_var, \
"", \
ATTR(inst,P), ATTR(v,V) \
)
HANDLE_PRODUCE_REL( \
instruction_br_cond_iftrue, \
"", \
ATTR(inst,P), ATTR(b,B) \
)
HANDLE_PRODUCE_REL( \
instruction_br_cond_iffalse, \
"", \
ATTR(inst,P), ATTR(bb,B) \
)
HANDLE_PRODUCE_REL( \
instruction_br_uncond, \
"instruction `inst` is an unconditional branch", \
ATTR(inst,P) \
)
HANDLE_PRODUCE_REL( \
instruction_br_uncond_goto, \
"", \
ATTR(inst,P), ATTR(bb,B) \
)
HANDLE_PRODUCE_REL( \
instruction_switch, \
"", \
ATTR(inst,P) \
)
HANDLE_PRODUCE_REL( \
instruction_switch_var, \
"", \
ATTR(inst,P), ATTR(v,V) \
)
HANDLE_PRODUCE_REL( \
instruction_switch_default, \
"", \
ATTR(inst,P), ATTR(bb,B) \
)
HANDLE_PRODUCE_REL( \
instruction_switch_ncases, \
"", \
ATTR(inst,P), ATTR(n,Z) \
)
HANDLE_PRODUCE_REL( \
instruction_switch_case_val, \
"", \
ATTR(inst,P), ATTR(i,Z), ATTR(c,C) \
)
HANDLE_PRODUCE_REL( \
instruction_switch_case_goto, \
"", \
ATTR(inst,P), ATTR(i,Z), ATTR(bb,B) \
)
HANDLE_PRODUCE_REL( \
instruction_indirectbr, \
"", \
ATTR(inst,P) \
)
HANDLE_PRODUCE_REL( \
instruction_indirectbr_addr, \
"", \
ATTR(inst,P), ATTR(addr,V) \
)
HANDLE_PRODUCE_REL( \
instruction_indirectbr_nlabels, \
"", \
ATTR(inst,P), ATTR(n,Z) \
)
HANDLE_PRODUCE_REL( \
instruction_indirectbr_label, \
"", \
ATTR(inst,P), ATTR(i,Z), ATTR(bb,B) \
)
HANDLE_PRODUCE_REL( \
instruction_invk, \
"", \
ATTR(inst,P) \
)
HANDLE_PRODUCE_REL( \
instruction_invk_void, \
"", \
ATTR(inst,P) \
)
HANDLE_PRODUCE_REL( \
instruction_invk_res, \
"", \
ATTR(inst,P), ATTR(res,V) \
)
HANDLE_PRODUCE_REL( \
instruction_invk_static, \
"", \
ATTR(inst,P), ATTR(f,M) \
)
HANDLE_PRODUCE_REL( \
instruction_invk_dynamic, \
"", \
ATTR(inst,P), ATTR(fptr,V) \
)
HANDLE_PRODUCE_REL( \
instruction_invk_nargs, \
"", \
ATTR(inst,P), ATTR(n,Z) \
)
HANDLE_PRODUCE_REL( \
instruction_invk_arg, \
"", \
ATTR(inst,P), ATTR(i,Z), ATTR(v,V) \
)
HANDLE_PRODUCE_REL( \
instruction_invk_normaldest, \
"", \
ATTR(inst,P), ATTR(bb,B) \
)
HANDLE_PRODUCE_REL( \
instruction_invk_exceptiondest, \
"", \
ATTR(inst,P), ATTR(bb,B) \
)
HANDLE_PRODUCE_REL( \
instruction_callbr, \
"", \
ATTR(inst,P) \
)
HANDLE_PRODUCE_REL( \
instruction_callbr_void, \
"", \
ATTR(inst,P) \
)
HANDLE_PRODUCE_REL( \
instruction_callbr_res, \
"", \
ATTR(inst,P), ATTR(res,V) \
)
HANDLE_PRODUCE_REL( \
instruction_callbr_static, \
"", \
ATTR(inst,P), ATTR(f,M) \
)
HANDLE_PRODUCE_REL( \
instruction_callbr_dynamic, \
"", \
ATTR(inst,P), ATTR(fptr,V) \
)
HANDLE_PRODUCE_REL( \
instruction_callbr_nargs, \
"", \
ATTR(inst,P), ATTR(n,Z) \
)
HANDLE_PRODUCE_REL( \
instruction_callbr_arg, \
"", \
ATTR(inst,P), ATTR(i,Z), ATTR(v,V) \
)
HANDLE_PRODUCE_REL( \
instruction_callbr_fallthrough, \
"", \
ATTR(inst,P), ATTR(bb,B) \
)
HANDLE_PRODUCE_REL( \
instruction_callbr_indirect, \
"", \
ATTR(inst,P), ATTR(bb,B) \
)
HANDLE_PRODUCE_REL( \
instruction_resume, \
"", \
ATTR(inst,P) \
)
HANDLE_PRODUCE_REL( \
instruction_resume_var, \
"", \
ATTR(inst,P), ATTR(v,V) \
)
HANDLE_PRODUCE_REL( \
instruction_catchswitch, \
"", \
ATTR(inst,P) \
)
HANDLE_PRODUCE_REL( \
instruction_catchswitch_res, \
"", \
ATTR(inst,P), ATTR(res,V) \
)
HANDLE_PRODUCE_REL( \
instruction_catchswitch_within, \
"", \
ATTR(inst,P), ATTR(v,V) \
)
HANDLE_PRODUCE_REL( \
instruction_catchswitch_handler, \
"", \
ATTR(inst,P), ATTR(bb,B) \
)
HANDLE_PRODUCE_REL( \
instruction_catchswitch_unwindlabel, \
"", \
ATTR(inst,P), ATTR(bb,B) \
)
HANDLE_PRODUCE_REL( \
instruction_catchswitch_unwindcaller, \
"", \
ATTR(inst,P) \
)
HANDLE_PRODUCE_REL( \
instruction_catchret, \
"", \
ATTR(inst,P) \
)
HANDLE_PRODUCE_REL( \
instruction_catchret_fromto, \
"", \
ATTR(inst,P), ATTR(v,V), ATTR(bb,B) \
)
HANDLE_PRODUCE_REL( \
instruction_cleanupret, \
"", \
ATTR(inst,P) \
)
HANDLE_PRODUCE_REL( \
instruction_cleanupret_from, \
"", \
ATTR(inst,P), ATTR(v,V) \
)
HANDLE_PRODUCE_REL( \
instruction_cleanupret_unwindlabel, \
"", \
ATTR(inst,P), ATTR(l,B) \
)
HANDLE_PRODUCE_REL( \
instruction_cleanupret_unwindcaller, \
"", \
ATTR(inst,P) \
)
HANDLE_PRODUCE_REL( \
instruction_unreachable, \
"", \
ATTR(inst,P) \
)
/* ProgramRel rel_instruction_unhandled; */
HANDLE_PRODUCE_REL( \
instruction_alloca, \
"", \
ATTR(inst,P) \
)
HANDLE_PRODUCE_REL( \
instruction_alloca_res, \
"", \
ATTR(inst,P), ATTR(res,V) \
)
HANDLE_PRODUCE_REL( \
instruction_alloca_type, \
"", \
ATTR(inst,P), ATTR(ty,T) \
)
HANDLE_PRODUCE_REL( \
instruction_alloca_size, \
"", \
ATTR(inst,P), ATTR(size,V) \
)
HANDLE_PRODUCE_REL( \
instruction_alloca_align, \
"", \
ATTR(inst,P), ATTR(align,C) \
)
/*
 * HANDLE_PRODUCE_REL( \
 * instruction_alloca_addrspace, \
 * "", \
 * ATTR(inst,P), ATTR(addr,AS) \
 * )
 */
HANDLE_PRODUCE_REL( \
instruction_load, \
"", \
ATTR(inst,P) \
)
HANDLE_PRODUCE_REL( \
instruction_load_volatile, \
"", \
ATTR(inst,P) \
)
/*
 * HANDLE_PRODUCE_REL( \
 * instruction_load_ordering, \
 * "", \
 * ATTR(inst,P), ATTR(ord,ORD) \
 * )
 */
HANDLE_PRODUCE_REL( \
instruction_load_res, \
"", \
ATTR(inst,P), ATTR(res,V) \
)
HANDLE_PRODUCE_REL( \
instruction_load_ptr, \
"", \
ATTR(inst,P), ATTR(ptr,V) \
)
HANDLE_PRODUCE_REL( \
instruction_load_align, \
"", \
ATTR(inst,P), ATTR(align,C) \
)
HANDLE_PRODUCE_REL( \
instruction_store, \
"", \
ATTR(inst,P) \
)
HANDLE_PRODUCE_REL( \
instruction_store_volatile, \
"", \
ATTR(inst,P) \
)
/*
 * HANDLE_PRODUCE_REL( \
 * instruction_store_ordering, \
 * "", \
 * ATTR(inst,P), ATTR(ord,ORD) \
 * )
 */
HANDLE_PRODUCE_REL( \
instruction_store_var, \
"", \
ATTR(inst,P), ATTR(ptr,V) \
)
HANDLE_PRODUCE_REL( \
instruction_store_addr, \
"", \
ATTR(inst,P), ATTR(addr,V) \
)
HANDLE_PRODUCE_REL( \
instruction_store_align, \
"", \
ATTR(inst,P), ATTR(align,C) \
)
HANDLE_PRODUCE_REL( \
instruction_fence, \
"", \
ATTR(inst,P) \
)
/*
 * HANDLE_PRODUCE_REL( \
 * instruction_fence_ordering, \
 * "", \
 * ATTR(inst,P), ATTR(ord,ORD) \
 * )
 */
HANDLE_PRODUCE_REL( \
instruction_cmpxchg, \
"", \
ATTR(inst,P) \
)
HANDLE_PRODUCE_REL( \
instruction_cmpxchg_weak, \
"", \
ATTR(inst,P) \
)
HANDLE_PRODUCE_REL( \
instruction_cmpxchg_strong, \
"", \
ATTR(inst,P) \
)
HANDLE_PRODUCE_REL( \
instruction_cmpxchg_volatile, \
"", \
ATTR(inst,P) \
)
/*
 * HANDLE_PRODUCE_REL( \
 * instruction_cmpxchg_succ_ordering, \
 * "", \
 * ATTR(inst,P), ATTR(ord,ORD) \
 * )
 */
/*
 * HANDLE_PRODUCE_REL( \
 * instruction_cmpxchg_fail_ordering, \
 * "", \
 * ATTR(inst,P), ATTR(ord,ORD) \
 * )
 */
HANDLE_PRODUCE_REL( \
instruction_cmpxchg_addr, \
"", \
ATTR(inst,P), ATTR(addr,V) \
)
HANDLE_PRODUCE_REL( \
instruction_cmpxchg_cmp, \
"", \
ATTR(inst,P), ATTR(cmp,V) \
)
HANDLE_PRODUCE_REL( \
instruction_cmpxchg_new, \
"", \
ATTR(inst,P), ATTR(new,V) \
)
HANDLE_PRODUCE_REL( \
instruction_atomicrmw, \
"", \
ATTR(inst,P) \
)
HANDLE_PRODUCE_REL( \
instruction_atomicrmw_volatile, \
"", \
ATTR(inst,P) \
)
/*
 * HANDLE_PRODUCE_REL( \
 * instruction_atomicrmw_ordering, \
 * "", \
 * ATTR(inst,P), ATTR(ord,ORD) \
 * )
 */
HANDLE_PRODUCE_REL( \
instruction_atomicrmw_xchg, \
"", \
ATTR(inst,P), ATTR(v,V), ATTR(delta,V) \
)
HANDLE_PRODUCE_REL( \
instruction_atomicrmw_add, \
"", \
ATTR(inst,P), ATTR(v,V), ATTR(delta,V) \
)
HANDLE_PRODUCE_REL( \
instruction_atomicrmw_sub, \
"", \
ATTR(inst,P), ATTR(v,V), ATTR(delta,V) \
)
HANDLE_PRODUCE_REL( \
instruction_atomicrmw_and, \
"", \
ATTR(inst,P), ATTR(v,V), ATTR(delta,V) \
)
HANDLE_PRODUCE_REL( \
instruction_atomicrmw_nand, \
"", \
ATTR(inst,P), ATTR(v,V), ATTR(delta,V) \
)
HANDLE_PRODUCE_REL( \
instruction_atomicrmw_or, \
"", \
ATTR(inst,P), ATTR(v,V), ATTR(delta,V) \
)
HANDLE_PRODUCE_REL( \
instruction_atomicrmw_xor, \
"", \
ATTR(inst,P), ATTR(v,V), ATTR(delta,V) \
)
HANDLE_PRODUCE_REL( \
instruction_atomicrmw_max, \
"", \
ATTR(inst,P), ATTR(v,V), ATTR(delta,V) \
)
HANDLE_PRODUCE_REL( \
instruction_atomicrmw_min, \
"", \
ATTR(inst,P), ATTR(v,V), ATTR(delta,V) \
)
HANDLE_PRODUCE_REL( \
instruction_atomicrmw_umax, \
"", \
ATTR(inst,P), ATTR(v,V), ATTR(delta,V) \
)
HANDLE_PRODUCE_REL( \
instruction_atomicrmw_umin, \
"", \
ATTR(inst,P), ATTR(v,V), ATTR(delta,V) \
)
HANDLE_PRODUCE_REL( \
instruction_atomicrmw_fadd, \
"", \
ATTR(inst,P), ATTR(v,V), ATTR(delta,V) \
)
HANDLE_PRODUCE_REL( \
instruction_atomicrmw_fsub, \
"", \
ATTR(inst,P), ATTR(v,V), ATTR(delta,V) \
)
HANDLE_PRODUCE_REL( \
instruction_atomicrmw_fmax, \
"", \
ATTR(inst,P), ATTR(v,V), ATTR(delta,V) \
)
HANDLE_PRODUCE_REL( \
instruction_atomicrmw_fmin, \
"", \
ATTR(inst,P), ATTR(v,V), ATTR(delta,V) \
)
HANDLE_PRODUCE_REL( \
instruction_atomicrmw_bad, \
"", \
ATTR(inst,P), ATTR(v,V), ATTR(delta,V) \
)
HANDLE_PRODUCE_REL( \
instruction_phi, \
"", \
ATTR(inst,P) \
)
HANDLE_PRODUCE_REL( \
instruction_phi_res, \
"", \
ATTR(inst,P), ATTR(res,V) \
)
HANDLE_PRODUCE_REL( \
instruction_phi_npairs, \
"", \
ATTR(inst,P), ATTR(n,Z) \
)
HANDLE_PRODUCE_REL( \
instruction_phi_pair, \
"", \
ATTR(inst,P), ATTR(i,Z), ATTR(v,V), ATTR(l,B) \
)
HANDLE_PRODUCE_REL( \
instruction_select, \
"", \
ATTR(inst,P) \
)
HANDLE_PRODUCE_REL( \
instruction_select_expr, \
"", \
ATTR(inst,P), ATTR(res,V), ATTR(cond,V), ATTR(trueval,V), ATTR(falseval,V) \
)
HANDLE_PRODUCE_REL( \
instruction_freeze, \
"", \
ATTR(inst,P) \
)
HANDLE_PRODUCE_REL( \
instruction_freeze_var, \
"", \
ATTR(inst,P), ATTR(v,V) \
)
HANDLE_PRODUCE_REL( \
instruction_call, \
"", \
ATTR(inst,P) \
)
HANDLE_PRODUCE_REL( \
instruction_call_void, \
"", \
ATTR(inst,P) \
)
HANDLE_PRODUCE_REL( \
instruction_call_res, \
"", \
ATTR(inst,P), ATTR(res,V) \
)
HANDLE_PRODUCE_REL( \
instruction_call_static, \
"", \
ATTR(inst,P), ATTR(f,M) \
)
HANDLE_PRODUCE_REL( \
instruction_call_dynamic, \
"", \
ATTR(inst,P), ATTR(fptr,V) \
)
HANDLE_PRODUCE_REL( \
instruction_call_nargs, \
"", \
ATTR(inst,P), ATTR(n,Z) \
)
HANDLE_PRODUCE_REL( \
instruction_call_arg, \
"", \
ATTR(inst,P), ATTR(i,Z), ATTR(arg,V) \
)
HANDLE_PRODUCE_REL( \
instruction_vaarg, \
"", \
ATTR(inst,P) \
)
HANDLE_PRODUCE_REL( \
instruction_vaarg_expr, \
"", \
ATTR(inst,P), ATTR(res,V), ATTR(list,V) \
)
HANDLE_PRODUCE_REL( \
instruction_landingpad, \
"", \
ATTR(inst,P) \
)
HANDLE_PRODUCE_REL( \
instruction_landingpad_res, \
"", \
ATTR(inst,P), ATTR(res,V) \
)
HANDLE_PRODUCE_REL( \
instruction_landingpad_cleanup, \
"", \
ATTR(inst,P) \
)
HANDLE_PRODUCE_REL( \
instruction_landingpad_nocleanup, \
"", \
ATTR(inst,P) \
)
HANDLE_PRODUCE_REL( \
instruction_landingpad_nclses, \
"", \
ATTR(inst,P), ATTR(n,Z) \
)
HANDLE_PRODUCE_REL( \
instruction_landingpad_cls_catch, \
"", \
ATTR(inst,P), ATTR(i,Z), ATTR(v,V) \
)
HANDLE_PRODUCE_REL( \
instruction_landingpad_cls_filter, \
"", \
ATTR(inst,P), ATTR(i,Z), ATTR(v,V) \
)
HANDLE_PRODUCE_REL( \
instruction_catchpad, \
"", \
ATTR(inst,P) \
)
HANDLE_PRODUCE_REL( \
instruction_catchpad_res, \
"", \
ATTR(inst,P), ATTR(res,V) \
)
HANDLE_PRODUCE_REL( \
instruction_catchpad_within, \
"", \
ATTR(inst,P), ATTR(res,V) \
)
HANDLE_PRODUCE_REL( \
instruction_catchpad_nargs, \
"", \
ATTR(inst,P), ATTR(n,Z) \
)
HANDLE_PRODUCE_REL( \
instruction_catchpad_arg, \
"", \
ATTR(inst,P), ATTR(i,Z), ATTR(v,V) \
)
HANDLE_PRODUCE_REL( \
instruction_cleanuppad, \
"", \
ATTR(inst,P) \
)
HANDLE_PRODUCE_REL( \
instruction_cleanuppad_res, \
"", \
ATTR(inst,P), ATTR(res,V) \
)
HANDLE_PRODUCE_REL( \
instruction_cleanuppad_within, \
"", \
ATTR(inst,P), ATTR(b,B) \
)
HANDLE_PRODUCE_REL( \
instruction_cleanuppad_nargs, \
"", \
ATTR(inst,P), ATTR(n,Z) \
)
HANDLE_PRODUCE_REL( \
instruction_cleanuppad_arg, \
"", \
ATTR(inst,P), ATTR(i,Z), ATTR(v,V) \
)
HANDLE_PRODUCE_REL( \
instruction_op, \
"", \
ATTR(inst,P) \
)
HANDLE_PRODUCE_REL( \
instruction_op_res, \
"", \
ATTR(inst,P), ATTR(res,V) \
)
#undef HANDLE_PRODUCE_DOM
#undef HANDLE_PRODUCE_REL
#undef ATTR