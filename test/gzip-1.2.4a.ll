; ModuleID = 'gzip.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.option = type { i8*, i32, i32*, i32 }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.config = type { i16, i16, i16, i16 }
%struct.ct_data = type { %union.anon, %union.anon }
%union.anon = type { i16 }
%struct.tree_desc = type { %struct.ct_data*, %struct.ct_data*, i32*, i32, i32, i32, i32 }
%struct.dirent = type { i64, i64, i16, i8, [256 x i8] }
%struct.__dirstream = type opaque
%struct.huft = type { i8, i8, %union.anon.8 }
%union.anon.8 = type { %struct.huft* }

@ascii = dso_local global i32 0, align 4, !dbg !0
@decompress = dso_local global i32 0, align 4, !dbg !106
@force = dso_local global i32 0, align 4, !dbg !108
@no_name = dso_local global i32 -1, align 4, !dbg !110
@no_time = dso_local global i32 -1, align 4, !dbg !112
@recursive = dso_local global i32 0, align 4, !dbg !114
@list = dso_local global i32 0, align 4, !dbg !116
@verbose = dso_local global i32 0, align 4, !dbg !118
@do_lzw = dso_local global i32 0, align 4, !dbg !122
@args = dso_local global i8** null, align 8, !dbg !134
@total_in = dso_local global i64 0, align 8, !dbg !137
@total_out = dso_local global i64 0, align 8, !dbg !139
@remove_ofname = dso_local global i32 0, align 4, !dbg !141
@.str = private unnamed_addr constant [6 x i8] c"ascii\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"to-stdout\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"stdout\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"decompress\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"uncompress\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"force\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"list\00", align 1
@.str.8 = private unnamed_addr constant [8 x i8] c"license\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"no-name\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.11 = private unnamed_addr constant [6 x i8] c"quiet\00", align 1
@.str.12 = private unnamed_addr constant [7 x i8] c"silent\00", align 1
@.str.13 = private unnamed_addr constant [10 x i8] c"recursive\00", align 1
@.str.14 = private unnamed_addr constant [7 x i8] c"suffix\00", align 1
@.str.15 = private unnamed_addr constant [5 x i8] c"test\00", align 1
@.str.16 = private unnamed_addr constant [8 x i8] c"no-time\00", align 1
@.str.17 = private unnamed_addr constant [8 x i8] c"verbose\00", align 1
@.str.18 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.19 = private unnamed_addr constant [5 x i8] c"fast\00", align 1
@.str.20 = private unnamed_addr constant [5 x i8] c"best\00", align 1
@.str.21 = private unnamed_addr constant [4 x i8] c"lzw\00", align 1
@.str.22 = private unnamed_addr constant [5 x i8] c"bits\00", align 1
@longopts = dso_local global [24 x %struct.option] [%struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 0), i32 0, i32* null, i32 97 }, %struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i32 0, i32* null, i32 99 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i32 0, i32 0), i32 0, i32* null, i32 99 }, %struct.option { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i32 0, i32 0), i32 0, i32* null, i32 100 }, %struct.option { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i32 0, i32 0), i32 0, i32* null, i32 100 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), i32 0, i32* null, i32 102 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i32 0, i32 0), i32 0, i32* null, i32 104 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i32 0, i32 0), i32 0, i32* null, i32 108 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i32 0, i32 0), i32 0, i32* null, i32 76 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i32 0), i32 0, i32* null, i32 110 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i32 0, i32 0), i32 0, i32* null, i32 78 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i32 0, i32 0), i32 0, i32* null, i32 113 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i32 0, i32 0), i32 0, i32* null, i32 113 }, %struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i32 0, i32 0), i32 0, i32* null, i32 114 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i32 0), i32 1, i32* null, i32 83 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i32 0, i32 0), i32 0, i32* null, i32 116 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i32 0, i32 0), i32 0, i32* null, i32 84 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i32 0, i32 0), i32 0, i32* null, i32 118 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i32 0, i32 0), i32 0, i32* null, i32 86 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i32 0, i32 0), i32 0, i32* null, i32 49 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i32 0, i32 0), i32 0, i32* null, i32 57 }, %struct.option { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i32 0, i32 0), i32 0, i32* null, i32 90 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i32 0, i32 0), i32 1, i32* null, i32 98 }, %struct.option zeroinitializer], align 16, !dbg !143
@work = dso_local global i32 (i32, i32)* @zip, align 8, !dbg !157
@.str.23 = private unnamed_addr constant [5 x i8] c".exe\00", align 1
@.str.24 = private unnamed_addr constant [5 x i8] c"GZIP\00", align 1
@env = dso_local global i8* null, align 8, !dbg !199
@foreground = dso_local global i32 0, align 4, !dbg !185
@.str.25 = private unnamed_addr constant [3 x i8] c"un\00", align 1
@.str.26 = private unnamed_addr constant [4 x i8] c"gun\00", align 1
@.str.27 = private unnamed_addr constant [4 x i8] c"cat\00", align 1
@.str.28 = private unnamed_addr constant [6 x i8] c"gzcat\00", align 1
@z_suffix = dso_local global [31 x i8] zeroinitializer, align 16, !dbg !201
@.str.29 = private unnamed_addr constant [4 x i8] c".gz\00", align 1
@z_len = dso_local global i32 0, align 4, !dbg !206
@.str.30 = private unnamed_addr constant [33 x i8] c"ab:cdfhH?lLmMnNqrS:tvVZ123456789\00", align 1
@optarg = external dso_local global i8*, align 8
@.str.31 = private unnamed_addr constant [38 x i8] c"%s: -Z not supported in this version\0A\00", align 1
@optind = external dso_local global i32, align 4
@.str.32 = private unnamed_addr constant [43 x i8] c"%s: option --ascii ignored on this system\0A\00", align 1
@.str.33 = private unnamed_addr constant [27 x i8] c"%s: incorrect suffix '%s'\0A\00", align 1
@last_member = dso_local global i32 0, align 4, !dbg !191
@part_nb = dso_local global i32 0, align 4, !dbg !193
@ifile_size = dso_local global i64 0, align 8, !dbg !197
@istat = dso_local global %struct.stat zeroinitializer, align 8, !dbg !219
@help.help_msg = internal global [18 x i8*] [i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.50, i32 0, i32 0), i8* null], align 16, !dbg !266
@.str.34 = private unnamed_addr constant [74 x i8] c" -c --stdout      write on standard output, keep original files unchanged\00", align 1
@.str.35 = private unnamed_addr constant [29 x i8] c" -d --decompress  decompress\00", align 1
@.str.36 = private unnamed_addr constant [68 x i8] c" -f --force       force overwrite of output file and compress links\00", align 1
@.str.37 = private unnamed_addr constant [33 x i8] c" -h --help        give this help\00", align 1
@.str.38 = private unnamed_addr constant [48 x i8] c" -l --list        list compressed file contents\00", align 1
@.str.39 = private unnamed_addr constant [43 x i8] c" -L --license     display software license\00", align 1
@.str.40 = private unnamed_addr constant [74 x i8] c" -n --no-name     do not save or restore the original name and time stamp\00", align 1
@.str.41 = private unnamed_addr constant [67 x i8] c" -N --name        save or restore the original name and time stamp\00", align 1
@.str.42 = private unnamed_addr constant [40 x i8] c" -q --quiet       suppress all warnings\00", align 1
@.str.43 = private unnamed_addr constant [53 x i8] c" -r --recursive   operate recursively on directories\00", align 1
@.str.44 = private unnamed_addr constant [64 x i8] c" -S .suf  --suffix .suf     use suffix .suf on compressed files\00", align 1
@.str.45 = private unnamed_addr constant [49 x i8] c" -t --test        test compressed file integrity\00", align 1
@.str.46 = private unnamed_addr constant [31 x i8] c" -v --verbose     verbose mode\00", align 1
@.str.47 = private unnamed_addr constant [41 x i8] c" -V --version     display version number\00", align 1
@.str.48 = private unnamed_addr constant [34 x i8] c" -1 --fast        compress faster\00", align 1
@.str.49 = private unnamed_addr constant [34 x i8] c" -9 --best        compress better\00", align 1
@.str.50 = private unnamed_addr constant [76 x i8] c" file...          files to (de)compress. If none given, use standard input.\00", align 1
@.str.51 = private unnamed_addr constant [12 x i8] c"%s %s (%s)\0A\00", align 1
@.str.52 = private unnamed_addr constant [6 x i8] c"1.2.4\00", align 1
@.str.53 = private unnamed_addr constant [10 x i8] c"18 Aug 93\00", align 1
@.str.54 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@license_msg = internal global [15 x i8*] [i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.58, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.62, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.63, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.64, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.65, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.66, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.67, i32 0, i32 0), i8* null], align 16, !dbg !275
@.str.55 = private unnamed_addr constant [44 x i8] c"   Copyright (C) 1992-1993 Jean-loup Gailly\00", align 1
@.str.56 = private unnamed_addr constant [72 x i8] c"   This program is free software; you can redistribute it and/or modify\00", align 1
@.str.57 = private unnamed_addr constant [72 x i8] c"   it under the terms of the GNU General Public License as published by\00", align 1
@.str.58 = private unnamed_addr constant [71 x i8] c"   the Free Software Foundation; either version 2, or (at your option)\00", align 1
@.str.59 = private unnamed_addr constant [22 x i8] c"   any later version.\00", align 1
@.str.60 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.61 = private unnamed_addr constant [67 x i8] c"   This program is distributed in the hope that it will be useful,\00", align 1
@.str.62 = private unnamed_addr constant [66 x i8] c"   but WITHOUT ANY WARRANTY; without even the implied warranty of\00", align 1
@.str.63 = private unnamed_addr constant [65 x i8] c"   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\00", align 1
@.str.64 = private unnamed_addr constant [48 x i8] c"   GNU General Public License for more details.\00", align 1
@.str.65 = private unnamed_addr constant [69 x i8] c"   You should have received a copy of the GNU General Public License\00", align 1
@.str.66 = private unnamed_addr constant [63 x i8] c"   along with this program; if not, write to the Free Software\00", align 1
@.str.67 = private unnamed_addr constant [61 x i8] c"   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.\00", align 1
@.str.68 = private unnamed_addr constant [28 x i8] c"Compilation options:\0A%s %s \00", align 1
@.str.69 = private unnamed_addr constant [7 x i8] c"DIRENT\00", align 1
@.str.70 = private unnamed_addr constant [6 x i8] c"UTIME\00", align 1
@.str.71 = private unnamed_addr constant [14 x i8] c"STDC_HEADERS \00", align 1
@.str.72 = private unnamed_addr constant [15 x i8] c"HAVE_UNISTD_H \00", align 1
@.str.73 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.74 = private unnamed_addr constant [55 x i8] c"usage: %s [-%scdfhlLnN%stvV19] [-S suffix] [file ...]\0A\00", align 1
@.str.75 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@stdin = external dso_local global %struct._IO_FILE*, align 8
@stdout = external dso_local global %struct._IO_FILE*, align 8
@.str.76 = private unnamed_addr constant [71 x i8] c"%s: compressed data not %s a terminal. Use -f to force %scompression.\0A\00", align 1
@.str.77 = private unnamed_addr constant [10 x i8] c"read from\00", align 1
@.str.78 = private unnamed_addr constant [11 x i8] c"written to\00", align 1
@.str.79 = private unnamed_addr constant [3 x i8] c"de\00", align 1
@.str.80 = private unnamed_addr constant [23 x i8] c"For help, type: %s -h\0A\00", align 1
@.str.81 = private unnamed_addr constant [6 x i8] c"stdin\00", align 1
@.str.82 = private unnamed_addr constant [13 x i8] c"fstat(stdin)\00", align 1
@.str.83 = private unnamed_addr constant [5 x i8] c" OK\0A\00", align 1
@.str.84 = private unnamed_addr constant [3 x i8] c"\1F\8B\00", align 1
@.str.85 = private unnamed_addr constant [3 x i8] c"\1F\9E\00", align 1
@.str.86 = private unnamed_addr constant [56 x i8] c"%s: %s: unknown method %d -- get newer version of gzip\0A\00", align 1
@.str.87 = private unnamed_addr constant [50 x i8] c"%s: %s is encrypted -- get newer version of gzip\0A\00", align 1
@.str.88 = private unnamed_addr constant [65 x i8] c"%s: %s is a a multi-part gzip file -- get newer version of gzip\0A\00", align 1
@.str.89 = private unnamed_addr constant [52 x i8] c"%s: %s has flags 0x%x -- get newer version of gzip\0A\00", align 1
@.str.90 = private unnamed_addr constant [24 x i8] c"%s: %s: part number %u\0A\00", align 1
@.str.91 = private unnamed_addr constant [41 x i8] c"%s: %s: extra field of %u bytes ignored\0A\00", align 1
@.str.92 = private unnamed_addr constant [39 x i8] c"corrupted input -- file name too large\00", align 1
@.str.93 = private unnamed_addr constant [5 x i8] c"PK\03\04\00", align 1
@.str.94 = private unnamed_addr constant [3 x i8] c"\1F\1E\00", align 1
@.str.95 = private unnamed_addr constant [3 x i8] c"\1F\9D\00", align 1
@.str.96 = private unnamed_addr constant [3 x i8] c"\1F\A0\00", align 1
@.str.97 = private unnamed_addr constant [29 x i8] c"\0A%s: %s: not in gzip format\0A\00", align 1
@.str.98 = private unnamed_addr constant [53 x i8] c"\0A%s: %s: decompression OK, trailing garbage ignored\0A\00", align 1
@.str.99 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.100 = private unnamed_addr constant [34 x i8] c"%s: %s is a directory -- ignored\0A\00", align 1
@.str.101 = private unnamed_addr constant [55 x i8] c"%s: %s is not a directory or a regular file - ignored\0A\00", align 1
@.str.102 = private unnamed_addr constant [41 x i8] c"%s: %s has %d other link%c -- unchanged\0A\00", align 1
@.str.103 = private unnamed_addr constant [5 x i8] c"%s: \00", align 1
@.str.104 = private unnamed_addr constant [25 x i8] c"%s: %s compressed to %s\0A\00", align 1
@.str.105 = private unnamed_addr constant [7 x i8] c"%s:\09%s\00", align 1
@.str.106 = private unnamed_addr constant [2 x i8] c"\09\00", align 1
@.str.107 = private unnamed_addr constant [3 x i8] c"\09\09\00", align 1
@.str.108 = private unnamed_addr constant [4 x i8] c" OK\00", align 1
@.str.109 = private unnamed_addr constant [21 x i8] c" -- replaced with %s\00", align 1
@get_istat.suffixes = internal global [6 x i8*] [i8* getelementptr inbounds ([31 x i8], [31 x i8]* @z_suffix, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.110, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.111, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.112, i32 0, i32 0), i8* null], align 16, !dbg !280
@.str.110 = private unnamed_addr constant [3 x i8] c".z\00", align 1
@.str.111 = private unnamed_addr constant [3 x i8] c"-z\00", align 1
@.str.112 = private unnamed_addr constant [3 x i8] c".Z\00", align 1
@get_suffix.known_suffixes = internal global [9 x i8*] [i8* getelementptr inbounds ([31 x i8], [31 x i8]* @z_suffix, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.110, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.113, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.114, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.115, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.111, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.116, i32 0, i32 0), i8* null], align 16, !dbg !289
@.str.113 = private unnamed_addr constant [5 x i8] c".taz\00", align 1
@.str.114 = private unnamed_addr constant [5 x i8] c".tgz\00", align 1
@.str.115 = private unnamed_addr constant [4 x i8] c"-gz\00", align 1
@.str.116 = private unnamed_addr constant [3 x i8] c"_z\00", align 1
@.str.117 = private unnamed_addr constant [2 x i8] c"z\00", align 1
@.str.118 = private unnamed_addr constant [19 x i8] c"%s: %s unreadable\0A\00", align 1
@.str.119 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.120 = private unnamed_addr constant [3 x i8] c"..\00", align 1
@.str.121 = private unnamed_addr constant [30 x i8] c"%s: %s/%s: pathname too long\0A\00", align 1
@.str.122 = private unnamed_addr constant [35 x i8] c"%s: %s: unknown suffix -- ignored\0A\00", align 1
@.str.123 = private unnamed_addr constant [5 x i8] c".tar\00", align 1
@.str.124 = private unnamed_addr constant [43 x i8] c"%s: %s already has %s suffix -- unchanged\0A\00", align 1
@.str.125 = private unnamed_addr constant [33 x i8] c"%s: %s: warning, name truncated\0A\00", align 1
@.str.126 = private unnamed_addr constant [39 x i8] c"%s: %s: cannot %scompress onto itself\0A\00", align 1
@.str.127 = private unnamed_addr constant [33 x i8] c"%s: %s and %s are the same file\0A\00", align 1
@.str.128 = private unnamed_addr constant [2 x i8] c"n\00", align 1
@.str.129 = private unnamed_addr constant [23 x i8] c"%s: %s already exists;\00", align 1
@.str.130 = private unnamed_addr constant [37 x i8] c" do you wish to overwrite (y or n)? \00", align 1
@.str.131 = private unnamed_addr constant [18 x i8] c"\09not overwritten\0A\00", align 1
@.str.132 = private unnamed_addr constant [15 x i8] c"name too short\00", align 1
@.str.133 = private unnamed_addr constant [22 x i8] c"can't recover suffix\0A\00", align 1
@.str.134 = private unnamed_addr constant [31 x i8] c"internal error in shorten_name\00", align 1
@.str.135 = private unnamed_addr constant [25 x i8] c"%s: time stamp restored\0A\00", align 1
@do_list.first_time = internal global i32 1, align 4, !dbg !297
@do_list.methods = internal global [9 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.136, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.137, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.138, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.139, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.140, i32 0, i32 0)], align 16, !dbg !302
@.str.136 = private unnamed_addr constant [6 x i8] c"store\00", align 1
@.str.137 = private unnamed_addr constant [6 x i8] c"compr\00", align 1
@.str.138 = private unnamed_addr constant [6 x i8] c"pack \00", align 1
@.str.139 = private unnamed_addr constant [6 x i8] c"lzh  \00", align 1
@.str.140 = private unnamed_addr constant [6 x i8] c"defla\00", align 1
@.str.141 = private unnamed_addr constant [29 x i8] c"method  crc     date  time  \00", align 1
@.str.142 = private unnamed_addr constant [46 x i8] c"compressed  uncompr. ratio uncompressed_name\0A\00", align 1
@.str.143 = private unnamed_addr constant [39 x i8] c"                            %9lu %9lu \00", align 1
@.str.144 = private unnamed_addr constant [11 x i8] c"%9ld %9ld \00", align 1
@.str.145 = private unnamed_addr constant [11 x i8] c" (totals)\0A\00", align 1
@.str.146 = private unnamed_addr constant [16 x i8] c"%5s %08lx %11s \00", align 1
@.str.147 = private unnamed_addr constant [5 x i8] c" %s\0A\00", align 1
@do_exit.in_exit = internal global i32 0, align 4, !dbg !304
@.str.148 = private unnamed_addr constant [3 x i8] c"\1F\8B\00", align 1
@save_orig_name = dso_local global i32 0, align 4, !dbg !189
@time_stamp = dso_local global i64 0, align 8, !dbg !195
@crc = internal global i64 0, align 8, !dbg !307
@header_bytes = dso_local global i64 0, align 8, !dbg !314
@window_size = dso_local global i64 65536, align 8, !dbg !316
@.str.151 = private unnamed_addr constant [15 x i8] c"bad pack level\00", align 1
@compr_level = internal global i32 0, align 4, !dbg !343
@configuration_table = internal global [10 x %struct.config] [%struct.config zeroinitializer, %struct.config { i16 4, i16 4, i16 8, i16 4 }, %struct.config { i16 4, i16 5, i16 16, i16 8 }, %struct.config { i16 4, i16 6, i16 32, i16 32 }, %struct.config { i16 4, i16 4, i16 16, i16 16 }, %struct.config { i16 8, i16 16, i16 32, i16 32 }, %struct.config { i16 8, i16 16, i16 128, i16 128 }, %struct.config { i16 8, i16 32, i16 128, i16 256 }, %struct.config { i16 32, i16 128, i16 258, i16 1024 }, %struct.config { i16 32, i16 258, i16 258, i16 4096 }], align 16, !dbg !349
@max_lazy_match = internal global i32 0, align 4, !dbg !341
@good_match = dso_local global i32 0, align 4, !dbg !345
@nice_match = dso_local global i32 0, align 4, !dbg !347
@max_chain_length = dso_local global i32 0, align 4, !dbg !339
@lookahead = internal global i32 0, align 4, !dbg !337
@eofile = internal global i32 0, align 4, !dbg !335
@ins_h = internal global i32 0, align 4, !dbg !327
@prev_length = dso_local global i32 0, align 4, !dbg !329
@match_start = dso_local global i32 0, align 4, !dbg !333
@file_type = dso_local global i16* null, align 8, !dbg !361
@file_method = dso_local global i32* null, align 8, !dbg !458
@input_len = internal global i64 0, align 8, !dbg !456
@compressed_len = internal global i64 0, align 8, !dbg !454
@static_dtree = internal global [30 x %struct.ct_data] zeroinitializer, align 16, !dbg !407
@base_length = internal global [29 x i32] zeroinitializer, align 16, !dbg !427
@extra_lbits = internal global [29 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 1, i32 1, i32 2, i32 2, i32 2, i32 2, i32 3, i32 3, i32 3, i32 3, i32 4, i32 4, i32 4, i32 4, i32 5, i32 5, i32 5, i32 5, i32 0], align 16, !dbg !460
@length_code = internal global [256 x i8] zeroinitializer, align 16, !dbg !417
@base_dist = internal global [30 x i32] zeroinitializer, align 16, !dbg !432
@extra_dbits = internal global [30 x i32] [i32 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3, i32 4, i32 4, i32 5, i32 5, i32 6, i32 6, i32 7, i32 7, i32 8, i32 8, i32 9, i32 9, i32 10, i32 10, i32 11, i32 11, i32 12, i32 12, i32 13, i32 13], align 16, !dbg !462
@dist_code = internal global [512 x i8] zeroinitializer, align 16, !dbg !422
@bl_count = internal global [16 x i16] zeroinitializer, align 16, !dbg !412
@static_ltree = internal global [288 x %struct.ct_data] zeroinitializer, align 16, !dbg !402
@flags = internal global i8 0, align 1, !dbg !446
@flag_buf = internal global [4096 x i8] zeroinitializer, align 16, !dbg !435
@last_flags = internal global i32 0, align 4, !dbg !444
@l_desc = internal global %struct.tree_desc { %struct.ct_data* getelementptr inbounds ([573 x %struct.ct_data], [573 x %struct.ct_data]* @dyn_ltree, i32 0, i32 0), %struct.ct_data* getelementptr inbounds ([288 x %struct.ct_data], [288 x %struct.ct_data]* @static_ltree, i32 0, i32 0), i32* getelementptr inbounds ([29 x i32], [29 x i32]* @extra_lbits, i32 0, i32 0), i32 257, i32 286, i32 15, i32 0 }, align 8, !dbg !479
@d_desc = internal global %struct.tree_desc { %struct.ct_data* getelementptr inbounds ([61 x %struct.ct_data], [61 x %struct.ct_data]* @dyn_dtree, i32 0, i32 0), %struct.ct_data* getelementptr inbounds ([30 x %struct.ct_data], [30 x %struct.ct_data]* @static_dtree, i32 0, i32 0), i32* getelementptr inbounds ([30 x i32], [30 x i32]* @extra_dbits, i32 0, i32 0), i32 0, i32 30, i32 15, i32 0 }, align 8, !dbg !481
@opt_len = internal global i64 0, align 8, !dbg !450
@static_len = internal global i64 0, align 8, !dbg !452
@.str.158 = private unnamed_addr constant [15 x i8] c"block vanished\00", align 1
@dyn_ltree = internal global [573 x %struct.ct_data] zeroinitializer, align 16, !dbg !392
@dyn_dtree = internal global [61 x %struct.ct_data] zeroinitializer, align 16, !dbg !397
@last_lit = internal global i32 0, align 4, !dbg !440
@last_dist = internal global i32 0, align 4, !dbg !442
@flag_bit = internal global i8 0, align 1, !dbg !448
@level = dso_local global i32 6, align 4, !dbg !130
@strstart = dso_local global i32 0, align 4, !dbg !331
@block_start = dso_local global i64 0, align 8, !dbg !325
@bl_tree = internal global [39 x %struct.ct_data] zeroinitializer, align 16, !dbg !464
@heap_len = internal global i32 0, align 4, !dbg !469
@heap_max = internal global i32 0, align 4, !dbg !471
@heap = internal global [573 x i32] zeroinitializer, align 16, !dbg !473
@depth = internal global [573 x i8] zeroinitializer, align 16, !dbg !476
@bl_desc = internal global %struct.tree_desc { %struct.ct_data* getelementptr inbounds ([39 x %struct.ct_data], [39 x %struct.ct_data]* @bl_tree, i32 0, i32 0), %struct.ct_data* null, i32* getelementptr inbounds ([19 x i32], [19 x i32]* @extra_blbits, i32 0, i32 0), i32 0, i32 19, i32 7, i32 0 }, align 8, !dbg !483
@bl_order = internal global [19 x i8] c"\10\11\12\00\08\07\09\06\0A\05\0B\04\0C\03\0D\02\0E\01\0F", align 16, !dbg !490
@extra_blbits = internal global [19 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 3, i32 7], align 16, !dbg !485
@.str.1.159 = private unnamed_addr constant [23 x i8] c"-l used on binary file\00", align 1
@.str.2.160 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@zfile = internal global i32 0, align 4, !dbg !494
@bi_buf = internal global i16 0, align 2, !dbg !500
@bi_valid = internal global i32 0, align 4, !dbg !502
@read_buf = dso_local global i32 (i8*, i32)* null, align 8, !dbg !504
@pkzip = dso_local global i32 0, align 4, !dbg !510
@ext_header = dso_local global i32 0, align 4, !dbg !516
@.str.177 = private unnamed_addr constant [31 x i8] c"\0A%s: %s: not a valid zip file\0A\00", align 1
@method = dso_local global i32 8, align 4, !dbg !128
@.str.1.178 = private unnamed_addr constant [58 x i8] c"\0A%s: %s: first entry not deflated or stored -- use unzip\0A\00", align 1
@decrypt = dso_local global i32 0, align 4, !dbg !518
@.str.2.179 = private unnamed_addr constant [38 x i8] c"\0A%s: %s: encrypted file -- use unzip\0A\00", align 1
@.str.3.182 = private unnamed_addr constant [14 x i8] c"out of memory\00", align 1
@.str.4.183 = private unnamed_addr constant [41 x i8] c"invalid compressed data--format violated\00", align 1
@.str.5.184 = private unnamed_addr constant [18 x i8] c"len %ld, siz %ld\0A\00", align 1
@.str.6.185 = private unnamed_addr constant [41 x i8] c"invalid compressed data--length mismatch\00", align 1
@.str.7.186 = private unnamed_addr constant [31 x i8] c"internal error, invalid method\00", align 1
@.str.8.187 = private unnamed_addr constant [35 x i8] c"invalid compressed data--crc error\00", align 1
@.str.9.188 = private unnamed_addr constant [38 x i8] c"invalid compressed data--length error\00", align 1
@.str.10.189 = private unnamed_addr constant [46 x i8] c"%s: %s has more than one entry--rest ignored\0A\00", align 1
@.str.11.190 = private unnamed_addr constant [45 x i8] c"%s: %s has more than one entry -- unchanged\0A\00", align 1
@key = dso_local global i8* null, align 8, !dbg !520
@mask_bits = dso_local global [17 x i16] [i16 0, i16 1, i16 3, i16 7, i16 15, i16 31, i16 63, i16 127, i16 255, i16 511, i16 1023, i16 2047, i16 4095, i16 8191, i16 16383, i16 32767, i16 -1], align 16, !dbg !522
@lbits = dso_local global i32 9, align 4, !dbg !538
@dbits = dso_local global i32 6, align 4, !dbg !540
@hufts = dso_local global i32 0, align 4, !dbg !546
@bb = dso_local global i64 0, align 8, !dbg !542
@bk = dso_local global i32 0, align 4, !dbg !544
@cplens = internal global [31 x i16] [i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 13, i16 15, i16 17, i16 19, i16 23, i16 27, i16 31, i16 35, i16 43, i16 51, i16 59, i16 67, i16 83, i16 99, i16 115, i16 131, i16 163, i16 195, i16 227, i16 258, i16 0, i16 0], align 16, !dbg !548
@cplext = internal global [31 x i16] [i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 1, i16 1, i16 1, i16 1, i16 2, i16 2, i16 2, i16 2, i16 3, i16 3, i16 3, i16 3, i16 4, i16 4, i16 4, i16 4, i16 5, i16 5, i16 5, i16 5, i16 0, i16 99, i16 99], align 16, !dbg !551
@cpdist = internal global [30 x i16] [i16 1, i16 2, i16 3, i16 4, i16 5, i16 7, i16 9, i16 13, i16 17, i16 25, i16 33, i16 49, i16 65, i16 97, i16 129, i16 193, i16 257, i16 385, i16 513, i16 769, i16 1025, i16 1537, i16 2049, i16 3073, i16 4097, i16 6145, i16 8193, i16 12289, i16 16385, i16 24577], align 16, !dbg !553
@cpdext = internal global [30 x i16] [i16 0, i16 0, i16 0, i16 0, i16 1, i16 1, i16 2, i16 2, i16 3, i16 3, i16 4, i16 4, i16 5, i16 5, i16 6, i16 6, i16 7, i16 7, i16 8, i16 8, i16 9, i16 9, i16 10, i16 10, i16 11, i16 11, i16 12, i16 12, i16 13, i16 13], align 16, !dbg !556
@border = internal global [19 x i32] [i32 16, i32 17, i32 18, i32 0, i32 8, i32 7, i32 9, i32 6, i32 10, i32 5, i32 11, i32 4, i32 12, i32 3, i32 13, i32 2, i32 14, i32 1, i32 15], align 16, !dbg !558
@.str.191 = private unnamed_addr constant [26 x i8] c" incomplete literal tree\0A\00", align 1
@.str.1.192 = private unnamed_addr constant [27 x i8] c" incomplete distance tree\0A\00", align 1
@updcrc.crc = internal global i64 4294967295, align 8, !dbg !564
@.str.219 = private unnamed_addr constant [3 x i8] c" \09\00", align 1
@.str.1.220 = private unnamed_addr constant [14 x i8] c"out of memory\00", align 1
@.str.2.223 = private unnamed_addr constant [8 x i8] c"argc<=0\00", align 1
@.str.3.224 = private unnamed_addr constant [13 x i8] c"\0A%s: %s: %s\0A\00", align 1
@.str.4.227 = private unnamed_addr constant [23 x i8] c"%s: %s: warning: %s%s\0A\00", align 1
@.str.5.199 = private unnamed_addr constant [6 x i8] c"\0A%s: \00", align 1
@.str.6.200 = private unnamed_addr constant [28 x i8] c"%s: unexpected end of file\0A\00", align 1
@ofname = dso_local global [1024 x i8] zeroinitializer, align 16, !dbg !217
@.str.7.230 = private unnamed_addr constant [12 x i8] c"%2ld.%1ld%%\00", align 1
@crc_32_tab = dso_local global [256 x i64] [i64 0, i64 1996959894, i64 3993919788, i64 2567524794, i64 124634137, i64 1886057615, i64 3915621685, i64 2657392035, i64 249268274, i64 2044508324, i64 3772115230, i64 2547177864, i64 162941995, i64 2125561021, i64 3887607047, i64 2428444049, i64 498536548, i64 1789927666, i64 4089016648, i64 2227061214, i64 450548861, i64 1843258603, i64 4107580753, i64 2211677639, i64 325883990, i64 1684777152, i64 4251122042, i64 2321926636, i64 335633487, i64 1661365465, i64 4195302755, i64 2366115317, i64 997073096, i64 1281953886, i64 3579855332, i64 2724688242, i64 1006888145, i64 1258607687, i64 3524101629, i64 2768942443, i64 901097722, i64 1119000684, i64 3686517206, i64 2898065728, i64 853044451, i64 1172266101, i64 3705015759, i64 2882616665, i64 651767980, i64 1373503546, i64 3369554304, i64 3218104598, i64 565507253, i64 1454621731, i64 3485111705, i64 3099436303, i64 671266974, i64 1594198024, i64 3322730930, i64 2970347812, i64 795835527, i64 1483230225, i64 3244367275, i64 3060149565, i64 1994146192, i64 31158534, i64 2563907772, i64 4023717930, i64 1907459465, i64 112637215, i64 2680153253, i64 3904427059, i64 2013776290, i64 251722036, i64 2517215374, i64 3775830040, i64 2137656763, i64 141376813, i64 2439277719, i64 3865271297, i64 1802195444, i64 476864866, i64 2238001368, i64 4066508878, i64 1812370925, i64 453092731, i64 2181625025, i64 4111451223, i64 1706088902, i64 314042704, i64 2344532202, i64 4240017532, i64 1658658271, i64 366619977, i64 2362670323, i64 4224994405, i64 1303535960, i64 984961486, i64 2747007092, i64 3569037538, i64 1256170817, i64 1037604311, i64 2765210733, i64 3554079995, i64 1131014506, i64 879679996, i64 2909243462, i64 3663771856, i64 1141124467, i64 855842277, i64 2852801631, i64 3708648649, i64 1342533948, i64 654459306, i64 3188396048, i64 3373015174, i64 1466479909, i64 544179635, i64 3110523913, i64 3462522015, i64 1591671054, i64 702138776, i64 2966460450, i64 3352799412, i64 1504918807, i64 783551873, i64 3082640443, i64 3233442989, i64 3988292384, i64 2596254646, i64 62317068, i64 1957810842, i64 3939845945, i64 2647816111, i64 81470997, i64 1943803523, i64 3814918930, i64 2489596804, i64 225274430, i64 2053790376, i64 3826175755, i64 2466906013, i64 167816743, i64 2097651377, i64 4027552580, i64 2265490386, i64 503444072, i64 1762050814, i64 4150417245, i64 2154129355, i64 426522225, i64 1852507879, i64 4275313526, i64 2312317920, i64 282753626, i64 1742555852, i64 4189708143, i64 2394877945, i64 397917763, i64 1622183637, i64 3604390888, i64 2714866558, i64 953729732, i64 1340076626, i64 3518719985, i64 2797360999, i64 1068828381, i64 1219638859, i64 3624741850, i64 2936675148, i64 906185462, i64 1090812512, i64 3747672003, i64 2825379669, i64 829329135, i64 1181335161, i64 3412177804, i64 3160834842, i64 628085408, i64 1382605366, i64 3423369109, i64 3138078467, i64 570562233, i64 1426400815, i64 3317316542, i64 2998733608, i64 733239954, i64 1555261956, i64 3268935591, i64 3050360625, i64 752459403, i64 1541320221, i64 2607071920, i64 3965973030, i64 1969922972, i64 40735498, i64 2617837225, i64 3943577151, i64 1913087877, i64 83908371, i64 2512341634, i64 3803740692, i64 2075208622, i64 213261112, i64 2463272603, i64 3855990285, i64 2094854071, i64 198958881, i64 2262029012, i64 4057260610, i64 1759359992, i64 534414190, i64 2176718541, i64 4139329115, i64 1873836001, i64 414664567, i64 2282248934, i64 4279200368, i64 1711684554, i64 285281116, i64 2405801727, i64 4167216745, i64 1634467795, i64 376229701, i64 2685067896, i64 3608007406, i64 1308918612, i64 956543938, i64 2808555105, i64 3495958263, i64 1231636301, i64 1047427035, i64 2932959818, i64 3654703836, i64 1088359270, i64 936918000, i64 2847714899, i64 3736837829, i64 1202900863, i64 817233897, i64 3183342108, i64 3401237130, i64 1404277552, i64 615818150, i64 3134207493, i64 3453421203, i64 1423857449, i64 601450431, i64 3009837614, i64 3294710456, i64 1567103746, i64 711928724, i64 3020668471, i64 3272380065, i64 1510334235, i64 755167117], align 16, !dbg !573
@msg_done = internal global i32 0, align 4, !dbg !576
@.str.233 = private unnamed_addr constant [44 x i8] c"output in compress .Z format not supported\0A\00", align 1
@block_mode = dso_local global i32 128, align 4, !dbg !581
@maxbits = dso_local global i32 16, align 4, !dbg !126
@quiet = dso_local global i32 0, align 4, !dbg !120
@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str.236 = private unnamed_addr constant [38 x i8] c"\0A%s: %s: warning, unknown flags 0x%x\0A\00", align 1
@progname = dso_local global i8* null, align 8, !dbg !187
@ifname = dso_local global [1024 x i8] zeroinitializer, align 16, !dbg !212
@exit_code = dso_local global i32 0, align 4, !dbg !132
@.str.1.237 = private unnamed_addr constant [59 x i8] c"\0A%s: %s: compressed with %d bits, can only handle %d bits\0A\00", align 1
@bytes_in = dso_local global i64 0, align 8, !dbg !208
@.str.2.238 = private unnamed_addr constant [15 x i8] c"corrupt input.\00", align 1
@to_stdout = dso_local global i32 0, align 4, !dbg !104
@.str.3.239 = private unnamed_addr constant [46 x i8] c"corrupt input. Use zcat to recover some data.\00", align 1
@valid = internal global i32 0, align 4, !dbg !590
@bitbuf = internal global i64 0, align 8, !dbg !613
@peek_bits = internal global i32 0, align 4, !dbg !611
@leaves = internal global [26 x i32] zeroinitializer, align 16, !dbg !607
@max_len = internal global i32 0, align 4, !dbg !598
@parents = internal global [26 x i32] zeroinitializer, align 16, !dbg !609
@literal = internal global [256 x i8] zeroinitializer, align 16, !dbg !600
@lit_base = internal global [26 x i32] zeroinitializer, align 16, !dbg !602
@outcnt = dso_local global i32 0, align 4, !dbg !264
@orig_len = internal global i64 0, align 8, !dbg !596
@bytes_out = dso_local global i64 0, align 8, !dbg !210
@.str.243 = private unnamed_addr constant [38 x i8] c"invalid compressed data--length error\00", align 1
@.str.1.244 = private unnamed_addr constant [50 x i8] c"invalid compressed data -- Huffman code > 32 bits\00", align 1
@.str.2.245 = private unnamed_addr constant [32 x i8] c"too many leaves in Huffman tree\00", align 1
@ifd = dso_local global i32 0, align 4, !dbg !256
@ofd = dso_local global i32 0, align 4, !dbg !258
@done = internal global i32 0, align 4, !dbg !615
@window = dso_local global [65536 x i8] zeroinitializer, align 16, !dbg !177
@test = dso_local global i32 0, align 4, !dbg !124
@j = internal global i32 0, align 4, !dbg !629
@blocksize = internal global i32 0, align 4, !dbg !627
@bitbuf.248 = internal global i16 0, align 2, !dbg !621
@subbitbuf = internal global i32 0, align 4, !dbg !623
@bitcount = internal global i32 0, align 4, !dbg !625
@inptr = dso_local global i32 0, align 4, !dbg !262
@insize = dso_local global i32 0, align 4, !dbg !260
@inbuf = dso_local global [32832 x i8] zeroinitializer, align 16, !dbg !162
@decode.i = internal global i32 0, align 4, !dbg !631
@d_buf = dso_local global [32768 x i16] zeroinitializer, align 16, !dbg !172
@prev = dso_local global [65536 x i16] zeroinitializer, align 16, !dbg !182
@outbuf = dso_local global [18432 x i8] zeroinitializer, align 16, !dbg !167
@pt_len = internal global [19 x i8] zeroinitializer, align 16, !dbg !636
@pt_table = internal global [256 x i16] zeroinitializer, align 16, !dbg !638
@.str.249 = private unnamed_addr constant [11 x i8] c"Bad table\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 noundef %0, i8** noundef %1) #0 !dbg !651 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !654, metadata !DIExpression()), !dbg !655
  store i8** %1, i8*** %5, align 8
  call void @llvm.dbg.declare(metadata i8*** %5, metadata !656, metadata !DIExpression()), !dbg !657
  call void @llvm.dbg.declare(metadata i32* %6, metadata !658, metadata !DIExpression()), !dbg !659
  call void @llvm.dbg.declare(metadata i32* %7, metadata !660, metadata !DIExpression()), !dbg !661
  call void @llvm.dbg.declare(metadata i32* %8, metadata !662, metadata !DIExpression()), !dbg !663
  %9 = load i8**, i8*** %5, align 8, !dbg !664
  %10 = getelementptr inbounds i8*, i8** %9, i64 0, !dbg !664
  %11 = load i8*, i8** %10, align 8, !dbg !664
  %12 = call i8* @basename(i8* noundef %11), !dbg !665
  store i8* %12, i8** @progname, align 8, !dbg !666
  %13 = load i8*, i8** @progname, align 8, !dbg !667
  %14 = call i64 @strlen(i8* noundef %13) #9, !dbg !668
  %15 = trunc i64 %14 to i32, !dbg !668
  store i32 %15, i32* %7, align 4, !dbg !669
  %16 = load i32, i32* %7, align 4, !dbg !670
  %17 = icmp sgt i32 %16, 4, !dbg !672
  br i1 %17, label %18, label %32, !dbg !673

18:                                               ; preds = %2
  %19 = load i8*, i8** @progname, align 8, !dbg !674
  %20 = load i32, i32* %7, align 4, !dbg !674
  %21 = sext i32 %20 to i64, !dbg !674
  %22 = getelementptr inbounds i8, i8* %19, i64 %21, !dbg !674
  %23 = getelementptr inbounds i8, i8* %22, i64 -4, !dbg !674
  %24 = call i32 @strcmp(i8* noundef %23, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i64 0, i64 0)) #9, !dbg !674
  %25 = icmp eq i32 %24, 0, !dbg !674
  br i1 %25, label %26, label %32, !dbg !675

26:                                               ; preds = %18
  %27 = load i8*, i8** @progname, align 8, !dbg !676
  %28 = load i32, i32* %7, align 4, !dbg !678
  %29 = sub nsw i32 %28, 4, !dbg !679
  %30 = sext i32 %29 to i64, !dbg !676
  %31 = getelementptr inbounds i8, i8* %27, i64 %30, !dbg !676
  store i8 0, i8* %31, align 1, !dbg !680
  br label %32, !dbg !681

32:                                               ; preds = %26, %18, %2
  %33 = call i8* @add_envopt(i32* noundef %4, i8*** noundef %5, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i64 0, i64 0)), !dbg !682
  store i8* %33, i8** @env, align 8, !dbg !683
  %34 = load i8*, i8** @env, align 8, !dbg !684
  %35 = icmp ne i8* %34, null, !dbg !686
  br i1 %35, label %36, label %38, !dbg !687

36:                                               ; preds = %32
  %37 = load i8**, i8*** %5, align 8, !dbg !688
  store i8** %37, i8*** @args, align 8, !dbg !689
  br label %38, !dbg !690

38:                                               ; preds = %36, %32
  %39 = call void (i32)* @signal(i32 noundef 2, void (i32)* noundef inttoptr (i64 1 to void (i32)*)) #10, !dbg !691
  %40 = icmp ne void (i32)* %39, inttoptr (i64 1 to void (i32)*), !dbg !692
  %41 = zext i1 %40 to i32, !dbg !692
  store i32 %41, i32* @foreground, align 4, !dbg !693
  %42 = load i32, i32* @foreground, align 4, !dbg !694
  %43 = icmp ne i32 %42, 0, !dbg !694
  br i1 %43, label %44, label %46, !dbg !696

44:                                               ; preds = %38
  %45 = call void (i32)* @signal(i32 noundef 2, void (i32)* noundef bitcast (void ()* @abort_gzip to void (i32)*)) #10, !dbg !697
  br label %46, !dbg !699

46:                                               ; preds = %44, %38
  %47 = call void (i32)* @signal(i32 noundef 15, void (i32)* noundef inttoptr (i64 1 to void (i32)*)) #10, !dbg !700
  %48 = icmp ne void (i32)* %47, inttoptr (i64 1 to void (i32)*), !dbg !702
  br i1 %48, label %49, label %51, !dbg !703

49:                                               ; preds = %46
  %50 = call void (i32)* @signal(i32 noundef 15, void (i32)* noundef bitcast (void ()* @abort_gzip to void (i32)*)) #10, !dbg !704
  br label %51, !dbg !706

51:                                               ; preds = %49, %46
  %52 = call void (i32)* @signal(i32 noundef 1, void (i32)* noundef inttoptr (i64 1 to void (i32)*)) #10, !dbg !707
  %53 = icmp ne void (i32)* %52, inttoptr (i64 1 to void (i32)*), !dbg !709
  br i1 %53, label %54, label %56, !dbg !710

54:                                               ; preds = %51
  %55 = call void (i32)* @signal(i32 noundef 1, void (i32)* noundef bitcast (void ()* @abort_gzip to void (i32)*)) #10, !dbg !711
  br label %56, !dbg !713

56:                                               ; preds = %54, %51
  %57 = load i8*, i8** @progname, align 8, !dbg !714
  %58 = call i32 @strncmp(i8* noundef %57, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i64 noundef 2) #9, !dbg !716
  %59 = icmp eq i32 %58, 0, !dbg !717
  br i1 %59, label %64, label %60, !dbg !718

60:                                               ; preds = %56
  %61 = load i8*, i8** @progname, align 8, !dbg !719
  %62 = call i32 @strncmp(i8* noundef %61, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26, i64 0, i64 0), i64 noundef 3) #9, !dbg !720
  %63 = icmp eq i32 %62, 0, !dbg !721
  br i1 %63, label %64, label %65, !dbg !722

64:                                               ; preds = %60, %56
  store i32 1, i32* @decompress, align 4, !dbg !723
  br label %76, !dbg !725

65:                                               ; preds = %60
  %66 = load i8*, i8** @progname, align 8, !dbg !726
  %67 = getelementptr inbounds i8, i8* %66, i64 1, !dbg !726
  %68 = call i32 @strcmp(i8* noundef %67, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i64 0, i64 0)) #9, !dbg !726
  %69 = icmp eq i32 %68, 0, !dbg !726
  br i1 %69, label %74, label %70, !dbg !728

70:                                               ; preds = %65
  %71 = load i8*, i8** @progname, align 8, !dbg !729
  %72 = call i32 @strcmp(i8* noundef %71, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i64 0, i64 0)) #9, !dbg !729
  %73 = icmp eq i32 %72, 0, !dbg !729
  br i1 %73, label %74, label %75, !dbg !730

74:                                               ; preds = %70, %65
  store i32 1, i32* @to_stdout, align 4, !dbg !731
  store i32 1, i32* @decompress, align 4, !dbg !733
  br label %75, !dbg !734

75:                                               ; preds = %74, %70
  br label %76

76:                                               ; preds = %75, %64
  %77 = call i8* @strncpy(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @z_suffix, i64 0, i64 0), i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i64 0, i64 0), i64 noundef 30) #10, !dbg !735
  %78 = call i64 @strlen(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @z_suffix, i64 0, i64 0)) #9, !dbg !736
  %79 = trunc i64 %78 to i32, !dbg !736
  store i32 %79, i32* @z_len, align 4, !dbg !737
  br label %80, !dbg !738

80:                                               ; preds = %124, %76
  %81 = load i32, i32* %4, align 4, !dbg !739
  %82 = load i8**, i8*** %5, align 8, !dbg !740
  %83 = call i32 @getopt_long(i32 noundef %81, i8** noundef %82, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.30, i64 0, i64 0), %struct.option* noundef getelementptr inbounds ([24 x %struct.option], [24 x %struct.option]* @longopts, i64 0, i64 0), i32* noundef null), !dbg !741
  store i32 %83, i32* %8, align 4, !dbg !742
  %84 = icmp ne i32 %83, -1, !dbg !743
  br i1 %84, label %85, label %125, !dbg !738

85:                                               ; preds = %80
  %86 = load i32, i32* %8, align 4, !dbg !744
  switch i32 %86, label %123 [
    i32 97, label %87
    i32 98, label %88
    i32 99, label %91
    i32 100, label %92
    i32 102, label %93
    i32 104, label %96
    i32 72, label %96
    i32 63, label %96
    i32 108, label %97
    i32 76, label %98
    i32 109, label %99
    i32 77, label %100
    i32 110, label %101
    i32 78, label %102
    i32 113, label %103
    i32 114, label %104
    i32 83, label %105
    i32 116, label %111
    i32 118, label %112
    i32 86, label %115
    i32 90, label %116
    i32 49, label %120
    i32 50, label %120
    i32 51, label %120
    i32 52, label %120
    i32 53, label %120
    i32 54, label %120
    i32 55, label %120
    i32 56, label %120
    i32 57, label %120
  ], !dbg !746

87:                                               ; preds = %85
  store i32 1, i32* @ascii, align 4, !dbg !747
  br label %124, !dbg !749

88:                                               ; preds = %85
  %89 = load i8*, i8** @optarg, align 8, !dbg !750
  %90 = call i32 @atoi(i8* noundef %89) #9, !dbg !751
  store i32 %90, i32* @maxbits, align 4, !dbg !752
  br label %124, !dbg !753

91:                                               ; preds = %85
  store i32 1, i32* @to_stdout, align 4, !dbg !754
  br label %124, !dbg !755

92:                                               ; preds = %85
  store i32 1, i32* @decompress, align 4, !dbg !756
  br label %124, !dbg !757

93:                                               ; preds = %85
  %94 = load i32, i32* @force, align 4, !dbg !758
  %95 = add nsw i32 %94, 1, !dbg !758
  store i32 %95, i32* @force, align 4, !dbg !758
  br label %124, !dbg !759

96:                                               ; preds = %85, %85, %85
  call void @help(), !dbg !760
  call void @do_exit(i32 noundef 0), !dbg !761
  br label %124, !dbg !762

97:                                               ; preds = %85
  store i32 1, i32* @to_stdout, align 4, !dbg !763
  store i32 1, i32* @decompress, align 4, !dbg !764
  store i32 1, i32* @list, align 4, !dbg !765
  br label %124, !dbg !766

98:                                               ; preds = %85
  call void @license(), !dbg !767
  call void @do_exit(i32 noundef 0), !dbg !768
  br label %124, !dbg !769

99:                                               ; preds = %85
  store i32 1, i32* @no_time, align 4, !dbg !770
  br label %124, !dbg !771

100:                                              ; preds = %85
  store i32 0, i32* @no_time, align 4, !dbg !772
  br label %124, !dbg !773

101:                                              ; preds = %85
  store i32 1, i32* @no_time, align 4, !dbg !774
  store i32 1, i32* @no_name, align 4, !dbg !775
  br label %124, !dbg !776

102:                                              ; preds = %85
  store i32 0, i32* @no_time, align 4, !dbg !777
  store i32 0, i32* @no_name, align 4, !dbg !778
  br label %124, !dbg !779

103:                                              ; preds = %85
  store i32 1, i32* @quiet, align 4, !dbg !780
  store i32 0, i32* @verbose, align 4, !dbg !781
  br label %124, !dbg !782

104:                                              ; preds = %85
  store i32 1, i32* @recursive, align 4, !dbg !783
  br label %124, !dbg !784

105:                                              ; preds = %85
  %106 = load i8*, i8** @optarg, align 8, !dbg !785
  %107 = call i64 @strlen(i8* noundef %106) #9, !dbg !786
  %108 = trunc i64 %107 to i32, !dbg !786
  store i32 %108, i32* @z_len, align 4, !dbg !787
  %109 = load i8*, i8** @optarg, align 8, !dbg !788
  %110 = call i8* @strcpy(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @z_suffix, i64 0, i64 0), i8* noundef %109) #10, !dbg !789
  br label %124, !dbg !790

111:                                              ; preds = %85
  store i32 1, i32* @to_stdout, align 4, !dbg !791
  store i32 1, i32* @decompress, align 4, !dbg !792
  store i32 1, i32* @test, align 4, !dbg !793
  br label %124, !dbg !794

112:                                              ; preds = %85
  %113 = load i32, i32* @verbose, align 4, !dbg !795
  %114 = add nsw i32 %113, 1, !dbg !795
  store i32 %114, i32* @verbose, align 4, !dbg !795
  store i32 0, i32* @quiet, align 4, !dbg !796
  br label %124, !dbg !797

115:                                              ; preds = %85
  call void @version(), !dbg !798
  call void @do_exit(i32 noundef 0), !dbg !799
  br label %124, !dbg !800

116:                                              ; preds = %85
  %117 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !801
  %118 = load i8*, i8** @progname, align 8, !dbg !802
  %119 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %117, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.31, i64 0, i64 0), i8* noundef %118), !dbg !803
  call void @usage(), !dbg !804
  call void @do_exit(i32 noundef 1), !dbg !805
  br label %124, !dbg !806

120:                                              ; preds = %85, %85, %85, %85, %85, %85, %85, %85, %85
  %121 = load i32, i32* %8, align 4, !dbg !807
  %122 = sub nsw i32 %121, 48, !dbg !808
  store i32 %122, i32* @level, align 4, !dbg !809
  br label %124, !dbg !810

123:                                              ; preds = %85
  call void @usage(), !dbg !811
  call void @do_exit(i32 noundef 1), !dbg !812
  br label %124, !dbg !813

124:                                              ; preds = %123, %120, %116, %115, %112, %111, %105, %104, %103, %102, %101, %100, %99, %98, %97, %96, %93, %92, %91, %88, %87
  br label %80, !dbg !738, !llvm.loop !814

125:                                              ; preds = %80
  %126 = load i32, i32* @no_time, align 4, !dbg !817
  %127 = icmp slt i32 %126, 0, !dbg !819
  br i1 %127, label %128, label %130, !dbg !820

128:                                              ; preds = %125
  %129 = load i32, i32* @decompress, align 4, !dbg !821
  store i32 %129, i32* @no_time, align 4, !dbg !822
  br label %130, !dbg !823

130:                                              ; preds = %128, %125
  %131 = load i32, i32* @no_name, align 4, !dbg !824
  %132 = icmp slt i32 %131, 0, !dbg !826
  br i1 %132, label %133, label %135, !dbg !827

133:                                              ; preds = %130
  %134 = load i32, i32* @decompress, align 4, !dbg !828
  store i32 %134, i32* @no_name, align 4, !dbg !829
  br label %135, !dbg !830

135:                                              ; preds = %133, %130
  %136 = load i32, i32* %4, align 4, !dbg !831
  %137 = load i32, i32* @optind, align 4, !dbg !832
  %138 = sub nsw i32 %136, %137, !dbg !833
  store i32 %138, i32* %6, align 4, !dbg !834
  %139 = load i32, i32* @ascii, align 4, !dbg !835
  %140 = icmp ne i32 %139, 0, !dbg !835
  br i1 %140, label %141, label %148, !dbg !837

141:                                              ; preds = %135
  %142 = load i32, i32* @quiet, align 4, !dbg !838
  %143 = icmp ne i32 %142, 0, !dbg !838
  br i1 %143, label %148, label %144, !dbg !839

144:                                              ; preds = %141
  %145 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !840
  %146 = load i8*, i8** @progname, align 8, !dbg !842
  %147 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %145, i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.32, i64 0, i64 0), i8* noundef %146), !dbg !843
  br label %148, !dbg !844

148:                                              ; preds = %144, %141, %135
  %149 = load i32, i32* @z_len, align 4, !dbg !845
  %150 = icmp eq i32 %149, 0, !dbg !847
  br i1 %150, label %151, label %154, !dbg !848

151:                                              ; preds = %148
  %152 = load i32, i32* @decompress, align 4, !dbg !849
  %153 = icmp ne i32 %152, 0, !dbg !849
  br i1 %153, label %154, label %157, !dbg !850

154:                                              ; preds = %151, %148
  %155 = load i32, i32* @z_len, align 4, !dbg !851
  %156 = icmp sgt i32 %155, 30, !dbg !852
  br i1 %156, label %157, label %162, !dbg !853

157:                                              ; preds = %154, %151
  %158 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !854
  %159 = load i8*, i8** @progname, align 8, !dbg !856
  %160 = load i8*, i8** @optarg, align 8, !dbg !857
  %161 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %158, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.33, i64 0, i64 0), i8* noundef %159, i8* noundef %160), !dbg !858
  call void @do_exit(i32 noundef 1), !dbg !859
  br label %162, !dbg !860

162:                                              ; preds = %157, %154
  %163 = load i32, i32* @do_lzw, align 4, !dbg !861
  %164 = icmp ne i32 %163, 0, !dbg !861
  br i1 %164, label %165, label %169, !dbg !863

165:                                              ; preds = %162
  %166 = load i32, i32* @decompress, align 4, !dbg !864
  %167 = icmp ne i32 %166, 0, !dbg !864
  br i1 %167, label %169, label %168, !dbg !865

168:                                              ; preds = %165
  store i32 (i32, i32)* @lzw, i32 (i32, i32)** @work, align 8, !dbg !866
  br label %169, !dbg !867

169:                                              ; preds = %168, %165, %162
  %170 = load i32, i32* %6, align 4, !dbg !868
  %171 = icmp ne i32 %170, 0, !dbg !870
  br i1 %171, label %172, label %201, !dbg !871

172:                                              ; preds = %169
  %173 = load i32, i32* @to_stdout, align 4, !dbg !872
  %174 = icmp ne i32 %173, 0, !dbg !872
  br i1 %174, label %175, label %188, !dbg !875

175:                                              ; preds = %172
  %176 = load i32, i32* @test, align 4, !dbg !876
  %177 = icmp ne i32 %176, 0, !dbg !876
  br i1 %177, label %188, label %178, !dbg !877

178:                                              ; preds = %175
  %179 = load i32, i32* @list, align 4, !dbg !878
  %180 = icmp ne i32 %179, 0, !dbg !878
  br i1 %180, label %188, label %181, !dbg !879

181:                                              ; preds = %178
  %182 = load i32, i32* @decompress, align 4, !dbg !880
  %183 = icmp ne i32 %182, 0, !dbg !880
  br i1 %183, label %184, label %187, !dbg !881

184:                                              ; preds = %181
  %185 = load i32, i32* @ascii, align 4, !dbg !882
  %186 = icmp ne i32 %185, 0, !dbg !882
  br i1 %186, label %188, label %187, !dbg !883

187:                                              ; preds = %184, %181
  br label %188, !dbg !884

188:                                              ; preds = %187, %184, %178, %175, %172
  br label %189, !dbg !886

189:                                              ; preds = %193, %188
  %190 = load i32, i32* @optind, align 4, !dbg !887
  %191 = load i32, i32* %4, align 4, !dbg !888
  %192 = icmp slt i32 %190, %191, !dbg !889
  br i1 %192, label %193, label %200, !dbg !886

193:                                              ; preds = %189
  %194 = load i8**, i8*** %5, align 8, !dbg !890
  %195 = load i32, i32* @optind, align 4, !dbg !892
  %196 = add nsw i32 %195, 1, !dbg !892
  store i32 %196, i32* @optind, align 4, !dbg !892
  %197 = sext i32 %195 to i64, !dbg !890
  %198 = getelementptr inbounds i8*, i8** %194, i64 %197, !dbg !890
  %199 = load i8*, i8** %198, align 8, !dbg !890
  call void @treat_file(i8* noundef %199), !dbg !893
  br label %189, !dbg !886, !llvm.loop !894

200:                                              ; preds = %189
  br label %202, !dbg !896

201:                                              ; preds = %169
  call void @treat_stdin(), !dbg !897
  br label %202

202:                                              ; preds = %201, %200
  %203 = load i32, i32* @list, align 4, !dbg !899
  %204 = icmp ne i32 %203, 0, !dbg !899
  br i1 %204, label %205, label %212, !dbg !901

205:                                              ; preds = %202
  %206 = load i32, i32* @quiet, align 4, !dbg !902
  %207 = icmp ne i32 %206, 0, !dbg !902
  br i1 %207, label %212, label %208, !dbg !903

208:                                              ; preds = %205
  %209 = load i32, i32* %6, align 4, !dbg !904
  %210 = icmp sgt i32 %209, 1, !dbg !905
  br i1 %210, label %211, label %212, !dbg !906

211:                                              ; preds = %208
  call void @do_list(i32 noundef -1, i32 noundef -1), !dbg !907
  br label %212, !dbg !909

212:                                              ; preds = %211, %208, %205, %202
  %213 = load i32, i32* @exit_code, align 4, !dbg !910
  call void @do_exit(i32 noundef %213), !dbg !911
  %214 = load i32, i32* @exit_code, align 4, !dbg !912
  ret i32 %214, !dbg !913
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind readonly willreturn
declare dso_local i64 @strlen(i8* noundef) #2

; Function Attrs: nounwind readonly willreturn
declare dso_local i32 @strcmp(i8* noundef, i8* noundef) #2

; Function Attrs: nounwind
declare dso_local void (i32)* @signal(i32 noundef, void (i32)* noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @abort_gzip() #0 !dbg !914 {
  %1 = load i32, i32* @remove_ofname, align 4, !dbg !915
  %2 = icmp ne i32 %1, 0, !dbg !915
  br i1 %2, label %3, label %7, !dbg !917

3:                                                ; preds = %0
  %4 = load i32, i32* @ofd, align 4, !dbg !918
  %5 = call i32 @close(i32 noundef %4), !dbg !920
  %6 = call i32 @unlink(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i64 0, i64 0)) #10, !dbg !921
  br label %7, !dbg !922

7:                                                ; preds = %3, %0
  call void @do_exit(i32 noundef 1), !dbg !923
  ret void, !dbg !924
}

; Function Attrs: nounwind readonly willreturn
declare dso_local i32 @strncmp(i8* noundef, i8* noundef, i64 noundef) #2

; Function Attrs: nounwind
declare dso_local i8* @strncpy(i8* noundef, i8* noundef, i64 noundef) #3

declare dso_local i32 @getopt_long(i32 noundef, i8** noundef, i8* noundef, %struct.option* noundef, i32* noundef) #4

; Function Attrs: nounwind readonly willreturn
declare dso_local i32 @atoi(i8* noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @help() #0 !dbg !268 {
  %1 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %1, metadata !925, metadata !DIExpression()), !dbg !926
  store i8** getelementptr inbounds ([18 x i8*], [18 x i8*]* @help.help_msg, i64 0, i64 0), i8*** %1, align 8, !dbg !926
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !927
  %3 = load i8*, i8** @progname, align 8, !dbg !928
  %4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %2, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.51, i64 0, i64 0), i8* noundef %3, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i64 0, i64 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.53, i64 0, i64 0)), !dbg !929
  call void @usage(), !dbg !930
  br label %5, !dbg !931

5:                                                ; preds = %9, %0
  %6 = load i8**, i8*** %1, align 8, !dbg !932
  %7 = load i8*, i8** %6, align 8, !dbg !933
  %8 = icmp ne i8* %7, null, !dbg !931
  br i1 %8, label %9, label %15, !dbg !931

9:                                                ; preds = %5
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !934
  %11 = load i8**, i8*** %1, align 8, !dbg !935
  %12 = getelementptr inbounds i8*, i8** %11, i32 1, !dbg !935
  store i8** %12, i8*** %1, align 8, !dbg !935
  %13 = load i8*, i8** %11, align 8, !dbg !936
  %14 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %10, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0), i8* noundef %13), !dbg !937
  br label %5, !dbg !931, !llvm.loop !938

15:                                               ; preds = %5
  ret void, !dbg !940
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @do_exit(i32 noundef %0) #0 !dbg !306 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !941, metadata !DIExpression()), !dbg !942
  %3 = load i32, i32* @do_exit.in_exit, align 4, !dbg !943
  %4 = icmp ne i32 %3, 0, !dbg !943
  br i1 %4, label %5, label %7, !dbg !945

5:                                                ; preds = %1
  %6 = load i32, i32* %2, align 4, !dbg !946
  call void @exit(i32 noundef %6) #11, !dbg !947
  unreachable, !dbg !947

7:                                                ; preds = %1
  store i32 1, i32* @do_exit.in_exit, align 4, !dbg !948
  %8 = load i8*, i8** @env, align 8, !dbg !949
  %9 = icmp ne i8* %8, null, !dbg !951
  br i1 %9, label %10, label %12, !dbg !952

10:                                               ; preds = %7
  %11 = load i8*, i8** @env, align 8, !dbg !953
  call void @free(i8* noundef %11) #10, !dbg !954
  store i8* null, i8** @env, align 8, !dbg !955
  br label %12, !dbg !954

12:                                               ; preds = %10, %7
  %13 = load i8**, i8*** @args, align 8, !dbg !956
  %14 = icmp ne i8** %13, null, !dbg !958
  br i1 %14, label %15, label %18, !dbg !959

15:                                               ; preds = %12
  %16 = load i8**, i8*** @args, align 8, !dbg !960
  %17 = bitcast i8** %16 to i8*, !dbg !961
  call void @free(i8* noundef %17) #10, !dbg !962
  store i8** null, i8*** @args, align 8, !dbg !963
  br label %18, !dbg !962

18:                                               ; preds = %15, %12
  %19 = load i32, i32* %2, align 4, !dbg !964
  call void @exit(i32 noundef %19) #11, !dbg !965
  unreachable, !dbg !965
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @license() #0 !dbg !966 {
  %1 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %1, metadata !967, metadata !DIExpression()), !dbg !968
  store i8** getelementptr inbounds ([15 x i8*], [15 x i8*]* @license_msg, i64 0, i64 0), i8*** %1, align 8, !dbg !968
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !969
  %3 = load i8*, i8** @progname, align 8, !dbg !970
  %4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %2, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.51, i64 0, i64 0), i8* noundef %3, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i64 0, i64 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.53, i64 0, i64 0)), !dbg !971
  br label %5, !dbg !972

5:                                                ; preds = %9, %0
  %6 = load i8**, i8*** %1, align 8, !dbg !973
  %7 = load i8*, i8** %6, align 8, !dbg !974
  %8 = icmp ne i8* %7, null, !dbg !972
  br i1 %8, label %9, label %15, !dbg !972

9:                                                ; preds = %5
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !975
  %11 = load i8**, i8*** %1, align 8, !dbg !976
  %12 = getelementptr inbounds i8*, i8** %11, i32 1, !dbg !976
  store i8** %12, i8*** %1, align 8, !dbg !976
  %13 = load i8*, i8** %11, align 8, !dbg !977
  %14 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %10, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0), i8* noundef %13), !dbg !978
  br label %5, !dbg !972, !llvm.loop !979

15:                                               ; preds = %5
  ret void, !dbg !981
}

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8* noundef, i8* noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @version() #0 !dbg !982 {
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !983
  %2 = load i8*, i8** @progname, align 8, !dbg !984
  %3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %1, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.51, i64 0, i64 0), i8* noundef %2, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i64 0, i64 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.53, i64 0, i64 0)), !dbg !985
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !986
  %5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %4, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.68, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.69, i64 0, i64 0), i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i64 0, i64 0)), !dbg !987
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !988
  %7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %6, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.71, i64 0, i64 0)), !dbg !989
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !990
  %9 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %8, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.72, i64 0, i64 0)), !dbg !991
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !992
  %11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %10, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.73, i64 0, i64 0)), !dbg !993
  ret void, !dbg !994
}

declare dso_local i32 @fprintf(%struct._IO_FILE* noundef, i8* noundef, ...) #4

; Function Attrs: noinline nounwind optnone uwtable
define internal void @usage() #0 !dbg !995 {
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !996
  %2 = load i8*, i8** @progname, align 8, !dbg !997
  %3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %1, i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.74, i64 0, i64 0), i8* noundef %2, i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.60, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.75, i64 0, i64 0)), !dbg !998
  ret void, !dbg !999
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @treat_file(i8* noundef %0) #0 !dbg !1000 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct.stat, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !1003, metadata !DIExpression()), !dbg !1004
  %5 = load i8*, i8** %2, align 8, !dbg !1005
  %6 = call i32 @strcmp(i8* noundef %5, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.99, i64 0, i64 0)) #9, !dbg !1005
  %7 = icmp eq i32 %6, 0, !dbg !1005
  br i1 %7, label %8, label %11, !dbg !1007

8:                                                ; preds = %1
  call void @llvm.dbg.declare(metadata i32* %3, metadata !1008, metadata !DIExpression()), !dbg !1010
  %9 = load i32, i32* @to_stdout, align 4, !dbg !1011
  store i32 %9, i32* %3, align 4, !dbg !1010
  call void @treat_stdin(), !dbg !1012
  %10 = load i32, i32* %3, align 4, !dbg !1013
  store i32 %10, i32* @to_stdout, align 4, !dbg !1014
  br label %292, !dbg !1015

11:                                               ; preds = %1
  %12 = load i8*, i8** %2, align 8, !dbg !1016
  %13 = call i32 @get_istat(i8* noundef %12, %struct.stat* noundef @istat), !dbg !1018
  %14 = icmp ne i32 %13, 0, !dbg !1019
  br i1 %14, label %15, label %16, !dbg !1020

15:                                               ; preds = %11
  br label %292, !dbg !1021

16:                                               ; preds = %11
  %17 = load i32, i32* getelementptr inbounds (%struct.stat, %struct.stat* @istat, i32 0, i32 3), align 8, !dbg !1022
  %18 = and i32 %17, 61440, !dbg !1022
  %19 = icmp eq i32 %18, 16384, !dbg !1022
  br i1 %19, label %20, label %40, !dbg !1024

20:                                               ; preds = %16
  %21 = load i32, i32* @recursive, align 4, !dbg !1025
  %22 = icmp ne i32 %21, 0, !dbg !1025
  br i1 %22, label %23, label %27, !dbg !1028

23:                                               ; preds = %20
  call void @llvm.dbg.declare(metadata %struct.stat* %4, metadata !1029, metadata !DIExpression()), !dbg !1031
  %24 = bitcast %struct.stat* %4 to i8*, !dbg !1032
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 bitcast (%struct.stat* @istat to i8*), i64 144, i1 false), !dbg !1032
  %25 = load i8*, i8** %2, align 8, !dbg !1033
  call void @treat_dir(i8* noundef %25), !dbg !1034
  %26 = load i8*, i8** %2, align 8, !dbg !1035
  call void @reset_times(i8* noundef %26, %struct.stat* noundef %4), !dbg !1036
  br label %39, !dbg !1037

27:                                               ; preds = %20
  %28 = load i32, i32* @quiet, align 4, !dbg !1038
  %29 = icmp ne i32 %28, 0, !dbg !1038
  br i1 %29, label %34, label %30, !dbg !1041

30:                                               ; preds = %27
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1038
  %32 = load i8*, i8** @progname, align 8, !dbg !1038
  %33 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %31, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.100, i64 0, i64 0), i8* noundef %32, i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0)), !dbg !1038
  br label %34, !dbg !1038

34:                                               ; preds = %30, %27
  %35 = load i32, i32* @exit_code, align 4, !dbg !1042
  %36 = icmp eq i32 %35, 0, !dbg !1042
  br i1 %36, label %37, label %38, !dbg !1041

37:                                               ; preds = %34
  store i32 2, i32* @exit_code, align 4, !dbg !1042
  br label %38, !dbg !1042

38:                                               ; preds = %37, %34
  br label %39

39:                                               ; preds = %38, %23
  br label %292, !dbg !1044

40:                                               ; preds = %16
  %41 = load i32, i32* getelementptr inbounds (%struct.stat, %struct.stat* @istat, i32 0, i32 3), align 8, !dbg !1045
  %42 = and i32 %41, 61440, !dbg !1045
  %43 = icmp eq i32 %42, 32768, !dbg !1045
  br i1 %43, label %56, label %44, !dbg !1047

44:                                               ; preds = %40
  %45 = load i32, i32* @quiet, align 4, !dbg !1048
  %46 = icmp ne i32 %45, 0, !dbg !1048
  br i1 %46, label %51, label %47, !dbg !1052

47:                                               ; preds = %44
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1048
  %49 = load i8*, i8** @progname, align 8, !dbg !1048
  %50 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %48, i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.101, i64 0, i64 0), i8* noundef %49, i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0)), !dbg !1048
  br label %51, !dbg !1048

51:                                               ; preds = %47, %44
  %52 = load i32, i32* @exit_code, align 4, !dbg !1053
  %53 = icmp eq i32 %52, 0, !dbg !1053
  br i1 %53, label %54, label %55, !dbg !1052

54:                                               ; preds = %51
  store i32 2, i32* @exit_code, align 4, !dbg !1053
  br label %55, !dbg !1053

55:                                               ; preds = %54, %51
  br label %292, !dbg !1055

56:                                               ; preds = %40
  %57 = load i64, i64* getelementptr inbounds (%struct.stat, %struct.stat* @istat, i32 0, i32 2), align 8, !dbg !1056
  %58 = icmp ugt i64 %57, 1, !dbg !1058
  br i1 %58, label %59, label %84, !dbg !1059

59:                                               ; preds = %56
  %60 = load i32, i32* @to_stdout, align 4, !dbg !1060
  %61 = icmp ne i32 %60, 0, !dbg !1060
  br i1 %61, label %84, label %62, !dbg !1061

62:                                               ; preds = %59
  %63 = load i32, i32* @force, align 4, !dbg !1062
  %64 = icmp ne i32 %63, 0, !dbg !1062
  br i1 %64, label %84, label %65, !dbg !1063

65:                                               ; preds = %62
  %66 = load i32, i32* @quiet, align 4, !dbg !1064
  %67 = icmp ne i32 %66, 0, !dbg !1064
  br i1 %67, label %79, label %68, !dbg !1068

68:                                               ; preds = %65
  %69 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1064
  %70 = load i8*, i8** @progname, align 8, !dbg !1064
  %71 = load i64, i64* getelementptr inbounds (%struct.stat, %struct.stat* @istat, i32 0, i32 2), align 8, !dbg !1064
  %72 = trunc i64 %71 to i32, !dbg !1064
  %73 = sub nsw i32 %72, 1, !dbg !1064
  %74 = load i64, i64* getelementptr inbounds (%struct.stat, %struct.stat* @istat, i32 0, i32 2), align 8, !dbg !1064
  %75 = icmp ugt i64 %74, 2, !dbg !1064
  %76 = zext i1 %75 to i64, !dbg !1064
  %77 = select i1 %75, i32 115, i32 32, !dbg !1064
  %78 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %69, i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.102, i64 0, i64 0), i8* noundef %70, i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0), i32 noundef %73, i32 noundef %77), !dbg !1064
  br label %79, !dbg !1064

79:                                               ; preds = %68, %65
  %80 = load i32, i32* @exit_code, align 4, !dbg !1069
  %81 = icmp eq i32 %80, 0, !dbg !1069
  br i1 %81, label %82, label %83, !dbg !1068

82:                                               ; preds = %79
  store i32 2, i32* @exit_code, align 4, !dbg !1069
  br label %83, !dbg !1069

83:                                               ; preds = %82, %79
  br label %292, !dbg !1071

84:                                               ; preds = %62, %59, %56
  %85 = load i64, i64* getelementptr inbounds (%struct.stat, %struct.stat* @istat, i32 0, i32 8), align 8, !dbg !1072
  store i64 %85, i64* @ifile_size, align 8, !dbg !1073
  %86 = load i32, i32* @no_time, align 4, !dbg !1074
  %87 = icmp ne i32 %86, 0, !dbg !1074
  br i1 %87, label %88, label %92, !dbg !1075

88:                                               ; preds = %84
  %89 = load i32, i32* @list, align 4, !dbg !1076
  %90 = icmp ne i32 %89, 0, !dbg !1076
  br i1 %90, label %92, label %91, !dbg !1074

91:                                               ; preds = %88
  br label %94, !dbg !1074

92:                                               ; preds = %88, %84
  %93 = load i64, i64* getelementptr inbounds (%struct.stat, %struct.stat* @istat, i32 0, i32 12, i32 0), align 8, !dbg !1077
  br label %94, !dbg !1074

94:                                               ; preds = %92, %91
  %95 = phi i64 [ 0, %91 ], [ %93, %92 ], !dbg !1074
  store i64 %95, i64* @time_stamp, align 8, !dbg !1078
  %96 = load i32, i32* @to_stdout, align 4, !dbg !1079
  %97 = icmp ne i32 %96, 0, !dbg !1079
  br i1 %97, label %98, label %106, !dbg !1081

98:                                               ; preds = %94
  %99 = load i32, i32* @list, align 4, !dbg !1082
  %100 = icmp ne i32 %99, 0, !dbg !1082
  br i1 %100, label %106, label %101, !dbg !1083

101:                                              ; preds = %98
  %102 = load i32, i32* @test, align 4, !dbg !1084
  %103 = icmp ne i32 %102, 0, !dbg !1084
  br i1 %103, label %106, label %104, !dbg !1085

104:                                              ; preds = %101
  %105 = call i8* @strcpy(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0)) #10, !dbg !1086
  br label %111, !dbg !1088

106:                                              ; preds = %101, %98, %94
  %107 = call i32 @make_ofname(), !dbg !1089
  %108 = icmp ne i32 %107, 0, !dbg !1091
  br i1 %108, label %109, label %110, !dbg !1092

109:                                              ; preds = %106
  br label %292, !dbg !1093

110:                                              ; preds = %106
  br label %111

111:                                              ; preds = %110, %104
  %112 = load i32, i32* @ascii, align 4, !dbg !1095
  %113 = icmp ne i32 %112, 0, !dbg !1095
  br i1 %113, label %114, label %118, !dbg !1095

114:                                              ; preds = %111
  %115 = load i32, i32* @decompress, align 4, !dbg !1095
  %116 = icmp ne i32 %115, 0, !dbg !1095
  %117 = xor i1 %116, true, !dbg !1095
  br label %118

118:                                              ; preds = %114, %111
  %119 = phi i1 [ false, %111 ], [ %117, %114 ], !dbg !1096
  %120 = zext i1 %119 to i64, !dbg !1095
  %121 = select i1 %119, i32 0, i32 0, !dbg !1095
  %122 = call i32 (i8*, i32, ...) @open(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0), i32 noundef %121, i32 noundef 384), !dbg !1095
  store i32 %122, i32* @ifd, align 4, !dbg !1097
  %123 = load i32, i32* @ifd, align 4, !dbg !1098
  %124 = icmp eq i32 %123, -1, !dbg !1100
  br i1 %124, label %125, label %129, !dbg !1101

125:                                              ; preds = %118
  %126 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1102
  %127 = load i8*, i8** @progname, align 8, !dbg !1104
  %128 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %126, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.103, i64 0, i64 0), i8* noundef %127), !dbg !1105
  call void @perror(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0)), !dbg !1106
  store i32 1, i32* @exit_code, align 4, !dbg !1107
  br label %292, !dbg !1108

129:                                              ; preds = %118
  call void @clear_bufs(), !dbg !1109
  store i32 0, i32* @part_nb, align 4, !dbg !1110
  %130 = load i32, i32* @decompress, align 4, !dbg !1111
  %131 = icmp ne i32 %130, 0, !dbg !1111
  br i1 %131, label %132, label %141, !dbg !1113

132:                                              ; preds = %129
  %133 = load i32, i32* @ifd, align 4, !dbg !1114
  %134 = call i32 @get_method(i32 noundef %133), !dbg !1116
  store i32 %134, i32* @method, align 4, !dbg !1117
  %135 = load i32, i32* @method, align 4, !dbg !1118
  %136 = icmp slt i32 %135, 0, !dbg !1120
  br i1 %136, label %137, label %140, !dbg !1121

137:                                              ; preds = %132
  %138 = load i32, i32* @ifd, align 4, !dbg !1122
  %139 = call i32 @close(i32 noundef %138), !dbg !1124
  br label %292, !dbg !1125

140:                                              ; preds = %132
  br label %141, !dbg !1126

141:                                              ; preds = %140, %129
  %142 = load i32, i32* @list, align 4, !dbg !1127
  %143 = icmp ne i32 %142, 0, !dbg !1127
  br i1 %143, label %144, label %149, !dbg !1129

144:                                              ; preds = %141
  %145 = load i32, i32* @ifd, align 4, !dbg !1130
  %146 = load i32, i32* @method, align 4, !dbg !1132
  call void @do_list(i32 noundef %145, i32 noundef %146), !dbg !1133
  %147 = load i32, i32* @ifd, align 4, !dbg !1134
  %148 = call i32 @close(i32 noundef %147), !dbg !1135
  br label %292, !dbg !1136

149:                                              ; preds = %141
  %150 = load i32, i32* @to_stdout, align 4, !dbg !1137
  %151 = icmp ne i32 %150, 0, !dbg !1137
  br i1 %151, label %152, label %155, !dbg !1139

152:                                              ; preds = %149
  %153 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1140
  %154 = call i32 @fileno(%struct._IO_FILE* noundef %153) #10, !dbg !1142
  store i32 %154, i32* @ofd, align 4, !dbg !1143
  br label %176, !dbg !1144

155:                                              ; preds = %149
  %156 = call i32 @create_outfile(), !dbg !1145
  %157 = icmp ne i32 %156, 0, !dbg !1148
  br i1 %157, label %158, label %159, !dbg !1149

158:                                              ; preds = %155
  br label %292, !dbg !1150

159:                                              ; preds = %155
  %160 = load i32, i32* @decompress, align 4, !dbg !1151
  %161 = icmp ne i32 %160, 0, !dbg !1151
  br i1 %161, label %175, label %162, !dbg !1153

162:                                              ; preds = %159
  %163 = load i32, i32* @save_orig_name, align 4, !dbg !1154
  %164 = icmp ne i32 %163, 0, !dbg !1154
  br i1 %164, label %165, label %175, !dbg !1155

165:                                              ; preds = %162
  %166 = load i32, i32* @verbose, align 4, !dbg !1156
  %167 = icmp ne i32 %166, 0, !dbg !1156
  br i1 %167, label %175, label %168, !dbg !1157

168:                                              ; preds = %165
  %169 = load i32, i32* @quiet, align 4, !dbg !1158
  %170 = icmp ne i32 %169, 0, !dbg !1158
  br i1 %170, label %175, label %171, !dbg !1159

171:                                              ; preds = %168
  %172 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1160
  %173 = load i8*, i8** @progname, align 8, !dbg !1162
  %174 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %172, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.104, i64 0, i64 0), i8* noundef %173, i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0), i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i64 0, i64 0)), !dbg !1163
  br label %175, !dbg !1164

175:                                              ; preds = %171, %168, %165, %162, %159
  br label %176

176:                                              ; preds = %175, %152
  %177 = load i32, i32* @save_orig_name, align 4, !dbg !1165
  %178 = icmp ne i32 %177, 0, !dbg !1165
  br i1 %178, label %184, label %179, !dbg !1167

179:                                              ; preds = %176
  %180 = load i32, i32* @no_name, align 4, !dbg !1168
  %181 = icmp ne i32 %180, 0, !dbg !1169
  %182 = xor i1 %181, true, !dbg !1169
  %183 = zext i1 %182 to i32, !dbg !1169
  store i32 %183, i32* @save_orig_name, align 4, !dbg !1170
  br label %184, !dbg !1171

184:                                              ; preds = %179, %176
  %185 = load i32, i32* @verbose, align 4, !dbg !1172
  %186 = icmp ne i32 %185, 0, !dbg !1172
  br i1 %186, label %187, label %202, !dbg !1174

187:                                              ; preds = %184
  %188 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1175
  %189 = call i64 @strlen(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0)) #9, !dbg !1177
  %190 = trunc i64 %189 to i32, !dbg !1178
  %191 = icmp sge i32 %190, 15, !dbg !1179
  br i1 %191, label %192, label %193, !dbg !1178

192:                                              ; preds = %187
  br label %199, !dbg !1178

193:                                              ; preds = %187
  %194 = call i64 @strlen(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0)) #9, !dbg !1180
  %195 = trunc i64 %194 to i32, !dbg !1181
  %196 = icmp sge i32 %195, 7, !dbg !1182
  %197 = zext i1 %196 to i64, !dbg !1181
  %198 = select i1 %196, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.106, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.107, i64 0, i64 0), !dbg !1181
  br label %199, !dbg !1178

199:                                              ; preds = %193, %192
  %200 = phi i8* [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.60, i64 0, i64 0), %192 ], [ %198, %193 ], !dbg !1178
  %201 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %188, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.105, i64 0, i64 0), i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0), i8* noundef %200), !dbg !1183
  br label %202, !dbg !1184

202:                                              ; preds = %199, %184
  br label %203, !dbg !1185

203:                                              ; preds = %227, %202
  %204 = load i32 (i32, i32)*, i32 (i32, i32)** @work, align 8, !dbg !1186
  %205 = load i32, i32* @ifd, align 4, !dbg !1191
  %206 = load i32, i32* @ofd, align 4, !dbg !1192
  %207 = call i32 %204(i32 noundef %205, i32 noundef %206), !dbg !1193
  %208 = icmp ne i32 %207, 0, !dbg !1194
  br i1 %208, label %209, label %210, !dbg !1195

209:                                              ; preds = %203
  store i32 -1, i32* @method, align 4, !dbg !1196
  br label %228, !dbg !1198

210:                                              ; preds = %203
  %211 = load i32, i32* @decompress, align 4, !dbg !1199
  %212 = icmp ne i32 %211, 0, !dbg !1199
  br i1 %212, label %213, label %220, !dbg !1201

213:                                              ; preds = %210
  %214 = load i32, i32* @last_member, align 4, !dbg !1202
  %215 = icmp ne i32 %214, 0, !dbg !1202
  br i1 %215, label %220, label %216, !dbg !1203

216:                                              ; preds = %213
  %217 = load i32, i32* @inptr, align 4, !dbg !1204
  %218 = load i32, i32* @insize, align 4, !dbg !1205
  %219 = icmp eq i32 %217, %218, !dbg !1206
  br i1 %219, label %220, label %221, !dbg !1207

220:                                              ; preds = %216, %213, %210
  br label %228, !dbg !1208

221:                                              ; preds = %216
  %222 = load i32, i32* @ifd, align 4, !dbg !1209
  %223 = call i32 @get_method(i32 noundef %222), !dbg !1210
  store i32 %223, i32* @method, align 4, !dbg !1211
  %224 = load i32, i32* @method, align 4, !dbg !1212
  %225 = icmp slt i32 %224, 0, !dbg !1214
  br i1 %225, label %226, label %227, !dbg !1215

226:                                              ; preds = %221
  br label %228, !dbg !1216

227:                                              ; preds = %221
  store i64 0, i64* @bytes_out, align 8, !dbg !1217
  br label %203, !dbg !1218, !llvm.loop !1219

228:                                              ; preds = %226, %220, %209
  %229 = load i32, i32* @ifd, align 4, !dbg !1222
  %230 = call i32 @close(i32 noundef %229), !dbg !1223
  %231 = load i32, i32* @to_stdout, align 4, !dbg !1224
  %232 = icmp ne i32 %231, 0, !dbg !1224
  br i1 %232, label %238, label %233, !dbg !1226

233:                                              ; preds = %228
  %234 = load i32, i32* @ofd, align 4, !dbg !1227
  %235 = call i32 @close(i32 noundef %234), !dbg !1228
  %236 = icmp ne i32 %235, 0, !dbg !1228
  br i1 %236, label %237, label %238, !dbg !1229

237:                                              ; preds = %233
  call void @write_error(), !dbg !1230
  br label %238, !dbg !1232

238:                                              ; preds = %237, %233, %228
  %239 = load i32, i32* @method, align 4, !dbg !1233
  %240 = icmp eq i32 %239, -1, !dbg !1235
  br i1 %240, label %241, label %247, !dbg !1236

241:                                              ; preds = %238
  %242 = load i32, i32* @to_stdout, align 4, !dbg !1237
  %243 = icmp ne i32 %242, 0, !dbg !1237
  br i1 %243, label %246, label %244, !dbg !1240

244:                                              ; preds = %241
  %245 = call i32 @unlink(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i64 0, i64 0)) #10, !dbg !1241
  br label %246, !dbg !1241

246:                                              ; preds = %244, %241
  br label %292, !dbg !1242

247:                                              ; preds = %238
  %248 = load i32, i32* @verbose, align 4, !dbg !1243
  %249 = icmp ne i32 %248, 0, !dbg !1243
  br i1 %249, label %250, label %288, !dbg !1245

250:                                              ; preds = %247
  %251 = load i32, i32* @test, align 4, !dbg !1246
  %252 = icmp ne i32 %251, 0, !dbg !1246
  br i1 %252, label %253, label %256, !dbg !1249

253:                                              ; preds = %250
  %254 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1250
  %255 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %254, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.108, i64 0, i64 0)), !dbg !1252
  br label %276, !dbg !1253

256:                                              ; preds = %250
  %257 = load i32, i32* @decompress, align 4, !dbg !1254
  %258 = icmp ne i32 %257, 0, !dbg !1254
  br i1 %258, label %259, label %267, !dbg !1256

259:                                              ; preds = %256
  %260 = load i64, i64* @bytes_out, align 8, !dbg !1257
  %261 = load i64, i64* @bytes_in, align 8, !dbg !1259
  %262 = load i64, i64* @header_bytes, align 8, !dbg !1260
  %263 = sub nsw i64 %261, %262, !dbg !1261
  %264 = sub nsw i64 %260, %263, !dbg !1262
  %265 = load i64, i64* @bytes_out, align 8, !dbg !1263
  %266 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1264
  call void @display_ratio(i64 noundef %264, i64 noundef %265, %struct._IO_FILE* noundef %266), !dbg !1265
  br label %275, !dbg !1266

267:                                              ; preds = %256
  %268 = load i64, i64* @bytes_in, align 8, !dbg !1267
  %269 = load i64, i64* @bytes_out, align 8, !dbg !1269
  %270 = load i64, i64* @header_bytes, align 8, !dbg !1270
  %271 = sub nsw i64 %269, %270, !dbg !1271
  %272 = sub nsw i64 %268, %271, !dbg !1272
  %273 = load i64, i64* @bytes_in, align 8, !dbg !1273
  %274 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1274
  call void @display_ratio(i64 noundef %272, i64 noundef %273, %struct._IO_FILE* noundef %274), !dbg !1275
  br label %275

275:                                              ; preds = %267, %259
  br label %276

276:                                              ; preds = %275, %253
  %277 = load i32, i32* @test, align 4, !dbg !1276
  %278 = icmp ne i32 %277, 0, !dbg !1276
  br i1 %278, label %285, label %279, !dbg !1278

279:                                              ; preds = %276
  %280 = load i32, i32* @to_stdout, align 4, !dbg !1279
  %281 = icmp ne i32 %280, 0, !dbg !1279
  br i1 %281, label %285, label %282, !dbg !1280

282:                                              ; preds = %279
  %283 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1281
  %284 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %283, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.109, i64 0, i64 0), i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i64 0, i64 0)), !dbg !1283
  br label %285, !dbg !1284

285:                                              ; preds = %282, %279, %276
  %286 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1285
  %287 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %286, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.73, i64 0, i64 0)), !dbg !1286
  br label %288, !dbg !1287

288:                                              ; preds = %285, %247
  %289 = load i32, i32* @to_stdout, align 4, !dbg !1288
  %290 = icmp ne i32 %289, 0, !dbg !1288
  br i1 %290, label %292, label %291, !dbg !1290

291:                                              ; preds = %288
  call void @copy_stat(%struct.stat* noundef @istat), !dbg !1291
  br label %292, !dbg !1293

292:                                              ; preds = %8, %15, %39, %55, %83, %109, %125, %137, %144, %158, %246, %291, %288
  ret void, !dbg !1294
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @treat_stdin() #0 !dbg !1295 {
  %1 = load i32, i32* @force, align 4, !dbg !1296
  %2 = icmp ne i32 %1, 0, !dbg !1296
  br i1 %2, label %33, label %3, !dbg !1298

3:                                                ; preds = %0
  %4 = load i32, i32* @list, align 4, !dbg !1299
  %5 = icmp ne i32 %4, 0, !dbg !1299
  br i1 %5, label %33, label %6, !dbg !1300

6:                                                ; preds = %3
  %7 = load i32, i32* @decompress, align 4, !dbg !1301
  %8 = icmp ne i32 %7, 0, !dbg !1301
  br i1 %8, label %9, label %11, !dbg !1301

9:                                                ; preds = %6
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !1302
  br label %13, !dbg !1301

11:                                               ; preds = %6
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1303
  br label %13, !dbg !1301

13:                                               ; preds = %11, %9
  %14 = phi %struct._IO_FILE* [ %10, %9 ], [ %12, %11 ], !dbg !1301
  %15 = call i32 @fileno(%struct._IO_FILE* noundef %14) #10, !dbg !1304
  %16 = call i32 @isatty(i32 noundef %15) #10, !dbg !1305
  %17 = icmp ne i32 %16, 0, !dbg !1305
  br i1 %17, label %18, label %33, !dbg !1306

18:                                               ; preds = %13
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1307
  %20 = load i8*, i8** @progname, align 8, !dbg !1309
  %21 = load i32, i32* @decompress, align 4, !dbg !1310
  %22 = icmp ne i32 %21, 0, !dbg !1310
  %23 = zext i1 %22 to i64, !dbg !1310
  %24 = select i1 %22, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.77, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.78, i64 0, i64 0), !dbg !1310
  %25 = load i32, i32* @decompress, align 4, !dbg !1311
  %26 = icmp ne i32 %25, 0, !dbg !1311
  %27 = zext i1 %26 to i64, !dbg !1311
  %28 = select i1 %26, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.79, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.60, i64 0, i64 0), !dbg !1311
  %29 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %19, i8* noundef getelementptr inbounds ([71 x i8], [71 x i8]* @.str.76, i64 0, i64 0), i8* noundef %20, i8* noundef %24, i8* noundef %28), !dbg !1312
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1313
  %31 = load i8*, i8** @progname, align 8, !dbg !1314
  %32 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %30, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.80, i64 0, i64 0), i8* noundef %31), !dbg !1315
  call void @do_exit(i32 noundef 1), !dbg !1316
  br label %33, !dbg !1317

33:                                               ; preds = %18, %13, %3, %0
  %34 = load i32, i32* @decompress, align 4, !dbg !1318
  %35 = icmp ne i32 %34, 0, !dbg !1318
  br i1 %35, label %39, label %36, !dbg !1320

36:                                               ; preds = %33
  %37 = load i32, i32* @ascii, align 4, !dbg !1321
  %38 = icmp ne i32 %37, 0, !dbg !1321
  br i1 %38, label %40, label %39, !dbg !1322

39:                                               ; preds = %36, %33
  br label %40, !dbg !1323

40:                                               ; preds = %39, %36
  %41 = load i32, i32* @test, align 4, !dbg !1325
  %42 = icmp ne i32 %41, 0, !dbg !1325
  br i1 %42, label %53, label %43, !dbg !1327

43:                                               ; preds = %40
  %44 = load i32, i32* @list, align 4, !dbg !1328
  %45 = icmp ne i32 %44, 0, !dbg !1328
  br i1 %45, label %53, label %46, !dbg !1329

46:                                               ; preds = %43
  %47 = load i32, i32* @decompress, align 4, !dbg !1330
  %48 = icmp ne i32 %47, 0, !dbg !1330
  br i1 %48, label %49, label %52, !dbg !1331

49:                                               ; preds = %46
  %50 = load i32, i32* @ascii, align 4, !dbg !1332
  %51 = icmp ne i32 %50, 0, !dbg !1332
  br i1 %51, label %53, label %52, !dbg !1333

52:                                               ; preds = %49, %46
  br label %53, !dbg !1334

53:                                               ; preds = %52, %49, %43, %40
  %54 = call i8* @strcpy(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0), i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.81, i64 0, i64 0)) #10, !dbg !1336
  %55 = call i8* @strcpy(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0)) #10, !dbg !1337
  store i64 0, i64* @time_stamp, align 8, !dbg !1338
  %56 = load i32, i32* @list, align 4, !dbg !1339
  %57 = icmp ne i32 %56, 0, !dbg !1339
  br i1 %57, label %61, label %58, !dbg !1341

58:                                               ; preds = %53
  %59 = load i32, i32* @no_time, align 4, !dbg !1342
  %60 = icmp ne i32 %59, 0, !dbg !1342
  br i1 %60, label %69, label %61, !dbg !1343

61:                                               ; preds = %58, %53
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !1344
  %63 = call i32 @fileno(%struct._IO_FILE* noundef %62) #10, !dbg !1347
  %64 = call i32 @fstat(i32 noundef %63, %struct.stat* noundef @istat) #10, !dbg !1348
  %65 = icmp ne i32 %64, 0, !dbg !1349
  br i1 %65, label %66, label %67, !dbg !1350

66:                                               ; preds = %61
  call void @error(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.82, i64 0, i64 0)), !dbg !1351
  br label %67, !dbg !1353

67:                                               ; preds = %66, %61
  %68 = load i64, i64* getelementptr inbounds (%struct.stat, %struct.stat* @istat, i32 0, i32 12, i32 0), align 8, !dbg !1354
  store i64 %68, i64* @time_stamp, align 8, !dbg !1355
  br label %69, !dbg !1356

69:                                               ; preds = %67, %58
  store i64 -1, i64* @ifile_size, align 8, !dbg !1357
  call void @clear_bufs(), !dbg !1358
  store i32 1, i32* @to_stdout, align 4, !dbg !1359
  store i32 0, i32* @part_nb, align 4, !dbg !1360
  %70 = load i32, i32* @decompress, align 4, !dbg !1361
  %71 = icmp ne i32 %70, 0, !dbg !1361
  br i1 %71, label %72, label %80, !dbg !1363

72:                                               ; preds = %69
  %73 = load i32, i32* @ifd, align 4, !dbg !1364
  %74 = call i32 @get_method(i32 noundef %73), !dbg !1366
  store i32 %74, i32* @method, align 4, !dbg !1367
  %75 = load i32, i32* @method, align 4, !dbg !1368
  %76 = icmp slt i32 %75, 0, !dbg !1370
  br i1 %76, label %77, label %79, !dbg !1371

77:                                               ; preds = %72
  %78 = load i32, i32* @exit_code, align 4, !dbg !1372
  call void @do_exit(i32 noundef %78), !dbg !1374
  br label %79, !dbg !1375

79:                                               ; preds = %77, %72
  br label %80, !dbg !1376

80:                                               ; preds = %79, %69
  %81 = load i32, i32* @list, align 4, !dbg !1377
  %82 = icmp ne i32 %81, 0, !dbg !1377
  br i1 %82, label %83, label %86, !dbg !1379

83:                                               ; preds = %80
  %84 = load i32, i32* @ifd, align 4, !dbg !1380
  %85 = load i32, i32* @method, align 4, !dbg !1382
  call void @do_list(i32 noundef %84, i32 noundef %85), !dbg !1383
  br label %138, !dbg !1384

86:                                               ; preds = %80
  br label %87, !dbg !1385

87:                                               ; preds = %113, %86
  %88 = load i32 (i32, i32)*, i32 (i32, i32)** @work, align 8, !dbg !1386
  %89 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !1391
  %90 = call i32 @fileno(%struct._IO_FILE* noundef %89) #10, !dbg !1392
  %91 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1393
  %92 = call i32 @fileno(%struct._IO_FILE* noundef %91) #10, !dbg !1394
  %93 = call i32 %88(i32 noundef %90, i32 noundef %92), !dbg !1395
  %94 = icmp ne i32 %93, 0, !dbg !1396
  br i1 %94, label %95, label %96, !dbg !1397

95:                                               ; preds = %87
  br label %138, !dbg !1398

96:                                               ; preds = %87
  %97 = load i32, i32* @decompress, align 4, !dbg !1399
  %98 = icmp ne i32 %97, 0, !dbg !1399
  br i1 %98, label %99, label %106, !dbg !1401

99:                                               ; preds = %96
  %100 = load i32, i32* @last_member, align 4, !dbg !1402
  %101 = icmp ne i32 %100, 0, !dbg !1402
  br i1 %101, label %106, label %102, !dbg !1403

102:                                              ; preds = %99
  %103 = load i32, i32* @inptr, align 4, !dbg !1404
  %104 = load i32, i32* @insize, align 4, !dbg !1405
  %105 = icmp eq i32 %103, %104, !dbg !1406
  br i1 %105, label %106, label %107, !dbg !1407

106:                                              ; preds = %102, %99, %96
  br label %114, !dbg !1408

107:                                              ; preds = %102
  %108 = load i32, i32* @ifd, align 4, !dbg !1409
  %109 = call i32 @get_method(i32 noundef %108), !dbg !1410
  store i32 %109, i32* @method, align 4, !dbg !1411
  %110 = load i32, i32* @method, align 4, !dbg !1412
  %111 = icmp slt i32 %110, 0, !dbg !1414
  br i1 %111, label %112, label %113, !dbg !1415

112:                                              ; preds = %107
  br label %138, !dbg !1416

113:                                              ; preds = %107
  store i64 0, i64* @bytes_out, align 8, !dbg !1417
  br label %87, !dbg !1418, !llvm.loop !1419

114:                                              ; preds = %106
  %115 = load i32, i32* @verbose, align 4, !dbg !1422
  %116 = icmp ne i32 %115, 0, !dbg !1422
  br i1 %116, label %117, label %138, !dbg !1424

117:                                              ; preds = %114
  %118 = load i32, i32* @test, align 4, !dbg !1425
  %119 = icmp ne i32 %118, 0, !dbg !1425
  br i1 %119, label %120, label %123, !dbg !1428

120:                                              ; preds = %117
  %121 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1429
  %122 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %121, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.83, i64 0, i64 0)), !dbg !1431
  br label %137, !dbg !1432

123:                                              ; preds = %117
  %124 = load i32, i32* @decompress, align 4, !dbg !1433
  %125 = icmp ne i32 %124, 0, !dbg !1433
  br i1 %125, label %136, label %126, !dbg !1435

126:                                              ; preds = %123
  %127 = load i64, i64* @bytes_in, align 8, !dbg !1436
  %128 = load i64, i64* @bytes_out, align 8, !dbg !1438
  %129 = load i64, i64* @header_bytes, align 8, !dbg !1439
  %130 = sub nsw i64 %128, %129, !dbg !1440
  %131 = sub nsw i64 %127, %130, !dbg !1441
  %132 = load i64, i64* @bytes_in, align 8, !dbg !1442
  %133 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1443
  call void @display_ratio(i64 noundef %131, i64 noundef %132, %struct._IO_FILE* noundef %133), !dbg !1444
  %134 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1445
  %135 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %134, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.73, i64 0, i64 0)), !dbg !1446
  br label %136, !dbg !1447

136:                                              ; preds = %126, %123
  br label %137

137:                                              ; preds = %136, %120
  br label %138, !dbg !1448

138:                                              ; preds = %83, %95, %112, %137, %114
  ret void, !dbg !1449
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @do_list(i32 noundef %0, i32 noundef %1) #0 !dbg !299 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca [8 x i8], align 1
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !1450, metadata !DIExpression()), !dbg !1451
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !1452, metadata !DIExpression()), !dbg !1453
  call void @llvm.dbg.declare(metadata i64* %5, metadata !1454, metadata !DIExpression()), !dbg !1455
  call void @llvm.dbg.declare(metadata i8** %6, metadata !1456, metadata !DIExpression()), !dbg !1457
  %8 = load i32, i32* @do_list.first_time, align 4, !dbg !1458
  %9 = icmp ne i32 %8, 0, !dbg !1458
  br i1 %9, label %10, label %24, !dbg !1460

10:                                               ; preds = %2
  %11 = load i32, i32* %4, align 4, !dbg !1461
  %12 = icmp sge i32 %11, 0, !dbg !1462
  br i1 %12, label %13, label %24, !dbg !1463

13:                                               ; preds = %10
  store i32 0, i32* @do_list.first_time, align 4, !dbg !1464
  %14 = load i32, i32* @verbose, align 4, !dbg !1466
  %15 = icmp ne i32 %14, 0, !dbg !1466
  br i1 %15, label %16, label %18, !dbg !1468

16:                                               ; preds = %13
  %17 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.141, i64 0, i64 0)), !dbg !1469
  br label %18, !dbg !1471

18:                                               ; preds = %16, %13
  %19 = load i32, i32* @quiet, align 4, !dbg !1472
  %20 = icmp ne i32 %19, 0, !dbg !1472
  br i1 %20, label %23, label %21, !dbg !1474

21:                                               ; preds = %18
  %22 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.142, i64 0, i64 0)), !dbg !1475
  br label %23, !dbg !1477

23:                                               ; preds = %21, %18
  br label %59, !dbg !1478

24:                                               ; preds = %10, %2
  %25 = load i32, i32* %4, align 4, !dbg !1479
  %26 = icmp slt i32 %25, 0, !dbg !1481
  br i1 %26, label %27, label %58, !dbg !1482

27:                                               ; preds = %24
  %28 = load i64, i64* @total_in, align 8, !dbg !1483
  %29 = icmp sle i64 %28, 0, !dbg !1486
  br i1 %29, label %33, label %30, !dbg !1487

30:                                               ; preds = %27
  %31 = load i64, i64* @total_out, align 8, !dbg !1488
  %32 = icmp sle i64 %31, 0, !dbg !1489
  br i1 %32, label %33, label %34, !dbg !1490

33:                                               ; preds = %30, %27
  br label %194, !dbg !1491

34:                                               ; preds = %30
  %35 = load i32, i32* @verbose, align 4, !dbg !1492
  %36 = icmp ne i32 %35, 0, !dbg !1492
  br i1 %36, label %37, label %41, !dbg !1494

37:                                               ; preds = %34
  %38 = load i64, i64* @total_in, align 8, !dbg !1495
  %39 = load i64, i64* @total_out, align 8, !dbg !1497
  %40 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.143, i64 0, i64 0), i64 noundef %38, i64 noundef %39), !dbg !1498
  br label %49, !dbg !1499

41:                                               ; preds = %34
  %42 = load i32, i32* @quiet, align 4, !dbg !1500
  %43 = icmp ne i32 %42, 0, !dbg !1500
  br i1 %43, label %48, label %44, !dbg !1502

44:                                               ; preds = %41
  %45 = load i64, i64* @total_in, align 8, !dbg !1503
  %46 = load i64, i64* @total_out, align 8, !dbg !1505
  %47 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.144, i64 0, i64 0), i64 noundef %45, i64 noundef %46), !dbg !1506
  br label %48, !dbg !1507

48:                                               ; preds = %44, %41
  br label %49

49:                                               ; preds = %48, %37
  %50 = load i64, i64* @total_out, align 8, !dbg !1508
  %51 = load i64, i64* @total_in, align 8, !dbg !1509
  %52 = load i64, i64* @header_bytes, align 8, !dbg !1510
  %53 = sub nsw i64 %51, %52, !dbg !1511
  %54 = sub nsw i64 %50, %53, !dbg !1512
  %55 = load i64, i64* @total_out, align 8, !dbg !1513
  %56 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1514
  call void @display_ratio(i64 noundef %54, i64 noundef %55, %struct._IO_FILE* noundef %56), !dbg !1515
  %57 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.145, i64 0, i64 0)), !dbg !1516
  br label %194, !dbg !1517

58:                                               ; preds = %24
  br label %59

59:                                               ; preds = %58, %23
  store i64 -1, i64* %5, align 8, !dbg !1518
  store i64 -1, i64* @bytes_out, align 8, !dbg !1519
  %60 = load i64, i64* @ifile_size, align 8, !dbg !1520
  store i64 %60, i64* @bytes_in, align 8, !dbg !1521
  %61 = load i32, i32* %4, align 4, !dbg !1522
  %62 = icmp eq i32 %61, 8, !dbg !1524
  br i1 %62, label %63, label %143, !dbg !1525

63:                                               ; preds = %59
  %64 = load i32, i32* @last_member, align 4, !dbg !1526
  %65 = icmp ne i32 %64, 0, !dbg !1526
  br i1 %65, label %143, label %66, !dbg !1527

66:                                               ; preds = %63
  %67 = load i32, i32* %3, align 4, !dbg !1528
  %68 = call i64 @lseek(i32 noundef %67, i64 noundef -8, i32 noundef 2) #10, !dbg !1530
  store i64 %68, i64* @bytes_in, align 8, !dbg !1531
  %69 = load i64, i64* @bytes_in, align 8, !dbg !1532
  %70 = icmp ne i64 %69, -1, !dbg !1534
  br i1 %70, label %71, label %142, !dbg !1535

71:                                               ; preds = %66
  call void @llvm.dbg.declare(metadata [8 x i8]* %7, metadata !1536, metadata !DIExpression()), !dbg !1541
  %72 = load i64, i64* @bytes_in, align 8, !dbg !1542
  %73 = add nsw i64 %72, 8, !dbg !1542
  store i64 %73, i64* @bytes_in, align 8, !dbg !1542
  %74 = load i32, i32* %3, align 4, !dbg !1543
  %75 = getelementptr inbounds [8 x i8], [8 x i8]* %7, i64 0, i64 0, !dbg !1545
  %76 = call i64 @read(i32 noundef %74, i8* noundef %75, i64 noundef 8), !dbg !1546
  %77 = icmp ne i64 %76, 8, !dbg !1547
  br i1 %77, label %78, label %79, !dbg !1548

78:                                               ; preds = %71
  call void @read_error(), !dbg !1549
  br label %79, !dbg !1551

79:                                               ; preds = %78, %71
  %80 = getelementptr inbounds [8 x i8], [8 x i8]* %7, i64 0, i64 0, !dbg !1552
  %81 = load i8, i8* %80, align 1, !dbg !1552
  %82 = zext i8 %81 to i16, !dbg !1552
  %83 = zext i16 %82 to i32, !dbg !1552
  %84 = getelementptr inbounds [8 x i8], [8 x i8]* %7, i64 0, i64 1, !dbg !1552
  %85 = load i8, i8* %84, align 1, !dbg !1552
  %86 = zext i8 %85 to i16, !dbg !1552
  %87 = zext i16 %86 to i32, !dbg !1552
  %88 = shl i32 %87, 8, !dbg !1552
  %89 = or i32 %83, %88, !dbg !1552
  %90 = sext i32 %89 to i64, !dbg !1552
  %91 = getelementptr inbounds [8 x i8], [8 x i8]* %7, i64 0, i64 0, !dbg !1552
  %92 = getelementptr inbounds i8, i8* %91, i64 2, !dbg !1552
  %93 = getelementptr inbounds i8, i8* %92, i64 0, !dbg !1552
  %94 = load i8, i8* %93, align 1, !dbg !1552
  %95 = zext i8 %94 to i16, !dbg !1552
  %96 = zext i16 %95 to i32, !dbg !1552
  %97 = getelementptr inbounds [8 x i8], [8 x i8]* %7, i64 0, i64 0, !dbg !1552
  %98 = getelementptr inbounds i8, i8* %97, i64 2, !dbg !1552
  %99 = getelementptr inbounds i8, i8* %98, i64 1, !dbg !1552
  %100 = load i8, i8* %99, align 1, !dbg !1552
  %101 = zext i8 %100 to i16, !dbg !1552
  %102 = zext i16 %101 to i32, !dbg !1552
  %103 = shl i32 %102, 8, !dbg !1552
  %104 = or i32 %96, %103, !dbg !1552
  %105 = sext i32 %104 to i64, !dbg !1552
  %106 = shl i64 %105, 16, !dbg !1552
  %107 = or i64 %90, %106, !dbg !1552
  store i64 %107, i64* %5, align 8, !dbg !1553
  %108 = getelementptr inbounds [8 x i8], [8 x i8]* %7, i64 0, i64 0, !dbg !1554
  %109 = getelementptr inbounds i8, i8* %108, i64 4, !dbg !1554
  %110 = getelementptr inbounds i8, i8* %109, i64 0, !dbg !1554
  %111 = load i8, i8* %110, align 1, !dbg !1554
  %112 = zext i8 %111 to i16, !dbg !1554
  %113 = zext i16 %112 to i32, !dbg !1554
  %114 = getelementptr inbounds [8 x i8], [8 x i8]* %7, i64 0, i64 0, !dbg !1554
  %115 = getelementptr inbounds i8, i8* %114, i64 4, !dbg !1554
  %116 = getelementptr inbounds i8, i8* %115, i64 1, !dbg !1554
  %117 = load i8, i8* %116, align 1, !dbg !1554
  %118 = zext i8 %117 to i16, !dbg !1554
  %119 = zext i16 %118 to i32, !dbg !1554
  %120 = shl i32 %119, 8, !dbg !1554
  %121 = or i32 %113, %120, !dbg !1554
  %122 = sext i32 %121 to i64, !dbg !1554
  %123 = getelementptr inbounds [8 x i8], [8 x i8]* %7, i64 0, i64 0, !dbg !1554
  %124 = getelementptr inbounds i8, i8* %123, i64 4, !dbg !1554
  %125 = getelementptr inbounds i8, i8* %124, i64 2, !dbg !1554
  %126 = getelementptr inbounds i8, i8* %125, i64 0, !dbg !1554
  %127 = load i8, i8* %126, align 1, !dbg !1554
  %128 = zext i8 %127 to i16, !dbg !1554
  %129 = zext i16 %128 to i32, !dbg !1554
  %130 = getelementptr inbounds [8 x i8], [8 x i8]* %7, i64 0, i64 0, !dbg !1554
  %131 = getelementptr inbounds i8, i8* %130, i64 4, !dbg !1554
  %132 = getelementptr inbounds i8, i8* %131, i64 2, !dbg !1554
  %133 = getelementptr inbounds i8, i8* %132, i64 1, !dbg !1554
  %134 = load i8, i8* %133, align 1, !dbg !1554
  %135 = zext i8 %134 to i16, !dbg !1554
  %136 = zext i16 %135 to i32, !dbg !1554
  %137 = shl i32 %136, 8, !dbg !1554
  %138 = or i32 %129, %137, !dbg !1554
  %139 = sext i32 %138 to i64, !dbg !1554
  %140 = shl i64 %139, 16, !dbg !1554
  %141 = or i64 %122, %140, !dbg !1554
  store i64 %141, i64* @bytes_out, align 8, !dbg !1555
  br label %142, !dbg !1556

142:                                              ; preds = %79, %66
  br label %143, !dbg !1557

143:                                              ; preds = %142, %63, %59
  %144 = call i8* @ctime(i64* noundef @time_stamp) #10, !dbg !1558
  %145 = getelementptr inbounds i8, i8* %144, i64 4, !dbg !1559
  store i8* %145, i8** %6, align 8, !dbg !1560
  %146 = load i8*, i8** %6, align 8, !dbg !1561
  %147 = getelementptr inbounds i8, i8* %146, i64 12, !dbg !1561
  store i8 0, i8* %147, align 1, !dbg !1562
  %148 = load i32, i32* @verbose, align 4, !dbg !1563
  %149 = icmp ne i32 %148, 0, !dbg !1563
  br i1 %149, label %150, label %158, !dbg !1565

150:                                              ; preds = %143
  %151 = load i32, i32* %4, align 4, !dbg !1566
  %152 = sext i32 %151 to i64, !dbg !1568
  %153 = getelementptr inbounds [9 x i8*], [9 x i8*]* @do_list.methods, i64 0, i64 %152, !dbg !1568
  %154 = load i8*, i8** %153, align 8, !dbg !1568
  %155 = load i64, i64* %5, align 8, !dbg !1569
  %156 = load i8*, i8** %6, align 8, !dbg !1570
  %157 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.146, i64 0, i64 0), i8* noundef %154, i64 noundef %155, i8* noundef %156), !dbg !1571
  br label %158, !dbg !1572

158:                                              ; preds = %150, %143
  %159 = load i64, i64* @bytes_in, align 8, !dbg !1573
  %160 = load i64, i64* @bytes_out, align 8, !dbg !1574
  %161 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.144, i64 0, i64 0), i64 noundef %159, i64 noundef %160), !dbg !1575
  %162 = load i64, i64* @bytes_in, align 8, !dbg !1576
  %163 = icmp eq i64 %162, -1, !dbg !1578
  br i1 %163, label %164, label %165, !dbg !1579

164:                                              ; preds = %158
  store i64 -1, i64* @total_in, align 8, !dbg !1580
  store i64 0, i64* @header_bytes, align 8, !dbg !1582
  store i64 0, i64* @bytes_out, align 8, !dbg !1583
  store i64 0, i64* @bytes_in, align 8, !dbg !1584
  br label %173, !dbg !1585

165:                                              ; preds = %158
  %166 = load i64, i64* @total_in, align 8, !dbg !1586
  %167 = icmp sge i64 %166, 0, !dbg !1588
  br i1 %167, label %168, label %172, !dbg !1589

168:                                              ; preds = %165
  %169 = load i64, i64* @bytes_in, align 8, !dbg !1590
  %170 = load i64, i64* @total_in, align 8, !dbg !1592
  %171 = add nsw i64 %170, %169, !dbg !1592
  store i64 %171, i64* @total_in, align 8, !dbg !1592
  br label %172, !dbg !1593

172:                                              ; preds = %168, %165
  br label %173

173:                                              ; preds = %172, %164
  %174 = load i64, i64* @bytes_out, align 8, !dbg !1594
  %175 = icmp eq i64 %174, -1, !dbg !1596
  br i1 %175, label %176, label %177, !dbg !1597

176:                                              ; preds = %173
  store i64 -1, i64* @total_out, align 8, !dbg !1598
  store i64 0, i64* @header_bytes, align 8, !dbg !1600
  store i64 0, i64* @bytes_out, align 8, !dbg !1601
  store i64 0, i64* @bytes_in, align 8, !dbg !1602
  br label %185, !dbg !1603

177:                                              ; preds = %173
  %178 = load i64, i64* @total_out, align 8, !dbg !1604
  %179 = icmp sge i64 %178, 0, !dbg !1606
  br i1 %179, label %180, label %184, !dbg !1607

180:                                              ; preds = %177
  %181 = load i64, i64* @bytes_out, align 8, !dbg !1608
  %182 = load i64, i64* @total_out, align 8, !dbg !1610
  %183 = add nsw i64 %182, %181, !dbg !1610
  store i64 %183, i64* @total_out, align 8, !dbg !1610
  br label %184, !dbg !1611

184:                                              ; preds = %180, %177
  br label %185

185:                                              ; preds = %184, %176
  %186 = load i64, i64* @bytes_out, align 8, !dbg !1612
  %187 = load i64, i64* @bytes_in, align 8, !dbg !1613
  %188 = load i64, i64* @header_bytes, align 8, !dbg !1614
  %189 = sub nsw i64 %187, %188, !dbg !1615
  %190 = sub nsw i64 %186, %189, !dbg !1616
  %191 = load i64, i64* @bytes_out, align 8, !dbg !1617
  %192 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1618
  call void @display_ratio(i64 noundef %190, i64 noundef %191, %struct._IO_FILE* noundef %192), !dbg !1619
  %193 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.147, i64 0, i64 0), i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i64 0, i64 0)), !dbg !1620
  br label %194, !dbg !1621

194:                                              ; preds = %185, %49, %33
  ret void, !dbg !1621
}

declare dso_local i32 @printf(i8* noundef, ...) #4

; Function Attrs: nounwind
declare dso_local i64 @lseek(i32 noundef, i64 noundef, i32 noundef) #3

declare dso_local i64 @read(i32 noundef, i8* noundef, i64 noundef) #4

; Function Attrs: nounwind
declare dso_local i8* @ctime(i64* noundef) #3

; Function Attrs: nounwind
declare dso_local i32 @fileno(%struct._IO_FILE* noundef) #3

; Function Attrs: nounwind
declare dso_local i32 @isatty(i32 noundef) #3

; Function Attrs: nounwind
declare dso_local i32 @fstat(i32 noundef, %struct.stat* noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @get_method(i32 noundef %0) #0 !dbg !1622 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i8, align 1
  %5 = alloca [2 x i8], align 1
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8, align 1
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !1625, metadata !DIExpression()), !dbg !1626
  call void @llvm.dbg.declare(metadata i8* %4, metadata !1627, metadata !DIExpression()), !dbg !1628
  call void @llvm.dbg.declare(metadata [2 x i8]* %5, metadata !1629, metadata !DIExpression()), !dbg !1633
  call void @llvm.dbg.declare(metadata i64* %6, metadata !1634, metadata !DIExpression()), !dbg !1635
  %12 = load i32, i32* @force, align 4, !dbg !1636
  %13 = icmp ne i32 %12, 0, !dbg !1636
  br i1 %13, label %14, label %50, !dbg !1638

14:                                               ; preds = %1
  %15 = load i32, i32* @to_stdout, align 4, !dbg !1639
  %16 = icmp ne i32 %15, 0, !dbg !1639
  br i1 %16, label %17, label %50, !dbg !1640

17:                                               ; preds = %14
  %18 = load i32, i32* @inptr, align 4, !dbg !1641
  %19 = load i32, i32* @insize, align 4, !dbg !1641
  %20 = icmp ult i32 %18, %19, !dbg !1641
  br i1 %20, label %21, label %28, !dbg !1641

21:                                               ; preds = %17
  %22 = load i32, i32* @inptr, align 4, !dbg !1641
  %23 = add i32 %22, 1, !dbg !1641
  store i32 %23, i32* @inptr, align 4, !dbg !1641
  %24 = zext i32 %22 to i64, !dbg !1641
  %25 = getelementptr inbounds [32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 %24, !dbg !1641
  %26 = load i8, i8* %25, align 1, !dbg !1641
  %27 = zext i8 %26 to i32, !dbg !1641
  br label %30, !dbg !1641

28:                                               ; preds = %17
  %29 = call i32 @fill_inbuf(i32 noundef 1), !dbg !1641
  br label %30, !dbg !1641

30:                                               ; preds = %28, %21
  %31 = phi i32 [ %27, %21 ], [ %29, %28 ], !dbg !1641
  %32 = trunc i32 %31 to i8, !dbg !1643
  %33 = getelementptr inbounds [2 x i8], [2 x i8]* %5, i64 0, i64 0, !dbg !1644
  store i8 %32, i8* %33, align 1, !dbg !1645
  %34 = load i32, i32* @inptr, align 4, !dbg !1646
  %35 = load i32, i32* @insize, align 4, !dbg !1646
  %36 = icmp ult i32 %34, %35, !dbg !1646
  br i1 %36, label %37, label %44, !dbg !1646

37:                                               ; preds = %30
  %38 = load i32, i32* @inptr, align 4, !dbg !1646
  %39 = add i32 %38, 1, !dbg !1646
  store i32 %39, i32* @inptr, align 4, !dbg !1646
  %40 = zext i32 %38 to i64, !dbg !1646
  %41 = getelementptr inbounds [32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 %40, !dbg !1646
  %42 = load i8, i8* %41, align 1, !dbg !1646
  %43 = zext i8 %42 to i32, !dbg !1646
  br label %46, !dbg !1646

44:                                               ; preds = %30
  %45 = call i32 @fill_inbuf(i32 noundef 1), !dbg !1646
  br label %46, !dbg !1646

46:                                               ; preds = %44, %37
  %47 = phi i32 [ %43, %37 ], [ %45, %44 ], !dbg !1646
  %48 = trunc i32 %47 to i8, !dbg !1647
  %49 = getelementptr inbounds [2 x i8], [2 x i8]* %5, i64 0, i64 1, !dbg !1648
  store i8 %48, i8* %49, align 1, !dbg !1649
  br label %83, !dbg !1650

50:                                               ; preds = %14, %1
  %51 = load i32, i32* @inptr, align 4, !dbg !1651
  %52 = load i32, i32* @insize, align 4, !dbg !1651
  %53 = icmp ult i32 %51, %52, !dbg !1651
  br i1 %53, label %54, label %61, !dbg !1651

54:                                               ; preds = %50
  %55 = load i32, i32* @inptr, align 4, !dbg !1651
  %56 = add i32 %55, 1, !dbg !1651
  store i32 %56, i32* @inptr, align 4, !dbg !1651
  %57 = zext i32 %55 to i64, !dbg !1651
  %58 = getelementptr inbounds [32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 %57, !dbg !1651
  %59 = load i8, i8* %58, align 1, !dbg !1651
  %60 = zext i8 %59 to i32, !dbg !1651
  br label %63, !dbg !1651

61:                                               ; preds = %50
  %62 = call i32 @fill_inbuf(i32 noundef 0), !dbg !1651
  br label %63, !dbg !1651

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %60, %54 ], [ %62, %61 ], !dbg !1651
  %65 = trunc i32 %64 to i8, !dbg !1653
  %66 = getelementptr inbounds [2 x i8], [2 x i8]* %5, i64 0, i64 0, !dbg !1654
  store i8 %65, i8* %66, align 1, !dbg !1655
  %67 = load i32, i32* @inptr, align 4, !dbg !1656
  %68 = load i32, i32* @insize, align 4, !dbg !1656
  %69 = icmp ult i32 %67, %68, !dbg !1656
  br i1 %69, label %70, label %77, !dbg !1656

70:                                               ; preds = %63
  %71 = load i32, i32* @inptr, align 4, !dbg !1656
  %72 = add i32 %71, 1, !dbg !1656
  store i32 %72, i32* @inptr, align 4, !dbg !1656
  %73 = zext i32 %71 to i64, !dbg !1656
  %74 = getelementptr inbounds [32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 %73, !dbg !1656
  %75 = load i8, i8* %74, align 1, !dbg !1656
  %76 = zext i8 %75 to i32, !dbg !1656
  br label %79, !dbg !1656

77:                                               ; preds = %63
  %78 = call i32 @fill_inbuf(i32 noundef 0), !dbg !1656
  br label %79, !dbg !1656

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %76, %70 ], [ %78, %77 ], !dbg !1656
  %81 = trunc i32 %80 to i8, !dbg !1657
  %82 = getelementptr inbounds [2 x i8], [2 x i8]* %5, i64 0, i64 1, !dbg !1658
  store i8 %81, i8* %82, align 1, !dbg !1659
  br label %83

83:                                               ; preds = %79, %46
  store i32 -1, i32* @method, align 4, !dbg !1660
  %84 = load i32, i32* @part_nb, align 4, !dbg !1661
  %85 = add nsw i32 %84, 1, !dbg !1661
  store i32 %85, i32* @part_nb, align 4, !dbg !1661
  store i64 0, i64* @header_bytes, align 8, !dbg !1662
  store i32 0, i32* @last_member, align 4, !dbg !1663
  %86 = getelementptr inbounds [2 x i8], [2 x i8]* %5, i64 0, i64 0, !dbg !1664
  %87 = call i32 @memcmp(i8* noundef %86, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.84, i64 0, i64 0), i64 noundef 2) #9, !dbg !1666
  %88 = icmp eq i32 %87, 0, !dbg !1667
  br i1 %88, label %93, label %89, !dbg !1668

89:                                               ; preds = %83
  %90 = getelementptr inbounds [2 x i8], [2 x i8]* %5, i64 0, i64 0, !dbg !1669
  %91 = call i32 @memcmp(i8* noundef %90, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.85, i64 0, i64 0), i64 noundef 2) #9, !dbg !1670
  %92 = icmp eq i32 %91, 0, !dbg !1671
  br i1 %92, label %93, label %494, !dbg !1672

93:                                               ; preds = %89, %83
  %94 = load i32, i32* @inptr, align 4, !dbg !1673
  %95 = load i32, i32* @insize, align 4, !dbg !1673
  %96 = icmp ult i32 %94, %95, !dbg !1673
  br i1 %96, label %97, label %104, !dbg !1673

97:                                               ; preds = %93
  %98 = load i32, i32* @inptr, align 4, !dbg !1673
  %99 = add i32 %98, 1, !dbg !1673
  store i32 %99, i32* @inptr, align 4, !dbg !1673
  %100 = zext i32 %98 to i64, !dbg !1673
  %101 = getelementptr inbounds [32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 %100, !dbg !1673
  %102 = load i8, i8* %101, align 1, !dbg !1673
  %103 = zext i8 %102 to i32, !dbg !1673
  br label %106, !dbg !1673

104:                                              ; preds = %93
  %105 = call i32 @fill_inbuf(i32 noundef 0), !dbg !1673
  br label %106, !dbg !1673

106:                                              ; preds = %104, %97
  %107 = phi i32 [ %103, %97 ], [ %105, %104 ], !dbg !1673
  store i32 %107, i32* @method, align 4, !dbg !1675
  %108 = load i32, i32* @method, align 4, !dbg !1676
  %109 = icmp ne i32 %108, 8, !dbg !1678
  br i1 %109, label %110, label %115, !dbg !1679

110:                                              ; preds = %106
  %111 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1680
  %112 = load i8*, i8** @progname, align 8, !dbg !1682
  %113 = load i32, i32* @method, align 4, !dbg !1683
  %114 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %111, i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.86, i64 0, i64 0), i8* noundef %112, i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0), i32 noundef %113), !dbg !1684
  store i32 1, i32* @exit_code, align 4, !dbg !1685
  store i32 -1, i32* %2, align 4, !dbg !1686
  br label %564, !dbg !1686

115:                                              ; preds = %106
  store i32 (i32, i32)* @unzip, i32 (i32, i32)** @work, align 8, !dbg !1687
  %116 = load i32, i32* @inptr, align 4, !dbg !1688
  %117 = load i32, i32* @insize, align 4, !dbg !1688
  %118 = icmp ult i32 %116, %117, !dbg !1688
  br i1 %118, label %119, label %126, !dbg !1688

119:                                              ; preds = %115
  %120 = load i32, i32* @inptr, align 4, !dbg !1688
  %121 = add i32 %120, 1, !dbg !1688
  store i32 %121, i32* @inptr, align 4, !dbg !1688
  %122 = zext i32 %120 to i64, !dbg !1688
  %123 = getelementptr inbounds [32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 %122, !dbg !1688
  %124 = load i8, i8* %123, align 1, !dbg !1688
  %125 = zext i8 %124 to i32, !dbg !1688
  br label %128, !dbg !1688

126:                                              ; preds = %115
  %127 = call i32 @fill_inbuf(i32 noundef 0), !dbg !1688
  br label %128, !dbg !1688

128:                                              ; preds = %126, %119
  %129 = phi i32 [ %125, %119 ], [ %127, %126 ], !dbg !1688
  %130 = trunc i32 %129 to i8, !dbg !1689
  store i8 %130, i8* %4, align 1, !dbg !1690
  %131 = load i8, i8* %4, align 1, !dbg !1691
  %132 = zext i8 %131 to i32, !dbg !1691
  %133 = and i32 %132, 32, !dbg !1693
  %134 = icmp ne i32 %133, 0, !dbg !1694
  br i1 %134, label %135, label %139, !dbg !1695

135:                                              ; preds = %128
  %136 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1696
  %137 = load i8*, i8** @progname, align 8, !dbg !1698
  %138 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %136, i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.87, i64 0, i64 0), i8* noundef %137, i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0)), !dbg !1699
  store i32 1, i32* @exit_code, align 4, !dbg !1700
  store i32 -1, i32* %2, align 4, !dbg !1701
  br label %564, !dbg !1701

139:                                              ; preds = %128
  %140 = load i8, i8* %4, align 1, !dbg !1702
  %141 = zext i8 %140 to i32, !dbg !1702
  %142 = and i32 %141, 2, !dbg !1704
  %143 = icmp ne i32 %142, 0, !dbg !1705
  br i1 %143, label %144, label %152, !dbg !1706

144:                                              ; preds = %139
  %145 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1707
  %146 = load i8*, i8** @progname, align 8, !dbg !1709
  %147 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %145, i8* noundef getelementptr inbounds ([65 x i8], [65 x i8]* @.str.88, i64 0, i64 0), i8* noundef %146, i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0)), !dbg !1710
  store i32 1, i32* @exit_code, align 4, !dbg !1711
  %148 = load i32, i32* @force, align 4, !dbg !1712
  %149 = icmp sle i32 %148, 1, !dbg !1714
  br i1 %149, label %150, label %151, !dbg !1715

150:                                              ; preds = %144
  store i32 -1, i32* %2, align 4, !dbg !1716
  br label %564, !dbg !1716

151:                                              ; preds = %144
  br label %152, !dbg !1717

152:                                              ; preds = %151, %139
  %153 = load i8, i8* %4, align 1, !dbg !1718
  %154 = zext i8 %153 to i32, !dbg !1718
  %155 = and i32 %154, 192, !dbg !1720
  %156 = icmp ne i32 %155, 0, !dbg !1721
  br i1 %156, label %157, label %167, !dbg !1722

157:                                              ; preds = %152
  %158 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1723
  %159 = load i8*, i8** @progname, align 8, !dbg !1725
  %160 = load i8, i8* %4, align 1, !dbg !1726
  %161 = zext i8 %160 to i32, !dbg !1726
  %162 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %158, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.89, i64 0, i64 0), i8* noundef %159, i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0), i32 noundef %161), !dbg !1727
  store i32 1, i32* @exit_code, align 4, !dbg !1728
  %163 = load i32, i32* @force, align 4, !dbg !1729
  %164 = icmp sle i32 %163, 1, !dbg !1731
  br i1 %164, label %165, label %166, !dbg !1732

165:                                              ; preds = %157
  store i32 -1, i32* %2, align 4, !dbg !1733
  br label %564, !dbg !1733

166:                                              ; preds = %157
  br label %167, !dbg !1734

167:                                              ; preds = %166, %152
  %168 = load i32, i32* @inptr, align 4, !dbg !1735
  %169 = load i32, i32* @insize, align 4, !dbg !1735
  %170 = icmp ult i32 %168, %169, !dbg !1735
  br i1 %170, label %171, label %178, !dbg !1735

171:                                              ; preds = %167
  %172 = load i32, i32* @inptr, align 4, !dbg !1735
  %173 = add i32 %172, 1, !dbg !1735
  store i32 %173, i32* @inptr, align 4, !dbg !1735
  %174 = zext i32 %172 to i64, !dbg !1735
  %175 = getelementptr inbounds [32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 %174, !dbg !1735
  %176 = load i8, i8* %175, align 1, !dbg !1735
  %177 = zext i8 %176 to i32, !dbg !1735
  br label %180, !dbg !1735

178:                                              ; preds = %167
  %179 = call i32 @fill_inbuf(i32 noundef 0), !dbg !1735
  br label %180, !dbg !1735

180:                                              ; preds = %178, %171
  %181 = phi i32 [ %177, %171 ], [ %179, %178 ], !dbg !1735
  %182 = sext i32 %181 to i64, !dbg !1736
  store i64 %182, i64* %6, align 8, !dbg !1737
  %183 = load i32, i32* @inptr, align 4, !dbg !1738
  %184 = load i32, i32* @insize, align 4, !dbg !1738
  %185 = icmp ult i32 %183, %184, !dbg !1738
  br i1 %185, label %186, label %193, !dbg !1738

186:                                              ; preds = %180
  %187 = load i32, i32* @inptr, align 4, !dbg !1738
  %188 = add i32 %187, 1, !dbg !1738
  store i32 %188, i32* @inptr, align 4, !dbg !1738
  %189 = zext i32 %187 to i64, !dbg !1738
  %190 = getelementptr inbounds [32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 %189, !dbg !1738
  %191 = load i8, i8* %190, align 1, !dbg !1738
  %192 = zext i8 %191 to i32, !dbg !1738
  br label %195, !dbg !1738

193:                                              ; preds = %180
  %194 = call i32 @fill_inbuf(i32 noundef 0), !dbg !1738
  br label %195, !dbg !1738

195:                                              ; preds = %193, %186
  %196 = phi i32 [ %192, %186 ], [ %194, %193 ], !dbg !1738
  %197 = sext i32 %196 to i64, !dbg !1739
  %198 = shl i64 %197, 8, !dbg !1740
  %199 = load i64, i64* %6, align 8, !dbg !1741
  %200 = or i64 %199, %198, !dbg !1741
  store i64 %200, i64* %6, align 8, !dbg !1741
  %201 = load i32, i32* @inptr, align 4, !dbg !1742
  %202 = load i32, i32* @insize, align 4, !dbg !1742
  %203 = icmp ult i32 %201, %202, !dbg !1742
  br i1 %203, label %204, label %211, !dbg !1742

204:                                              ; preds = %195
  %205 = load i32, i32* @inptr, align 4, !dbg !1742
  %206 = add i32 %205, 1, !dbg !1742
  store i32 %206, i32* @inptr, align 4, !dbg !1742
  %207 = zext i32 %205 to i64, !dbg !1742
  %208 = getelementptr inbounds [32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 %207, !dbg !1742
  %209 = load i8, i8* %208, align 1, !dbg !1742
  %210 = zext i8 %209 to i32, !dbg !1742
  br label %213, !dbg !1742

211:                                              ; preds = %195
  %212 = call i32 @fill_inbuf(i32 noundef 0), !dbg !1742
  br label %213, !dbg !1742

213:                                              ; preds = %211, %204
  %214 = phi i32 [ %210, %204 ], [ %212, %211 ], !dbg !1742
  %215 = sext i32 %214 to i64, !dbg !1743
  %216 = shl i64 %215, 16, !dbg !1744
  %217 = load i64, i64* %6, align 8, !dbg !1745
  %218 = or i64 %217, %216, !dbg !1745
  store i64 %218, i64* %6, align 8, !dbg !1745
  %219 = load i32, i32* @inptr, align 4, !dbg !1746
  %220 = load i32, i32* @insize, align 4, !dbg !1746
  %221 = icmp ult i32 %219, %220, !dbg !1746
  br i1 %221, label %222, label %229, !dbg !1746

222:                                              ; preds = %213
  %223 = load i32, i32* @inptr, align 4, !dbg !1746
  %224 = add i32 %223, 1, !dbg !1746
  store i32 %224, i32* @inptr, align 4, !dbg !1746
  %225 = zext i32 %223 to i64, !dbg !1746
  %226 = getelementptr inbounds [32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 %225, !dbg !1746
  %227 = load i8, i8* %226, align 1, !dbg !1746
  %228 = zext i8 %227 to i32, !dbg !1746
  br label %231, !dbg !1746

229:                                              ; preds = %213
  %230 = call i32 @fill_inbuf(i32 noundef 0), !dbg !1746
  br label %231, !dbg !1746

231:                                              ; preds = %229, %222
  %232 = phi i32 [ %228, %222 ], [ %230, %229 ], !dbg !1746
  %233 = sext i32 %232 to i64, !dbg !1747
  %234 = shl i64 %233, 24, !dbg !1748
  %235 = load i64, i64* %6, align 8, !dbg !1749
  %236 = or i64 %235, %234, !dbg !1749
  store i64 %236, i64* %6, align 8, !dbg !1749
  %237 = load i64, i64* %6, align 8, !dbg !1750
  %238 = icmp ne i64 %237, 0, !dbg !1752
  br i1 %238, label %239, label %244, !dbg !1753

239:                                              ; preds = %231
  %240 = load i32, i32* @no_time, align 4, !dbg !1754
  %241 = icmp ne i32 %240, 0, !dbg !1754
  br i1 %241, label %244, label %242, !dbg !1755

242:                                              ; preds = %239
  %243 = load i64, i64* %6, align 8, !dbg !1756
  store i64 %243, i64* @time_stamp, align 8, !dbg !1757
  br label %244, !dbg !1758

244:                                              ; preds = %242, %239, %231
  %245 = load i32, i32* @inptr, align 4, !dbg !1759
  %246 = load i32, i32* @insize, align 4, !dbg !1759
  %247 = icmp ult i32 %245, %246, !dbg !1759
  br i1 %247, label %248, label %255, !dbg !1759

248:                                              ; preds = %244
  %249 = load i32, i32* @inptr, align 4, !dbg !1759
  %250 = add i32 %249, 1, !dbg !1759
  store i32 %250, i32* @inptr, align 4, !dbg !1759
  %251 = zext i32 %249 to i64, !dbg !1759
  %252 = getelementptr inbounds [32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 %251, !dbg !1759
  %253 = load i8, i8* %252, align 1, !dbg !1759
  %254 = zext i8 %253 to i32, !dbg !1759
  br label %257, !dbg !1759

255:                                              ; preds = %244
  %256 = call i32 @fill_inbuf(i32 noundef 0), !dbg !1759
  br label %257, !dbg !1759

257:                                              ; preds = %255, %248
  %258 = phi i32 [ %254, %248 ], [ %256, %255 ], !dbg !1759
  %259 = load i32, i32* @inptr, align 4, !dbg !1760
  %260 = load i32, i32* @insize, align 4, !dbg !1760
  %261 = icmp ult i32 %259, %260, !dbg !1760
  br i1 %261, label %262, label %269, !dbg !1760

262:                                              ; preds = %257
  %263 = load i32, i32* @inptr, align 4, !dbg !1760
  %264 = add i32 %263, 1, !dbg !1760
  store i32 %264, i32* @inptr, align 4, !dbg !1760
  %265 = zext i32 %263 to i64, !dbg !1760
  %266 = getelementptr inbounds [32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 %265, !dbg !1760
  %267 = load i8, i8* %266, align 1, !dbg !1760
  %268 = zext i8 %267 to i32, !dbg !1760
  br label %271, !dbg !1760

269:                                              ; preds = %257
  %270 = call i32 @fill_inbuf(i32 noundef 0), !dbg !1760
  br label %271, !dbg !1760

271:                                              ; preds = %269, %262
  %272 = phi i32 [ %268, %262 ], [ %270, %269 ], !dbg !1760
  %273 = load i8, i8* %4, align 1, !dbg !1761
  %274 = zext i8 %273 to i32, !dbg !1761
  %275 = and i32 %274, 2, !dbg !1763
  %276 = icmp ne i32 %275, 0, !dbg !1764
  br i1 %276, label %277, label %317, !dbg !1765

277:                                              ; preds = %271
  call void @llvm.dbg.declare(metadata i32* %7, metadata !1766, metadata !DIExpression()), !dbg !1768
  %278 = load i32, i32* @inptr, align 4, !dbg !1769
  %279 = load i32, i32* @insize, align 4, !dbg !1769
  %280 = icmp ult i32 %278, %279, !dbg !1769
  br i1 %280, label %281, label %288, !dbg !1769

281:                                              ; preds = %277
  %282 = load i32, i32* @inptr, align 4, !dbg !1769
  %283 = add i32 %282, 1, !dbg !1769
  store i32 %283, i32* @inptr, align 4, !dbg !1769
  %284 = zext i32 %282 to i64, !dbg !1769
  %285 = getelementptr inbounds [32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 %284, !dbg !1769
  %286 = load i8, i8* %285, align 1, !dbg !1769
  %287 = zext i8 %286 to i32, !dbg !1769
  br label %290, !dbg !1769

288:                                              ; preds = %277
  %289 = call i32 @fill_inbuf(i32 noundef 0), !dbg !1769
  br label %290, !dbg !1769

290:                                              ; preds = %288, %281
  %291 = phi i32 [ %287, %281 ], [ %289, %288 ], !dbg !1769
  store i32 %291, i32* %7, align 4, !dbg !1768
  %292 = load i32, i32* @inptr, align 4, !dbg !1770
  %293 = load i32, i32* @insize, align 4, !dbg !1770
  %294 = icmp ult i32 %292, %293, !dbg !1770
  br i1 %294, label %295, label %302, !dbg !1770

295:                                              ; preds = %290
  %296 = load i32, i32* @inptr, align 4, !dbg !1770
  %297 = add i32 %296, 1, !dbg !1770
  store i32 %297, i32* @inptr, align 4, !dbg !1770
  %298 = zext i32 %296 to i64, !dbg !1770
  %299 = getelementptr inbounds [32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 %298, !dbg !1770
  %300 = load i8, i8* %299, align 1, !dbg !1770
  %301 = zext i8 %300 to i32, !dbg !1770
  br label %304, !dbg !1770

302:                                              ; preds = %290
  %303 = call i32 @fill_inbuf(i32 noundef 0), !dbg !1770
  br label %304, !dbg !1770

304:                                              ; preds = %302, %295
  %305 = phi i32 [ %301, %295 ], [ %303, %302 ], !dbg !1770
  %306 = shl i32 %305, 8, !dbg !1771
  %307 = load i32, i32* %7, align 4, !dbg !1772
  %308 = or i32 %307, %306, !dbg !1772
  store i32 %308, i32* %7, align 4, !dbg !1772
  %309 = load i32, i32* @verbose, align 4, !dbg !1773
  %310 = icmp ne i32 %309, 0, !dbg !1773
  br i1 %310, label %311, label %316, !dbg !1775

311:                                              ; preds = %304
  %312 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1776
  %313 = load i8*, i8** @progname, align 8, !dbg !1778
  %314 = load i32, i32* %7, align 4, !dbg !1779
  %315 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %312, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.90, i64 0, i64 0), i8* noundef %313, i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0), i32 noundef %314), !dbg !1780
  br label %316, !dbg !1781

316:                                              ; preds = %311, %304
  br label %317, !dbg !1782

317:                                              ; preds = %316, %271
  %318 = load i8, i8* %4, align 1, !dbg !1783
  %319 = zext i8 %318 to i32, !dbg !1783
  %320 = and i32 %319, 4, !dbg !1785
  %321 = icmp ne i32 %320, 0, !dbg !1786
  br i1 %321, label %322, label %382, !dbg !1787

322:                                              ; preds = %317
  call void @llvm.dbg.declare(metadata i32* %8, metadata !1788, metadata !DIExpression()), !dbg !1790
  %323 = load i32, i32* @inptr, align 4, !dbg !1791
  %324 = load i32, i32* @insize, align 4, !dbg !1791
  %325 = icmp ult i32 %323, %324, !dbg !1791
  br i1 %325, label %326, label %333, !dbg !1791

326:                                              ; preds = %322
  %327 = load i32, i32* @inptr, align 4, !dbg !1791
  %328 = add i32 %327, 1, !dbg !1791
  store i32 %328, i32* @inptr, align 4, !dbg !1791
  %329 = zext i32 %327 to i64, !dbg !1791
  %330 = getelementptr inbounds [32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 %329, !dbg !1791
  %331 = load i8, i8* %330, align 1, !dbg !1791
  %332 = zext i8 %331 to i32, !dbg !1791
  br label %335, !dbg !1791

333:                                              ; preds = %322
  %334 = call i32 @fill_inbuf(i32 noundef 0), !dbg !1791
  br label %335, !dbg !1791

335:                                              ; preds = %333, %326
  %336 = phi i32 [ %332, %326 ], [ %334, %333 ], !dbg !1791
  store i32 %336, i32* %8, align 4, !dbg !1790
  %337 = load i32, i32* @inptr, align 4, !dbg !1792
  %338 = load i32, i32* @insize, align 4, !dbg !1792
  %339 = icmp ult i32 %337, %338, !dbg !1792
  br i1 %339, label %340, label %347, !dbg !1792

340:                                              ; preds = %335
  %341 = load i32, i32* @inptr, align 4, !dbg !1792
  %342 = add i32 %341, 1, !dbg !1792
  store i32 %342, i32* @inptr, align 4, !dbg !1792
  %343 = zext i32 %341 to i64, !dbg !1792
  %344 = getelementptr inbounds [32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 %343, !dbg !1792
  %345 = load i8, i8* %344, align 1, !dbg !1792
  %346 = zext i8 %345 to i32, !dbg !1792
  br label %349, !dbg !1792

347:                                              ; preds = %335
  %348 = call i32 @fill_inbuf(i32 noundef 0), !dbg !1792
  br label %349, !dbg !1792

349:                                              ; preds = %347, %340
  %350 = phi i32 [ %346, %340 ], [ %348, %347 ], !dbg !1792
  %351 = shl i32 %350, 8, !dbg !1793
  %352 = load i32, i32* %8, align 4, !dbg !1794
  %353 = or i32 %352, %351, !dbg !1794
  store i32 %353, i32* %8, align 4, !dbg !1794
  %354 = load i32, i32* @verbose, align 4, !dbg !1795
  %355 = icmp ne i32 %354, 0, !dbg !1795
  br i1 %355, label %356, label %361, !dbg !1797

356:                                              ; preds = %349
  %357 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1798
  %358 = load i8*, i8** @progname, align 8, !dbg !1800
  %359 = load i32, i32* %8, align 4, !dbg !1801
  %360 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %357, i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.91, i64 0, i64 0), i8* noundef %358, i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0), i32 noundef %359), !dbg !1802
  br label %361, !dbg !1803

361:                                              ; preds = %356, %349
  br label %362, !dbg !1804

362:                                              ; preds = %379, %361
  %363 = load i32, i32* %8, align 4, !dbg !1805
  %364 = add i32 %363, -1, !dbg !1805
  store i32 %364, i32* %8, align 4, !dbg !1805
  %365 = icmp ne i32 %363, 0, !dbg !1804
  br i1 %365, label %366, label %381, !dbg !1804

366:                                              ; preds = %362
  %367 = load i32, i32* @inptr, align 4, !dbg !1806
  %368 = load i32, i32* @insize, align 4, !dbg !1806
  %369 = icmp ult i32 %367, %368, !dbg !1806
  br i1 %369, label %370, label %377, !dbg !1806

370:                                              ; preds = %366
  %371 = load i32, i32* @inptr, align 4, !dbg !1806
  %372 = add i32 %371, 1, !dbg !1806
  store i32 %372, i32* @inptr, align 4, !dbg !1806
  %373 = zext i32 %371 to i64, !dbg !1806
  %374 = getelementptr inbounds [32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 %373, !dbg !1806
  %375 = load i8, i8* %374, align 1, !dbg !1806
  %376 = zext i8 %375 to i32, !dbg !1806
  br label %379, !dbg !1806

377:                                              ; preds = %366
  %378 = call i32 @fill_inbuf(i32 noundef 0), !dbg !1806
  br label %379, !dbg !1806

379:                                              ; preds = %377, %370
  %380 = phi i32 [ %376, %370 ], [ %378, %377 ], !dbg !1806
  br label %362, !dbg !1804, !llvm.loop !1807

381:                                              ; preds = %362
  br label %382, !dbg !1808

382:                                              ; preds = %381, %317
  %383 = load i8, i8* %4, align 1, !dbg !1809
  %384 = zext i8 %383 to i32, !dbg !1809
  %385 = and i32 %384, 8, !dbg !1811
  %386 = icmp ne i32 %385, 0, !dbg !1812
  br i1 %386, label %387, label %462, !dbg !1813

387:                                              ; preds = %382
  %388 = load i32, i32* @no_name, align 4, !dbg !1814
  %389 = icmp ne i32 %388, 0, !dbg !1814
  br i1 %389, label %399, label %390, !dbg !1817

390:                                              ; preds = %387
  %391 = load i32, i32* @to_stdout, align 4, !dbg !1818
  %392 = icmp ne i32 %391, 0, !dbg !1818
  br i1 %392, label %393, label %396, !dbg !1819

393:                                              ; preds = %390
  %394 = load i32, i32* @list, align 4, !dbg !1820
  %395 = icmp ne i32 %394, 0, !dbg !1820
  br i1 %395, label %396, label %399, !dbg !1821

396:                                              ; preds = %393, %390
  %397 = load i32, i32* @part_nb, align 4, !dbg !1822
  %398 = icmp sgt i32 %397, 1, !dbg !1823
  br i1 %398, label %399, label %421, !dbg !1824

399:                                              ; preds = %396, %393, %387
  call void @llvm.dbg.declare(metadata i8* %9, metadata !1825, metadata !DIExpression()), !dbg !1827
  br label %400, !dbg !1828

400:                                              ; preds = %416, %399
  %401 = load i32, i32* @inptr, align 4, !dbg !1829
  %402 = load i32, i32* @insize, align 4, !dbg !1829
  %403 = icmp ult i32 %401, %402, !dbg !1829
  br i1 %403, label %404, label %411, !dbg !1829

404:                                              ; preds = %400
  %405 = load i32, i32* @inptr, align 4, !dbg !1829
  %406 = add i32 %405, 1, !dbg !1829
  store i32 %406, i32* @inptr, align 4, !dbg !1829
  %407 = zext i32 %405 to i64, !dbg !1829
  %408 = getelementptr inbounds [32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 %407, !dbg !1829
  %409 = load i8, i8* %408, align 1, !dbg !1829
  %410 = zext i8 %409 to i32, !dbg !1829
  br label %413, !dbg !1829

411:                                              ; preds = %400
  %412 = call i32 @fill_inbuf(i32 noundef 0), !dbg !1829
  br label %413, !dbg !1829

413:                                              ; preds = %411, %404
  %414 = phi i32 [ %410, %404 ], [ %412, %411 ], !dbg !1829
  %415 = trunc i32 %414 to i8, !dbg !1829
  store i8 %415, i8* %9, align 1, !dbg !1831
  br label %416, !dbg !1832

416:                                              ; preds = %413
  %417 = load i8, i8* %9, align 1, !dbg !1833
  %418 = sext i8 %417 to i32, !dbg !1833
  %419 = icmp ne i32 %418, 0, !dbg !1834
  br i1 %419, label %400, label %420, !dbg !1832, !llvm.loop !1835

420:                                              ; preds = %416
  br label %461, !dbg !1837

421:                                              ; preds = %396
  call void @llvm.dbg.declare(metadata i8** %10, metadata !1838, metadata !DIExpression()), !dbg !1840
  %422 = call i8* @basename(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i64 0, i64 0)), !dbg !1841
  store i8* %422, i8** %10, align 8, !dbg !1840
  call void @llvm.dbg.declare(metadata i8** %11, metadata !1842, metadata !DIExpression()), !dbg !1843
  %423 = load i8*, i8** %10, align 8, !dbg !1844
  store i8* %423, i8** %11, align 8, !dbg !1843
  br label %424, !dbg !1845

424:                                              ; preds = %451, %421
  %425 = load i32, i32* @inptr, align 4, !dbg !1846
  %426 = load i32, i32* @insize, align 4, !dbg !1846
  %427 = icmp ult i32 %425, %426, !dbg !1846
  br i1 %427, label %428, label %435, !dbg !1846

428:                                              ; preds = %424
  %429 = load i32, i32* @inptr, align 4, !dbg !1846
  %430 = add i32 %429, 1, !dbg !1846
  store i32 %430, i32* @inptr, align 4, !dbg !1846
  %431 = zext i32 %429 to i64, !dbg !1846
  %432 = getelementptr inbounds [32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 %431, !dbg !1846
  %433 = load i8, i8* %432, align 1, !dbg !1846
  %434 = zext i8 %433 to i32, !dbg !1846
  br label %437, !dbg !1846

435:                                              ; preds = %424
  %436 = call i32 @fill_inbuf(i32 noundef 0), !dbg !1846
  br label %437, !dbg !1846

437:                                              ; preds = %435, %428
  %438 = phi i32 [ %434, %428 ], [ %436, %435 ], !dbg !1846
  %439 = trunc i32 %438 to i8, !dbg !1850
  %440 = load i8*, i8** %10, align 8, !dbg !1851
  store i8 %439, i8* %440, align 1, !dbg !1852
  %441 = load i8*, i8** %10, align 8, !dbg !1853
  %442 = getelementptr inbounds i8, i8* %441, i32 1, !dbg !1853
  store i8* %442, i8** %10, align 8, !dbg !1853
  %443 = load i8, i8* %441, align 1, !dbg !1855
  %444 = sext i8 %443 to i32, !dbg !1855
  %445 = icmp eq i32 %444, 0, !dbg !1856
  br i1 %445, label %446, label %447, !dbg !1857

446:                                              ; preds = %437
  br label %452, !dbg !1858

447:                                              ; preds = %437
  %448 = load i8*, i8** %10, align 8, !dbg !1859
  %449 = icmp uge i8* %448, getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i64 1, i64 0), !dbg !1861
  br i1 %449, label %450, label %451, !dbg !1862

450:                                              ; preds = %447
  call void @error(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.92, i64 0, i64 0)), !dbg !1863
  br label %451, !dbg !1865

451:                                              ; preds = %450, %447
  br label %424, !dbg !1866, !llvm.loop !1867

452:                                              ; preds = %446
  %453 = load i32, i32* @list, align 4, !dbg !1870
  %454 = icmp ne i32 %453, 0, !dbg !1870
  br i1 %454, label %460, label %455, !dbg !1872

455:                                              ; preds = %452
  %456 = load i8*, i8** %11, align 8, !dbg !1873
  %457 = icmp ne i8* %456, null, !dbg !1873
  br i1 %457, label %458, label %459, !dbg !1876

458:                                              ; preds = %455
  store i32 0, i32* @list, align 4, !dbg !1877
  br label %459, !dbg !1878

459:                                              ; preds = %458, %455
  br label %460, !dbg !1879

460:                                              ; preds = %459, %452
  br label %461

461:                                              ; preds = %460, %420
  br label %462, !dbg !1880

462:                                              ; preds = %461, %382
  %463 = load i8, i8* %4, align 1, !dbg !1881
  %464 = zext i8 %463 to i32, !dbg !1881
  %465 = and i32 %464, 16, !dbg !1883
  %466 = icmp ne i32 %465, 0, !dbg !1884
  br i1 %466, label %467, label %486, !dbg !1885

467:                                              ; preds = %462
  br label %468, !dbg !1886

468:                                              ; preds = %484, %467
  %469 = load i32, i32* @inptr, align 4, !dbg !1888
  %470 = load i32, i32* @insize, align 4, !dbg !1888
  %471 = icmp ult i32 %469, %470, !dbg !1888
  br i1 %471, label %472, label %479, !dbg !1888

472:                                              ; preds = %468
  %473 = load i32, i32* @inptr, align 4, !dbg !1888
  %474 = add i32 %473, 1, !dbg !1888
  store i32 %474, i32* @inptr, align 4, !dbg !1888
  %475 = zext i32 %473 to i64, !dbg !1888
  %476 = getelementptr inbounds [32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 %475, !dbg !1888
  %477 = load i8, i8* %476, align 1, !dbg !1888
  %478 = zext i8 %477 to i32, !dbg !1888
  br label %481, !dbg !1888

479:                                              ; preds = %468
  %480 = call i32 @fill_inbuf(i32 noundef 0), !dbg !1888
  br label %481, !dbg !1888

481:                                              ; preds = %479, %472
  %482 = phi i32 [ %478, %472 ], [ %480, %479 ], !dbg !1888
  %483 = icmp ne i32 %482, 0, !dbg !1889
  br i1 %483, label %484, label %485, !dbg !1886

484:                                              ; preds = %481
  br label %468, !dbg !1886, !llvm.loop !1890

485:                                              ; preds = %481
  br label %486, !dbg !1892

486:                                              ; preds = %485, %462
  %487 = load i32, i32* @part_nb, align 4, !dbg !1893
  %488 = icmp eq i32 %487, 1, !dbg !1895
  br i1 %488, label %489, label %493, !dbg !1896

489:                                              ; preds = %486
  %490 = load i32, i32* @inptr, align 4, !dbg !1897
  %491 = zext i32 %490 to i64, !dbg !1897
  %492 = add i64 %491, 16, !dbg !1899
  store i64 %492, i64* @header_bytes, align 8, !dbg !1900
  br label %493, !dbg !1901

493:                                              ; preds = %489, %486
  br label %540, !dbg !1902

494:                                              ; preds = %89
  %495 = getelementptr inbounds [2 x i8], [2 x i8]* %5, i64 0, i64 0, !dbg !1903
  %496 = call i32 @memcmp(i8* noundef %495, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.93, i64 0, i64 0), i64 noundef 2) #9, !dbg !1905
  %497 = icmp eq i32 %496, 0, !dbg !1906
  br i1 %497, label %498, label %510, !dbg !1907

498:                                              ; preds = %494
  %499 = load i32, i32* @inptr, align 4, !dbg !1908
  %500 = icmp eq i32 %499, 2, !dbg !1909
  br i1 %500, label %501, label %510, !dbg !1910

501:                                              ; preds = %498
  %502 = call i32 @memcmp(i8* noundef getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.93, i64 0, i64 0), i64 noundef 4) #9, !dbg !1911
  %503 = icmp eq i32 %502, 0, !dbg !1912
  br i1 %503, label %504, label %510, !dbg !1913

504:                                              ; preds = %501
  store i32 0, i32* @inptr, align 4, !dbg !1914
  store i32 (i32, i32)* @unzip, i32 (i32, i32)** @work, align 8, !dbg !1916
  %505 = load i32, i32* %3, align 4, !dbg !1917
  %506 = call i32 @check_zipfile(i32 noundef %505), !dbg !1919
  %507 = icmp ne i32 %506, 0, !dbg !1920
  br i1 %507, label %508, label %509, !dbg !1921

508:                                              ; preds = %504
  store i32 -1, i32* %2, align 4, !dbg !1922
  br label %564, !dbg !1922

509:                                              ; preds = %504
  store i32 1, i32* @last_member, align 4, !dbg !1923
  br label %539, !dbg !1924

510:                                              ; preds = %501, %498, %494
  %511 = getelementptr inbounds [2 x i8], [2 x i8]* %5, i64 0, i64 0, !dbg !1925
  %512 = call i32 @memcmp(i8* noundef %511, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.94, i64 0, i64 0), i64 noundef 2) #9, !dbg !1927
  %513 = icmp eq i32 %512, 0, !dbg !1928
  br i1 %513, label %514, label %515, !dbg !1929

514:                                              ; preds = %510
  store i32 (i32, i32)* @unpack, i32 (i32, i32)** @work, align 8, !dbg !1930
  store i32 2, i32* @method, align 4, !dbg !1932
  br label %538, !dbg !1933

515:                                              ; preds = %510
  %516 = getelementptr inbounds [2 x i8], [2 x i8]* %5, i64 0, i64 0, !dbg !1934
  %517 = call i32 @memcmp(i8* noundef %516, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.95, i64 0, i64 0), i64 noundef 2) #9, !dbg !1936
  %518 = icmp eq i32 %517, 0, !dbg !1937
  br i1 %518, label %519, label %520, !dbg !1938

519:                                              ; preds = %515
  store i32 (i32, i32)* @unlzw, i32 (i32, i32)** @work, align 8, !dbg !1939
  store i32 1, i32* @method, align 4, !dbg !1941
  store i32 1, i32* @last_member, align 4, !dbg !1942
  br label %537, !dbg !1943

520:                                              ; preds = %515
  %521 = getelementptr inbounds [2 x i8], [2 x i8]* %5, i64 0, i64 0, !dbg !1944
  %522 = call i32 @memcmp(i8* noundef %521, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.96, i64 0, i64 0), i64 noundef 2) #9, !dbg !1946
  %523 = icmp eq i32 %522, 0, !dbg !1947
  br i1 %523, label %524, label %525, !dbg !1948

524:                                              ; preds = %520
  store i32 (i32, i32)* @unlzh, i32 (i32, i32)** @work, align 8, !dbg !1949
  store i32 3, i32* @method, align 4, !dbg !1951
  store i32 1, i32* @last_member, align 4, !dbg !1952
  br label %536, !dbg !1953

525:                                              ; preds = %520
  %526 = load i32, i32* @force, align 4, !dbg !1954
  %527 = icmp ne i32 %526, 0, !dbg !1954
  br i1 %527, label %528, label %535, !dbg !1956

528:                                              ; preds = %525
  %529 = load i32, i32* @to_stdout, align 4, !dbg !1957
  %530 = icmp ne i32 %529, 0, !dbg !1957
  br i1 %530, label %531, label %535, !dbg !1958

531:                                              ; preds = %528
  %532 = load i32, i32* @list, align 4, !dbg !1959
  %533 = icmp ne i32 %532, 0, !dbg !1959
  br i1 %533, label %535, label %534, !dbg !1960

534:                                              ; preds = %531
  store i32 0, i32* @method, align 4, !dbg !1961
  store i32 (i32, i32)* @copy, i32 (i32, i32)** @work, align 8, !dbg !1963
  store i32 0, i32* @inptr, align 4, !dbg !1964
  store i32 1, i32* @last_member, align 4, !dbg !1965
  br label %535, !dbg !1966

535:                                              ; preds = %534, %531, %528, %525
  br label %536

536:                                              ; preds = %535, %524
  br label %537

537:                                              ; preds = %536, %519
  br label %538

538:                                              ; preds = %537, %514
  br label %539

539:                                              ; preds = %538, %509
  br label %540

540:                                              ; preds = %539, %493
  %541 = load i32, i32* @method, align 4, !dbg !1967
  %542 = icmp sge i32 %541, 0, !dbg !1969
  br i1 %542, label %543, label %545, !dbg !1970

543:                                              ; preds = %540
  %544 = load i32, i32* @method, align 4, !dbg !1971
  store i32 %544, i32* %2, align 4, !dbg !1972
  br label %564, !dbg !1972

545:                                              ; preds = %540
  %546 = load i32, i32* @part_nb, align 4, !dbg !1973
  %547 = icmp eq i32 %546, 1, !dbg !1975
  br i1 %547, label %548, label %552, !dbg !1976

548:                                              ; preds = %545
  %549 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1977
  %550 = load i8*, i8** @progname, align 8, !dbg !1979
  %551 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %549, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.97, i64 0, i64 0), i8* noundef %550, i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0)), !dbg !1980
  store i32 1, i32* @exit_code, align 4, !dbg !1981
  store i32 -1, i32* %2, align 4, !dbg !1982
  br label %564, !dbg !1982

552:                                              ; preds = %545
  %553 = load i32, i32* @quiet, align 4, !dbg !1983
  %554 = icmp ne i32 %553, 0, !dbg !1983
  br i1 %554, label %559, label %555, !dbg !1987

555:                                              ; preds = %552
  %556 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1983
  %557 = load i8*, i8** @progname, align 8, !dbg !1983
  %558 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %556, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.98, i64 0, i64 0), i8* noundef %557, i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0)), !dbg !1983
  br label %559, !dbg !1983

559:                                              ; preds = %555, %552
  %560 = load i32, i32* @exit_code, align 4, !dbg !1988
  %561 = icmp eq i32 %560, 0, !dbg !1988
  br i1 %561, label %562, label %563, !dbg !1987

562:                                              ; preds = %559
  store i32 2, i32* @exit_code, align 4, !dbg !1988
  br label %563, !dbg !1988

563:                                              ; preds = %562, %559
  store i32 -2, i32* %2, align 4, !dbg !1990
  br label %564, !dbg !1990

564:                                              ; preds = %563, %548, %543, %508, %165, %150, %135, %110
  %565 = load i32, i32* %2, align 4, !dbg !1991
  ret i32 %565, !dbg !1991
}

; Function Attrs: nounwind readonly willreturn
declare dso_local i32 @memcmp(i8* noundef, i8* noundef, i64 noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @get_istat(i8* noundef %0, %struct.stat* noundef %1) #0 !dbg !282 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca %struct.stat*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8**, align 8
  %8 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !1992, metadata !DIExpression()), !dbg !1993
  store %struct.stat* %1, %struct.stat** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %5, metadata !1994, metadata !DIExpression()), !dbg !1995
  call void @llvm.dbg.declare(metadata i32* %6, metadata !1996, metadata !DIExpression()), !dbg !1997
  call void @llvm.dbg.declare(metadata i8*** %7, metadata !1998, metadata !DIExpression()), !dbg !1999
  store i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @get_istat.suffixes, i64 0, i64 0), i8*** %7, align 8, !dbg !1999
  call void @llvm.dbg.declare(metadata i8** %8, metadata !2000, metadata !DIExpression()), !dbg !2001
  %9 = load i8*, i8** %4, align 8, !dbg !2002
  %10 = call i8* @strcpy(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0), i8* noundef %9) #10, !dbg !2003
  %11 = load %struct.stat*, %struct.stat** %5, align 8, !dbg !2004
  %12 = call i32 @do_stat(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0), %struct.stat* noundef %11), !dbg !2006
  %13 = icmp eq i32 %12, 0, !dbg !2007
  br i1 %13, label %14, label %15, !dbg !2008

14:                                               ; preds = %2
  store i32 0, i32* %3, align 4, !dbg !2009
  br label %57, !dbg !2009

15:                                               ; preds = %2
  %16 = load i32, i32* @decompress, align 4, !dbg !2010
  %17 = icmp ne i32 %16, 0, !dbg !2010
  br i1 %17, label %18, label %22, !dbg !2012

18:                                               ; preds = %15
  %19 = call i32* @__errno_location() #12, !dbg !2013
  %20 = load i32, i32* %19, align 4, !dbg !2013
  %21 = icmp ne i32 %20, 2, !dbg !2014
  br i1 %21, label %22, label %23, !dbg !2015

22:                                               ; preds = %18, %15
  call void @perror(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0)), !dbg !2016
  store i32 1, i32* @exit_code, align 4, !dbg !2018
  store i32 1, i32* %3, align 4, !dbg !2019
  br label %57, !dbg !2019

23:                                               ; preds = %18
  %24 = call i8* @get_suffix(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0)), !dbg !2020
  store i8* %24, i8** %8, align 8, !dbg !2021
  %25 = load i8*, i8** %8, align 8, !dbg !2022
  %26 = icmp ne i8* %25, null, !dbg !2024
  br i1 %26, label %27, label %28, !dbg !2025

27:                                               ; preds = %23
  call void @perror(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0)), !dbg !2026
  store i32 1, i32* @exit_code, align 4, !dbg !2028
  store i32 1, i32* %3, align 4, !dbg !2029
  br label %57, !dbg !2029

28:                                               ; preds = %23
  %29 = call i64 @strlen(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0)) #9, !dbg !2030
  %30 = trunc i64 %29 to i32, !dbg !2030
  store i32 %30, i32* %6, align 4, !dbg !2031
  %31 = call i32 @strcmp(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @z_suffix, i64 0, i64 0), i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i64 0, i64 0)) #9, !dbg !2032
  %32 = icmp eq i32 %31, 0, !dbg !2032
  br i1 %32, label %33, label %36, !dbg !2034

33:                                               ; preds = %28
  %34 = load i8**, i8*** %7, align 8, !dbg !2035
  %35 = getelementptr inbounds i8*, i8** %34, i32 1, !dbg !2035
  store i8** %35, i8*** %7, align 8, !dbg !2035
  br label %36, !dbg !2036

36:                                               ; preds = %33, %28
  br label %37, !dbg !2037

37:                                               ; preds = %50, %36
  %38 = load i8**, i8*** %7, align 8, !dbg !2038
  %39 = load i8*, i8** %38, align 8, !dbg !2040
  store i8* %39, i8** %8, align 8, !dbg !2041
  %40 = load i8*, i8** %8, align 8, !dbg !2042
  %41 = call i8* @strcat(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0), i8* noundef %40) #10, !dbg !2043
  %42 = load %struct.stat*, %struct.stat** %5, align 8, !dbg !2044
  %43 = call i32 @do_stat(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0), %struct.stat* noundef %42), !dbg !2046
  %44 = icmp eq i32 %43, 0, !dbg !2047
  br i1 %44, label %45, label %46, !dbg !2048

45:                                               ; preds = %37
  store i32 0, i32* %3, align 4, !dbg !2049
  br label %57, !dbg !2049

46:                                               ; preds = %37
  %47 = load i32, i32* %6, align 4, !dbg !2050
  %48 = sext i32 %47 to i64, !dbg !2051
  %49 = getelementptr inbounds [1024 x i8], [1024 x i8]* @ifname, i64 0, i64 %48, !dbg !2051
  store i8 0, i8* %49, align 1, !dbg !2052
  br label %50, !dbg !2053

50:                                               ; preds = %46
  %51 = load i8**, i8*** %7, align 8, !dbg !2054
  %52 = getelementptr inbounds i8*, i8** %51, i32 1, !dbg !2054
  store i8** %52, i8*** %7, align 8, !dbg !2054
  %53 = load i8*, i8** %52, align 8, !dbg !2055
  %54 = icmp ne i8* %53, null, !dbg !2056
  br i1 %54, label %37, label %55, !dbg !2053, !llvm.loop !2057

55:                                               ; preds = %50
  %56 = call i8* @strcat(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @z_suffix, i64 0, i64 0)) #10, !dbg !2059
  call void @perror(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0)), !dbg !2060
  store i32 1, i32* @exit_code, align 4, !dbg !2061
  store i32 1, i32* %3, align 4, !dbg !2062
  br label %57, !dbg !2062

57:                                               ; preds = %55, %45, %27, %22, %14
  %58 = load i32, i32* %3, align 4, !dbg !2063
  ret i32 %58, !dbg !2063
}

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal void @treat_dir(i8* noundef %0) #0 !dbg !2064 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.dirent*, align 8
  %4 = alloca %struct.__dirstream*, align 8
  %5 = alloca [1024 x i8], align 16
  %6 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !2065, metadata !DIExpression()), !dbg !2066
  call void @llvm.dbg.declare(metadata %struct.dirent** %3, metadata !2067, metadata !DIExpression()), !dbg !2079
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %4, metadata !2080, metadata !DIExpression()), !dbg !2085
  call void @llvm.dbg.declare(metadata [1024 x i8]* %5, metadata !2086, metadata !DIExpression()), !dbg !2087
  call void @llvm.dbg.declare(metadata i32* %6, metadata !2088, metadata !DIExpression()), !dbg !2089
  %7 = load i8*, i8** %2, align 8, !dbg !2090
  %8 = call %struct.__dirstream* @opendir(i8* noundef %7), !dbg !2091
  store %struct.__dirstream* %8, %struct.__dirstream** %4, align 8, !dbg !2092
  %9 = load %struct.__dirstream*, %struct.__dirstream** %4, align 8, !dbg !2093
  %10 = icmp eq %struct.__dirstream* %9, null, !dbg !2095
  br i1 %10, label %11, label %16, !dbg !2096

11:                                               ; preds = %1
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2097
  %13 = load i8*, i8** @progname, align 8, !dbg !2099
  %14 = load i8*, i8** %2, align 8, !dbg !2100
  %15 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %12, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.118, i64 0, i64 0), i8* noundef %13, i8* noundef %14), !dbg !2101
  store i32 1, i32* @exit_code, align 4, !dbg !2102
  br label %80, !dbg !2103

16:                                               ; preds = %1
  br label %17, !dbg !2104

17:                                               ; preds = %76, %33, %16
  %18 = load %struct.__dirstream*, %struct.__dirstream** %4, align 8, !dbg !2105
  %19 = call %struct.dirent* @readdir(%struct.__dirstream* noundef %18), !dbg !2106
  store %struct.dirent* %19, %struct.dirent** %3, align 8, !dbg !2107
  %20 = icmp ne %struct.dirent* %19, null, !dbg !2108
  br i1 %20, label %21, label %77, !dbg !2104

21:                                               ; preds = %17
  %22 = load %struct.dirent*, %struct.dirent** %3, align 8, !dbg !2109
  %23 = getelementptr inbounds %struct.dirent, %struct.dirent* %22, i32 0, i32 4, !dbg !2109
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* %23, i64 0, i64 0, !dbg !2109
  %25 = call i32 @strcmp(i8* noundef %24, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.119, i64 0, i64 0)) #9, !dbg !2109
  %26 = icmp eq i32 %25, 0, !dbg !2109
  br i1 %26, label %33, label %27, !dbg !2112

27:                                               ; preds = %21
  %28 = load %struct.dirent*, %struct.dirent** %3, align 8, !dbg !2113
  %29 = getelementptr inbounds %struct.dirent, %struct.dirent* %28, i32 0, i32 4, !dbg !2113
  %30 = getelementptr inbounds [256 x i8], [256 x i8]* %29, i64 0, i64 0, !dbg !2113
  %31 = call i32 @strcmp(i8* noundef %30, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.120, i64 0, i64 0)) #9, !dbg !2113
  %32 = icmp eq i32 %31, 0, !dbg !2113
  br i1 %32, label %33, label %34, !dbg !2114

33:                                               ; preds = %27, %21
  br label %17, !dbg !2115, !llvm.loop !2117

34:                                               ; preds = %27
  %35 = load i8*, i8** %2, align 8, !dbg !2119
  %36 = call i64 @strlen(i8* noundef %35) #9, !dbg !2120
  %37 = trunc i64 %36 to i32, !dbg !2120
  store i32 %37, i32* %6, align 4, !dbg !2121
  %38 = load i32, i32* %6, align 4, !dbg !2122
  %39 = load %struct.dirent*, %struct.dirent** %3, align 8, !dbg !2124
  %40 = getelementptr inbounds %struct.dirent, %struct.dirent* %39, i32 0, i32 4, !dbg !2124
  %41 = getelementptr inbounds [256 x i8], [256 x i8]* %40, i64 0, i64 0, !dbg !2124
  %42 = call i64 @strlen(i8* noundef %41) #9, !dbg !2124
  %43 = trunc i64 %42 to i32, !dbg !2124
  %44 = add nsw i32 %38, %43, !dbg !2125
  %45 = add nsw i32 %44, 1, !dbg !2126
  %46 = icmp slt i32 %45, 1023, !dbg !2127
  br i1 %46, label %47, label %68, !dbg !2128

47:                                               ; preds = %34
  %48 = getelementptr inbounds [1024 x i8], [1024 x i8]* %5, i64 0, i64 0, !dbg !2129
  %49 = load i8*, i8** %2, align 8, !dbg !2131
  %50 = call i8* @strcpy(i8* noundef %48, i8* noundef %49) #10, !dbg !2132
  %51 = load i32, i32* %6, align 4, !dbg !2133
  %52 = icmp ne i32 %51, 0, !dbg !2135
  br i1 %52, label %53, label %58, !dbg !2136

53:                                               ; preds = %47
  %54 = load i32, i32* %6, align 4, !dbg !2137
  %55 = add nsw i32 %54, 1, !dbg !2137
  store i32 %55, i32* %6, align 4, !dbg !2137
  %56 = sext i32 %54 to i64, !dbg !2139
  %57 = getelementptr inbounds [1024 x i8], [1024 x i8]* %5, i64 0, i64 %56, !dbg !2139
  store i8 47, i8* %57, align 1, !dbg !2140
  br label %58, !dbg !2141

58:                                               ; preds = %53, %47
  %59 = getelementptr inbounds [1024 x i8], [1024 x i8]* %5, i64 0, i64 0, !dbg !2142
  %60 = load i32, i32* %6, align 4, !dbg !2143
  %61 = sext i32 %60 to i64, !dbg !2144
  %62 = getelementptr inbounds i8, i8* %59, i64 %61, !dbg !2144
  %63 = load %struct.dirent*, %struct.dirent** %3, align 8, !dbg !2145
  %64 = getelementptr inbounds %struct.dirent, %struct.dirent* %63, i32 0, i32 4, !dbg !2146
  %65 = getelementptr inbounds [256 x i8], [256 x i8]* %64, i64 0, i64 0, !dbg !2145
  %66 = call i8* @strcpy(i8* noundef %62, i8* noundef %65) #10, !dbg !2147
  %67 = getelementptr inbounds [1024 x i8], [1024 x i8]* %5, i64 0, i64 0, !dbg !2148
  call void @treat_file(i8* noundef %67), !dbg !2149
  br label %76, !dbg !2150

68:                                               ; preds = %34
  %69 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2151
  %70 = load i8*, i8** @progname, align 8, !dbg !2153
  %71 = load i8*, i8** %2, align 8, !dbg !2154
  %72 = load %struct.dirent*, %struct.dirent** %3, align 8, !dbg !2155
  %73 = getelementptr inbounds %struct.dirent, %struct.dirent* %72, i32 0, i32 4, !dbg !2156
  %74 = getelementptr inbounds [256 x i8], [256 x i8]* %73, i64 0, i64 0, !dbg !2155
  %75 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %69, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.121, i64 0, i64 0), i8* noundef %70, i8* noundef %71, i8* noundef %74), !dbg !2157
  store i32 1, i32* @exit_code, align 4, !dbg !2158
  br label %76

76:                                               ; preds = %68, %58
  br label %17, !dbg !2104, !llvm.loop !2117

77:                                               ; preds = %17
  %78 = load %struct.__dirstream*, %struct.__dirstream** %4, align 8, !dbg !2159
  %79 = call i32 @closedir(%struct.__dirstream* noundef %78), !dbg !2160
  br label %80, !dbg !2161

80:                                               ; preds = %77, %11
  ret void, !dbg !2161
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @reset_times(i8* noundef %0, %struct.stat* noundef %1) #0 !dbg !2162 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.stat*, align 8
  %5 = alloca %struct.timespec, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !2165, metadata !DIExpression()), !dbg !2166
  store %struct.stat* %1, %struct.stat** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %4, metadata !2167, metadata !DIExpression()), !dbg !2168
  call void @llvm.dbg.declare(metadata %struct.timespec* %5, metadata !2169, metadata !DIExpression()), !dbg !2175
  %6 = load %struct.stat*, %struct.stat** %4, align 8, !dbg !2176
  %7 = getelementptr inbounds %struct.stat, %struct.stat* %6, i32 0, i32 11, !dbg !2177
  %8 = getelementptr inbounds %struct.timespec, %struct.timespec* %7, i32 0, i32 0, !dbg !2177
  %9 = load i64, i64* %8, align 8, !dbg !2177
  %10 = getelementptr inbounds %struct.timespec, %struct.timespec* %5, i32 0, i32 0, !dbg !2178
  store i64 %9, i64* %10, align 8, !dbg !2179
  %11 = load %struct.stat*, %struct.stat** %4, align 8, !dbg !2180
  %12 = getelementptr inbounds %struct.stat, %struct.stat* %11, i32 0, i32 12, !dbg !2181
  %13 = getelementptr inbounds %struct.timespec, %struct.timespec* %12, i32 0, i32 0, !dbg !2181
  %14 = load i64, i64* %13, align 8, !dbg !2181
  %15 = getelementptr inbounds %struct.timespec, %struct.timespec* %5, i32 0, i32 1, !dbg !2182
  store i64 %14, i64* %15, align 8, !dbg !2183
  %16 = load i8*, i8** %3, align 8, !dbg !2184
  %17 = call i32 @utime(i8* noundef %16, %struct.timespec* noundef %5) #10, !dbg !2186
  %18 = icmp ne i32 %17, 0, !dbg !2186
  br i1 %18, label %19, label %41, !dbg !2187

19:                                               ; preds = %2
  %20 = load %struct.stat*, %struct.stat** %4, align 8, !dbg !2188
  %21 = getelementptr inbounds %struct.stat, %struct.stat* %20, i32 0, i32 3, !dbg !2188
  %22 = load i32, i32* %21, align 8, !dbg !2188
  %23 = and i32 %22, 61440, !dbg !2188
  %24 = icmp eq i32 %23, 16384, !dbg !2188
  br i1 %24, label %41, label %25, !dbg !2189

25:                                               ; preds = %19
  %26 = load i32, i32* @quiet, align 4, !dbg !2190
  %27 = icmp ne i32 %26, 0, !dbg !2190
  br i1 %27, label %32, label %28, !dbg !2194

28:                                               ; preds = %25
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2190
  %30 = load i8*, i8** @progname, align 8, !dbg !2190
  %31 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %29, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.103, i64 0, i64 0), i8* noundef %30), !dbg !2190
  br label %32, !dbg !2190

32:                                               ; preds = %28, %25
  %33 = load i32, i32* @exit_code, align 4, !dbg !2195
  %34 = icmp eq i32 %33, 0, !dbg !2195
  br i1 %34, label %35, label %36, !dbg !2194

35:                                               ; preds = %32
  store i32 2, i32* @exit_code, align 4, !dbg !2195
  br label %36, !dbg !2195

36:                                               ; preds = %35, %32
  %37 = load i32, i32* @quiet, align 4, !dbg !2197
  %38 = icmp ne i32 %37, 0, !dbg !2197
  br i1 %38, label %40, label %39, !dbg !2199

39:                                               ; preds = %36
  call void @perror(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i64 0, i64 0)), !dbg !2200
  br label %40, !dbg !2200

40:                                               ; preds = %39, %36
  br label %41, !dbg !2201

41:                                               ; preds = %40, %19, %2
  ret void, !dbg !2202
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @make_ofname() #0 !dbg !2203 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !2206, metadata !DIExpression()), !dbg !2207
  %3 = call i8* @strcpy(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i64 0, i64 0), i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0)) #10, !dbg !2208
  %4 = call i8* @get_suffix(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i64 0, i64 0)), !dbg !2209
  store i8* %4, i8** %2, align 8, !dbg !2210
  %5 = load i32, i32* @decompress, align 4, !dbg !2211
  %6 = icmp ne i32 %5, 0, !dbg !2211
  br i1 %6, label %7, label %58, !dbg !2213

7:                                                ; preds = %0
  %8 = load i8*, i8** %2, align 8, !dbg !2214
  %9 = icmp eq i8* %8, null, !dbg !2217
  br i1 %9, label %10, label %42, !dbg !2218

10:                                               ; preds = %7
  %11 = load i32, i32* @recursive, align 4, !dbg !2219
  %12 = icmp ne i32 %11, 0, !dbg !2219
  br i1 %12, label %20, label %13, !dbg !2222

13:                                               ; preds = %10
  %14 = load i32, i32* @list, align 4, !dbg !2223
  %15 = icmp ne i32 %14, 0, !dbg !2223
  br i1 %15, label %19, label %16, !dbg !2224

16:                                               ; preds = %13
  %17 = load i32, i32* @test, align 4, !dbg !2225
  %18 = icmp ne i32 %17, 0, !dbg !2225
  br i1 %18, label %19, label %20, !dbg !2226

19:                                               ; preds = %16, %13
  store i32 0, i32* %1, align 4, !dbg !2227
  br label %84, !dbg !2227

20:                                               ; preds = %16, %10
  %21 = load i32, i32* @verbose, align 4, !dbg !2228
  %22 = icmp ne i32 %21, 0, !dbg !2228
  br i1 %22, label %29, label %23, !dbg !2230

23:                                               ; preds = %20
  %24 = load i32, i32* @recursive, align 4, !dbg !2231
  %25 = icmp ne i32 %24, 0, !dbg !2231
  br i1 %25, label %41, label %26, !dbg !2232

26:                                               ; preds = %23
  %27 = load i32, i32* @quiet, align 4, !dbg !2233
  %28 = icmp ne i32 %27, 0, !dbg !2233
  br i1 %28, label %41, label %29, !dbg !2234

29:                                               ; preds = %26, %20
  %30 = load i32, i32* @quiet, align 4, !dbg !2235
  %31 = icmp ne i32 %30, 0, !dbg !2235
  br i1 %31, label %36, label %32, !dbg !2239

32:                                               ; preds = %29
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2235
  %34 = load i8*, i8** @progname, align 8, !dbg !2235
  %35 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %33, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.122, i64 0, i64 0), i8* noundef %34, i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0)), !dbg !2235
  br label %36, !dbg !2235

36:                                               ; preds = %32, %29
  %37 = load i32, i32* @exit_code, align 4, !dbg !2240
  %38 = icmp eq i32 %37, 0, !dbg !2240
  br i1 %38, label %39, label %40, !dbg !2239

39:                                               ; preds = %36
  store i32 2, i32* @exit_code, align 4, !dbg !2240
  br label %40, !dbg !2240

40:                                               ; preds = %39, %36
  br label %41, !dbg !2242

41:                                               ; preds = %40, %26, %23
  store i32 2, i32* %1, align 4, !dbg !2243
  br label %84, !dbg !2243

42:                                               ; preds = %7
  %43 = load i8*, i8** %2, align 8, !dbg !2244
  %44 = call i8* @strlwr(i8* noundef %43), !dbg !2245
  %45 = load i8*, i8** %2, align 8, !dbg !2246
  %46 = call i32 @strcmp(i8* noundef %45, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.114, i64 0, i64 0)) #9, !dbg !2246
  %47 = icmp eq i32 %46, 0, !dbg !2246
  br i1 %47, label %52, label %48, !dbg !2248

48:                                               ; preds = %42
  %49 = load i8*, i8** %2, align 8, !dbg !2249
  %50 = call i32 @strcmp(i8* noundef %49, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.113, i64 0, i64 0)) #9, !dbg !2249
  %51 = icmp eq i32 %50, 0, !dbg !2249
  br i1 %51, label %52, label %55, !dbg !2250

52:                                               ; preds = %48, %42
  %53 = load i8*, i8** %2, align 8, !dbg !2251
  %54 = call i8* @strcpy(i8* noundef %53, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.123, i64 0, i64 0)) #10, !dbg !2253
  br label %57, !dbg !2254

55:                                               ; preds = %48
  %56 = load i8*, i8** %2, align 8, !dbg !2255
  store i8 0, i8* %56, align 1, !dbg !2257
  br label %57

57:                                               ; preds = %55, %52
  br label %83, !dbg !2258

58:                                               ; preds = %0
  %59 = load i8*, i8** %2, align 8, !dbg !2259
  %60 = icmp ne i8* %59, null, !dbg !2261
  br i1 %60, label %61, label %80, !dbg !2262

61:                                               ; preds = %58
  %62 = load i32, i32* @verbose, align 4, !dbg !2263
  %63 = icmp ne i32 %62, 0, !dbg !2263
  br i1 %63, label %70, label %64, !dbg !2266

64:                                               ; preds = %61
  %65 = load i32, i32* @recursive, align 4, !dbg !2267
  %66 = icmp ne i32 %65, 0, !dbg !2267
  br i1 %66, label %75, label %67, !dbg !2268

67:                                               ; preds = %64
  %68 = load i32, i32* @quiet, align 4, !dbg !2269
  %69 = icmp ne i32 %68, 0, !dbg !2269
  br i1 %69, label %75, label %70, !dbg !2270

70:                                               ; preds = %67, %61
  %71 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2271
  %72 = load i8*, i8** @progname, align 8, !dbg !2273
  %73 = load i8*, i8** %2, align 8, !dbg !2274
  %74 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %71, i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.124, i64 0, i64 0), i8* noundef %72, i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0), i8* noundef %73), !dbg !2275
  br label %75, !dbg !2276

75:                                               ; preds = %70, %67, %64
  %76 = load i32, i32* @exit_code, align 4, !dbg !2277
  %77 = icmp eq i32 %76, 0, !dbg !2279
  br i1 %77, label %78, label %79, !dbg !2280

78:                                               ; preds = %75
  store i32 2, i32* @exit_code, align 4, !dbg !2281
  br label %79, !dbg !2282

79:                                               ; preds = %78, %75
  store i32 2, i32* %1, align 4, !dbg !2283
  br label %84, !dbg !2283

80:                                               ; preds = %58
  store i32 0, i32* @save_orig_name, align 4, !dbg !2284
  %81 = call i8* @strcat(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i64 0, i64 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @z_suffix, i64 0, i64 0)) #10, !dbg !2286
  br label %82

82:                                               ; preds = %80
  br label %83

83:                                               ; preds = %82, %57
  store i32 0, i32* %1, align 4, !dbg !2287
  br label %84, !dbg !2287

84:                                               ; preds = %83, %79, %41, %19
  %85 = load i32, i32* %1, align 4, !dbg !2288
  ret i32 %85, !dbg !2288
}

declare dso_local i32 @open(i8* noundef, i32 noundef, ...) #4

declare dso_local void @perror(i8* noundef) #4

declare dso_local i32 @close(i32 noundef) #4

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @create_outfile() #0 !dbg !2289 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.stat, align 8
  %3 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata %struct.stat* %2, metadata !2290, metadata !DIExpression()), !dbg !2291
  call void @llvm.dbg.declare(metadata i32* %3, metadata !2292, metadata !DIExpression()), !dbg !2293
  store i32 193, i32* %3, align 4, !dbg !2293
  %4 = load i32, i32* @ascii, align 4, !dbg !2294
  %5 = icmp ne i32 %4, 0, !dbg !2294
  br i1 %5, label %6, label %12, !dbg !2296

6:                                                ; preds = %0
  %7 = load i32, i32* @decompress, align 4, !dbg !2297
  %8 = icmp ne i32 %7, 0, !dbg !2297
  br i1 %8, label %9, label %12, !dbg !2298

9:                                                ; preds = %6
  %10 = load i32, i32* %3, align 4, !dbg !2299
  %11 = and i32 %10, -1, !dbg !2299
  store i32 %11, i32* %3, align 4, !dbg !2299
  br label %12, !dbg !2301

12:                                               ; preds = %9, %6, %0
  br label %13, !dbg !2302

13:                                               ; preds = %59, %12
  %14 = call i32 @check_ofname(), !dbg !2303
  %15 = icmp ne i32 %14, 0, !dbg !2308
  br i1 %15, label %16, label %19, !dbg !2309

16:                                               ; preds = %13
  %17 = load i32, i32* @ifd, align 4, !dbg !2310
  %18 = call i32 @close(i32 noundef %17), !dbg !2312
  store i32 1, i32* %1, align 4, !dbg !2313
  br label %63, !dbg !2313

19:                                               ; preds = %13
  store i32 1, i32* @remove_ofname, align 4, !dbg !2314
  %20 = load i32, i32* %3, align 4, !dbg !2315
  %21 = call i32 (i8*, i32, ...) @open(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i64 0, i64 0), i32 noundef %20, i32 noundef 384), !dbg !2315
  store i32 %21, i32* @ofd, align 4, !dbg !2316
  %22 = load i32, i32* @ofd, align 4, !dbg !2317
  %23 = icmp eq i32 %22, -1, !dbg !2319
  br i1 %23, label %24, label %27, !dbg !2320

24:                                               ; preds = %19
  call void @perror(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i64 0, i64 0)), !dbg !2321
  %25 = load i32, i32* @ifd, align 4, !dbg !2323
  %26 = call i32 @close(i32 noundef %25), !dbg !2324
  store i32 1, i32* @exit_code, align 4, !dbg !2325
  store i32 1, i32* %1, align 4, !dbg !2326
  br label %63, !dbg !2326

27:                                               ; preds = %19
  %28 = load i32, i32* @ofd, align 4, !dbg !2327
  %29 = call i32 @fstat(i32 noundef %28, %struct.stat* noundef %2) #10, !dbg !2329
  %30 = icmp ne i32 %29, 0, !dbg !2330
  br i1 %30, label %31, label %40, !dbg !2331

31:                                               ; preds = %27
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2332
  %33 = load i8*, i8** @progname, align 8, !dbg !2334
  %34 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %32, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.103, i64 0, i64 0), i8* noundef %33), !dbg !2335
  call void @perror(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i64 0, i64 0)), !dbg !2336
  %35 = load i32, i32* @ifd, align 4, !dbg !2337
  %36 = call i32 @close(i32 noundef %35), !dbg !2338
  %37 = load i32, i32* @ofd, align 4, !dbg !2339
  %38 = call i32 @close(i32 noundef %37), !dbg !2340
  %39 = call i32 @unlink(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i64 0, i64 0)) #10, !dbg !2341
  store i32 1, i32* @exit_code, align 4, !dbg !2342
  store i32 1, i32* %1, align 4, !dbg !2343
  br label %63, !dbg !2343

40:                                               ; preds = %27
  %41 = call i32 @name_too_long(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i64 0, i64 0), %struct.stat* noundef %2), !dbg !2344
  %42 = icmp ne i32 %41, 0, !dbg !2344
  br i1 %42, label %44, label %43, !dbg !2346

43:                                               ; preds = %40
  store i32 0, i32* %1, align 4, !dbg !2347
  br label %63, !dbg !2347

44:                                               ; preds = %40
  %45 = load i32, i32* @decompress, align 4, !dbg !2348
  %46 = icmp ne i32 %45, 0, !dbg !2348
  br i1 %46, label %47, label %59, !dbg !2350

47:                                               ; preds = %44
  %48 = load i32, i32* @quiet, align 4, !dbg !2351
  %49 = icmp ne i32 %48, 0, !dbg !2351
  br i1 %49, label %54, label %50, !dbg !2355

50:                                               ; preds = %47
  %51 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2351
  %52 = load i8*, i8** @progname, align 8, !dbg !2351
  %53 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %51, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.125, i64 0, i64 0), i8* noundef %52, i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i64 0, i64 0)), !dbg !2351
  br label %54, !dbg !2351

54:                                               ; preds = %50, %47
  %55 = load i32, i32* @exit_code, align 4, !dbg !2356
  %56 = icmp eq i32 %55, 0, !dbg !2356
  br i1 %56, label %57, label %58, !dbg !2355

57:                                               ; preds = %54
  store i32 2, i32* @exit_code, align 4, !dbg !2356
  br label %58, !dbg !2356

58:                                               ; preds = %57, %54
  store i32 0, i32* %1, align 4, !dbg !2358
  br label %63, !dbg !2358

59:                                               ; preds = %44
  %60 = load i32, i32* @ofd, align 4, !dbg !2359
  %61 = call i32 @close(i32 noundef %60), !dbg !2360
  %62 = call i32 @unlink(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i64 0, i64 0)) #10, !dbg !2361
  call void @shorten_name(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i64 0, i64 0)), !dbg !2362
  br label %13, !dbg !2363, !llvm.loop !2364

63:                                               ; preds = %58, %43, %31, %24, %16
  %64 = load i32, i32* %1, align 4, !dbg !2367
  ret i32 %64, !dbg !2367
}

; Function Attrs: nounwind
declare dso_local i32 @unlink(i8* noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @copy_stat(%struct.stat* noundef %0) #0 !dbg !2368 {
  %2 = alloca %struct.stat*, align 8
  store %struct.stat* %0, %struct.stat** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %2, metadata !2371, metadata !DIExpression()), !dbg !2372
  %3 = load i32, i32* @decompress, align 4, !dbg !2373
  %4 = icmp ne i32 %3, 0, !dbg !2373
  br i1 %4, label %5, label %26, !dbg !2375

5:                                                ; preds = %1
  %6 = load i64, i64* @time_stamp, align 8, !dbg !2376
  %7 = icmp ne i64 %6, 0, !dbg !2377
  br i1 %7, label %8, label %26, !dbg !2378

8:                                                ; preds = %5
  %9 = load %struct.stat*, %struct.stat** %2, align 8, !dbg !2379
  %10 = getelementptr inbounds %struct.stat, %struct.stat* %9, i32 0, i32 12, !dbg !2380
  %11 = getelementptr inbounds %struct.timespec, %struct.timespec* %10, i32 0, i32 0, !dbg !2380
  %12 = load i64, i64* %11, align 8, !dbg !2380
  %13 = load i64, i64* @time_stamp, align 8, !dbg !2381
  %14 = icmp ne i64 %12, %13, !dbg !2382
  br i1 %14, label %15, label %26, !dbg !2383

15:                                               ; preds = %8
  %16 = load i64, i64* @time_stamp, align 8, !dbg !2384
  %17 = load %struct.stat*, %struct.stat** %2, align 8, !dbg !2386
  %18 = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 12, !dbg !2387
  %19 = getelementptr inbounds %struct.timespec, %struct.timespec* %18, i32 0, i32 0, !dbg !2387
  store i64 %16, i64* %19, align 8, !dbg !2388
  %20 = load i32, i32* @verbose, align 4, !dbg !2389
  %21 = icmp sgt i32 %20, 1, !dbg !2391
  br i1 %21, label %22, label %25, !dbg !2392

22:                                               ; preds = %15
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2393
  %24 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %23, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.135, i64 0, i64 0), i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i64 0, i64 0)), !dbg !2395
  br label %25, !dbg !2396

25:                                               ; preds = %22, %15
  br label %26, !dbg !2397

26:                                               ; preds = %25, %8, %5, %1
  %27 = load %struct.stat*, %struct.stat** %2, align 8, !dbg !2398
  call void @reset_times(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i64 0, i64 0), %struct.stat* noundef %27), !dbg !2399
  %28 = load %struct.stat*, %struct.stat** %2, align 8, !dbg !2400
  %29 = getelementptr inbounds %struct.stat, %struct.stat* %28, i32 0, i32 3, !dbg !2402
  %30 = load i32, i32* %29, align 8, !dbg !2402
  %31 = and i32 %30, 4095, !dbg !2403
  %32 = call i32 @chmod(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i64 0, i64 0), i32 noundef %31) #10, !dbg !2404
  %33 = icmp ne i32 %32, 0, !dbg !2404
  br i1 %33, label %34, label %50, !dbg !2405

34:                                               ; preds = %26
  %35 = load i32, i32* @quiet, align 4, !dbg !2406
  %36 = icmp ne i32 %35, 0, !dbg !2406
  br i1 %36, label %41, label %37, !dbg !2410

37:                                               ; preds = %34
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2406
  %39 = load i8*, i8** @progname, align 8, !dbg !2406
  %40 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %38, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.103, i64 0, i64 0), i8* noundef %39), !dbg !2406
  br label %41, !dbg !2406

41:                                               ; preds = %37, %34
  %42 = load i32, i32* @exit_code, align 4, !dbg !2411
  %43 = icmp eq i32 %42, 0, !dbg !2411
  br i1 %43, label %44, label %45, !dbg !2410

44:                                               ; preds = %41
  store i32 2, i32* @exit_code, align 4, !dbg !2411
  br label %45, !dbg !2411

45:                                               ; preds = %44, %41
  %46 = load i32, i32* @quiet, align 4, !dbg !2413
  %47 = icmp ne i32 %46, 0, !dbg !2413
  br i1 %47, label %49, label %48, !dbg !2415

48:                                               ; preds = %45
  call void @perror(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i64 0, i64 0)), !dbg !2416
  br label %49, !dbg !2416

49:                                               ; preds = %48, %45
  br label %50, !dbg !2417

50:                                               ; preds = %49, %26
  %51 = load %struct.stat*, %struct.stat** %2, align 8, !dbg !2418
  %52 = getelementptr inbounds %struct.stat, %struct.stat* %51, i32 0, i32 4, !dbg !2419
  %53 = load i32, i32* %52, align 4, !dbg !2419
  %54 = load %struct.stat*, %struct.stat** %2, align 8, !dbg !2420
  %55 = getelementptr inbounds %struct.stat, %struct.stat* %54, i32 0, i32 5, !dbg !2421
  %56 = load i32, i32* %55, align 8, !dbg !2421
  %57 = call i32 @chown(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i64 0, i64 0), i32 noundef %53, i32 noundef %56) #10, !dbg !2422
  store i32 0, i32* @remove_ofname, align 4, !dbg !2423
  %58 = call i32 @chmod(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0), i32 noundef 511) #10, !dbg !2424
  %59 = call i32 @unlink(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0)) #10, !dbg !2425
  %60 = icmp ne i32 %59, 0, !dbg !2425
  br i1 %60, label %61, label %77, !dbg !2427

61:                                               ; preds = %50
  %62 = load i32, i32* @quiet, align 4, !dbg !2428
  %63 = icmp ne i32 %62, 0, !dbg !2428
  br i1 %63, label %68, label %64, !dbg !2432

64:                                               ; preds = %61
  %65 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2428
  %66 = load i8*, i8** @progname, align 8, !dbg !2428
  %67 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %65, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.103, i64 0, i64 0), i8* noundef %66), !dbg !2428
  br label %68, !dbg !2428

68:                                               ; preds = %64, %61
  %69 = load i32, i32* @exit_code, align 4, !dbg !2433
  %70 = icmp eq i32 %69, 0, !dbg !2433
  br i1 %70, label %71, label %72, !dbg !2432

71:                                               ; preds = %68
  store i32 2, i32* @exit_code, align 4, !dbg !2433
  br label %72, !dbg !2433

72:                                               ; preds = %71, %68
  %73 = load i32, i32* @quiet, align 4, !dbg !2435
  %74 = icmp ne i32 %73, 0, !dbg !2435
  br i1 %74, label %76, label %75, !dbg !2437

75:                                               ; preds = %72
  call void @perror(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0)), !dbg !2438
  br label %76, !dbg !2438

76:                                               ; preds = %75, %72
  br label %77, !dbg !2439

77:                                               ; preds = %76, %50
  ret void, !dbg !2440
}

; Function Attrs: nounwind
declare dso_local i32 @chmod(i8* noundef, i32 noundef) #3

; Function Attrs: nounwind
declare dso_local i32 @chown(i8* noundef, i32 noundef, i32 noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @check_ofname() #0 !dbg !2441 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.stat, align 8
  %3 = alloca [80 x i8], align 16
  call void @llvm.dbg.declare(metadata %struct.stat* %2, metadata !2442, metadata !DIExpression()), !dbg !2443
  %4 = call i32* @__errno_location() #12, !dbg !2444
  store i32 0, i32* %4, align 4, !dbg !2445
  br label %5, !dbg !2446

5:                                                ; preds = %13, %0
  %6 = call i32 @stat(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i64 0, i64 0), %struct.stat* noundef %2) #10, !dbg !2447
  %7 = icmp ne i32 %6, 0, !dbg !2448
  br i1 %7, label %8, label %14, !dbg !2446

8:                                                ; preds = %5
  %9 = call i32* @__errno_location() #12, !dbg !2449
  %10 = load i32, i32* %9, align 4, !dbg !2449
  %11 = icmp ne i32 %10, 36, !dbg !2452
  br i1 %11, label %12, label %13, !dbg !2453

12:                                               ; preds = %8
  store i32 0, i32* %1, align 4, !dbg !2454
  br label %110, !dbg !2454

13:                                               ; preds = %8
  call void @shorten_name(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i64 0, i64 0)), !dbg !2455
  br label %5, !dbg !2446, !llvm.loop !2456

14:                                               ; preds = %5
  %15 = load i32, i32* @decompress, align 4, !dbg !2458
  %16 = icmp ne i32 %15, 0, !dbg !2458
  br i1 %16, label %25, label %17, !dbg !2460

17:                                               ; preds = %14
  %18 = call i32 @name_too_long(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i64 0, i64 0), %struct.stat* noundef %2), !dbg !2461
  %19 = icmp ne i32 %18, 0, !dbg !2461
  br i1 %19, label %20, label %25, !dbg !2462

20:                                               ; preds = %17
  call void @shorten_name(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i64 0, i64 0)), !dbg !2463
  %21 = call i32 @stat(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i64 0, i64 0), %struct.stat* noundef %2) #10, !dbg !2465
  %22 = icmp ne i32 %21, 0, !dbg !2467
  br i1 %22, label %23, label %24, !dbg !2468

23:                                               ; preds = %20
  store i32 0, i32* %1, align 4, !dbg !2469
  br label %110, !dbg !2469

24:                                               ; preds = %20
  br label %25, !dbg !2470

25:                                               ; preds = %24, %17, %14
  %26 = call i32 @same_file(%struct.stat* noundef @istat, %struct.stat* noundef %2), !dbg !2471
  %27 = icmp ne i32 %26, 0, !dbg !2471
  br i1 %27, label %28, label %44, !dbg !2473

28:                                               ; preds = %25
  %29 = call i32 @strcmp(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0), i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i64 0, i64 0)) #9, !dbg !2474
  %30 = icmp eq i32 %29, 0, !dbg !2474
  br i1 %30, label %31, label %39, !dbg !2477

31:                                               ; preds = %28
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2478
  %33 = load i8*, i8** @progname, align 8, !dbg !2480
  %34 = load i32, i32* @decompress, align 4, !dbg !2481
  %35 = icmp ne i32 %34, 0, !dbg !2481
  %36 = zext i1 %35 to i64, !dbg !2481
  %37 = select i1 %35, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.79, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.60, i64 0, i64 0), !dbg !2481
  %38 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %32, i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.126, i64 0, i64 0), i8* noundef %33, i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0), i8* noundef %37), !dbg !2482
  br label %43, !dbg !2483

39:                                               ; preds = %28
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2484
  %41 = load i8*, i8** @progname, align 8, !dbg !2486
  %42 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %40, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.127, i64 0, i64 0), i8* noundef %41, i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0), i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i64 0, i64 0)), !dbg !2487
  br label %43

43:                                               ; preds = %39, %31
  store i32 1, i32* @exit_code, align 4, !dbg !2488
  store i32 1, i32* %1, align 4, !dbg !2489
  br label %110, !dbg !2489

44:                                               ; preds = %25
  %45 = load i32, i32* @force, align 4, !dbg !2490
  %46 = icmp ne i32 %45, 0, !dbg !2490
  br i1 %46, label %101, label %47, !dbg !2492

47:                                               ; preds = %44
  call void @llvm.dbg.declare(metadata [80 x i8]* %3, metadata !2493, metadata !DIExpression()), !dbg !2498
  %48 = getelementptr inbounds [80 x i8], [80 x i8]* %3, i64 0, i64 0, !dbg !2499
  %49 = call i8* @strcpy(i8* noundef %48, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.128, i64 0, i64 0)) #10, !dbg !2500
  %50 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2501
  %51 = load i8*, i8** @progname, align 8, !dbg !2502
  %52 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %50, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.129, i64 0, i64 0), i8* noundef %51, i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i64 0, i64 0)), !dbg !2503
  %53 = load i32, i32* @foreground, align 4, !dbg !2504
  %54 = icmp ne i32 %53, 0, !dbg !2504
  br i1 %54, label %55, label %68, !dbg !2506

55:                                               ; preds = %47
  %56 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2507
  %57 = call i32 @fileno(%struct._IO_FILE* noundef %56) #10, !dbg !2508
  %58 = call i32 @isatty(i32 noundef %57) #10, !dbg !2509
  %59 = icmp ne i32 %58, 0, !dbg !2509
  br i1 %59, label %60, label %68, !dbg !2510

60:                                               ; preds = %55
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2511
  %62 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %61, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.130, i64 0, i64 0)), !dbg !2513
  %63 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2514
  %64 = call i32 @fflush(%struct._IO_FILE* noundef %63), !dbg !2515
  %65 = getelementptr inbounds [80 x i8], [80 x i8]* %3, i64 0, i64 0, !dbg !2516
  %66 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2517
  %67 = call i8* @fgets(i8* noundef %65, i32 noundef 79, %struct._IO_FILE* noundef %66), !dbg !2518
  br label %68, !dbg !2519

68:                                               ; preds = %60, %55, %47
  %69 = call i16** @__ctype_b_loc() #12, !dbg !2520
  %70 = load i16*, i16** %69, align 8, !dbg !2520
  %71 = getelementptr inbounds [80 x i8], [80 x i8]* %3, i64 0, i64 0, !dbg !2520
  %72 = load i8, i8* %71, align 16, !dbg !2520
  %73 = sext i8 %72 to i32, !dbg !2520
  %74 = sext i32 %73 to i64, !dbg !2520
  %75 = getelementptr inbounds i16, i16* %70, i64 %74, !dbg !2520
  %76 = load i16, i16* %75, align 2, !dbg !2520
  %77 = zext i16 %76 to i32, !dbg !2520
  %78 = and i32 %77, 256, !dbg !2520
  %79 = icmp ne i32 %78, 0, !dbg !2520
  br i1 %79, label %80, label %86, !dbg !2520

80:                                               ; preds = %68
  %81 = getelementptr inbounds [80 x i8], [80 x i8]* %3, i64 0, i64 0, !dbg !2520
  %82 = load i8, i8* %81, align 16, !dbg !2520
  %83 = sext i8 %82 to i32, !dbg !2520
  %84 = sub nsw i32 %83, 65, !dbg !2520
  %85 = add nsw i32 %84, 97, !dbg !2520
  br label %90, !dbg !2520

86:                                               ; preds = %68
  %87 = getelementptr inbounds [80 x i8], [80 x i8]* %3, i64 0, i64 0, !dbg !2520
  %88 = load i8, i8* %87, align 16, !dbg !2520
  %89 = sext i8 %88 to i32, !dbg !2520
  br label %90, !dbg !2520

90:                                               ; preds = %86, %80
  %91 = phi i32 [ %85, %80 ], [ %89, %86 ], !dbg !2520
  %92 = icmp ne i32 %91, 121, !dbg !2522
  br i1 %92, label %93, label %100, !dbg !2523

93:                                               ; preds = %90
  %94 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2524
  %95 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %94, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.131, i64 0, i64 0)), !dbg !2526
  %96 = load i32, i32* @exit_code, align 4, !dbg !2527
  %97 = icmp eq i32 %96, 0, !dbg !2529
  br i1 %97, label %98, label %99, !dbg !2530

98:                                               ; preds = %93
  store i32 2, i32* @exit_code, align 4, !dbg !2531
  br label %99, !dbg !2532

99:                                               ; preds = %98, %93
  store i32 1, i32* %1, align 4, !dbg !2533
  br label %110, !dbg !2533

100:                                              ; preds = %90
  br label %101, !dbg !2534

101:                                              ; preds = %100, %44
  %102 = call i32 @chmod(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i64 0, i64 0), i32 noundef 511) #10, !dbg !2535
  %103 = call i32 @unlink(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i64 0, i64 0)) #10, !dbg !2536
  %104 = icmp ne i32 %103, 0, !dbg !2536
  br i1 %104, label %105, label %109, !dbg !2538

105:                                              ; preds = %101
  %106 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2539
  %107 = load i8*, i8** @progname, align 8, !dbg !2541
  %108 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %106, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.103, i64 0, i64 0), i8* noundef %107), !dbg !2542
  call void @perror(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i64 0, i64 0)), !dbg !2543
  store i32 1, i32* @exit_code, align 4, !dbg !2544
  store i32 1, i32* %1, align 4, !dbg !2545
  br label %110, !dbg !2545

109:                                              ; preds = %101
  store i32 0, i32* %1, align 4, !dbg !2546
  br label %110, !dbg !2546

110:                                              ; preds = %109, %105, %99, %43, %23, %12
  %111 = load i32, i32* %1, align 4, !dbg !2547
  ret i32 %111, !dbg !2547
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @name_too_long(i8* noundef %0, %struct.stat* noundef %1) #0 !dbg !2548 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.stat*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca %struct.stat, align 8
  %8 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !2549, metadata !DIExpression()), !dbg !2550
  store %struct.stat* %1, %struct.stat** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %4, metadata !2551, metadata !DIExpression()), !dbg !2552
  call void @llvm.dbg.declare(metadata i32* %5, metadata !2553, metadata !DIExpression()), !dbg !2554
  %9 = load i8*, i8** %3, align 8, !dbg !2555
  %10 = call i64 @strlen(i8* noundef %9) #9, !dbg !2556
  %11 = trunc i64 %10 to i32, !dbg !2556
  store i32 %11, i32* %5, align 4, !dbg !2554
  call void @llvm.dbg.declare(metadata i8* %6, metadata !2557, metadata !DIExpression()), !dbg !2558
  %12 = load i8*, i8** %3, align 8, !dbg !2559
  %13 = load i32, i32* %5, align 4, !dbg !2560
  %14 = sub nsw i32 %13, 1, !dbg !2561
  %15 = sext i32 %14 to i64, !dbg !2559
  %16 = getelementptr inbounds i8, i8* %12, i64 %15, !dbg !2559
  %17 = load i8, i8* %16, align 1, !dbg !2559
  store i8 %17, i8* %6, align 1, !dbg !2558
  call void @llvm.dbg.declare(metadata %struct.stat* %7, metadata !2562, metadata !DIExpression()), !dbg !2563
  call void @llvm.dbg.declare(metadata i32* %8, metadata !2564, metadata !DIExpression()), !dbg !2565
  %18 = load %struct.stat*, %struct.stat** %4, align 8, !dbg !2566
  %19 = bitcast %struct.stat* %7 to i8*, !dbg !2567
  %20 = bitcast %struct.stat* %18 to i8*, !dbg !2567
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 144, i1 false), !dbg !2567
  %21 = load i8*, i8** %3, align 8, !dbg !2568
  %22 = load i32, i32* %5, align 4, !dbg !2569
  %23 = sub nsw i32 %22, 1, !dbg !2570
  %24 = sext i32 %23 to i64, !dbg !2568
  %25 = getelementptr inbounds i8, i8* %21, i64 %24, !dbg !2568
  store i8 0, i8* %25, align 1, !dbg !2571
  %26 = load i8*, i8** %3, align 8, !dbg !2572
  %27 = call i32 @stat(i8* noundef %26, %struct.stat* noundef %7) #10, !dbg !2573
  %28 = icmp eq i32 %27, 0, !dbg !2574
  br i1 %28, label %29, label %33, !dbg !2575

29:                                               ; preds = %2
  %30 = load %struct.stat*, %struct.stat** %4, align 8, !dbg !2576
  %31 = call i32 @same_file(%struct.stat* noundef %30, %struct.stat* noundef %7), !dbg !2577
  %32 = icmp ne i32 %31, 0, !dbg !2575
  br label %33

33:                                               ; preds = %29, %2
  %34 = phi i1 [ false, %2 ], [ %32, %29 ], !dbg !2578
  %35 = zext i1 %34 to i32, !dbg !2575
  store i32 %35, i32* %8, align 4, !dbg !2579
  %36 = load i8, i8* %6, align 1, !dbg !2580
  %37 = load i8*, i8** %3, align 8, !dbg !2581
  %38 = load i32, i32* %5, align 4, !dbg !2582
  %39 = sub nsw i32 %38, 1, !dbg !2583
  %40 = sext i32 %39 to i64, !dbg !2581
  %41 = getelementptr inbounds i8, i8* %37, i64 %40, !dbg !2581
  store i8 %36, i8* %41, align 1, !dbg !2584
  %42 = load i32, i32* %8, align 4, !dbg !2585
  ret i32 %42, !dbg !2586
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @shorten_name(i8* noundef %0) #0 !dbg !2587 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !2588, metadata !DIExpression()), !dbg !2589
  call void @llvm.dbg.declare(metadata i32* %3, metadata !2590, metadata !DIExpression()), !dbg !2591
  call void @llvm.dbg.declare(metadata i8** %4, metadata !2592, metadata !DIExpression()), !dbg !2593
  store i8* null, i8** %4, align 8, !dbg !2593
  call void @llvm.dbg.declare(metadata i32* %5, metadata !2594, metadata !DIExpression()), !dbg !2595
  call void @llvm.dbg.declare(metadata i32* %6, metadata !2596, metadata !DIExpression()), !dbg !2597
  store i32 3, i32* %6, align 4, !dbg !2597
  call void @llvm.dbg.declare(metadata i8** %7, metadata !2598, metadata !DIExpression()), !dbg !2599
  %8 = load i8*, i8** %2, align 8, !dbg !2600
  %9 = call i64 @strlen(i8* noundef %8) #9, !dbg !2601
  %10 = trunc i64 %9 to i32, !dbg !2601
  store i32 %10, i32* %3, align 4, !dbg !2602
  %11 = load i32, i32* @decompress, align 4, !dbg !2603
  %12 = icmp ne i32 %11, 0, !dbg !2603
  br i1 %12, label %13, label %23, !dbg !2605

13:                                               ; preds = %1
  %14 = load i32, i32* %3, align 4, !dbg !2606
  %15 = icmp sle i32 %14, 1, !dbg !2609
  br i1 %15, label %16, label %17, !dbg !2610

16:                                               ; preds = %13
  call void @error(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.132, i64 0, i64 0)), !dbg !2611
  br label %17, !dbg !2611

17:                                               ; preds = %16, %13
  %18 = load i8*, i8** %2, align 8, !dbg !2612
  %19 = load i32, i32* %3, align 4, !dbg !2613
  %20 = sub nsw i32 %19, 1, !dbg !2614
  %21 = sext i32 %20 to i64, !dbg !2612
  %22 = getelementptr inbounds i8, i8* %18, i64 %21, !dbg !2612
  store i8 0, i8* %22, align 1, !dbg !2615
  br label %130, !dbg !2616

23:                                               ; preds = %1
  %24 = load i8*, i8** %2, align 8, !dbg !2617
  %25 = call i8* @get_suffix(i8* noundef %24), !dbg !2618
  store i8* %25, i8** %7, align 8, !dbg !2619
  %26 = load i8*, i8** %7, align 8, !dbg !2620
  %27 = icmp eq i8* %26, null, !dbg !2622
  br i1 %27, label %28, label %29, !dbg !2623

28:                                               ; preds = %23
  call void @error(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.133, i64 0, i64 0)), !dbg !2624
  br label %29, !dbg !2624

29:                                               ; preds = %28, %23
  %30 = load i8*, i8** %7, align 8, !dbg !2625
  store i8 0, i8* %30, align 1, !dbg !2626
  store i32 1, i32* @save_orig_name, align 4, !dbg !2627
  %31 = load i32, i32* %3, align 4, !dbg !2628
  %32 = icmp sgt i32 %31, 4, !dbg !2630
  br i1 %32, label %33, label %42, !dbg !2631

33:                                               ; preds = %29
  %34 = load i8*, i8** %7, align 8, !dbg !2632
  %35 = getelementptr inbounds i8, i8* %34, i64 -4, !dbg !2632
  %36 = call i32 @strcmp(i8* noundef %35, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.123, i64 0, i64 0)) #9, !dbg !2632
  %37 = icmp eq i32 %36, 0, !dbg !2632
  br i1 %37, label %38, label %42, !dbg !2633

38:                                               ; preds = %33
  %39 = load i8*, i8** %7, align 8, !dbg !2634
  %40 = getelementptr inbounds i8, i8* %39, i64 -4, !dbg !2636
  %41 = call i8* @strcpy(i8* noundef %40, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.114, i64 0, i64 0)) #10, !dbg !2637
  br label %130, !dbg !2638

42:                                               ; preds = %33, %29
  br label %43, !dbg !2639

43:                                               ; preds = %89, %42
  %44 = load i8*, i8** %2, align 8, !dbg !2640
  %45 = call i8* @strrchr(i8* noundef %44, i32 noundef 47) #9, !dbg !2642
  store i8* %45, i8** %7, align 8, !dbg !2643
  %46 = load i8*, i8** %7, align 8, !dbg !2644
  %47 = icmp ne i8* %46, null, !dbg !2644
  br i1 %47, label %48, label %51, !dbg !2644

48:                                               ; preds = %43
  %49 = load i8*, i8** %7, align 8, !dbg !2645
  %50 = getelementptr inbounds i8, i8* %49, i64 1, !dbg !2646
  br label %53, !dbg !2644

51:                                               ; preds = %43
  %52 = load i8*, i8** %2, align 8, !dbg !2647
  br label %53, !dbg !2644

53:                                               ; preds = %51, %48
  %54 = phi i8* [ %50, %48 ], [ %52, %51 ], !dbg !2644
  store i8* %54, i8** %7, align 8, !dbg !2648
  br label %55, !dbg !2649

55:                                               ; preds = %80, %53
  %56 = load i8*, i8** %7, align 8, !dbg !2650
  %57 = load i8, i8* %56, align 1, !dbg !2651
  %58 = icmp ne i8 %57, 0, !dbg !2649
  br i1 %58, label %59, label %81, !dbg !2649

59:                                               ; preds = %55
  %60 = load i8*, i8** %7, align 8, !dbg !2652
  %61 = call i64 @strcspn(i8* noundef %60, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.119, i64 0, i64 0)) #9, !dbg !2654
  %62 = trunc i64 %61 to i32, !dbg !2654
  store i32 %62, i32* %5, align 4, !dbg !2655
  %63 = load i32, i32* %5, align 4, !dbg !2656
  %64 = load i8*, i8** %7, align 8, !dbg !2657
  %65 = sext i32 %63 to i64, !dbg !2657
  %66 = getelementptr inbounds i8, i8* %64, i64 %65, !dbg !2657
  store i8* %66, i8** %7, align 8, !dbg !2657
  %67 = load i32, i32* %5, align 4, !dbg !2658
  %68 = load i32, i32* %6, align 4, !dbg !2660
  %69 = icmp sgt i32 %67, %68, !dbg !2661
  br i1 %69, label %70, label %73, !dbg !2662

70:                                               ; preds = %59
  %71 = load i8*, i8** %7, align 8, !dbg !2663
  %72 = getelementptr inbounds i8, i8* %71, i64 -1, !dbg !2664
  store i8* %72, i8** %4, align 8, !dbg !2665
  br label %73, !dbg !2666

73:                                               ; preds = %70, %59
  %74 = load i8*, i8** %7, align 8, !dbg !2667
  %75 = load i8, i8* %74, align 1, !dbg !2669
  %76 = icmp ne i8 %75, 0, !dbg !2669
  br i1 %76, label %77, label %80, !dbg !2670

77:                                               ; preds = %73
  %78 = load i8*, i8** %7, align 8, !dbg !2671
  %79 = getelementptr inbounds i8, i8* %78, i32 1, !dbg !2671
  store i8* %79, i8** %7, align 8, !dbg !2671
  br label %80, !dbg !2672

80:                                               ; preds = %77, %73
  br label %55, !dbg !2649, !llvm.loop !2673

81:                                               ; preds = %55
  br label %82, !dbg !2675

82:                                               ; preds = %81
  %83 = load i8*, i8** %4, align 8, !dbg !2676
  %84 = icmp eq i8* %83, null, !dbg !2677
  br i1 %84, label %85, label %89, !dbg !2678

85:                                               ; preds = %82
  %86 = load i32, i32* %6, align 4, !dbg !2679
  %87 = add nsw i32 %86, -1, !dbg !2679
  store i32 %87, i32* %6, align 4, !dbg !2679
  %88 = icmp ne i32 %87, 0, !dbg !2680
  br label %89

89:                                               ; preds = %85, %82
  %90 = phi i1 [ false, %82 ], [ %88, %85 ], !dbg !2681
  br i1 %90, label %43, label %91, !dbg !2675, !llvm.loop !2682

91:                                               ; preds = %89
  %92 = load i8*, i8** %4, align 8, !dbg !2684
  %93 = icmp ne i8* %92, null, !dbg !2686
  br i1 %93, label %94, label %109, !dbg !2687

94:                                               ; preds = %91
  br label %95, !dbg !2688

95:                                               ; preds = %101, %94
  %96 = load i8*, i8** %4, align 8, !dbg !2690
  %97 = getelementptr inbounds i8, i8* %96, i64 1, !dbg !2690
  %98 = load i8, i8* %97, align 1, !dbg !2690
  %99 = load i8*, i8** %4, align 8, !dbg !2692
  %100 = getelementptr inbounds i8, i8* %99, i64 0, !dbg !2692
  store i8 %98, i8* %100, align 1, !dbg !2693
  br label %101, !dbg !2694

101:                                              ; preds = %95
  %102 = load i8*, i8** %4, align 8, !dbg !2695
  %103 = getelementptr inbounds i8, i8* %102, i32 1, !dbg !2695
  store i8* %103, i8** %4, align 8, !dbg !2695
  %104 = load i8, i8* %102, align 1, !dbg !2696
  %105 = icmp ne i8 %104, 0, !dbg !2694
  br i1 %105, label %95, label %106, !dbg !2694, !llvm.loop !2697

106:                                              ; preds = %101
  %107 = load i8*, i8** %4, align 8, !dbg !2699
  %108 = getelementptr inbounds i8, i8* %107, i32 -1, !dbg !2699
  store i8* %108, i8** %4, align 8, !dbg !2699
  br label %127, !dbg !2700

109:                                              ; preds = %91
  %110 = load i8*, i8** %2, align 8, !dbg !2701
  %111 = load i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.119, i64 0, i64 0), align 1, !dbg !2703
  %112 = sext i8 %111 to i32, !dbg !2703
  %113 = call i8* @strrchr(i8* noundef %110, i32 noundef %112) #9, !dbg !2704
  store i8* %113, i8** %4, align 8, !dbg !2705
  %114 = load i8*, i8** %4, align 8, !dbg !2706
  %115 = icmp eq i8* %114, null, !dbg !2708
  br i1 %115, label %116, label %117, !dbg !2709

116:                                              ; preds = %109
  call void @error(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.134, i64 0, i64 0)), !dbg !2710
  br label %117, !dbg !2710

117:                                              ; preds = %116, %109
  %118 = load i8*, i8** %4, align 8, !dbg !2711
  %119 = getelementptr inbounds i8, i8* %118, i64 1, !dbg !2711
  %120 = load i8, i8* %119, align 1, !dbg !2711
  %121 = sext i8 %120 to i32, !dbg !2711
  %122 = icmp eq i32 %121, 0, !dbg !2713
  br i1 %122, label %123, label %126, !dbg !2714

123:                                              ; preds = %117
  %124 = load i8*, i8** %4, align 8, !dbg !2715
  %125 = getelementptr inbounds i8, i8* %124, i32 -1, !dbg !2715
  store i8* %125, i8** %4, align 8, !dbg !2715
  br label %126, !dbg !2716

126:                                              ; preds = %123, %117
  br label %127

127:                                              ; preds = %126, %106
  %128 = load i8*, i8** %4, align 8, !dbg !2717
  %129 = call i8* @strcpy(i8* noundef %128, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @z_suffix, i64 0, i64 0)) #10, !dbg !2718
  br label %130, !dbg !2719

130:                                              ; preds = %127, %38, %17
  ret void, !dbg !2719
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @get_suffix(i8* noundef %0) #0 !dbg !291 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca [33 x i8], align 16
  %7 = alloca i8**, align 8
  %8 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !2720, metadata !DIExpression()), !dbg !2721
  call void @llvm.dbg.declare(metadata i32* %4, metadata !2722, metadata !DIExpression()), !dbg !2723
  call void @llvm.dbg.declare(metadata i32* %5, metadata !2724, metadata !DIExpression()), !dbg !2725
  call void @llvm.dbg.declare(metadata [33 x i8]* %6, metadata !2726, metadata !DIExpression()), !dbg !2730
  call void @llvm.dbg.declare(metadata i8*** %7, metadata !2731, metadata !DIExpression()), !dbg !2732
  store i8** getelementptr inbounds ([9 x i8*], [9 x i8*]* @get_suffix.known_suffixes, i64 0, i64 0), i8*** %7, align 8, !dbg !2732
  %9 = call i32 @strcmp(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @z_suffix, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.117, i64 0, i64 0)) #9, !dbg !2733
  %10 = icmp eq i32 %9, 0, !dbg !2733
  br i1 %10, label %11, label %14, !dbg !2735

11:                                               ; preds = %1
  %12 = load i8**, i8*** %7, align 8, !dbg !2736
  %13 = getelementptr inbounds i8*, i8** %12, i32 1, !dbg !2736
  store i8** %13, i8*** %7, align 8, !dbg !2736
  br label %14, !dbg !2737

14:                                               ; preds = %11, %1
  %15 = load i8*, i8** %3, align 8, !dbg !2738
  %16 = call i64 @strlen(i8* noundef %15) #9, !dbg !2739
  %17 = trunc i64 %16 to i32, !dbg !2739
  store i32 %17, i32* %4, align 4, !dbg !2740
  %18 = load i32, i32* %4, align 4, !dbg !2741
  %19 = icmp sle i32 %18, 32, !dbg !2743
  br i1 %19, label %20, label %24, !dbg !2744

20:                                               ; preds = %14
  %21 = getelementptr inbounds [33 x i8], [33 x i8]* %6, i64 0, i64 0, !dbg !2745
  %22 = load i8*, i8** %3, align 8, !dbg !2747
  %23 = call i8* @strcpy(i8* noundef %21, i8* noundef %22) #10, !dbg !2748
  br label %33, !dbg !2749

24:                                               ; preds = %14
  %25 = getelementptr inbounds [33 x i8], [33 x i8]* %6, i64 0, i64 0, !dbg !2750
  %26 = load i8*, i8** %3, align 8, !dbg !2752
  %27 = load i32, i32* %4, align 4, !dbg !2753
  %28 = sext i32 %27 to i64, !dbg !2754
  %29 = getelementptr inbounds i8, i8* %26, i64 %28, !dbg !2754
  %30 = getelementptr inbounds i8, i8* %29, i64 -30, !dbg !2755
  %31 = getelementptr inbounds i8, i8* %30, i64 -2, !dbg !2756
  %32 = call i8* @strcpy(i8* noundef %25, i8* noundef %31) #10, !dbg !2757
  br label %33

33:                                               ; preds = %24, %20
  %34 = getelementptr inbounds [33 x i8], [33 x i8]* %6, i64 0, i64 0, !dbg !2758
  %35 = call i8* @strlwr(i8* noundef %34), !dbg !2759
  %36 = getelementptr inbounds [33 x i8], [33 x i8]* %6, i64 0, i64 0, !dbg !2760
  %37 = call i64 @strlen(i8* noundef %36) #9, !dbg !2761
  %38 = trunc i64 %37 to i32, !dbg !2761
  store i32 %38, i32* %5, align 4, !dbg !2762
  br label %39, !dbg !2763

39:                                               ; preds = %80, %33
  call void @llvm.dbg.declare(metadata i32* %8, metadata !2764, metadata !DIExpression()), !dbg !2766
  %40 = load i8**, i8*** %7, align 8, !dbg !2767
  %41 = load i8*, i8** %40, align 8, !dbg !2768
  %42 = call i64 @strlen(i8* noundef %41) #9, !dbg !2769
  %43 = trunc i64 %42 to i32, !dbg !2769
  store i32 %43, i32* %8, align 4, !dbg !2766
  %44 = load i32, i32* %5, align 4, !dbg !2770
  %45 = load i32, i32* %8, align 4, !dbg !2772
  %46 = icmp sgt i32 %44, %45, !dbg !2773
  br i1 %46, label %47, label %79, !dbg !2774

47:                                               ; preds = %39
  %48 = load i32, i32* %5, align 4, !dbg !2775
  %49 = load i32, i32* %8, align 4, !dbg !2776
  %50 = sub nsw i32 %48, %49, !dbg !2777
  %51 = sub nsw i32 %50, 1, !dbg !2778
  %52 = sext i32 %51 to i64, !dbg !2779
  %53 = getelementptr inbounds [33 x i8], [33 x i8]* %6, i64 0, i64 %52, !dbg !2779
  %54 = load i8, i8* %53, align 1, !dbg !2779
  %55 = sext i8 %54 to i32, !dbg !2779
  %56 = icmp ne i32 %55, 47, !dbg !2780
  br i1 %56, label %57, label %79, !dbg !2781

57:                                               ; preds = %47
  %58 = getelementptr inbounds [33 x i8], [33 x i8]* %6, i64 0, i64 0, !dbg !2782
  %59 = load i32, i32* %5, align 4, !dbg !2782
  %60 = sext i32 %59 to i64, !dbg !2782
  %61 = getelementptr inbounds i8, i8* %58, i64 %60, !dbg !2782
  %62 = load i32, i32* %8, align 4, !dbg !2782
  %63 = sext i32 %62 to i64, !dbg !2782
  %64 = sub i64 0, %63, !dbg !2782
  %65 = getelementptr inbounds i8, i8* %61, i64 %64, !dbg !2782
  %66 = load i8**, i8*** %7, align 8, !dbg !2782
  %67 = load i8*, i8** %66, align 8, !dbg !2782
  %68 = call i32 @strcmp(i8* noundef %65, i8* noundef %67) #9, !dbg !2782
  %69 = icmp eq i32 %68, 0, !dbg !2782
  br i1 %69, label %70, label %79, !dbg !2783

70:                                               ; preds = %57
  %71 = load i8*, i8** %3, align 8, !dbg !2784
  %72 = load i32, i32* %4, align 4, !dbg !2786
  %73 = sext i32 %72 to i64, !dbg !2787
  %74 = getelementptr inbounds i8, i8* %71, i64 %73, !dbg !2787
  %75 = load i32, i32* %8, align 4, !dbg !2788
  %76 = sext i32 %75 to i64, !dbg !2789
  %77 = sub i64 0, %76, !dbg !2789
  %78 = getelementptr inbounds i8, i8* %74, i64 %77, !dbg !2789
  store i8* %78, i8** %2, align 8, !dbg !2790
  br label %86, !dbg !2790

79:                                               ; preds = %57, %47, %39
  br label %80, !dbg !2791

80:                                               ; preds = %79
  %81 = load i8**, i8*** %7, align 8, !dbg !2792
  %82 = getelementptr inbounds i8*, i8** %81, i32 1, !dbg !2792
  store i8** %82, i8*** %7, align 8, !dbg !2792
  %83 = load i8*, i8** %82, align 8, !dbg !2793
  %84 = icmp ne i8* %83, null, !dbg !2794
  br i1 %84, label %39, label %85, !dbg !2791, !llvm.loop !2795

85:                                               ; preds = %80
  store i8* null, i8** %2, align 8, !dbg !2797
  br label %86, !dbg !2797

86:                                               ; preds = %85, %70
  %87 = load i8*, i8** %2, align 8, !dbg !2798
  ret i8* %87, !dbg !2798
}

; Function Attrs: nounwind readonly willreturn
declare dso_local i8* @strrchr(i8* noundef, i32 noundef) #2

; Function Attrs: nounwind readonly willreturn
declare dso_local i64 @strcspn(i8* noundef, i8* noundef) #2

; Function Attrs: nounwind
declare dso_local i32 @stat(i8* noundef, %struct.stat* noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @same_file(%struct.stat* noundef %0, %struct.stat* noundef %1) #0 !dbg !2799 {
  %3 = alloca %struct.stat*, align 8
  %4 = alloca %struct.stat*, align 8
  store %struct.stat* %0, %struct.stat** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %3, metadata !2802, metadata !DIExpression()), !dbg !2803
  store %struct.stat* %1, %struct.stat** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %4, metadata !2804, metadata !DIExpression()), !dbg !2805
  %5 = load %struct.stat*, %struct.stat** %3, align 8, !dbg !2806
  %6 = getelementptr inbounds %struct.stat, %struct.stat* %5, i32 0, i32 1, !dbg !2807
  %7 = load i64, i64* %6, align 8, !dbg !2807
  %8 = load %struct.stat*, %struct.stat** %4, align 8, !dbg !2808
  %9 = getelementptr inbounds %struct.stat, %struct.stat* %8, i32 0, i32 1, !dbg !2809
  %10 = load i64, i64* %9, align 8, !dbg !2809
  %11 = icmp eq i64 %7, %10, !dbg !2810
  br i1 %11, label %12, label %20, !dbg !2811

12:                                               ; preds = %2
  %13 = load %struct.stat*, %struct.stat** %3, align 8, !dbg !2812
  %14 = getelementptr inbounds %struct.stat, %struct.stat* %13, i32 0, i32 0, !dbg !2813
  %15 = load i64, i64* %14, align 8, !dbg !2813
  %16 = load %struct.stat*, %struct.stat** %4, align 8, !dbg !2814
  %17 = getelementptr inbounds %struct.stat, %struct.stat* %16, i32 0, i32 0, !dbg !2815
  %18 = load i64, i64* %17, align 8, !dbg !2815
  %19 = icmp eq i64 %15, %18, !dbg !2816
  br label %20

20:                                               ; preds = %12, %2
  %21 = phi i1 [ false, %2 ], [ %19, %12 ], !dbg !2817
  %22 = zext i1 %21 to i32, !dbg !2811
  ret i32 %22, !dbg !2818
}

; Function Attrs: nounwind readnone willreturn
declare dso_local i32* @__errno_location() #6

declare dso_local i32 @fflush(%struct._IO_FILE* noundef) #4

declare dso_local i8* @fgets(i8* noundef, i32 noundef, %struct._IO_FILE* noundef) #4

; Function Attrs: nounwind readnone willreturn
declare dso_local i16** @__ctype_b_loc() #6

; Function Attrs: nounwind
declare dso_local i8* @strcat(i8* noundef, i8* noundef) #3

; Function Attrs: nounwind
declare dso_local i32 @utime(i8* noundef, %struct.timespec* noundef) #3

declare dso_local %struct.__dirstream* @opendir(i8* noundef) #4

declare dso_local %struct.dirent* @readdir(%struct.__dirstream* noundef) #4

declare dso_local i32 @closedir(%struct.__dirstream* noundef) #4

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @do_stat(i8* noundef %0, %struct.stat* noundef %1) #0 !dbg !2819 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca %struct.stat*, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !2820, metadata !DIExpression()), !dbg !2821
  store %struct.stat* %1, %struct.stat** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %5, metadata !2822, metadata !DIExpression()), !dbg !2823
  %6 = call i32* @__errno_location() #12, !dbg !2824
  store i32 0, i32* %6, align 4, !dbg !2825
  %7 = load i32, i32* @to_stdout, align 4, !dbg !2826
  %8 = icmp ne i32 %7, 0, !dbg !2826
  br i1 %8, label %16, label %9, !dbg !2828

9:                                                ; preds = %2
  %10 = load i32, i32* @force, align 4, !dbg !2829
  %11 = icmp ne i32 %10, 0, !dbg !2829
  br i1 %11, label %16, label %12, !dbg !2830

12:                                               ; preds = %9
  %13 = load i8*, i8** %4, align 8, !dbg !2831
  %14 = load %struct.stat*, %struct.stat** %5, align 8, !dbg !2833
  %15 = call i32 @lstat(i8* noundef %13, %struct.stat* noundef %14) #10, !dbg !2834
  store i32 %15, i32* %3, align 4, !dbg !2835
  br label %20, !dbg !2835

16:                                               ; preds = %9, %2
  %17 = load i8*, i8** %4, align 8, !dbg !2836
  %18 = load %struct.stat*, %struct.stat** %5, align 8, !dbg !2837
  %19 = call i32 @stat(i8* noundef %17, %struct.stat* noundef %18) #10, !dbg !2838
  store i32 %19, i32* %3, align 4, !dbg !2839
  br label %20, !dbg !2839

20:                                               ; preds = %16, %12
  %21 = load i32, i32* %3, align 4, !dbg !2840
  ret i32 %21, !dbg !2840
}

; Function Attrs: nounwind
declare dso_local i32 @lstat(i8* noundef, %struct.stat* noundef) #3

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32 noundef) #7

; Function Attrs: nounwind
declare dso_local void @free(i8* noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @zip(i32 noundef %0, i32 noundef %1) #0 !dbg !2841 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  %6 = alloca i16, align 2
  %7 = alloca i16, align 2
  %8 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !2842, metadata !DIExpression()), !dbg !2843
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !2844, metadata !DIExpression()), !dbg !2845
  call void @llvm.dbg.declare(metadata i8* %5, metadata !2846, metadata !DIExpression()), !dbg !2847
  store i8 0, i8* %5, align 1, !dbg !2847
  call void @llvm.dbg.declare(metadata i16* %6, metadata !2848, metadata !DIExpression()), !dbg !2849
  store i16 0, i16* %6, align 2, !dbg !2849
  call void @llvm.dbg.declare(metadata i16* %7, metadata !2850, metadata !DIExpression()), !dbg !2851
  store i16 0, i16* %7, align 2, !dbg !2851
  %9 = load i32, i32* %3, align 4, !dbg !2852
  store i32 %9, i32* @ifd, align 4, !dbg !2853
  %10 = load i32, i32* %4, align 4, !dbg !2854
  store i32 %10, i32* @ofd, align 4, !dbg !2855
  store i32 0, i32* @outcnt, align 4, !dbg !2856
  store i32 8, i32* @method, align 4, !dbg !2857
  %11 = load i8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.148, i64 0, i64 0), align 1, !dbg !2858
  %12 = load i32, i32* @outcnt, align 4, !dbg !2858
  %13 = add i32 %12, 1, !dbg !2858
  store i32 %13, i32* @outcnt, align 4, !dbg !2858
  %14 = zext i32 %12 to i64, !dbg !2858
  %15 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %14, !dbg !2858
  store i8 %11, i8* %15, align 1, !dbg !2858
  %16 = load i32, i32* @outcnt, align 4, !dbg !2860
  %17 = icmp eq i32 %16, 16384, !dbg !2860
  br i1 %17, label %18, label %19, !dbg !2858

18:                                               ; preds = %2
  call void @flush_outbuf(), !dbg !2860
  br label %19, !dbg !2860

19:                                               ; preds = %18, %2
  %20 = load i8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.148, i64 0, i64 1), align 1, !dbg !2862
  %21 = load i32, i32* @outcnt, align 4, !dbg !2862
  %22 = add i32 %21, 1, !dbg !2862
  store i32 %22, i32* @outcnt, align 4, !dbg !2862
  %23 = zext i32 %21 to i64, !dbg !2862
  %24 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %23, !dbg !2862
  store i8 %20, i8* %24, align 1, !dbg !2862
  %25 = load i32, i32* @outcnt, align 4, !dbg !2864
  %26 = icmp eq i32 %25, 16384, !dbg !2864
  br i1 %26, label %27, label %28, !dbg !2862

27:                                               ; preds = %19
  call void @flush_outbuf(), !dbg !2864
  br label %28, !dbg !2864

28:                                               ; preds = %27, %19
  %29 = load i32, i32* @outcnt, align 4, !dbg !2866
  %30 = add i32 %29, 1, !dbg !2866
  store i32 %30, i32* @outcnt, align 4, !dbg !2866
  %31 = zext i32 %29 to i64, !dbg !2866
  %32 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %31, !dbg !2866
  store i8 8, i8* %32, align 1, !dbg !2866
  %33 = load i32, i32* @outcnt, align 4, !dbg !2868
  %34 = icmp eq i32 %33, 16384, !dbg !2868
  br i1 %34, label %35, label %36, !dbg !2866

35:                                               ; preds = %28
  call void @flush_outbuf(), !dbg !2868
  br label %36, !dbg !2868

36:                                               ; preds = %35, %28
  %37 = load i32, i32* @save_orig_name, align 4, !dbg !2870
  %38 = icmp ne i32 %37, 0, !dbg !2870
  br i1 %38, label %39, label %44, !dbg !2872

39:                                               ; preds = %36
  %40 = load i8, i8* %5, align 1, !dbg !2873
  %41 = zext i8 %40 to i32, !dbg !2873
  %42 = or i32 %41, 8, !dbg !2873
  %43 = trunc i32 %42 to i8, !dbg !2873
  store i8 %43, i8* %5, align 1, !dbg !2873
  br label %44, !dbg !2875

44:                                               ; preds = %39, %36
  %45 = load i8, i8* %5, align 1, !dbg !2876
  %46 = load i32, i32* @outcnt, align 4, !dbg !2876
  %47 = add i32 %46, 1, !dbg !2876
  store i32 %47, i32* @outcnt, align 4, !dbg !2876
  %48 = zext i32 %46 to i64, !dbg !2876
  %49 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %48, !dbg !2876
  store i8 %45, i8* %49, align 1, !dbg !2876
  %50 = load i32, i32* @outcnt, align 4, !dbg !2878
  %51 = icmp eq i32 %50, 16384, !dbg !2878
  br i1 %51, label %52, label %53, !dbg !2876

52:                                               ; preds = %44
  call void @flush_outbuf(), !dbg !2878
  br label %53, !dbg !2878

53:                                               ; preds = %52, %44
  %54 = load i32, i32* @outcnt, align 4, !dbg !2880
  %55 = icmp ult i32 %54, 16382, !dbg !2880
  br i1 %55, label %56, label %75, !dbg !2884

56:                                               ; preds = %53
  %57 = load i64, i64* @time_stamp, align 8, !dbg !2885
  %58 = and i64 %57, 65535, !dbg !2885
  %59 = and i64 %58, 255, !dbg !2885
  %60 = trunc i64 %59 to i8, !dbg !2885
  %61 = load i32, i32* @outcnt, align 4, !dbg !2885
  %62 = add i32 %61, 1, !dbg !2885
  store i32 %62, i32* @outcnt, align 4, !dbg !2885
  %63 = zext i32 %61 to i64, !dbg !2885
  %64 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %63, !dbg !2885
  store i8 %60, i8* %64, align 1, !dbg !2885
  %65 = load i64, i64* @time_stamp, align 8, !dbg !2885
  %66 = and i64 %65, 65535, !dbg !2885
  %67 = trunc i64 %66 to i16, !dbg !2885
  %68 = zext i16 %67 to i32, !dbg !2885
  %69 = ashr i32 %68, 8, !dbg !2885
  %70 = trunc i32 %69 to i8, !dbg !2885
  %71 = load i32, i32* @outcnt, align 4, !dbg !2885
  %72 = add i32 %71, 1, !dbg !2885
  store i32 %72, i32* @outcnt, align 4, !dbg !2885
  %73 = zext i32 %71 to i64, !dbg !2885
  %74 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %73, !dbg !2885
  store i8 %70, i8* %74, align 1, !dbg !2885
  br label %102, !dbg !2885

75:                                               ; preds = %53
  %76 = load i64, i64* @time_stamp, align 8, !dbg !2887
  %77 = and i64 %76, 65535, !dbg !2887
  %78 = and i64 %77, 255, !dbg !2887
  %79 = trunc i64 %78 to i8, !dbg !2887
  %80 = load i32, i32* @outcnt, align 4, !dbg !2887
  %81 = add i32 %80, 1, !dbg !2887
  store i32 %81, i32* @outcnt, align 4, !dbg !2887
  %82 = zext i32 %80 to i64, !dbg !2887
  %83 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %82, !dbg !2887
  store i8 %79, i8* %83, align 1, !dbg !2887
  %84 = load i32, i32* @outcnt, align 4, !dbg !2890
  %85 = icmp eq i32 %84, 16384, !dbg !2890
  br i1 %85, label %86, label %87, !dbg !2887

86:                                               ; preds = %75
  call void @flush_outbuf(), !dbg !2890
  br label %87, !dbg !2890

87:                                               ; preds = %86, %75
  %88 = load i64, i64* @time_stamp, align 8, !dbg !2892
  %89 = and i64 %88, 65535, !dbg !2892
  %90 = trunc i64 %89 to i16, !dbg !2892
  %91 = zext i16 %90 to i32, !dbg !2892
  %92 = ashr i32 %91, 8, !dbg !2892
  %93 = trunc i32 %92 to i8, !dbg !2892
  %94 = load i32, i32* @outcnt, align 4, !dbg !2892
  %95 = add i32 %94, 1, !dbg !2892
  store i32 %95, i32* @outcnt, align 4, !dbg !2892
  %96 = zext i32 %94 to i64, !dbg !2892
  %97 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %96, !dbg !2892
  store i8 %93, i8* %97, align 1, !dbg !2892
  %98 = load i32, i32* @outcnt, align 4, !dbg !2894
  %99 = icmp eq i32 %98, 16384, !dbg !2894
  br i1 %99, label %100, label %101, !dbg !2892

100:                                              ; preds = %87
  call void @flush_outbuf(), !dbg !2894
  br label %101, !dbg !2894

101:                                              ; preds = %100, %87
  br label %102

102:                                              ; preds = %101, %56
  %103 = load i32, i32* @outcnt, align 4, !dbg !2896
  %104 = icmp ult i32 %103, 16382, !dbg !2896
  br i1 %104, label %105, label %124, !dbg !2899

105:                                              ; preds = %102
  %106 = load i64, i64* @time_stamp, align 8, !dbg !2900
  %107 = lshr i64 %106, 16, !dbg !2900
  %108 = and i64 %107, 255, !dbg !2900
  %109 = trunc i64 %108 to i8, !dbg !2900
  %110 = load i32, i32* @outcnt, align 4, !dbg !2900
  %111 = add i32 %110, 1, !dbg !2900
  store i32 %111, i32* @outcnt, align 4, !dbg !2900
  %112 = zext i32 %110 to i64, !dbg !2900
  %113 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %112, !dbg !2900
  store i8 %109, i8* %113, align 1, !dbg !2900
  %114 = load i64, i64* @time_stamp, align 8, !dbg !2900
  %115 = lshr i64 %114, 16, !dbg !2900
  %116 = trunc i64 %115 to i16, !dbg !2900
  %117 = zext i16 %116 to i32, !dbg !2900
  %118 = ashr i32 %117, 8, !dbg !2900
  %119 = trunc i32 %118 to i8, !dbg !2900
  %120 = load i32, i32* @outcnt, align 4, !dbg !2900
  %121 = add i32 %120, 1, !dbg !2900
  store i32 %121, i32* @outcnt, align 4, !dbg !2900
  %122 = zext i32 %120 to i64, !dbg !2900
  %123 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %122, !dbg !2900
  store i8 %119, i8* %123, align 1, !dbg !2900
  br label %151, !dbg !2900

124:                                              ; preds = %102
  %125 = load i64, i64* @time_stamp, align 8, !dbg !2902
  %126 = lshr i64 %125, 16, !dbg !2902
  %127 = and i64 %126, 255, !dbg !2902
  %128 = trunc i64 %127 to i8, !dbg !2902
  %129 = load i32, i32* @outcnt, align 4, !dbg !2902
  %130 = add i32 %129, 1, !dbg !2902
  store i32 %130, i32* @outcnt, align 4, !dbg !2902
  %131 = zext i32 %129 to i64, !dbg !2902
  %132 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %131, !dbg !2902
  store i8 %128, i8* %132, align 1, !dbg !2902
  %133 = load i32, i32* @outcnt, align 4, !dbg !2905
  %134 = icmp eq i32 %133, 16384, !dbg !2905
  br i1 %134, label %135, label %136, !dbg !2902

135:                                              ; preds = %124
  call void @flush_outbuf(), !dbg !2905
  br label %136, !dbg !2905

136:                                              ; preds = %135, %124
  %137 = load i64, i64* @time_stamp, align 8, !dbg !2907
  %138 = lshr i64 %137, 16, !dbg !2907
  %139 = trunc i64 %138 to i16, !dbg !2907
  %140 = zext i16 %139 to i32, !dbg !2907
  %141 = ashr i32 %140, 8, !dbg !2907
  %142 = trunc i32 %141 to i8, !dbg !2907
  %143 = load i32, i32* @outcnt, align 4, !dbg !2907
  %144 = add i32 %143, 1, !dbg !2907
  store i32 %144, i32* @outcnt, align 4, !dbg !2907
  %145 = zext i32 %143 to i64, !dbg !2907
  %146 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %145, !dbg !2907
  store i8 %142, i8* %146, align 1, !dbg !2907
  %147 = load i32, i32* @outcnt, align 4, !dbg !2909
  %148 = icmp eq i32 %147, 16384, !dbg !2909
  br i1 %148, label %149, label %150, !dbg !2907

149:                                              ; preds = %136
  call void @flush_outbuf(), !dbg !2909
  br label %150, !dbg !2909

150:                                              ; preds = %149, %136
  br label %151

151:                                              ; preds = %150, %105
  %152 = call i64 @updcrc(i8* noundef null, i32 noundef 0), !dbg !2911
  store i64 %152, i64* @crc, align 8, !dbg !2912
  %153 = load i32, i32* %4, align 4, !dbg !2913
  call void @bi_init(i32 noundef %153), !dbg !2914
  call void @ct_init(i16* noundef %6, i32* noundef @method), !dbg !2915
  %154 = load i32, i32* @level, align 4, !dbg !2916
  call void @lm_init(i32 noundef %154, i16* noundef %7), !dbg !2917
  %155 = load i16, i16* %7, align 2, !dbg !2918
  %156 = trunc i16 %155 to i8, !dbg !2918
  %157 = load i32, i32* @outcnt, align 4, !dbg !2918
  %158 = add i32 %157, 1, !dbg !2918
  store i32 %158, i32* @outcnt, align 4, !dbg !2918
  %159 = zext i32 %157 to i64, !dbg !2918
  %160 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %159, !dbg !2918
  store i8 %156, i8* %160, align 1, !dbg !2918
  %161 = load i32, i32* @outcnt, align 4, !dbg !2920
  %162 = icmp eq i32 %161, 16384, !dbg !2920
  br i1 %162, label %163, label %164, !dbg !2918

163:                                              ; preds = %151
  call void @flush_outbuf(), !dbg !2920
  br label %164, !dbg !2920

164:                                              ; preds = %163, %151
  %165 = load i32, i32* @outcnt, align 4, !dbg !2922
  %166 = add i32 %165, 1, !dbg !2922
  store i32 %166, i32* @outcnt, align 4, !dbg !2922
  %167 = zext i32 %165 to i64, !dbg !2922
  %168 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %167, !dbg !2922
  store i8 3, i8* %168, align 1, !dbg !2922
  %169 = load i32, i32* @outcnt, align 4, !dbg !2924
  %170 = icmp eq i32 %169, 16384, !dbg !2924
  br i1 %170, label %171, label %172, !dbg !2922

171:                                              ; preds = %164
  call void @flush_outbuf(), !dbg !2924
  br label %172, !dbg !2924

172:                                              ; preds = %171, %164
  %173 = load i32, i32* @save_orig_name, align 4, !dbg !2926
  %174 = icmp ne i32 %173, 0, !dbg !2926
  br i1 %174, label %175, label %194, !dbg !2928

175:                                              ; preds = %172
  call void @llvm.dbg.declare(metadata i8** %8, metadata !2929, metadata !DIExpression()), !dbg !2931
  %176 = call i8* @basename(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0)), !dbg !2932
  store i8* %176, i8** %8, align 8, !dbg !2931
  br label %177, !dbg !2933

177:                                              ; preds = %188, %175
  %178 = load i8*, i8** %8, align 8, !dbg !2934
  %179 = load i8, i8* %178, align 1, !dbg !2934
  %180 = load i32, i32* @outcnt, align 4, !dbg !2934
  %181 = add i32 %180, 1, !dbg !2934
  store i32 %181, i32* @outcnt, align 4, !dbg !2934
  %182 = zext i32 %180 to i64, !dbg !2934
  %183 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %182, !dbg !2934
  store i8 %179, i8* %183, align 1, !dbg !2934
  %184 = load i32, i32* @outcnt, align 4, !dbg !2937
  %185 = icmp eq i32 %184, 16384, !dbg !2937
  br i1 %185, label %186, label %187, !dbg !2934

186:                                              ; preds = %177
  call void @flush_outbuf(), !dbg !2937
  br label %187, !dbg !2937

187:                                              ; preds = %186, %177
  br label %188, !dbg !2939

188:                                              ; preds = %187
  %189 = load i8*, i8** %8, align 8, !dbg !2940
  %190 = getelementptr inbounds i8, i8* %189, i32 1, !dbg !2940
  store i8* %190, i8** %8, align 8, !dbg !2940
  %191 = load i8, i8* %189, align 1, !dbg !2941
  %192 = icmp ne i8 %191, 0, !dbg !2939
  br i1 %192, label %177, label %193, !dbg !2939, !llvm.loop !2942

193:                                              ; preds = %188
  br label %194, !dbg !2944

194:                                              ; preds = %193, %172
  %195 = load i32, i32* @outcnt, align 4, !dbg !2945
  %196 = zext i32 %195 to i64, !dbg !2946
  store i64 %196, i64* @header_bytes, align 8, !dbg !2947
  %197 = call i64 @deflate(), !dbg !2948
  %198 = load i32, i32* @outcnt, align 4, !dbg !2949
  %199 = icmp ult i32 %198, 16382, !dbg !2949
  br i1 %199, label %200, label %219, !dbg !2953

200:                                              ; preds = %194
  %201 = load i64, i64* @crc, align 8, !dbg !2954
  %202 = and i64 %201, 65535, !dbg !2954
  %203 = and i64 %202, 255, !dbg !2954
  %204 = trunc i64 %203 to i8, !dbg !2954
  %205 = load i32, i32* @outcnt, align 4, !dbg !2954
  %206 = add i32 %205, 1, !dbg !2954
  store i32 %206, i32* @outcnt, align 4, !dbg !2954
  %207 = zext i32 %205 to i64, !dbg !2954
  %208 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %207, !dbg !2954
  store i8 %204, i8* %208, align 1, !dbg !2954
  %209 = load i64, i64* @crc, align 8, !dbg !2954
  %210 = and i64 %209, 65535, !dbg !2954
  %211 = trunc i64 %210 to i16, !dbg !2954
  %212 = zext i16 %211 to i32, !dbg !2954
  %213 = ashr i32 %212, 8, !dbg !2954
  %214 = trunc i32 %213 to i8, !dbg !2954
  %215 = load i32, i32* @outcnt, align 4, !dbg !2954
  %216 = add i32 %215, 1, !dbg !2954
  store i32 %216, i32* @outcnt, align 4, !dbg !2954
  %217 = zext i32 %215 to i64, !dbg !2954
  %218 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %217, !dbg !2954
  store i8 %214, i8* %218, align 1, !dbg !2954
  br label %246, !dbg !2954

219:                                              ; preds = %194
  %220 = load i64, i64* @crc, align 8, !dbg !2956
  %221 = and i64 %220, 65535, !dbg !2956
  %222 = and i64 %221, 255, !dbg !2956
  %223 = trunc i64 %222 to i8, !dbg !2956
  %224 = load i32, i32* @outcnt, align 4, !dbg !2956
  %225 = add i32 %224, 1, !dbg !2956
  store i32 %225, i32* @outcnt, align 4, !dbg !2956
  %226 = zext i32 %224 to i64, !dbg !2956
  %227 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %226, !dbg !2956
  store i8 %223, i8* %227, align 1, !dbg !2956
  %228 = load i32, i32* @outcnt, align 4, !dbg !2959
  %229 = icmp eq i32 %228, 16384, !dbg !2959
  br i1 %229, label %230, label %231, !dbg !2956

230:                                              ; preds = %219
  call void @flush_outbuf(), !dbg !2959
  br label %231, !dbg !2959

231:                                              ; preds = %230, %219
  %232 = load i64, i64* @crc, align 8, !dbg !2961
  %233 = and i64 %232, 65535, !dbg !2961
  %234 = trunc i64 %233 to i16, !dbg !2961
  %235 = zext i16 %234 to i32, !dbg !2961
  %236 = ashr i32 %235, 8, !dbg !2961
  %237 = trunc i32 %236 to i8, !dbg !2961
  %238 = load i32, i32* @outcnt, align 4, !dbg !2961
  %239 = add i32 %238, 1, !dbg !2961
  store i32 %239, i32* @outcnt, align 4, !dbg !2961
  %240 = zext i32 %238 to i64, !dbg !2961
  %241 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %240, !dbg !2961
  store i8 %237, i8* %241, align 1, !dbg !2961
  %242 = load i32, i32* @outcnt, align 4, !dbg !2963
  %243 = icmp eq i32 %242, 16384, !dbg !2963
  br i1 %243, label %244, label %245, !dbg !2961

244:                                              ; preds = %231
  call void @flush_outbuf(), !dbg !2963
  br label %245, !dbg !2963

245:                                              ; preds = %244, %231
  br label %246

246:                                              ; preds = %245, %200
  %247 = load i32, i32* @outcnt, align 4, !dbg !2965
  %248 = icmp ult i32 %247, 16382, !dbg !2965
  br i1 %248, label %249, label %268, !dbg !2968

249:                                              ; preds = %246
  %250 = load i64, i64* @crc, align 8, !dbg !2969
  %251 = lshr i64 %250, 16, !dbg !2969
  %252 = and i64 %251, 255, !dbg !2969
  %253 = trunc i64 %252 to i8, !dbg !2969
  %254 = load i32, i32* @outcnt, align 4, !dbg !2969
  %255 = add i32 %254, 1, !dbg !2969
  store i32 %255, i32* @outcnt, align 4, !dbg !2969
  %256 = zext i32 %254 to i64, !dbg !2969
  %257 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %256, !dbg !2969
  store i8 %253, i8* %257, align 1, !dbg !2969
  %258 = load i64, i64* @crc, align 8, !dbg !2969
  %259 = lshr i64 %258, 16, !dbg !2969
  %260 = trunc i64 %259 to i16, !dbg !2969
  %261 = zext i16 %260 to i32, !dbg !2969
  %262 = ashr i32 %261, 8, !dbg !2969
  %263 = trunc i32 %262 to i8, !dbg !2969
  %264 = load i32, i32* @outcnt, align 4, !dbg !2969
  %265 = add i32 %264, 1, !dbg !2969
  store i32 %265, i32* @outcnt, align 4, !dbg !2969
  %266 = zext i32 %264 to i64, !dbg !2969
  %267 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %266, !dbg !2969
  store i8 %263, i8* %267, align 1, !dbg !2969
  br label %295, !dbg !2969

268:                                              ; preds = %246
  %269 = load i64, i64* @crc, align 8, !dbg !2971
  %270 = lshr i64 %269, 16, !dbg !2971
  %271 = and i64 %270, 255, !dbg !2971
  %272 = trunc i64 %271 to i8, !dbg !2971
  %273 = load i32, i32* @outcnt, align 4, !dbg !2971
  %274 = add i32 %273, 1, !dbg !2971
  store i32 %274, i32* @outcnt, align 4, !dbg !2971
  %275 = zext i32 %273 to i64, !dbg !2971
  %276 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %275, !dbg !2971
  store i8 %272, i8* %276, align 1, !dbg !2971
  %277 = load i32, i32* @outcnt, align 4, !dbg !2974
  %278 = icmp eq i32 %277, 16384, !dbg !2974
  br i1 %278, label %279, label %280, !dbg !2971

279:                                              ; preds = %268
  call void @flush_outbuf(), !dbg !2974
  br label %280, !dbg !2974

280:                                              ; preds = %279, %268
  %281 = load i64, i64* @crc, align 8, !dbg !2976
  %282 = lshr i64 %281, 16, !dbg !2976
  %283 = trunc i64 %282 to i16, !dbg !2976
  %284 = zext i16 %283 to i32, !dbg !2976
  %285 = ashr i32 %284, 8, !dbg !2976
  %286 = trunc i32 %285 to i8, !dbg !2976
  %287 = load i32, i32* @outcnt, align 4, !dbg !2976
  %288 = add i32 %287, 1, !dbg !2976
  store i32 %288, i32* @outcnt, align 4, !dbg !2976
  %289 = zext i32 %287 to i64, !dbg !2976
  %290 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %289, !dbg !2976
  store i8 %286, i8* %290, align 1, !dbg !2976
  %291 = load i32, i32* @outcnt, align 4, !dbg !2978
  %292 = icmp eq i32 %291, 16384, !dbg !2978
  br i1 %292, label %293, label %294, !dbg !2976

293:                                              ; preds = %280
  call void @flush_outbuf(), !dbg !2978
  br label %294, !dbg !2978

294:                                              ; preds = %293, %280
  br label %295

295:                                              ; preds = %294, %249
  %296 = load i32, i32* @outcnt, align 4, !dbg !2980
  %297 = icmp ult i32 %296, 16382, !dbg !2980
  br i1 %297, label %298, label %317, !dbg !2984

298:                                              ; preds = %295
  %299 = load i64, i64* @bytes_in, align 8, !dbg !2985
  %300 = and i64 %299, 65535, !dbg !2985
  %301 = and i64 %300, 255, !dbg !2985
  %302 = trunc i64 %301 to i8, !dbg !2985
  %303 = load i32, i32* @outcnt, align 4, !dbg !2985
  %304 = add i32 %303, 1, !dbg !2985
  store i32 %304, i32* @outcnt, align 4, !dbg !2985
  %305 = zext i32 %303 to i64, !dbg !2985
  %306 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %305, !dbg !2985
  store i8 %302, i8* %306, align 1, !dbg !2985
  %307 = load i64, i64* @bytes_in, align 8, !dbg !2985
  %308 = and i64 %307, 65535, !dbg !2985
  %309 = trunc i64 %308 to i16, !dbg !2985
  %310 = zext i16 %309 to i32, !dbg !2985
  %311 = ashr i32 %310, 8, !dbg !2985
  %312 = trunc i32 %311 to i8, !dbg !2985
  %313 = load i32, i32* @outcnt, align 4, !dbg !2985
  %314 = add i32 %313, 1, !dbg !2985
  store i32 %314, i32* @outcnt, align 4, !dbg !2985
  %315 = zext i32 %313 to i64, !dbg !2985
  %316 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %315, !dbg !2985
  store i8 %312, i8* %316, align 1, !dbg !2985
  br label %344, !dbg !2985

317:                                              ; preds = %295
  %318 = load i64, i64* @bytes_in, align 8, !dbg !2987
  %319 = and i64 %318, 65535, !dbg !2987
  %320 = and i64 %319, 255, !dbg !2987
  %321 = trunc i64 %320 to i8, !dbg !2987
  %322 = load i32, i32* @outcnt, align 4, !dbg !2987
  %323 = add i32 %322, 1, !dbg !2987
  store i32 %323, i32* @outcnt, align 4, !dbg !2987
  %324 = zext i32 %322 to i64, !dbg !2987
  %325 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %324, !dbg !2987
  store i8 %321, i8* %325, align 1, !dbg !2987
  %326 = load i32, i32* @outcnt, align 4, !dbg !2990
  %327 = icmp eq i32 %326, 16384, !dbg !2990
  br i1 %327, label %328, label %329, !dbg !2987

328:                                              ; preds = %317
  call void @flush_outbuf(), !dbg !2990
  br label %329, !dbg !2990

329:                                              ; preds = %328, %317
  %330 = load i64, i64* @bytes_in, align 8, !dbg !2992
  %331 = and i64 %330, 65535, !dbg !2992
  %332 = trunc i64 %331 to i16, !dbg !2992
  %333 = zext i16 %332 to i32, !dbg !2992
  %334 = ashr i32 %333, 8, !dbg !2992
  %335 = trunc i32 %334 to i8, !dbg !2992
  %336 = load i32, i32* @outcnt, align 4, !dbg !2992
  %337 = add i32 %336, 1, !dbg !2992
  store i32 %337, i32* @outcnt, align 4, !dbg !2992
  %338 = zext i32 %336 to i64, !dbg !2992
  %339 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %338, !dbg !2992
  store i8 %335, i8* %339, align 1, !dbg !2992
  %340 = load i32, i32* @outcnt, align 4, !dbg !2994
  %341 = icmp eq i32 %340, 16384, !dbg !2994
  br i1 %341, label %342, label %343, !dbg !2992

342:                                              ; preds = %329
  call void @flush_outbuf(), !dbg !2994
  br label %343, !dbg !2994

343:                                              ; preds = %342, %329
  br label %344

344:                                              ; preds = %343, %298
  %345 = load i32, i32* @outcnt, align 4, !dbg !2996
  %346 = icmp ult i32 %345, 16382, !dbg !2996
  br i1 %346, label %347, label %366, !dbg !2999

347:                                              ; preds = %344
  %348 = load i64, i64* @bytes_in, align 8, !dbg !3000
  %349 = lshr i64 %348, 16, !dbg !3000
  %350 = and i64 %349, 255, !dbg !3000
  %351 = trunc i64 %350 to i8, !dbg !3000
  %352 = load i32, i32* @outcnt, align 4, !dbg !3000
  %353 = add i32 %352, 1, !dbg !3000
  store i32 %353, i32* @outcnt, align 4, !dbg !3000
  %354 = zext i32 %352 to i64, !dbg !3000
  %355 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %354, !dbg !3000
  store i8 %351, i8* %355, align 1, !dbg !3000
  %356 = load i64, i64* @bytes_in, align 8, !dbg !3000
  %357 = lshr i64 %356, 16, !dbg !3000
  %358 = trunc i64 %357 to i16, !dbg !3000
  %359 = zext i16 %358 to i32, !dbg !3000
  %360 = ashr i32 %359, 8, !dbg !3000
  %361 = trunc i32 %360 to i8, !dbg !3000
  %362 = load i32, i32* @outcnt, align 4, !dbg !3000
  %363 = add i32 %362, 1, !dbg !3000
  store i32 %363, i32* @outcnt, align 4, !dbg !3000
  %364 = zext i32 %362 to i64, !dbg !3000
  %365 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %364, !dbg !3000
  store i8 %361, i8* %365, align 1, !dbg !3000
  br label %393, !dbg !3000

366:                                              ; preds = %344
  %367 = load i64, i64* @bytes_in, align 8, !dbg !3002
  %368 = lshr i64 %367, 16, !dbg !3002
  %369 = and i64 %368, 255, !dbg !3002
  %370 = trunc i64 %369 to i8, !dbg !3002
  %371 = load i32, i32* @outcnt, align 4, !dbg !3002
  %372 = add i32 %371, 1, !dbg !3002
  store i32 %372, i32* @outcnt, align 4, !dbg !3002
  %373 = zext i32 %371 to i64, !dbg !3002
  %374 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %373, !dbg !3002
  store i8 %370, i8* %374, align 1, !dbg !3002
  %375 = load i32, i32* @outcnt, align 4, !dbg !3005
  %376 = icmp eq i32 %375, 16384, !dbg !3005
  br i1 %376, label %377, label %378, !dbg !3002

377:                                              ; preds = %366
  call void @flush_outbuf(), !dbg !3005
  br label %378, !dbg !3005

378:                                              ; preds = %377, %366
  %379 = load i64, i64* @bytes_in, align 8, !dbg !3007
  %380 = lshr i64 %379, 16, !dbg !3007
  %381 = trunc i64 %380 to i16, !dbg !3007
  %382 = zext i16 %381 to i32, !dbg !3007
  %383 = ashr i32 %382, 8, !dbg !3007
  %384 = trunc i32 %383 to i8, !dbg !3007
  %385 = load i32, i32* @outcnt, align 4, !dbg !3007
  %386 = add i32 %385, 1, !dbg !3007
  store i32 %386, i32* @outcnt, align 4, !dbg !3007
  %387 = zext i32 %385 to i64, !dbg !3007
  %388 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %387, !dbg !3007
  store i8 %384, i8* %388, align 1, !dbg !3007
  %389 = load i32, i32* @outcnt, align 4, !dbg !3009
  %390 = icmp eq i32 %389, 16384, !dbg !3009
  br i1 %390, label %391, label %392, !dbg !3007

391:                                              ; preds = %378
  call void @flush_outbuf(), !dbg !3009
  br label %392, !dbg !3009

392:                                              ; preds = %391, %378
  br label %393

393:                                              ; preds = %392, %347
  %394 = load i64, i64* @header_bytes, align 8, !dbg !3011
  %395 = add i64 %394, 16, !dbg !3011
  store i64 %395, i64* @header_bytes, align 8, !dbg !3011
  call void @flush_outbuf(), !dbg !3012
  ret i32 0, !dbg !3013
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @file_read(i8* noundef %0, i32 noundef %1) #0 !dbg !3014 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !3015, metadata !DIExpression()), !dbg !3016
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3017, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.declare(metadata i32* %6, metadata !3019, metadata !DIExpression()), !dbg !3020
  %7 = load i32, i32* @ifd, align 4, !dbg !3021
  %8 = load i8*, i8** %4, align 8, !dbg !3022
  %9 = load i32, i32* %5, align 4, !dbg !3023
  %10 = zext i32 %9 to i64, !dbg !3023
  %11 = call i64 @read(i32 noundef %7, i8* noundef %8, i64 noundef %10), !dbg !3024
  %12 = trunc i64 %11 to i32, !dbg !3024
  store i32 %12, i32* %6, align 4, !dbg !3025
  %13 = load i32, i32* %6, align 4, !dbg !3026
  %14 = icmp eq i32 %13, -1, !dbg !3028
  br i1 %14, label %18, label %15, !dbg !3029

15:                                               ; preds = %2
  %16 = load i32, i32* %6, align 4, !dbg !3030
  %17 = icmp eq i32 %16, 0, !dbg !3031
  br i1 %17, label %18, label %20, !dbg !3032

18:                                               ; preds = %15, %2
  %19 = load i32, i32* %6, align 4, !dbg !3033
  store i32 %19, i32* %3, align 4, !dbg !3034
  br label %29, !dbg !3034

20:                                               ; preds = %15
  %21 = load i8*, i8** %4, align 8, !dbg !3035
  %22 = load i32, i32* %6, align 4, !dbg !3036
  %23 = call i64 @updcrc(i8* noundef %21, i32 noundef %22), !dbg !3037
  store i64 %23, i64* @crc, align 8, !dbg !3038
  %24 = load i32, i32* %6, align 4, !dbg !3039
  %25 = zext i32 %24 to i64, !dbg !3040
  %26 = load i64, i64* @bytes_in, align 8, !dbg !3041
  %27 = add i64 %26, %25, !dbg !3041
  store i64 %27, i64* @bytes_in, align 8, !dbg !3041
  %28 = load i32, i32* %6, align 4, !dbg !3042
  store i32 %28, i32* %3, align 4, !dbg !3043
  br label %29, !dbg !3043

29:                                               ; preds = %20, %18
  %30 = load i32, i32* %3, align 4, !dbg !3044
  ret i32 %30, !dbg !3044
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lm_init(i32 noundef %0, i16* noundef %1) #0 !dbg !3045 {
  %3 = alloca i32, align 4
  %4 = alloca i16*, align 8
  %5 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3048, metadata !DIExpression()), !dbg !3049
  store i16* %1, i16** %4, align 8
  call void @llvm.dbg.declare(metadata i16** %4, metadata !3050, metadata !DIExpression()), !dbg !3051
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3052, metadata !DIExpression()), !dbg !3053
  %6 = load i32, i32* %3, align 4, !dbg !3054
  %7 = icmp slt i32 %6, 1, !dbg !3056
  br i1 %7, label %11, label %8, !dbg !3057

8:                                                ; preds = %2
  %9 = load i32, i32* %3, align 4, !dbg !3058
  %10 = icmp sgt i32 %9, 9, !dbg !3059
  br i1 %10, label %11, label %12, !dbg !3060

11:                                               ; preds = %8, %2
  call void @error(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.151, i64 0, i64 0)), !dbg !3061
  br label %12, !dbg !3061

12:                                               ; preds = %11, %8
  %13 = load i32, i32* %3, align 4, !dbg !3062
  store i32 %13, i32* @compr_level, align 4, !dbg !3063
  call void @llvm.memset.p0i8.i64(i8* align 1 bitcast (i16* getelementptr inbounds ([65536 x i16], [65536 x i16]* @prev, i64 0, i64 32768) to i8*), i8 0, i64 65536, i1 false), !dbg !3064
  %14 = load i32, i32* %3, align 4, !dbg !3065
  %15 = sext i32 %14 to i64, !dbg !3066
  %16 = getelementptr inbounds [10 x %struct.config], [10 x %struct.config]* @configuration_table, i64 0, i64 %15, !dbg !3066
  %17 = getelementptr inbounds %struct.config, %struct.config* %16, i32 0, i32 1, !dbg !3067
  %18 = load i16, i16* %17, align 2, !dbg !3067
  %19 = zext i16 %18 to i32, !dbg !3066
  store i32 %19, i32* @max_lazy_match, align 4, !dbg !3068
  %20 = load i32, i32* %3, align 4, !dbg !3069
  %21 = sext i32 %20 to i64, !dbg !3070
  %22 = getelementptr inbounds [10 x %struct.config], [10 x %struct.config]* @configuration_table, i64 0, i64 %21, !dbg !3070
  %23 = getelementptr inbounds %struct.config, %struct.config* %22, i32 0, i32 0, !dbg !3071
  %24 = load i16, i16* %23, align 8, !dbg !3071
  %25 = zext i16 %24 to i32, !dbg !3070
  store i32 %25, i32* @good_match, align 4, !dbg !3072
  %26 = load i32, i32* %3, align 4, !dbg !3073
  %27 = sext i32 %26 to i64, !dbg !3074
  %28 = getelementptr inbounds [10 x %struct.config], [10 x %struct.config]* @configuration_table, i64 0, i64 %27, !dbg !3074
  %29 = getelementptr inbounds %struct.config, %struct.config* %28, i32 0, i32 2, !dbg !3075
  %30 = load i16, i16* %29, align 4, !dbg !3075
  %31 = zext i16 %30 to i32, !dbg !3074
  store i32 %31, i32* @nice_match, align 4, !dbg !3076
  %32 = load i32, i32* %3, align 4, !dbg !3077
  %33 = sext i32 %32 to i64, !dbg !3078
  %34 = getelementptr inbounds [10 x %struct.config], [10 x %struct.config]* @configuration_table, i64 0, i64 %33, !dbg !3078
  %35 = getelementptr inbounds %struct.config, %struct.config* %34, i32 0, i32 3, !dbg !3079
  %36 = load i16, i16* %35, align 2, !dbg !3079
  %37 = zext i16 %36 to i32, !dbg !3078
  store i32 %37, i32* @max_chain_length, align 4, !dbg !3080
  %38 = load i32, i32* %3, align 4, !dbg !3081
  %39 = icmp eq i32 %38, 1, !dbg !3083
  br i1 %39, label %40, label %46, !dbg !3084

40:                                               ; preds = %12
  %41 = load i16*, i16** %4, align 8, !dbg !3085
  %42 = load i16, i16* %41, align 2, !dbg !3087
  %43 = zext i16 %42 to i32, !dbg !3087
  %44 = or i32 %43, 4, !dbg !3087
  %45 = trunc i32 %44 to i16, !dbg !3087
  store i16 %45, i16* %41, align 2, !dbg !3087
  br label %56, !dbg !3088

46:                                               ; preds = %12
  %47 = load i32, i32* %3, align 4, !dbg !3089
  %48 = icmp eq i32 %47, 9, !dbg !3091
  br i1 %48, label %49, label %55, !dbg !3092

49:                                               ; preds = %46
  %50 = load i16*, i16** %4, align 8, !dbg !3093
  %51 = load i16, i16* %50, align 2, !dbg !3095
  %52 = zext i16 %51 to i32, !dbg !3095
  %53 = or i32 %52, 2, !dbg !3095
  %54 = trunc i32 %53 to i16, !dbg !3095
  store i16 %54, i16* %50, align 2, !dbg !3095
  br label %55, !dbg !3096

55:                                               ; preds = %49, %46
  br label %56

56:                                               ; preds = %55, %40
  store i32 0, i32* @strstart, align 4, !dbg !3097
  store i64 0, i64* @block_start, align 8, !dbg !3098
  %57 = load i32 (i8*, i32)*, i32 (i8*, i32)** @read_buf, align 8, !dbg !3099
  %58 = call i32 %57(i8* noundef getelementptr inbounds ([65536 x i8], [65536 x i8]* @window, i64 0, i64 0), i32 noundef 65536), !dbg !3099
  store i32 %58, i32* @lookahead, align 4, !dbg !3100
  %59 = load i32, i32* @lookahead, align 4, !dbg !3101
  %60 = icmp eq i32 %59, 0, !dbg !3103
  br i1 %60, label %64, label %61, !dbg !3104

61:                                               ; preds = %56
  %62 = load i32, i32* @lookahead, align 4, !dbg !3105
  %63 = icmp eq i32 %62, -1, !dbg !3106
  br i1 %63, label %64, label %65, !dbg !3107

64:                                               ; preds = %61, %56
  store i32 1, i32* @eofile, align 4, !dbg !3108
  store i32 0, i32* @lookahead, align 4, !dbg !3110
  br label %93, !dbg !3111

65:                                               ; preds = %61
  store i32 0, i32* @eofile, align 4, !dbg !3112
  br label %66, !dbg !3113

66:                                               ; preds = %75, %65
  %67 = load i32, i32* @lookahead, align 4, !dbg !3114
  %68 = icmp ult i32 %67, 262, !dbg !3115
  br i1 %68, label %69, label %73, !dbg !3116

69:                                               ; preds = %66
  %70 = load i32, i32* @eofile, align 4, !dbg !3117
  %71 = icmp ne i32 %70, 0, !dbg !3118
  %72 = xor i1 %71, true, !dbg !3118
  br label %73

73:                                               ; preds = %69, %66
  %74 = phi i1 [ false, %66 ], [ %72, %69 ], !dbg !3119
  br i1 %74, label %75, label %76, !dbg !3113

75:                                               ; preds = %73
  call void @fill_window(), !dbg !3120
  br label %66, !dbg !3113, !llvm.loop !3121

76:                                               ; preds = %73
  store i32 0, i32* @ins_h, align 4, !dbg !3123
  store i32 0, i32* %5, align 4, !dbg !3124
  br label %77, !dbg !3126

77:                                               ; preds = %90, %76
  %78 = load i32, i32* %5, align 4, !dbg !3127
  %79 = icmp ult i32 %78, 2, !dbg !3129
  br i1 %79, label %80, label %93, !dbg !3130

80:                                               ; preds = %77
  %81 = load i32, i32* @ins_h, align 4, !dbg !3131
  %82 = shl i32 %81, 5, !dbg !3131
  %83 = load i32, i32* %5, align 4, !dbg !3131
  %84 = zext i32 %83 to i64, !dbg !3131
  %85 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i64 0, i64 %84, !dbg !3131
  %86 = load i8, i8* %85, align 1, !dbg !3131
  %87 = zext i8 %86 to i32, !dbg !3131
  %88 = xor i32 %82, %87, !dbg !3131
  %89 = and i32 %88, 32767, !dbg !3131
  store i32 %89, i32* @ins_h, align 4, !dbg !3131
  br label %90, !dbg !3131

90:                                               ; preds = %80
  %91 = load i32, i32* %5, align 4, !dbg !3132
  %92 = add i32 %91, 1, !dbg !3132
  store i32 %92, i32* %5, align 4, !dbg !3132
  br label %77, !dbg !3133, !llvm.loop !3134

93:                                               ; preds = %64, %77
  ret void, !dbg !3136
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #8

; Function Attrs: noinline nounwind optnone uwtable
define internal void @fill_window() #0 !dbg !3137 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !3138, metadata !DIExpression()), !dbg !3139
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3140, metadata !DIExpression()), !dbg !3141
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3142, metadata !DIExpression()), !dbg !3143
  %4 = load i64, i64* @window_size, align 8, !dbg !3144
  %5 = load i32, i32* @lookahead, align 4, !dbg !3145
  %6 = zext i32 %5 to i64, !dbg !3146
  %7 = sub i64 %4, %6, !dbg !3147
  %8 = load i32, i32* @strstart, align 4, !dbg !3148
  %9 = zext i32 %8 to i64, !dbg !3149
  %10 = sub i64 %7, %9, !dbg !3150
  %11 = trunc i64 %10 to i32, !dbg !3151
  store i32 %11, i32* %3, align 4, !dbg !3143
  %12 = load i32, i32* %3, align 4, !dbg !3152
  %13 = icmp eq i32 %12, -1, !dbg !3154
  br i1 %13, label %14, label %17, !dbg !3155

14:                                               ; preds = %0
  %15 = load i32, i32* %3, align 4, !dbg !3156
  %16 = add i32 %15, -1, !dbg !3156
  store i32 %16, i32* %3, align 4, !dbg !3156
  br label %80, !dbg !3158

17:                                               ; preds = %0
  %18 = load i32, i32* @strstart, align 4, !dbg !3159
  %19 = icmp uge i32 %18, 65274, !dbg !3161
  br i1 %19, label %20, label %79, !dbg !3162

20:                                               ; preds = %17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 getelementptr inbounds ([65536 x i8], [65536 x i8]* @window, i64 0, i64 0), i8* align 1 getelementptr inbounds ([65536 x i8], [65536 x i8]* @window, i64 0, i64 32768), i64 32768, i1 false), !dbg !3163
  %21 = load i32, i32* @match_start, align 4, !dbg !3165
  %22 = sub i32 %21, 32768, !dbg !3165
  store i32 %22, i32* @match_start, align 4, !dbg !3165
  %23 = load i32, i32* @strstart, align 4, !dbg !3166
  %24 = sub i32 %23, 32768, !dbg !3166
  store i32 %24, i32* @strstart, align 4, !dbg !3166
  %25 = load i64, i64* @block_start, align 8, !dbg !3167
  %26 = sub nsw i64 %25, 32768, !dbg !3167
  store i64 %26, i64* @block_start, align 8, !dbg !3167
  store i32 0, i32* %1, align 4, !dbg !3168
  br label %27, !dbg !3170

27:                                               ; preds = %48, %20
  %28 = load i32, i32* %1, align 4, !dbg !3171
  %29 = icmp ult i32 %28, 32768, !dbg !3173
  br i1 %29, label %30, label %51, !dbg !3174

30:                                               ; preds = %27
  %31 = load i32, i32* %1, align 4, !dbg !3175
  %32 = zext i32 %31 to i64, !dbg !3177
  %33 = getelementptr inbounds i16, i16* getelementptr inbounds ([65536 x i16], [65536 x i16]* @prev, i64 0, i64 32768), i64 %32, !dbg !3177
  %34 = load i16, i16* %33, align 2, !dbg !3177
  %35 = zext i16 %34 to i32, !dbg !3177
  store i32 %35, i32* %2, align 4, !dbg !3178
  %36 = load i32, i32* %2, align 4, !dbg !3179
  %37 = icmp uge i32 %36, 32768, !dbg !3180
  br i1 %37, label %38, label %41, !dbg !3179

38:                                               ; preds = %30
  %39 = load i32, i32* %2, align 4, !dbg !3181
  %40 = sub i32 %39, 32768, !dbg !3182
  br label %42, !dbg !3179

41:                                               ; preds = %30
  br label %42, !dbg !3179

42:                                               ; preds = %41, %38
  %43 = phi i32 [ %40, %38 ], [ 0, %41 ], !dbg !3179
  %44 = trunc i32 %43 to i16, !dbg !3183
  %45 = load i32, i32* %1, align 4, !dbg !3184
  %46 = zext i32 %45 to i64, !dbg !3185
  %47 = getelementptr inbounds i16, i16* getelementptr inbounds ([65536 x i16], [65536 x i16]* @prev, i64 0, i64 32768), i64 %46, !dbg !3185
  store i16 %44, i16* %47, align 2, !dbg !3186
  br label %48, !dbg !3187

48:                                               ; preds = %42
  %49 = load i32, i32* %1, align 4, !dbg !3188
  %50 = add i32 %49, 1, !dbg !3188
  store i32 %50, i32* %1, align 4, !dbg !3188
  br label %27, !dbg !3189, !llvm.loop !3190

51:                                               ; preds = %27
  store i32 0, i32* %1, align 4, !dbg !3192
  br label %52, !dbg !3194

52:                                               ; preds = %73, %51
  %53 = load i32, i32* %1, align 4, !dbg !3195
  %54 = icmp ult i32 %53, 32768, !dbg !3197
  br i1 %54, label %55, label %76, !dbg !3198

55:                                               ; preds = %52
  %56 = load i32, i32* %1, align 4, !dbg !3199
  %57 = zext i32 %56 to i64, !dbg !3201
  %58 = getelementptr inbounds [0 x i16], [0 x i16]* bitcast ([65536 x i16]* @prev to [0 x i16]*), i64 0, i64 %57, !dbg !3201
  %59 = load i16, i16* %58, align 2, !dbg !3201
  %60 = zext i16 %59 to i32, !dbg !3201
  store i32 %60, i32* %2, align 4, !dbg !3202
  %61 = load i32, i32* %2, align 4, !dbg !3203
  %62 = icmp uge i32 %61, 32768, !dbg !3204
  br i1 %62, label %63, label %66, !dbg !3203

63:                                               ; preds = %55
  %64 = load i32, i32* %2, align 4, !dbg !3205
  %65 = sub i32 %64, 32768, !dbg !3206
  br label %67, !dbg !3203

66:                                               ; preds = %55
  br label %67, !dbg !3203

67:                                               ; preds = %66, %63
  %68 = phi i32 [ %65, %63 ], [ 0, %66 ], !dbg !3203
  %69 = trunc i32 %68 to i16, !dbg !3207
  %70 = load i32, i32* %1, align 4, !dbg !3208
  %71 = zext i32 %70 to i64, !dbg !3209
  %72 = getelementptr inbounds [0 x i16], [0 x i16]* bitcast ([65536 x i16]* @prev to [0 x i16]*), i64 0, i64 %71, !dbg !3209
  store i16 %69, i16* %72, align 2, !dbg !3210
  br label %73, !dbg !3211

73:                                               ; preds = %67
  %74 = load i32, i32* %1, align 4, !dbg !3212
  %75 = add i32 %74, 1, !dbg !3212
  store i32 %75, i32* %1, align 4, !dbg !3212
  br label %52, !dbg !3213, !llvm.loop !3214

76:                                               ; preds = %52
  %77 = load i32, i32* %3, align 4, !dbg !3216
  %78 = add i32 %77, 32768, !dbg !3216
  store i32 %78, i32* %3, align 4, !dbg !3216
  br label %79, !dbg !3217

79:                                               ; preds = %76, %17
  br label %80

80:                                               ; preds = %79, %14
  %81 = load i32, i32* @eofile, align 4, !dbg !3218
  %82 = icmp ne i32 %81, 0, !dbg !3218
  br i1 %82, label %104, label %83, !dbg !3220

83:                                               ; preds = %80
  %84 = load i32 (i8*, i32)*, i32 (i8*, i32)** @read_buf, align 8, !dbg !3221
  %85 = load i32, i32* @strstart, align 4, !dbg !3223
  %86 = zext i32 %85 to i64, !dbg !3224
  %87 = getelementptr inbounds i8, i8* getelementptr inbounds ([65536 x i8], [65536 x i8]* @window, i64 0, i64 0), i64 %86, !dbg !3224
  %88 = load i32, i32* @lookahead, align 4, !dbg !3225
  %89 = zext i32 %88 to i64, !dbg !3226
  %90 = getelementptr inbounds i8, i8* %87, i64 %89, !dbg !3226
  %91 = load i32, i32* %3, align 4, !dbg !3227
  %92 = call i32 %84(i8* noundef %90, i32 noundef %91), !dbg !3221
  store i32 %92, i32* %1, align 4, !dbg !3228
  %93 = load i32, i32* %1, align 4, !dbg !3229
  %94 = icmp eq i32 %93, 0, !dbg !3231
  br i1 %94, label %98, label %95, !dbg !3232

95:                                               ; preds = %83
  %96 = load i32, i32* %1, align 4, !dbg !3233
  %97 = icmp eq i32 %96, -1, !dbg !3234
  br i1 %97, label %98, label %99, !dbg !3235

98:                                               ; preds = %95, %83
  store i32 1, i32* @eofile, align 4, !dbg !3236
  br label %103, !dbg !3238

99:                                               ; preds = %95
  %100 = load i32, i32* %1, align 4, !dbg !3239
  %101 = load i32, i32* @lookahead, align 4, !dbg !3241
  %102 = add i32 %101, %100, !dbg !3241
  store i32 %102, i32* @lookahead, align 4, !dbg !3241
  br label %103

103:                                              ; preds = %99, %98
  br label %104, !dbg !3242

104:                                              ; preds = %103, %80
  ret void, !dbg !3243
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @longest_match(i32 noundef %0) #0 !dbg !3244 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3247, metadata !DIExpression()), !dbg !3248
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3249, metadata !DIExpression()), !dbg !3250
  %12 = load i32, i32* @max_chain_length, align 4, !dbg !3251
  store i32 %12, i32* %3, align 4, !dbg !3250
  call void @llvm.dbg.declare(metadata i8** %4, metadata !3252, metadata !DIExpression()), !dbg !3253
  %13 = load i32, i32* @strstart, align 4, !dbg !3254
  %14 = zext i32 %13 to i64, !dbg !3255
  %15 = getelementptr inbounds i8, i8* getelementptr inbounds ([65536 x i8], [65536 x i8]* @window, i64 0, i64 0), i64 %14, !dbg !3255
  store i8* %15, i8** %4, align 8, !dbg !3253
  call void @llvm.dbg.declare(metadata i8** %5, metadata !3256, metadata !DIExpression()), !dbg !3257
  call void @llvm.dbg.declare(metadata i32* %6, metadata !3258, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.declare(metadata i32* %7, metadata !3260, metadata !DIExpression()), !dbg !3261
  %16 = load i32, i32* @prev_length, align 4, !dbg !3262
  store i32 %16, i32* %7, align 4, !dbg !3261
  call void @llvm.dbg.declare(metadata i32* %8, metadata !3263, metadata !DIExpression()), !dbg !3264
  %17 = load i32, i32* @strstart, align 4, !dbg !3265
  %18 = icmp ugt i32 %17, 32506, !dbg !3266
  br i1 %18, label %19, label %22, !dbg !3265

19:                                               ; preds = %1
  %20 = load i32, i32* @strstart, align 4, !dbg !3267
  %21 = sub i32 %20, 32506, !dbg !3268
  br label %23, !dbg !3265

22:                                               ; preds = %1
  br label %23, !dbg !3265

23:                                               ; preds = %22, %19
  %24 = phi i32 [ %21, %19 ], [ 0, %22 ], !dbg !3265
  store i32 %24, i32* %8, align 4, !dbg !3264
  call void @llvm.dbg.declare(metadata i8** %9, metadata !3269, metadata !DIExpression()), !dbg !3270
  %25 = load i32, i32* @strstart, align 4, !dbg !3271
  %26 = zext i32 %25 to i64, !dbg !3272
  %27 = getelementptr inbounds i8, i8* getelementptr inbounds ([65536 x i8], [65536 x i8]* @window, i64 0, i64 0), i64 %26, !dbg !3272
  %28 = getelementptr inbounds i8, i8* %27, i64 258, !dbg !3273
  store i8* %28, i8** %9, align 8, !dbg !3270
  call void @llvm.dbg.declare(metadata i8* %10, metadata !3274, metadata !DIExpression()), !dbg !3275
  %29 = load i8*, i8** %4, align 8, !dbg !3276
  %30 = load i32, i32* %7, align 4, !dbg !3277
  %31 = sub nsw i32 %30, 1, !dbg !3278
  %32 = sext i32 %31 to i64, !dbg !3276
  %33 = getelementptr inbounds i8, i8* %29, i64 %32, !dbg !3276
  %34 = load i8, i8* %33, align 1, !dbg !3276
  store i8 %34, i8* %10, align 1, !dbg !3275
  call void @llvm.dbg.declare(metadata i8* %11, metadata !3279, metadata !DIExpression()), !dbg !3280
  %35 = load i8*, i8** %4, align 8, !dbg !3281
  %36 = load i32, i32* %7, align 4, !dbg !3282
  %37 = sext i32 %36 to i64, !dbg !3281
  %38 = getelementptr inbounds i8, i8* %35, i64 %37, !dbg !3281
  %39 = load i8, i8* %38, align 1, !dbg !3281
  store i8 %39, i8* %11, align 1, !dbg !3280
  %40 = load i32, i32* @prev_length, align 4, !dbg !3283
  %41 = load i32, i32* @good_match, align 4, !dbg !3285
  %42 = icmp uge i32 %40, %41, !dbg !3286
  br i1 %42, label %43, label %46, !dbg !3287

43:                                               ; preds = %23
  %44 = load i32, i32* %3, align 4, !dbg !3288
  %45 = lshr i32 %44, 2, !dbg !3288
  store i32 %45, i32* %3, align 4, !dbg !3288
  br label %46, !dbg !3290

46:                                               ; preds = %43, %23
  br label %47, !dbg !3291

47:                                               ; preds = %228, %46
  %48 = load i32, i32* %2, align 4, !dbg !3292
  %49 = zext i32 %48 to i64, !dbg !3294
  %50 = getelementptr inbounds i8, i8* getelementptr inbounds ([65536 x i8], [65536 x i8]* @window, i64 0, i64 0), i64 %49, !dbg !3294
  store i8* %50, i8** %5, align 8, !dbg !3295
  %51 = load i8*, i8** %5, align 8, !dbg !3296
  %52 = load i32, i32* %7, align 4, !dbg !3298
  %53 = sext i32 %52 to i64, !dbg !3296
  %54 = getelementptr inbounds i8, i8* %51, i64 %53, !dbg !3296
  %55 = load i8, i8* %54, align 1, !dbg !3296
  %56 = zext i8 %55 to i32, !dbg !3296
  %57 = load i8, i8* %11, align 1, !dbg !3299
  %58 = zext i8 %57 to i32, !dbg !3299
  %59 = icmp ne i32 %56, %58, !dbg !3300
  br i1 %59, label %89, label %60, !dbg !3301

60:                                               ; preds = %47
  %61 = load i8*, i8** %5, align 8, !dbg !3302
  %62 = load i32, i32* %7, align 4, !dbg !3303
  %63 = sub nsw i32 %62, 1, !dbg !3304
  %64 = sext i32 %63 to i64, !dbg !3302
  %65 = getelementptr inbounds i8, i8* %61, i64 %64, !dbg !3302
  %66 = load i8, i8* %65, align 1, !dbg !3302
  %67 = zext i8 %66 to i32, !dbg !3302
  %68 = load i8, i8* %10, align 1, !dbg !3305
  %69 = zext i8 %68 to i32, !dbg !3305
  %70 = icmp ne i32 %67, %69, !dbg !3306
  br i1 %70, label %89, label %71, !dbg !3307

71:                                               ; preds = %60
  %72 = load i8*, i8** %5, align 8, !dbg !3308
  %73 = load i8, i8* %72, align 1, !dbg !3309
  %74 = zext i8 %73 to i32, !dbg !3309
  %75 = load i8*, i8** %4, align 8, !dbg !3310
  %76 = load i8, i8* %75, align 1, !dbg !3311
  %77 = zext i8 %76 to i32, !dbg !3311
  %78 = icmp ne i32 %74, %77, !dbg !3312
  br i1 %78, label %89, label %79, !dbg !3313

79:                                               ; preds = %71
  %80 = load i8*, i8** %5, align 8, !dbg !3314
  %81 = getelementptr inbounds i8, i8* %80, i32 1, !dbg !3314
  store i8* %81, i8** %5, align 8, !dbg !3314
  %82 = load i8, i8* %81, align 1, !dbg !3315
  %83 = zext i8 %82 to i32, !dbg !3315
  %84 = load i8*, i8** %4, align 8, !dbg !3316
  %85 = getelementptr inbounds i8, i8* %84, i64 1, !dbg !3316
  %86 = load i8, i8* %85, align 1, !dbg !3316
  %87 = zext i8 %86 to i32, !dbg !3316
  %88 = icmp ne i32 %83, %87, !dbg !3317
  br i1 %88, label %89, label %90, !dbg !3318

89:                                               ; preds = %79, %71, %60, %47
  br label %215, !dbg !3319

90:                                               ; preds = %79
  %91 = load i8*, i8** %4, align 8, !dbg !3320
  %92 = getelementptr inbounds i8, i8* %91, i64 2, !dbg !3320
  store i8* %92, i8** %4, align 8, !dbg !3320
  %93 = load i8*, i8** %5, align 8, !dbg !3321
  %94 = getelementptr inbounds i8, i8* %93, i32 1, !dbg !3321
  store i8* %94, i8** %5, align 8, !dbg !3321
  br label %95, !dbg !3322

95:                                               ; preds = %180, %90
  br label %96, !dbg !3323

96:                                               ; preds = %95
  %97 = load i8*, i8** %4, align 8, !dbg !3325
  %98 = getelementptr inbounds i8, i8* %97, i32 1, !dbg !3325
  store i8* %98, i8** %4, align 8, !dbg !3325
  %99 = load i8, i8* %98, align 1, !dbg !3326
  %100 = zext i8 %99 to i32, !dbg !3326
  %101 = load i8*, i8** %5, align 8, !dbg !3327
  %102 = getelementptr inbounds i8, i8* %101, i32 1, !dbg !3327
  store i8* %102, i8** %5, align 8, !dbg !3327
  %103 = load i8, i8* %102, align 1, !dbg !3328
  %104 = zext i8 %103 to i32, !dbg !3328
  %105 = icmp eq i32 %100, %104, !dbg !3329
  br i1 %105, label %106, label %180, !dbg !3330

106:                                              ; preds = %96
  %107 = load i8*, i8** %4, align 8, !dbg !3331
  %108 = getelementptr inbounds i8, i8* %107, i32 1, !dbg !3331
  store i8* %108, i8** %4, align 8, !dbg !3331
  %109 = load i8, i8* %108, align 1, !dbg !3332
  %110 = zext i8 %109 to i32, !dbg !3332
  %111 = load i8*, i8** %5, align 8, !dbg !3333
  %112 = getelementptr inbounds i8, i8* %111, i32 1, !dbg !3333
  store i8* %112, i8** %5, align 8, !dbg !3333
  %113 = load i8, i8* %112, align 1, !dbg !3334
  %114 = zext i8 %113 to i32, !dbg !3334
  %115 = icmp eq i32 %110, %114, !dbg !3335
  br i1 %115, label %116, label %180, !dbg !3336

116:                                              ; preds = %106
  %117 = load i8*, i8** %4, align 8, !dbg !3337
  %118 = getelementptr inbounds i8, i8* %117, i32 1, !dbg !3337
  store i8* %118, i8** %4, align 8, !dbg !3337
  %119 = load i8, i8* %118, align 1, !dbg !3338
  %120 = zext i8 %119 to i32, !dbg !3338
  %121 = load i8*, i8** %5, align 8, !dbg !3339
  %122 = getelementptr inbounds i8, i8* %121, i32 1, !dbg !3339
  store i8* %122, i8** %5, align 8, !dbg !3339
  %123 = load i8, i8* %122, align 1, !dbg !3340
  %124 = zext i8 %123 to i32, !dbg !3340
  %125 = icmp eq i32 %120, %124, !dbg !3341
  br i1 %125, label %126, label %180, !dbg !3342

126:                                              ; preds = %116
  %127 = load i8*, i8** %4, align 8, !dbg !3343
  %128 = getelementptr inbounds i8, i8* %127, i32 1, !dbg !3343
  store i8* %128, i8** %4, align 8, !dbg !3343
  %129 = load i8, i8* %128, align 1, !dbg !3344
  %130 = zext i8 %129 to i32, !dbg !3344
  %131 = load i8*, i8** %5, align 8, !dbg !3345
  %132 = getelementptr inbounds i8, i8* %131, i32 1, !dbg !3345
  store i8* %132, i8** %5, align 8, !dbg !3345
  %133 = load i8, i8* %132, align 1, !dbg !3346
  %134 = zext i8 %133 to i32, !dbg !3346
  %135 = icmp eq i32 %130, %134, !dbg !3347
  br i1 %135, label %136, label %180, !dbg !3348

136:                                              ; preds = %126
  %137 = load i8*, i8** %4, align 8, !dbg !3349
  %138 = getelementptr inbounds i8, i8* %137, i32 1, !dbg !3349
  store i8* %138, i8** %4, align 8, !dbg !3349
  %139 = load i8, i8* %138, align 1, !dbg !3350
  %140 = zext i8 %139 to i32, !dbg !3350
  %141 = load i8*, i8** %5, align 8, !dbg !3351
  %142 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !3351
  store i8* %142, i8** %5, align 8, !dbg !3351
  %143 = load i8, i8* %142, align 1, !dbg !3352
  %144 = zext i8 %143 to i32, !dbg !3352
  %145 = icmp eq i32 %140, %144, !dbg !3353
  br i1 %145, label %146, label %180, !dbg !3354

146:                                              ; preds = %136
  %147 = load i8*, i8** %4, align 8, !dbg !3355
  %148 = getelementptr inbounds i8, i8* %147, i32 1, !dbg !3355
  store i8* %148, i8** %4, align 8, !dbg !3355
  %149 = load i8, i8* %148, align 1, !dbg !3356
  %150 = zext i8 %149 to i32, !dbg !3356
  %151 = load i8*, i8** %5, align 8, !dbg !3357
  %152 = getelementptr inbounds i8, i8* %151, i32 1, !dbg !3357
  store i8* %152, i8** %5, align 8, !dbg !3357
  %153 = load i8, i8* %152, align 1, !dbg !3358
  %154 = zext i8 %153 to i32, !dbg !3358
  %155 = icmp eq i32 %150, %154, !dbg !3359
  br i1 %155, label %156, label %180, !dbg !3360

156:                                              ; preds = %146
  %157 = load i8*, i8** %4, align 8, !dbg !3361
  %158 = getelementptr inbounds i8, i8* %157, i32 1, !dbg !3361
  store i8* %158, i8** %4, align 8, !dbg !3361
  %159 = load i8, i8* %158, align 1, !dbg !3362
  %160 = zext i8 %159 to i32, !dbg !3362
  %161 = load i8*, i8** %5, align 8, !dbg !3363
  %162 = getelementptr inbounds i8, i8* %161, i32 1, !dbg !3363
  store i8* %162, i8** %5, align 8, !dbg !3363
  %163 = load i8, i8* %162, align 1, !dbg !3364
  %164 = zext i8 %163 to i32, !dbg !3364
  %165 = icmp eq i32 %160, %164, !dbg !3365
  br i1 %165, label %166, label %180, !dbg !3366

166:                                              ; preds = %156
  %167 = load i8*, i8** %4, align 8, !dbg !3367
  %168 = getelementptr inbounds i8, i8* %167, i32 1, !dbg !3367
  store i8* %168, i8** %4, align 8, !dbg !3367
  %169 = load i8, i8* %168, align 1, !dbg !3368
  %170 = zext i8 %169 to i32, !dbg !3368
  %171 = load i8*, i8** %5, align 8, !dbg !3369
  %172 = getelementptr inbounds i8, i8* %171, i32 1, !dbg !3369
  store i8* %172, i8** %5, align 8, !dbg !3369
  %173 = load i8, i8* %172, align 1, !dbg !3370
  %174 = zext i8 %173 to i32, !dbg !3370
  %175 = icmp eq i32 %170, %174, !dbg !3371
  br i1 %175, label %176, label %180, !dbg !3372

176:                                              ; preds = %166
  %177 = load i8*, i8** %4, align 8, !dbg !3373
  %178 = load i8*, i8** %9, align 8, !dbg !3374
  %179 = icmp ult i8* %177, %178, !dbg !3375
  br label %180

180:                                              ; preds = %176, %166, %156, %146, %136, %126, %116, %106, %96
  %181 = phi i1 [ false, %166 ], [ false, %156 ], [ false, %146 ], [ false, %136 ], [ false, %126 ], [ false, %116 ], [ false, %106 ], [ false, %96 ], [ %179, %176 ], !dbg !3376
  br i1 %181, label %95, label %182, !dbg !3323, !llvm.loop !3377

182:                                              ; preds = %180
  %183 = load i8*, i8** %9, align 8, !dbg !3379
  %184 = load i8*, i8** %4, align 8, !dbg !3380
  %185 = ptrtoint i8* %183 to i64, !dbg !3381
  %186 = ptrtoint i8* %184 to i64, !dbg !3381
  %187 = sub i64 %185, %186, !dbg !3381
  %188 = trunc i64 %187 to i32, !dbg !3382
  %189 = sub nsw i32 258, %188, !dbg !3383
  store i32 %189, i32* %6, align 4, !dbg !3384
  %190 = load i8*, i8** %9, align 8, !dbg !3385
  %191 = getelementptr inbounds i8, i8* %190, i64 -258, !dbg !3386
  store i8* %191, i8** %4, align 8, !dbg !3387
  %192 = load i32, i32* %6, align 4, !dbg !3388
  %193 = load i32, i32* %7, align 4, !dbg !3390
  %194 = icmp sgt i32 %192, %193, !dbg !3391
  br i1 %194, label %195, label %214, !dbg !3392

195:                                              ; preds = %182
  %196 = load i32, i32* %2, align 4, !dbg !3393
  store i32 %196, i32* @match_start, align 4, !dbg !3395
  %197 = load i32, i32* %6, align 4, !dbg !3396
  store i32 %197, i32* %7, align 4, !dbg !3397
  %198 = load i32, i32* %6, align 4, !dbg !3398
  %199 = load i32, i32* @nice_match, align 4, !dbg !3400
  %200 = icmp sge i32 %198, %199, !dbg !3401
  br i1 %200, label %201, label %202, !dbg !3402

201:                                              ; preds = %195
  br label %230, !dbg !3403

202:                                              ; preds = %195
  %203 = load i8*, i8** %4, align 8, !dbg !3404
  %204 = load i32, i32* %7, align 4, !dbg !3405
  %205 = sub nsw i32 %204, 1, !dbg !3406
  %206 = sext i32 %205 to i64, !dbg !3404
  %207 = getelementptr inbounds i8, i8* %203, i64 %206, !dbg !3404
  %208 = load i8, i8* %207, align 1, !dbg !3404
  store i8 %208, i8* %10, align 1, !dbg !3407
  %209 = load i8*, i8** %4, align 8, !dbg !3408
  %210 = load i32, i32* %7, align 4, !dbg !3409
  %211 = sext i32 %210 to i64, !dbg !3408
  %212 = getelementptr inbounds i8, i8* %209, i64 %211, !dbg !3408
  %213 = load i8, i8* %212, align 1, !dbg !3408
  store i8 %213, i8* %11, align 1, !dbg !3410
  br label %214, !dbg !3411

214:                                              ; preds = %202, %182
  br label %215, !dbg !3412

215:                                              ; preds = %214, %89
  %216 = load i32, i32* %2, align 4, !dbg !3413
  %217 = and i32 %216, 32767, !dbg !3414
  %218 = zext i32 %217 to i64, !dbg !3415
  %219 = getelementptr inbounds [0 x i16], [0 x i16]* bitcast ([65536 x i16]* @prev to [0 x i16]*), i64 0, i64 %218, !dbg !3415
  %220 = load i16, i16* %219, align 2, !dbg !3415
  %221 = zext i16 %220 to i32, !dbg !3415
  store i32 %221, i32* %2, align 4, !dbg !3416
  %222 = load i32, i32* %8, align 4, !dbg !3417
  %223 = icmp ugt i32 %221, %222, !dbg !3418
  br i1 %223, label %224, label %228, !dbg !3419

224:                                              ; preds = %215
  %225 = load i32, i32* %3, align 4, !dbg !3420
  %226 = add i32 %225, -1, !dbg !3420
  store i32 %226, i32* %3, align 4, !dbg !3420
  %227 = icmp ne i32 %226, 0, !dbg !3421
  br label %228

228:                                              ; preds = %224, %215
  %229 = phi i1 [ false, %215 ], [ %227, %224 ], !dbg !3422
  br i1 %229, label %47, label %230, !dbg !3412, !llvm.loop !3423

230:                                              ; preds = %228, %201
  %231 = load i32, i32* %7, align 4, !dbg !3425
  ret i32 %231, !dbg !3426
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @deflate() #0 !dbg !3427 {
  %1 = alloca i64, align 8
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3430, metadata !DIExpression()), !dbg !3431
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3432, metadata !DIExpression()), !dbg !3433
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3434, metadata !DIExpression()), !dbg !3435
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3436, metadata !DIExpression()), !dbg !3437
  store i32 0, i32* %5, align 4, !dbg !3437
  call void @llvm.dbg.declare(metadata i32* %6, metadata !3438, metadata !DIExpression()), !dbg !3439
  store i32 2, i32* %6, align 4, !dbg !3439
  %7 = load i32, i32* @compr_level, align 4, !dbg !3440
  %8 = icmp sle i32 %7, 3, !dbg !3442
  br i1 %8, label %9, label %11, !dbg !3443

9:                                                ; preds = %0
  %10 = call i64 @deflate_fast(), !dbg !3444
  store i64 %10, i64* %1, align 8, !dbg !3445
  br label %233, !dbg !3445

11:                                               ; preds = %0
  br label %12, !dbg !3446

12:                                               ; preds = %205, %11
  %13 = load i32, i32* @lookahead, align 4, !dbg !3447
  %14 = icmp ne i32 %13, 0, !dbg !3448
  br i1 %14, label %15, label %206, !dbg !3446

15:                                               ; preds = %12
  %16 = load i32, i32* @ins_h, align 4, !dbg !3449
  %17 = shl i32 %16, 5, !dbg !3449
  %18 = load i32, i32* @strstart, align 4, !dbg !3449
  %19 = add i32 %18, 3, !dbg !3449
  %20 = sub i32 %19, 1, !dbg !3449
  %21 = zext i32 %20 to i64, !dbg !3449
  %22 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i64 0, i64 %21, !dbg !3449
  %23 = load i8, i8* %22, align 1, !dbg !3449
  %24 = zext i8 %23 to i32, !dbg !3449
  %25 = xor i32 %17, %24, !dbg !3449
  %26 = and i32 %25, 32767, !dbg !3449
  store i32 %26, i32* @ins_h, align 4, !dbg !3449
  %27 = load i32, i32* @ins_h, align 4, !dbg !3449
  %28 = zext i32 %27 to i64, !dbg !3449
  %29 = getelementptr inbounds i16, i16* getelementptr inbounds ([65536 x i16], [65536 x i16]* @prev, i64 0, i64 32768), i64 %28, !dbg !3449
  %30 = load i16, i16* %29, align 2, !dbg !3449
  %31 = zext i16 %30 to i32, !dbg !3449
  store i32 %31, i32* %2, align 4, !dbg !3449
  %32 = trunc i32 %31 to i16, !dbg !3449
  %33 = load i32, i32* @strstart, align 4, !dbg !3449
  %34 = and i32 %33, 32767, !dbg !3449
  %35 = zext i32 %34 to i64, !dbg !3449
  %36 = getelementptr inbounds [0 x i16], [0 x i16]* bitcast ([65536 x i16]* @prev to [0 x i16]*), i64 0, i64 %35, !dbg !3449
  store i16 %32, i16* %36, align 2, !dbg !3449
  %37 = load i32, i32* @strstart, align 4, !dbg !3449
  %38 = trunc i32 %37 to i16, !dbg !3449
  %39 = load i32, i32* @ins_h, align 4, !dbg !3449
  %40 = zext i32 %39 to i64, !dbg !3449
  %41 = getelementptr inbounds i16, i16* getelementptr inbounds ([65536 x i16], [65536 x i16]* @prev, i64 0, i64 32768), i64 %40, !dbg !3449
  store i16 %38, i16* %41, align 2, !dbg !3449
  %42 = load i32, i32* %6, align 4, !dbg !3451
  store i32 %42, i32* @prev_length, align 4, !dbg !3452
  %43 = load i32, i32* @match_start, align 4, !dbg !3453
  store i32 %43, i32* %3, align 4, !dbg !3454
  store i32 2, i32* %6, align 4, !dbg !3455
  %44 = load i32, i32* %2, align 4, !dbg !3456
  %45 = icmp ne i32 %44, 0, !dbg !3458
  br i1 %45, label %46, label %75, !dbg !3459

46:                                               ; preds = %15
  %47 = load i32, i32* @prev_length, align 4, !dbg !3460
  %48 = load i32, i32* @max_lazy_match, align 4, !dbg !3461
  %49 = icmp ult i32 %47, %48, !dbg !3462
  br i1 %49, label %50, label %75, !dbg !3463

50:                                               ; preds = %46
  %51 = load i32, i32* @strstart, align 4, !dbg !3464
  %52 = load i32, i32* %2, align 4, !dbg !3465
  %53 = sub i32 %51, %52, !dbg !3466
  %54 = icmp ule i32 %53, 32506, !dbg !3467
  br i1 %54, label %55, label %75, !dbg !3468

55:                                               ; preds = %50
  %56 = load i32, i32* %2, align 4, !dbg !3469
  %57 = call i32 @longest_match(i32 noundef %56), !dbg !3471
  store i32 %57, i32* %6, align 4, !dbg !3472
  %58 = load i32, i32* %6, align 4, !dbg !3473
  %59 = load i32, i32* @lookahead, align 4, !dbg !3475
  %60 = icmp ugt i32 %58, %59, !dbg !3476
  br i1 %60, label %61, label %63, !dbg !3477

61:                                               ; preds = %55
  %62 = load i32, i32* @lookahead, align 4, !dbg !3478
  store i32 %62, i32* %6, align 4, !dbg !3479
  br label %63, !dbg !3480

63:                                               ; preds = %61, %55
  %64 = load i32, i32* %6, align 4, !dbg !3481
  %65 = icmp eq i32 %64, 3, !dbg !3483
  br i1 %65, label %66, label %74, !dbg !3484

66:                                               ; preds = %63
  %67 = load i32, i32* @strstart, align 4, !dbg !3485
  %68 = load i32, i32* @match_start, align 4, !dbg !3486
  %69 = sub i32 %67, %68, !dbg !3487
  %70 = icmp ugt i32 %69, 4096, !dbg !3488
  br i1 %70, label %71, label %74, !dbg !3489

71:                                               ; preds = %66
  %72 = load i32, i32* %6, align 4, !dbg !3490
  %73 = add i32 %72, -1, !dbg !3490
  store i32 %73, i32* %6, align 4, !dbg !3490
  br label %74, !dbg !3492

74:                                               ; preds = %71, %66, %63
  br label %75, !dbg !3493

75:                                               ; preds = %74, %50, %46, %15
  %76 = load i32, i32* @prev_length, align 4, !dbg !3494
  %77 = icmp uge i32 %76, 3, !dbg !3496
  br i1 %77, label %78, label %153, !dbg !3497

78:                                               ; preds = %75
  %79 = load i32, i32* %6, align 4, !dbg !3498
  %80 = load i32, i32* @prev_length, align 4, !dbg !3499
  %81 = icmp ule i32 %79, %80, !dbg !3500
  br i1 %81, label %82, label %153, !dbg !3501

82:                                               ; preds = %78
  %83 = load i32, i32* @strstart, align 4, !dbg !3502
  %84 = sub i32 %83, 1, !dbg !3504
  %85 = load i32, i32* %3, align 4, !dbg !3505
  %86 = sub i32 %84, %85, !dbg !3506
  %87 = load i32, i32* @prev_length, align 4, !dbg !3507
  %88 = sub i32 %87, 3, !dbg !3508
  %89 = call i32 @ct_tally(i32 noundef %86, i32 noundef %88), !dbg !3509
  store i32 %89, i32* %4, align 4, !dbg !3510
  %90 = load i32, i32* @prev_length, align 4, !dbg !3511
  %91 = sub i32 %90, 1, !dbg !3512
  %92 = load i32, i32* @lookahead, align 4, !dbg !3513
  %93 = sub i32 %92, %91, !dbg !3513
  store i32 %93, i32* @lookahead, align 4, !dbg !3513
  %94 = load i32, i32* @prev_length, align 4, !dbg !3514
  %95 = sub i32 %94, 2, !dbg !3514
  store i32 %95, i32* @prev_length, align 4, !dbg !3514
  br label %96, !dbg !3515

96:                                               ; preds = %125, %82
  %97 = load i32, i32* @strstart, align 4, !dbg !3516
  %98 = add i32 %97, 1, !dbg !3516
  store i32 %98, i32* @strstart, align 4, !dbg !3516
  %99 = load i32, i32* @ins_h, align 4, !dbg !3518
  %100 = shl i32 %99, 5, !dbg !3518
  %101 = load i32, i32* @strstart, align 4, !dbg !3518
  %102 = add i32 %101, 3, !dbg !3518
  %103 = sub i32 %102, 1, !dbg !3518
  %104 = zext i32 %103 to i64, !dbg !3518
  %105 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i64 0, i64 %104, !dbg !3518
  %106 = load i8, i8* %105, align 1, !dbg !3518
  %107 = zext i8 %106 to i32, !dbg !3518
  %108 = xor i32 %100, %107, !dbg !3518
  %109 = and i32 %108, 32767, !dbg !3518
  store i32 %109, i32* @ins_h, align 4, !dbg !3518
  %110 = load i32, i32* @ins_h, align 4, !dbg !3518
  %111 = zext i32 %110 to i64, !dbg !3518
  %112 = getelementptr inbounds i16, i16* getelementptr inbounds ([65536 x i16], [65536 x i16]* @prev, i64 0, i64 32768), i64 %111, !dbg !3518
  %113 = load i16, i16* %112, align 2, !dbg !3518
  %114 = zext i16 %113 to i32, !dbg !3518
  store i32 %114, i32* %2, align 4, !dbg !3518
  %115 = trunc i32 %114 to i16, !dbg !3518
  %116 = load i32, i32* @strstart, align 4, !dbg !3518
  %117 = and i32 %116, 32767, !dbg !3518
  %118 = zext i32 %117 to i64, !dbg !3518
  %119 = getelementptr inbounds [0 x i16], [0 x i16]* bitcast ([65536 x i16]* @prev to [0 x i16]*), i64 0, i64 %118, !dbg !3518
  store i16 %115, i16* %119, align 2, !dbg !3518
  %120 = load i32, i32* @strstart, align 4, !dbg !3518
  %121 = trunc i32 %120 to i16, !dbg !3518
  %122 = load i32, i32* @ins_h, align 4, !dbg !3518
  %123 = zext i32 %122 to i64, !dbg !3518
  %124 = getelementptr inbounds i16, i16* getelementptr inbounds ([65536 x i16], [65536 x i16]* @prev, i64 0, i64 32768), i64 %123, !dbg !3518
  store i16 %121, i16* %124, align 2, !dbg !3518
  br label %125, !dbg !3519

125:                                              ; preds = %96
  %126 = load i32, i32* @prev_length, align 4, !dbg !3520
  %127 = add i32 %126, -1, !dbg !3520
  store i32 %127, i32* @prev_length, align 4, !dbg !3520
  %128 = icmp ne i32 %127, 0, !dbg !3521
  br i1 %128, label %96, label %129, !dbg !3519, !llvm.loop !3522

129:                                              ; preds = %125
  store i32 0, i32* %5, align 4, !dbg !3524
  store i32 2, i32* %6, align 4, !dbg !3525
  %130 = load i32, i32* @strstart, align 4, !dbg !3526
  %131 = add i32 %130, 1, !dbg !3526
  store i32 %131, i32* @strstart, align 4, !dbg !3526
  %132 = load i32, i32* %4, align 4, !dbg !3527
  %133 = icmp ne i32 %132, 0, !dbg !3527
  br i1 %133, label %134, label %152, !dbg !3529

134:                                              ; preds = %129
  %135 = load i64, i64* @block_start, align 8, !dbg !3530
  %136 = icmp sge i64 %135, 0, !dbg !3530
  br i1 %136, label %137, label %142, !dbg !3530

137:                                              ; preds = %134
  %138 = load i64, i64* @block_start, align 8, !dbg !3530
  %139 = trunc i64 %138 to i32, !dbg !3530
  %140 = zext i32 %139 to i64, !dbg !3530
  %141 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i64 0, i64 %140, !dbg !3530
  br label %143, !dbg !3530

142:                                              ; preds = %134
  br label %143, !dbg !3530

143:                                              ; preds = %142, %137
  %144 = phi i8* [ %141, %137 ], [ null, %142 ], !dbg !3530
  %145 = load i32, i32* @strstart, align 4, !dbg !3530
  %146 = zext i32 %145 to i64, !dbg !3530
  %147 = load i64, i64* @block_start, align 8, !dbg !3530
  %148 = sub nsw i64 %146, %147, !dbg !3530
  %149 = call i64 @flush_block(i8* noundef %144, i64 noundef %148, i32 noundef 0), !dbg !3530
  %150 = load i32, i32* @strstart, align 4, !dbg !3531
  %151 = zext i32 %150 to i64, !dbg !3531
  store i64 %151, i64* @block_start, align 8, !dbg !3532
  br label %152, !dbg !3530

152:                                              ; preds = %143, %129
  br label %194, !dbg !3533

153:                                              ; preds = %78, %75
  %154 = load i32, i32* %5, align 4, !dbg !3534
  %155 = icmp ne i32 %154, 0, !dbg !3534
  br i1 %155, label %156, label %188, !dbg !3536

156:                                              ; preds = %153
  %157 = load i32, i32* @strstart, align 4, !dbg !3537
  %158 = sub i32 %157, 1, !dbg !3540
  %159 = zext i32 %158 to i64, !dbg !3541
  %160 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i64 0, i64 %159, !dbg !3541
  %161 = load i8, i8* %160, align 1, !dbg !3541
  %162 = zext i8 %161 to i32, !dbg !3541
  %163 = call i32 @ct_tally(i32 noundef 0, i32 noundef %162), !dbg !3542
  %164 = icmp ne i32 %163, 0, !dbg !3542
  br i1 %164, label %165, label %183, !dbg !3543

165:                                              ; preds = %156
  %166 = load i64, i64* @block_start, align 8, !dbg !3544
  %167 = icmp sge i64 %166, 0, !dbg !3544
  br i1 %167, label %168, label %173, !dbg !3544

168:                                              ; preds = %165
  %169 = load i64, i64* @block_start, align 8, !dbg !3544
  %170 = trunc i64 %169 to i32, !dbg !3544
  %171 = zext i32 %170 to i64, !dbg !3544
  %172 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i64 0, i64 %171, !dbg !3544
  br label %174, !dbg !3544

173:                                              ; preds = %165
  br label %174, !dbg !3544

174:                                              ; preds = %173, %168
  %175 = phi i8* [ %172, %168 ], [ null, %173 ], !dbg !3544
  %176 = load i32, i32* @strstart, align 4, !dbg !3544
  %177 = zext i32 %176 to i64, !dbg !3544
  %178 = load i64, i64* @block_start, align 8, !dbg !3544
  %179 = sub nsw i64 %177, %178, !dbg !3544
  %180 = call i64 @flush_block(i8* noundef %175, i64 noundef %179, i32 noundef 0), !dbg !3544
  %181 = load i32, i32* @strstart, align 4, !dbg !3546
  %182 = zext i32 %181 to i64, !dbg !3546
  store i64 %182, i64* @block_start, align 8, !dbg !3547
  br label %183, !dbg !3548

183:                                              ; preds = %174, %156
  %184 = load i32, i32* @strstart, align 4, !dbg !3549
  %185 = add i32 %184, 1, !dbg !3549
  store i32 %185, i32* @strstart, align 4, !dbg !3549
  %186 = load i32, i32* @lookahead, align 4, !dbg !3550
  %187 = add i32 %186, -1, !dbg !3550
  store i32 %187, i32* @lookahead, align 4, !dbg !3550
  br label %193, !dbg !3551

188:                                              ; preds = %153
  store i32 1, i32* %5, align 4, !dbg !3552
  %189 = load i32, i32* @strstart, align 4, !dbg !3554
  %190 = add i32 %189, 1, !dbg !3554
  store i32 %190, i32* @strstart, align 4, !dbg !3554
  %191 = load i32, i32* @lookahead, align 4, !dbg !3555
  %192 = add i32 %191, -1, !dbg !3555
  store i32 %192, i32* @lookahead, align 4, !dbg !3555
  br label %193

193:                                              ; preds = %188, %183
  br label %194

194:                                              ; preds = %193, %152
  br label %195, !dbg !3556

195:                                              ; preds = %204, %194
  %196 = load i32, i32* @lookahead, align 4, !dbg !3557
  %197 = icmp ult i32 %196, 262, !dbg !3558
  br i1 %197, label %198, label %202, !dbg !3559

198:                                              ; preds = %195
  %199 = load i32, i32* @eofile, align 4, !dbg !3560
  %200 = icmp ne i32 %199, 0, !dbg !3561
  %201 = xor i1 %200, true, !dbg !3561
  br label %202

202:                                              ; preds = %198, %195
  %203 = phi i1 [ false, %195 ], [ %201, %198 ], !dbg !3562
  br i1 %203, label %204, label %205, !dbg !3556

204:                                              ; preds = %202
  call void @fill_window(), !dbg !3563
  br label %195, !dbg !3556, !llvm.loop !3564

205:                                              ; preds = %202
  br label %12, !dbg !3446, !llvm.loop !3566

206:                                              ; preds = %12
  %207 = load i32, i32* %5, align 4, !dbg !3568
  %208 = icmp ne i32 %207, 0, !dbg !3568
  br i1 %208, label %209, label %217, !dbg !3570

209:                                              ; preds = %206
  %210 = load i32, i32* @strstart, align 4, !dbg !3571
  %211 = sub i32 %210, 1, !dbg !3572
  %212 = zext i32 %211 to i64, !dbg !3573
  %213 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i64 0, i64 %212, !dbg !3573
  %214 = load i8, i8* %213, align 1, !dbg !3573
  %215 = zext i8 %214 to i32, !dbg !3573
  %216 = call i32 @ct_tally(i32 noundef 0, i32 noundef %215), !dbg !3574
  br label %217, !dbg !3574

217:                                              ; preds = %209, %206
  %218 = load i64, i64* @block_start, align 8, !dbg !3575
  %219 = icmp sge i64 %218, 0, !dbg !3575
  br i1 %219, label %220, label %225, !dbg !3575

220:                                              ; preds = %217
  %221 = load i64, i64* @block_start, align 8, !dbg !3575
  %222 = trunc i64 %221 to i32, !dbg !3575
  %223 = zext i32 %222 to i64, !dbg !3575
  %224 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i64 0, i64 %223, !dbg !3575
  br label %226, !dbg !3575

225:                                              ; preds = %217
  br label %226, !dbg !3575

226:                                              ; preds = %225, %220
  %227 = phi i8* [ %224, %220 ], [ null, %225 ], !dbg !3575
  %228 = load i32, i32* @strstart, align 4, !dbg !3575
  %229 = zext i32 %228 to i64, !dbg !3575
  %230 = load i64, i64* @block_start, align 8, !dbg !3575
  %231 = sub nsw i64 %229, %230, !dbg !3575
  %232 = call i64 @flush_block(i8* noundef %227, i64 noundef %231, i32 noundef 1), !dbg !3575
  store i64 %232, i64* %1, align 8, !dbg !3576
  br label %233, !dbg !3576

233:                                              ; preds = %226, %9
  %234 = load i64, i64* %1, align 8, !dbg !3577
  ret i64 %234, !dbg !3577
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @deflate_fast() #0 !dbg !3578 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !3579, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3581, metadata !DIExpression()), !dbg !3582
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3583, metadata !DIExpression()), !dbg !3584
  store i32 0, i32* %3, align 4, !dbg !3584
  store i32 2, i32* @prev_length, align 4, !dbg !3585
  br label %4, !dbg !3586

4:                                                ; preds = %168, %0
  %5 = load i32, i32* @lookahead, align 4, !dbg !3587
  %6 = icmp ne i32 %5, 0, !dbg !3588
  br i1 %6, label %7, label %169, !dbg !3586

7:                                                ; preds = %4
  %8 = load i32, i32* @ins_h, align 4, !dbg !3589
  %9 = shl i32 %8, 5, !dbg !3589
  %10 = load i32, i32* @strstart, align 4, !dbg !3589
  %11 = add i32 %10, 3, !dbg !3589
  %12 = sub i32 %11, 1, !dbg !3589
  %13 = zext i32 %12 to i64, !dbg !3589
  %14 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i64 0, i64 %13, !dbg !3589
  %15 = load i8, i8* %14, align 1, !dbg !3589
  %16 = zext i8 %15 to i32, !dbg !3589
  %17 = xor i32 %9, %16, !dbg !3589
  %18 = and i32 %17, 32767, !dbg !3589
  store i32 %18, i32* @ins_h, align 4, !dbg !3589
  %19 = load i32, i32* @ins_h, align 4, !dbg !3589
  %20 = zext i32 %19 to i64, !dbg !3589
  %21 = getelementptr inbounds i16, i16* getelementptr inbounds ([65536 x i16], [65536 x i16]* @prev, i64 0, i64 32768), i64 %20, !dbg !3589
  %22 = load i16, i16* %21, align 2, !dbg !3589
  %23 = zext i16 %22 to i32, !dbg !3589
  store i32 %23, i32* %1, align 4, !dbg !3589
  %24 = trunc i32 %23 to i16, !dbg !3589
  %25 = load i32, i32* @strstart, align 4, !dbg !3589
  %26 = and i32 %25, 32767, !dbg !3589
  %27 = zext i32 %26 to i64, !dbg !3589
  %28 = getelementptr inbounds [0 x i16], [0 x i16]* bitcast ([65536 x i16]* @prev to [0 x i16]*), i64 0, i64 %27, !dbg !3589
  store i16 %24, i16* %28, align 2, !dbg !3589
  %29 = load i32, i32* @strstart, align 4, !dbg !3589
  %30 = trunc i32 %29 to i16, !dbg !3589
  %31 = load i32, i32* @ins_h, align 4, !dbg !3589
  %32 = zext i32 %31 to i64, !dbg !3589
  %33 = getelementptr inbounds i16, i16* getelementptr inbounds ([65536 x i16], [65536 x i16]* @prev, i64 0, i64 32768), i64 %32, !dbg !3589
  store i16 %30, i16* %33, align 2, !dbg !3589
  %34 = load i32, i32* %1, align 4, !dbg !3591
  %35 = icmp ne i32 %34, 0, !dbg !3593
  br i1 %35, label %36, label %50, !dbg !3594

36:                                               ; preds = %7
  %37 = load i32, i32* @strstart, align 4, !dbg !3595
  %38 = load i32, i32* %1, align 4, !dbg !3596
  %39 = sub i32 %37, %38, !dbg !3597
  %40 = icmp ule i32 %39, 32506, !dbg !3598
  br i1 %40, label %41, label %50, !dbg !3599

41:                                               ; preds = %36
  %42 = load i32, i32* %1, align 4, !dbg !3600
  %43 = call i32 @longest_match(i32 noundef %42), !dbg !3602
  store i32 %43, i32* %3, align 4, !dbg !3603
  %44 = load i32, i32* %3, align 4, !dbg !3604
  %45 = load i32, i32* @lookahead, align 4, !dbg !3606
  %46 = icmp ugt i32 %44, %45, !dbg !3607
  br i1 %46, label %47, label %49, !dbg !3608

47:                                               ; preds = %41
  %48 = load i32, i32* @lookahead, align 4, !dbg !3609
  store i32 %48, i32* %3, align 4, !dbg !3610
  br label %49, !dbg !3611

49:                                               ; preds = %47, %41
  br label %50, !dbg !3612

50:                                               ; preds = %49, %36, %7
  %51 = load i32, i32* %3, align 4, !dbg !3613
  %52 = icmp uge i32 %51, 3, !dbg !3615
  br i1 %52, label %53, label %125, !dbg !3616

53:                                               ; preds = %50
  %54 = load i32, i32* @strstart, align 4, !dbg !3617
  %55 = load i32, i32* @match_start, align 4, !dbg !3619
  %56 = sub i32 %54, %55, !dbg !3620
  %57 = load i32, i32* %3, align 4, !dbg !3621
  %58 = sub i32 %57, 3, !dbg !3622
  %59 = call i32 @ct_tally(i32 noundef %56, i32 noundef %58), !dbg !3623
  store i32 %59, i32* %2, align 4, !dbg !3624
  %60 = load i32, i32* %3, align 4, !dbg !3625
  %61 = load i32, i32* @lookahead, align 4, !dbg !3626
  %62 = sub i32 %61, %60, !dbg !3626
  store i32 %62, i32* @lookahead, align 4, !dbg !3626
  %63 = load i32, i32* %3, align 4, !dbg !3627
  %64 = load i32, i32* @max_lazy_match, align 4, !dbg !3629
  %65 = icmp ule i32 %63, %64, !dbg !3630
  br i1 %65, label %66, label %105, !dbg !3631

66:                                               ; preds = %53
  %67 = load i32, i32* %3, align 4, !dbg !3632
  %68 = add i32 %67, -1, !dbg !3632
  store i32 %68, i32* %3, align 4, !dbg !3632
  br label %69, !dbg !3634

69:                                               ; preds = %98, %66
  %70 = load i32, i32* @strstart, align 4, !dbg !3635
  %71 = add i32 %70, 1, !dbg !3635
  store i32 %71, i32* @strstart, align 4, !dbg !3635
  %72 = load i32, i32* @ins_h, align 4, !dbg !3637
  %73 = shl i32 %72, 5, !dbg !3637
  %74 = load i32, i32* @strstart, align 4, !dbg !3637
  %75 = add i32 %74, 3, !dbg !3637
  %76 = sub i32 %75, 1, !dbg !3637
  %77 = zext i32 %76 to i64, !dbg !3637
  %78 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i64 0, i64 %77, !dbg !3637
  %79 = load i8, i8* %78, align 1, !dbg !3637
  %80 = zext i8 %79 to i32, !dbg !3637
  %81 = xor i32 %73, %80, !dbg !3637
  %82 = and i32 %81, 32767, !dbg !3637
  store i32 %82, i32* @ins_h, align 4, !dbg !3637
  %83 = load i32, i32* @ins_h, align 4, !dbg !3637
  %84 = zext i32 %83 to i64, !dbg !3637
  %85 = getelementptr inbounds i16, i16* getelementptr inbounds ([65536 x i16], [65536 x i16]* @prev, i64 0, i64 32768), i64 %84, !dbg !3637
  %86 = load i16, i16* %85, align 2, !dbg !3637
  %87 = zext i16 %86 to i32, !dbg !3637
  store i32 %87, i32* %1, align 4, !dbg !3637
  %88 = trunc i32 %87 to i16, !dbg !3637
  %89 = load i32, i32* @strstart, align 4, !dbg !3637
  %90 = and i32 %89, 32767, !dbg !3637
  %91 = zext i32 %90 to i64, !dbg !3637
  %92 = getelementptr inbounds [0 x i16], [0 x i16]* bitcast ([65536 x i16]* @prev to [0 x i16]*), i64 0, i64 %91, !dbg !3637
  store i16 %88, i16* %92, align 2, !dbg !3637
  %93 = load i32, i32* @strstart, align 4, !dbg !3637
  %94 = trunc i32 %93 to i16, !dbg !3637
  %95 = load i32, i32* @ins_h, align 4, !dbg !3637
  %96 = zext i32 %95 to i64, !dbg !3637
  %97 = getelementptr inbounds i16, i16* getelementptr inbounds ([65536 x i16], [65536 x i16]* @prev, i64 0, i64 32768), i64 %96, !dbg !3637
  store i16 %94, i16* %97, align 2, !dbg !3637
  br label %98, !dbg !3638

98:                                               ; preds = %69
  %99 = load i32, i32* %3, align 4, !dbg !3639
  %100 = add i32 %99, -1, !dbg !3639
  store i32 %100, i32* %3, align 4, !dbg !3639
  %101 = icmp ne i32 %100, 0, !dbg !3640
  br i1 %101, label %69, label %102, !dbg !3638, !llvm.loop !3641

102:                                              ; preds = %98
  %103 = load i32, i32* @strstart, align 4, !dbg !3643
  %104 = add i32 %103, 1, !dbg !3643
  store i32 %104, i32* @strstart, align 4, !dbg !3643
  br label %124, !dbg !3644

105:                                              ; preds = %53
  %106 = load i32, i32* %3, align 4, !dbg !3645
  %107 = load i32, i32* @strstart, align 4, !dbg !3647
  %108 = add i32 %107, %106, !dbg !3647
  store i32 %108, i32* @strstart, align 4, !dbg !3647
  store i32 0, i32* %3, align 4, !dbg !3648
  %109 = load i32, i32* @strstart, align 4, !dbg !3649
  %110 = zext i32 %109 to i64, !dbg !3650
  %111 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i64 0, i64 %110, !dbg !3650
  %112 = load i8, i8* %111, align 1, !dbg !3650
  %113 = zext i8 %112 to i32, !dbg !3650
  store i32 %113, i32* @ins_h, align 4, !dbg !3651
  %114 = load i32, i32* @ins_h, align 4, !dbg !3652
  %115 = shl i32 %114, 5, !dbg !3652
  %116 = load i32, i32* @strstart, align 4, !dbg !3652
  %117 = add i32 %116, 1, !dbg !3652
  %118 = zext i32 %117 to i64, !dbg !3652
  %119 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i64 0, i64 %118, !dbg !3652
  %120 = load i8, i8* %119, align 1, !dbg !3652
  %121 = zext i8 %120 to i32, !dbg !3652
  %122 = xor i32 %115, %121, !dbg !3652
  %123 = and i32 %122, 32767, !dbg !3652
  store i32 %123, i32* @ins_h, align 4, !dbg !3652
  br label %124

124:                                              ; preds = %105, %102
  br label %136, !dbg !3653

125:                                              ; preds = %50
  %126 = load i32, i32* @strstart, align 4, !dbg !3654
  %127 = zext i32 %126 to i64, !dbg !3656
  %128 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i64 0, i64 %127, !dbg !3656
  %129 = load i8, i8* %128, align 1, !dbg !3656
  %130 = zext i8 %129 to i32, !dbg !3656
  %131 = call i32 @ct_tally(i32 noundef 0, i32 noundef %130), !dbg !3657
  store i32 %131, i32* %2, align 4, !dbg !3658
  %132 = load i32, i32* @lookahead, align 4, !dbg !3659
  %133 = add i32 %132, -1, !dbg !3659
  store i32 %133, i32* @lookahead, align 4, !dbg !3659
  %134 = load i32, i32* @strstart, align 4, !dbg !3660
  %135 = add i32 %134, 1, !dbg !3660
  store i32 %135, i32* @strstart, align 4, !dbg !3660
  br label %136

136:                                              ; preds = %125, %124
  %137 = load i32, i32* %2, align 4, !dbg !3661
  %138 = icmp ne i32 %137, 0, !dbg !3661
  br i1 %138, label %139, label %157, !dbg !3663

139:                                              ; preds = %136
  %140 = load i64, i64* @block_start, align 8, !dbg !3664
  %141 = icmp sge i64 %140, 0, !dbg !3664
  br i1 %141, label %142, label %147, !dbg !3664

142:                                              ; preds = %139
  %143 = load i64, i64* @block_start, align 8, !dbg !3664
  %144 = trunc i64 %143 to i32, !dbg !3664
  %145 = zext i32 %144 to i64, !dbg !3664
  %146 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i64 0, i64 %145, !dbg !3664
  br label %148, !dbg !3664

147:                                              ; preds = %139
  br label %148, !dbg !3664

148:                                              ; preds = %147, %142
  %149 = phi i8* [ %146, %142 ], [ null, %147 ], !dbg !3664
  %150 = load i32, i32* @strstart, align 4, !dbg !3664
  %151 = zext i32 %150 to i64, !dbg !3664
  %152 = load i64, i64* @block_start, align 8, !dbg !3664
  %153 = sub nsw i64 %151, %152, !dbg !3664
  %154 = call i64 @flush_block(i8* noundef %149, i64 noundef %153, i32 noundef 0), !dbg !3664
  %155 = load i32, i32* @strstart, align 4, !dbg !3665
  %156 = zext i32 %155 to i64, !dbg !3665
  store i64 %156, i64* @block_start, align 8, !dbg !3666
  br label %157, !dbg !3664

157:                                              ; preds = %148, %136
  br label %158, !dbg !3667

158:                                              ; preds = %167, %157
  %159 = load i32, i32* @lookahead, align 4, !dbg !3668
  %160 = icmp ult i32 %159, 262, !dbg !3669
  br i1 %160, label %161, label %165, !dbg !3670

161:                                              ; preds = %158
  %162 = load i32, i32* @eofile, align 4, !dbg !3671
  %163 = icmp ne i32 %162, 0, !dbg !3672
  %164 = xor i1 %163, true, !dbg !3672
  br label %165

165:                                              ; preds = %161, %158
  %166 = phi i1 [ false, %158 ], [ %164, %161 ], !dbg !3673
  br i1 %166, label %167, label %168, !dbg !3667

167:                                              ; preds = %165
  call void @fill_window(), !dbg !3674
  br label %158, !dbg !3667, !llvm.loop !3675

168:                                              ; preds = %165
  br label %4, !dbg !3586, !llvm.loop !3677

169:                                              ; preds = %4
  %170 = load i64, i64* @block_start, align 8, !dbg !3679
  %171 = icmp sge i64 %170, 0, !dbg !3679
  br i1 %171, label %172, label %177, !dbg !3679

172:                                              ; preds = %169
  %173 = load i64, i64* @block_start, align 8, !dbg !3679
  %174 = trunc i64 %173 to i32, !dbg !3679
  %175 = zext i32 %174 to i64, !dbg !3679
  %176 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i64 0, i64 %175, !dbg !3679
  br label %178, !dbg !3679

177:                                              ; preds = %169
  br label %178, !dbg !3679

178:                                              ; preds = %177, %172
  %179 = phi i8* [ %176, %172 ], [ null, %177 ], !dbg !3679
  %180 = load i32, i32* @strstart, align 4, !dbg !3679
  %181 = zext i32 %180 to i64, !dbg !3679
  %182 = load i64, i64* @block_start, align 8, !dbg !3679
  %183 = sub nsw i64 %181, %182, !dbg !3679
  %184 = call i64 @flush_block(i8* noundef %179, i64 noundef %183, i32 noundef 1), !dbg !3679
  ret i64 %184, !dbg !3680
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @ct_init(i16* noundef %0, i32* noundef %1) #0 !dbg !3681 {
  %3 = alloca i16*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i16* %0, i16** %3, align 8
  call void @llvm.dbg.declare(metadata i16** %3, metadata !3684, metadata !DIExpression()), !dbg !3685
  store i32* %1, i32** %4, align 8
  call void @llvm.dbg.declare(metadata i32** %4, metadata !3686, metadata !DIExpression()), !dbg !3687
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3688, metadata !DIExpression()), !dbg !3689
  call void @llvm.dbg.declare(metadata i32* %6, metadata !3690, metadata !DIExpression()), !dbg !3691
  call void @llvm.dbg.declare(metadata i32* %7, metadata !3692, metadata !DIExpression()), !dbg !3693
  call void @llvm.dbg.declare(metadata i32* %8, metadata !3694, metadata !DIExpression()), !dbg !3695
  call void @llvm.dbg.declare(metadata i32* %9, metadata !3696, metadata !DIExpression()), !dbg !3697
  %10 = load i16*, i16** %3, align 8, !dbg !3698
  store i16* %10, i16** @file_type, align 8, !dbg !3699
  %11 = load i32*, i32** %4, align 8, !dbg !3700
  store i32* %11, i32** @file_method, align 8, !dbg !3701
  store i64 0, i64* @input_len, align 8, !dbg !3702
  store i64 0, i64* @compressed_len, align 8, !dbg !3703
  %12 = load i16, i16* getelementptr inbounds ([30 x %struct.ct_data], [30 x %struct.ct_data]* @static_dtree, i64 0, i64 0, i32 1, i32 0), align 2, !dbg !3704
  %13 = zext i16 %12 to i32, !dbg !3706
  %14 = icmp ne i32 %13, 0, !dbg !3707
  br i1 %14, label %15, label %16, !dbg !3708

15:                                               ; preds = %2
  br label %205, !dbg !3709

16:                                               ; preds = %2
  store i32 0, i32* %7, align 4, !dbg !3710
  store i32 0, i32* %8, align 4, !dbg !3711
  br label %17, !dbg !3713

17:                                               ; preds = %44, %16
  %18 = load i32, i32* %8, align 4, !dbg !3714
  %19 = icmp slt i32 %18, 28, !dbg !3716
  br i1 %19, label %20, label %47, !dbg !3717

20:                                               ; preds = %17
  %21 = load i32, i32* %7, align 4, !dbg !3718
  %22 = load i32, i32* %8, align 4, !dbg !3720
  %23 = sext i32 %22 to i64, !dbg !3721
  %24 = getelementptr inbounds [29 x i32], [29 x i32]* @base_length, i64 0, i64 %23, !dbg !3721
  store i32 %21, i32* %24, align 4, !dbg !3722
  store i32 0, i32* %5, align 4, !dbg !3723
  br label %25, !dbg !3725

25:                                               ; preds = %40, %20
  %26 = load i32, i32* %5, align 4, !dbg !3726
  %27 = load i32, i32* %8, align 4, !dbg !3728
  %28 = sext i32 %27 to i64, !dbg !3729
  %29 = getelementptr inbounds [29 x i32], [29 x i32]* @extra_lbits, i64 0, i64 %28, !dbg !3729
  %30 = load i32, i32* %29, align 4, !dbg !3729
  %31 = shl i32 1, %30, !dbg !3730
  %32 = icmp slt i32 %26, %31, !dbg !3731
  br i1 %32, label %33, label %43, !dbg !3732

33:                                               ; preds = %25
  %34 = load i32, i32* %8, align 4, !dbg !3733
  %35 = trunc i32 %34 to i8, !dbg !3735
  %36 = load i32, i32* %7, align 4, !dbg !3736
  %37 = add nsw i32 %36, 1, !dbg !3736
  store i32 %37, i32* %7, align 4, !dbg !3736
  %38 = sext i32 %36 to i64, !dbg !3737
  %39 = getelementptr inbounds [256 x i8], [256 x i8]* @length_code, i64 0, i64 %38, !dbg !3737
  store i8 %35, i8* %39, align 1, !dbg !3738
  br label %40, !dbg !3739

40:                                               ; preds = %33
  %41 = load i32, i32* %5, align 4, !dbg !3740
  %42 = add nsw i32 %41, 1, !dbg !3740
  store i32 %42, i32* %5, align 4, !dbg !3740
  br label %25, !dbg !3741, !llvm.loop !3742

43:                                               ; preds = %25
  br label %44, !dbg !3744

44:                                               ; preds = %43
  %45 = load i32, i32* %8, align 4, !dbg !3745
  %46 = add nsw i32 %45, 1, !dbg !3745
  store i32 %46, i32* %8, align 4, !dbg !3745
  br label %17, !dbg !3746, !llvm.loop !3747

47:                                               ; preds = %17
  %48 = load i32, i32* %8, align 4, !dbg !3749
  %49 = trunc i32 %48 to i8, !dbg !3750
  %50 = load i32, i32* %7, align 4, !dbg !3751
  %51 = sub nsw i32 %50, 1, !dbg !3752
  %52 = sext i32 %51 to i64, !dbg !3753
  %53 = getelementptr inbounds [256 x i8], [256 x i8]* @length_code, i64 0, i64 %52, !dbg !3753
  store i8 %49, i8* %53, align 1, !dbg !3754
  store i32 0, i32* %9, align 4, !dbg !3755
  store i32 0, i32* %8, align 4, !dbg !3756
  br label %54, !dbg !3758

54:                                               ; preds = %81, %47
  %55 = load i32, i32* %8, align 4, !dbg !3759
  %56 = icmp slt i32 %55, 16, !dbg !3761
  br i1 %56, label %57, label %84, !dbg !3762

57:                                               ; preds = %54
  %58 = load i32, i32* %9, align 4, !dbg !3763
  %59 = load i32, i32* %8, align 4, !dbg !3765
  %60 = sext i32 %59 to i64, !dbg !3766
  %61 = getelementptr inbounds [30 x i32], [30 x i32]* @base_dist, i64 0, i64 %60, !dbg !3766
  store i32 %58, i32* %61, align 4, !dbg !3767
  store i32 0, i32* %5, align 4, !dbg !3768
  br label %62, !dbg !3770

62:                                               ; preds = %77, %57
  %63 = load i32, i32* %5, align 4, !dbg !3771
  %64 = load i32, i32* %8, align 4, !dbg !3773
  %65 = sext i32 %64 to i64, !dbg !3774
  %66 = getelementptr inbounds [30 x i32], [30 x i32]* @extra_dbits, i64 0, i64 %65, !dbg !3774
  %67 = load i32, i32* %66, align 4, !dbg !3774
  %68 = shl i32 1, %67, !dbg !3775
  %69 = icmp slt i32 %63, %68, !dbg !3776
  br i1 %69, label %70, label %80, !dbg !3777

70:                                               ; preds = %62
  %71 = load i32, i32* %8, align 4, !dbg !3778
  %72 = trunc i32 %71 to i8, !dbg !3780
  %73 = load i32, i32* %9, align 4, !dbg !3781
  %74 = add nsw i32 %73, 1, !dbg !3781
  store i32 %74, i32* %9, align 4, !dbg !3781
  %75 = sext i32 %73 to i64, !dbg !3782
  %76 = getelementptr inbounds [512 x i8], [512 x i8]* @dist_code, i64 0, i64 %75, !dbg !3782
  store i8 %72, i8* %76, align 1, !dbg !3783
  br label %77, !dbg !3784

77:                                               ; preds = %70
  %78 = load i32, i32* %5, align 4, !dbg !3785
  %79 = add nsw i32 %78, 1, !dbg !3785
  store i32 %79, i32* %5, align 4, !dbg !3785
  br label %62, !dbg !3786, !llvm.loop !3787

80:                                               ; preds = %62
  br label %81, !dbg !3789

81:                                               ; preds = %80
  %82 = load i32, i32* %8, align 4, !dbg !3790
  %83 = add nsw i32 %82, 1, !dbg !3790
  store i32 %83, i32* %8, align 4, !dbg !3790
  br label %54, !dbg !3791, !llvm.loop !3792

84:                                               ; preds = %54
  %85 = load i32, i32* %9, align 4, !dbg !3794
  %86 = ashr i32 %85, 7, !dbg !3794
  store i32 %86, i32* %9, align 4, !dbg !3794
  br label %87, !dbg !3795

87:                                               ; preds = %117, %84
  %88 = load i32, i32* %8, align 4, !dbg !3796
  %89 = icmp slt i32 %88, 30, !dbg !3799
  br i1 %89, label %90, label %120, !dbg !3800

90:                                               ; preds = %87
  %91 = load i32, i32* %9, align 4, !dbg !3801
  %92 = shl i32 %91, 7, !dbg !3803
  %93 = load i32, i32* %8, align 4, !dbg !3804
  %94 = sext i32 %93 to i64, !dbg !3805
  %95 = getelementptr inbounds [30 x i32], [30 x i32]* @base_dist, i64 0, i64 %94, !dbg !3805
  store i32 %92, i32* %95, align 4, !dbg !3806
  store i32 0, i32* %5, align 4, !dbg !3807
  br label %96, !dbg !3809

96:                                               ; preds = %113, %90
  %97 = load i32, i32* %5, align 4, !dbg !3810
  %98 = load i32, i32* %8, align 4, !dbg !3812
  %99 = sext i32 %98 to i64, !dbg !3813
  %100 = getelementptr inbounds [30 x i32], [30 x i32]* @extra_dbits, i64 0, i64 %99, !dbg !3813
  %101 = load i32, i32* %100, align 4, !dbg !3813
  %102 = sub nsw i32 %101, 7, !dbg !3814
  %103 = shl i32 1, %102, !dbg !3815
  %104 = icmp slt i32 %97, %103, !dbg !3816
  br i1 %104, label %105, label %116, !dbg !3817

105:                                              ; preds = %96
  %106 = load i32, i32* %8, align 4, !dbg !3818
  %107 = trunc i32 %106 to i8, !dbg !3820
  %108 = load i32, i32* %9, align 4, !dbg !3821
  %109 = add nsw i32 %108, 1, !dbg !3821
  store i32 %109, i32* %9, align 4, !dbg !3821
  %110 = add nsw i32 256, %108, !dbg !3822
  %111 = sext i32 %110 to i64, !dbg !3823
  %112 = getelementptr inbounds [512 x i8], [512 x i8]* @dist_code, i64 0, i64 %111, !dbg !3823
  store i8 %107, i8* %112, align 1, !dbg !3824
  br label %113, !dbg !3825

113:                                              ; preds = %105
  %114 = load i32, i32* %5, align 4, !dbg !3826
  %115 = add nsw i32 %114, 1, !dbg !3826
  store i32 %115, i32* %5, align 4, !dbg !3826
  br label %96, !dbg !3827, !llvm.loop !3828

116:                                              ; preds = %96
  br label %117, !dbg !3830

117:                                              ; preds = %116
  %118 = load i32, i32* %8, align 4, !dbg !3831
  %119 = add nsw i32 %118, 1, !dbg !3831
  store i32 %119, i32* %8, align 4, !dbg !3831
  br label %87, !dbg !3832, !llvm.loop !3833

120:                                              ; preds = %87
  store i32 0, i32* %6, align 4, !dbg !3835
  br label %121, !dbg !3837

121:                                              ; preds = %128, %120
  %122 = load i32, i32* %6, align 4, !dbg !3838
  %123 = icmp sle i32 %122, 15, !dbg !3840
  br i1 %123, label %124, label %131, !dbg !3841

124:                                              ; preds = %121
  %125 = load i32, i32* %6, align 4, !dbg !3842
  %126 = sext i32 %125 to i64, !dbg !3843
  %127 = getelementptr inbounds [16 x i16], [16 x i16]* @bl_count, i64 0, i64 %126, !dbg !3843
  store i16 0, i16* %127, align 2, !dbg !3844
  br label %128, !dbg !3843

128:                                              ; preds = %124
  %129 = load i32, i32* %6, align 4, !dbg !3845
  %130 = add nsw i32 %129, 1, !dbg !3845
  store i32 %130, i32* %6, align 4, !dbg !3845
  br label %121, !dbg !3846, !llvm.loop !3847

131:                                              ; preds = %121
  store i32 0, i32* %5, align 4, !dbg !3849
  br label %132, !dbg !3850

132:                                              ; preds = %135, %131
  %133 = load i32, i32* %5, align 4, !dbg !3851
  %134 = icmp sle i32 %133, 143, !dbg !3852
  br i1 %134, label %135, label %144, !dbg !3850

135:                                              ; preds = %132
  %136 = load i32, i32* %5, align 4, !dbg !3853
  %137 = add nsw i32 %136, 1, !dbg !3853
  store i32 %137, i32* %5, align 4, !dbg !3853
  %138 = sext i32 %136 to i64, !dbg !3854
  %139 = getelementptr inbounds [288 x %struct.ct_data], [288 x %struct.ct_data]* @static_ltree, i64 0, i64 %138, !dbg !3854
  %140 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %139, i32 0, i32 1, !dbg !3855
  %141 = bitcast %union.anon* %140 to i16*, !dbg !3855
  store i16 8, i16* %141, align 2, !dbg !3856
  %142 = load i16, i16* getelementptr inbounds ([16 x i16], [16 x i16]* @bl_count, i64 0, i64 8), align 16, !dbg !3857
  %143 = add i16 %142, 1, !dbg !3857
  store i16 %143, i16* getelementptr inbounds ([16 x i16], [16 x i16]* @bl_count, i64 0, i64 8), align 16, !dbg !3857
  br label %132, !dbg !3850, !llvm.loop !3858

144:                                              ; preds = %132
  br label %145, !dbg !3859

145:                                              ; preds = %148, %144
  %146 = load i32, i32* %5, align 4, !dbg !3860
  %147 = icmp sle i32 %146, 255, !dbg !3861
  br i1 %147, label %148, label %157, !dbg !3859

148:                                              ; preds = %145
  %149 = load i32, i32* %5, align 4, !dbg !3862
  %150 = add nsw i32 %149, 1, !dbg !3862
  store i32 %150, i32* %5, align 4, !dbg !3862
  %151 = sext i32 %149 to i64, !dbg !3863
  %152 = getelementptr inbounds [288 x %struct.ct_data], [288 x %struct.ct_data]* @static_ltree, i64 0, i64 %151, !dbg !3863
  %153 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %152, i32 0, i32 1, !dbg !3864
  %154 = bitcast %union.anon* %153 to i16*, !dbg !3864
  store i16 9, i16* %154, align 2, !dbg !3865
  %155 = load i16, i16* getelementptr inbounds ([16 x i16], [16 x i16]* @bl_count, i64 0, i64 9), align 2, !dbg !3866
  %156 = add i16 %155, 1, !dbg !3866
  store i16 %156, i16* getelementptr inbounds ([16 x i16], [16 x i16]* @bl_count, i64 0, i64 9), align 2, !dbg !3866
  br label %145, !dbg !3859, !llvm.loop !3867

157:                                              ; preds = %145
  br label %158, !dbg !3868

158:                                              ; preds = %161, %157
  %159 = load i32, i32* %5, align 4, !dbg !3869
  %160 = icmp sle i32 %159, 279, !dbg !3870
  br i1 %160, label %161, label %170, !dbg !3868

161:                                              ; preds = %158
  %162 = load i32, i32* %5, align 4, !dbg !3871
  %163 = add nsw i32 %162, 1, !dbg !3871
  store i32 %163, i32* %5, align 4, !dbg !3871
  %164 = sext i32 %162 to i64, !dbg !3872
  %165 = getelementptr inbounds [288 x %struct.ct_data], [288 x %struct.ct_data]* @static_ltree, i64 0, i64 %164, !dbg !3872
  %166 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %165, i32 0, i32 1, !dbg !3873
  %167 = bitcast %union.anon* %166 to i16*, !dbg !3873
  store i16 7, i16* %167, align 2, !dbg !3874
  %168 = load i16, i16* getelementptr inbounds ([16 x i16], [16 x i16]* @bl_count, i64 0, i64 7), align 2, !dbg !3875
  %169 = add i16 %168, 1, !dbg !3875
  store i16 %169, i16* getelementptr inbounds ([16 x i16], [16 x i16]* @bl_count, i64 0, i64 7), align 2, !dbg !3875
  br label %158, !dbg !3868, !llvm.loop !3876

170:                                              ; preds = %158
  br label %171, !dbg !3877

171:                                              ; preds = %174, %170
  %172 = load i32, i32* %5, align 4, !dbg !3878
  %173 = icmp sle i32 %172, 287, !dbg !3879
  br i1 %173, label %174, label %183, !dbg !3877

174:                                              ; preds = %171
  %175 = load i32, i32* %5, align 4, !dbg !3880
  %176 = add nsw i32 %175, 1, !dbg !3880
  store i32 %176, i32* %5, align 4, !dbg !3880
  %177 = sext i32 %175 to i64, !dbg !3881
  %178 = getelementptr inbounds [288 x %struct.ct_data], [288 x %struct.ct_data]* @static_ltree, i64 0, i64 %177, !dbg !3881
  %179 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %178, i32 0, i32 1, !dbg !3882
  %180 = bitcast %union.anon* %179 to i16*, !dbg !3882
  store i16 8, i16* %180, align 2, !dbg !3883
  %181 = load i16, i16* getelementptr inbounds ([16 x i16], [16 x i16]* @bl_count, i64 0, i64 8), align 16, !dbg !3884
  %182 = add i16 %181, 1, !dbg !3884
  store i16 %182, i16* getelementptr inbounds ([16 x i16], [16 x i16]* @bl_count, i64 0, i64 8), align 16, !dbg !3884
  br label %171, !dbg !3877, !llvm.loop !3885

183:                                              ; preds = %171
  call void @gen_codes(%struct.ct_data* noundef getelementptr inbounds ([288 x %struct.ct_data], [288 x %struct.ct_data]* @static_ltree, i64 0, i64 0), i32 noundef 287), !dbg !3886
  store i32 0, i32* %5, align 4, !dbg !3887
  br label %184, !dbg !3889

184:                                              ; preds = %201, %183
  %185 = load i32, i32* %5, align 4, !dbg !3890
  %186 = icmp slt i32 %185, 30, !dbg !3892
  br i1 %186, label %187, label %204, !dbg !3893

187:                                              ; preds = %184
  %188 = load i32, i32* %5, align 4, !dbg !3894
  %189 = sext i32 %188 to i64, !dbg !3896
  %190 = getelementptr inbounds [30 x %struct.ct_data], [30 x %struct.ct_data]* @static_dtree, i64 0, i64 %189, !dbg !3896
  %191 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %190, i32 0, i32 1, !dbg !3897
  %192 = bitcast %union.anon* %191 to i16*, !dbg !3897
  store i16 5, i16* %192, align 2, !dbg !3898
  %193 = load i32, i32* %5, align 4, !dbg !3899
  %194 = call i32 @bi_reverse(i32 noundef %193, i32 noundef 5), !dbg !3900
  %195 = trunc i32 %194 to i16, !dbg !3900
  %196 = load i32, i32* %5, align 4, !dbg !3901
  %197 = sext i32 %196 to i64, !dbg !3902
  %198 = getelementptr inbounds [30 x %struct.ct_data], [30 x %struct.ct_data]* @static_dtree, i64 0, i64 %197, !dbg !3902
  %199 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %198, i32 0, i32 0, !dbg !3903
  %200 = bitcast %union.anon* %199 to i16*, !dbg !3903
  store i16 %195, i16* %200, align 4, !dbg !3904
  br label %201, !dbg !3905

201:                                              ; preds = %187
  %202 = load i32, i32* %5, align 4, !dbg !3906
  %203 = add nsw i32 %202, 1, !dbg !3906
  store i32 %203, i32* %5, align 4, !dbg !3906
  br label %184, !dbg !3907, !llvm.loop !3908

204:                                              ; preds = %184
  call void @init_block(), !dbg !3910
  br label %205, !dbg !3911

205:                                              ; preds = %204, %15
  ret void, !dbg !3911
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @gen_codes(%struct.ct_data* noundef %0, i32 noundef %1) #0 !dbg !3912 {
  %3 = alloca %struct.ct_data*, align 8
  %4 = alloca i32, align 4
  %5 = alloca [16 x i16], align 16
  %6 = alloca i16, align 2
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store %struct.ct_data* %0, %struct.ct_data** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.ct_data** %3, metadata !3915, metadata !DIExpression()), !dbg !3916
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3917, metadata !DIExpression()), !dbg !3918
  call void @llvm.dbg.declare(metadata [16 x i16]* %5, metadata !3919, metadata !DIExpression()), !dbg !3920
  call void @llvm.dbg.declare(metadata i16* %6, metadata !3921, metadata !DIExpression()), !dbg !3922
  store i16 0, i16* %6, align 2, !dbg !3922
  call void @llvm.dbg.declare(metadata i32* %7, metadata !3923, metadata !DIExpression()), !dbg !3924
  call void @llvm.dbg.declare(metadata i32* %8, metadata !3925, metadata !DIExpression()), !dbg !3926
  store i32 1, i32* %7, align 4, !dbg !3927
  br label %10, !dbg !3929

10:                                               ; preds = %28, %2
  %11 = load i32, i32* %7, align 4, !dbg !3930
  %12 = icmp sle i32 %11, 15, !dbg !3932
  br i1 %12, label %13, label %31, !dbg !3933

13:                                               ; preds = %10
  %14 = load i16, i16* %6, align 2, !dbg !3934
  %15 = zext i16 %14 to i32, !dbg !3934
  %16 = load i32, i32* %7, align 4, !dbg !3936
  %17 = sub nsw i32 %16, 1, !dbg !3937
  %18 = sext i32 %17 to i64, !dbg !3938
  %19 = getelementptr inbounds [16 x i16], [16 x i16]* @bl_count, i64 0, i64 %18, !dbg !3938
  %20 = load i16, i16* %19, align 2, !dbg !3938
  %21 = zext i16 %20 to i32, !dbg !3938
  %22 = add nsw i32 %15, %21, !dbg !3939
  %23 = shl i32 %22, 1, !dbg !3940
  %24 = trunc i32 %23 to i16, !dbg !3941
  store i16 %24, i16* %6, align 2, !dbg !3942
  %25 = load i32, i32* %7, align 4, !dbg !3943
  %26 = sext i32 %25 to i64, !dbg !3944
  %27 = getelementptr inbounds [16 x i16], [16 x i16]* %5, i64 0, i64 %26, !dbg !3944
  store i16 %24, i16* %27, align 2, !dbg !3945
  br label %28, !dbg !3946

28:                                               ; preds = %13
  %29 = load i32, i32* %7, align 4, !dbg !3947
  %30 = add nsw i32 %29, 1, !dbg !3947
  store i32 %30, i32* %7, align 4, !dbg !3947
  br label %10, !dbg !3948, !llvm.loop !3949

31:                                               ; preds = %10
  store i32 0, i32* %8, align 4, !dbg !3951
  br label %32, !dbg !3953

32:                                               ; preds = %64, %31
  %33 = load i32, i32* %8, align 4, !dbg !3954
  %34 = load i32, i32* %4, align 4, !dbg !3956
  %35 = icmp sle i32 %33, %34, !dbg !3957
  br i1 %35, label %36, label %67, !dbg !3958

36:                                               ; preds = %32
  call void @llvm.dbg.declare(metadata i32* %9, metadata !3959, metadata !DIExpression()), !dbg !3961
  %37 = load %struct.ct_data*, %struct.ct_data** %3, align 8, !dbg !3962
  %38 = load i32, i32* %8, align 4, !dbg !3963
  %39 = sext i32 %38 to i64, !dbg !3962
  %40 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %37, i64 %39, !dbg !3962
  %41 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %40, i32 0, i32 1, !dbg !3964
  %42 = bitcast %union.anon* %41 to i16*, !dbg !3964
  %43 = load i16, i16* %42, align 2, !dbg !3964
  %44 = zext i16 %43 to i32, !dbg !3962
  store i32 %44, i32* %9, align 4, !dbg !3961
  %45 = load i32, i32* %9, align 4, !dbg !3965
  %46 = icmp eq i32 %45, 0, !dbg !3967
  br i1 %46, label %47, label %48, !dbg !3968

47:                                               ; preds = %36
  br label %64, !dbg !3969

48:                                               ; preds = %36
  %49 = load i32, i32* %9, align 4, !dbg !3970
  %50 = sext i32 %49 to i64, !dbg !3971
  %51 = getelementptr inbounds [16 x i16], [16 x i16]* %5, i64 0, i64 %50, !dbg !3971
  %52 = load i16, i16* %51, align 2, !dbg !3972
  %53 = add i16 %52, 1, !dbg !3972
  store i16 %53, i16* %51, align 2, !dbg !3972
  %54 = zext i16 %52 to i32, !dbg !3971
  %55 = load i32, i32* %9, align 4, !dbg !3973
  %56 = call i32 @bi_reverse(i32 noundef %54, i32 noundef %55), !dbg !3974
  %57 = trunc i32 %56 to i16, !dbg !3974
  %58 = load %struct.ct_data*, %struct.ct_data** %3, align 8, !dbg !3975
  %59 = load i32, i32* %8, align 4, !dbg !3976
  %60 = sext i32 %59 to i64, !dbg !3975
  %61 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %58, i64 %60, !dbg !3975
  %62 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %61, i32 0, i32 0, !dbg !3977
  %63 = bitcast %union.anon* %62 to i16*, !dbg !3977
  store i16 %57, i16* %63, align 2, !dbg !3978
  br label %64, !dbg !3979

64:                                               ; preds = %48, %47
  %65 = load i32, i32* %8, align 4, !dbg !3980
  %66 = add nsw i32 %65, 1, !dbg !3980
  store i32 %66, i32* %8, align 4, !dbg !3980
  br label %32, !dbg !3981, !llvm.loop !3982

67:                                               ; preds = %32
  ret void, !dbg !3984
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @init_block() #0 !dbg !3985 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !3986, metadata !DIExpression()), !dbg !3987
  store i32 0, i32* %1, align 4, !dbg !3988
  br label %2, !dbg !3990

2:                                                ; preds = %11, %0
  %3 = load i32, i32* %1, align 4, !dbg !3991
  %4 = icmp slt i32 %3, 286, !dbg !3993
  br i1 %4, label %5, label %14, !dbg !3994

5:                                                ; preds = %2
  %6 = load i32, i32* %1, align 4, !dbg !3995
  %7 = sext i32 %6 to i64, !dbg !3996
  %8 = getelementptr inbounds [573 x %struct.ct_data], [573 x %struct.ct_data]* @dyn_ltree, i64 0, i64 %7, !dbg !3996
  %9 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %8, i32 0, i32 0, !dbg !3997
  %10 = bitcast %union.anon* %9 to i16*, !dbg !3997
  store i16 0, i16* %10, align 4, !dbg !3998
  br label %11, !dbg !3996

11:                                               ; preds = %5
  %12 = load i32, i32* %1, align 4, !dbg !3999
  %13 = add nsw i32 %12, 1, !dbg !3999
  store i32 %13, i32* %1, align 4, !dbg !3999
  br label %2, !dbg !4000, !llvm.loop !4001

14:                                               ; preds = %2
  store i32 0, i32* %1, align 4, !dbg !4003
  br label %15, !dbg !4005

15:                                               ; preds = %24, %14
  %16 = load i32, i32* %1, align 4, !dbg !4006
  %17 = icmp slt i32 %16, 30, !dbg !4008
  br i1 %17, label %18, label %27, !dbg !4009

18:                                               ; preds = %15
  %19 = load i32, i32* %1, align 4, !dbg !4010
  %20 = sext i32 %19 to i64, !dbg !4011
  %21 = getelementptr inbounds [61 x %struct.ct_data], [61 x %struct.ct_data]* @dyn_dtree, i64 0, i64 %20, !dbg !4011
  %22 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %21, i32 0, i32 0, !dbg !4012
  %23 = bitcast %union.anon* %22 to i16*, !dbg !4012
  store i16 0, i16* %23, align 4, !dbg !4013
  br label %24, !dbg !4011

24:                                               ; preds = %18
  %25 = load i32, i32* %1, align 4, !dbg !4014
  %26 = add nsw i32 %25, 1, !dbg !4014
  store i32 %26, i32* %1, align 4, !dbg !4014
  br label %15, !dbg !4015, !llvm.loop !4016

27:                                               ; preds = %15
  store i32 0, i32* %1, align 4, !dbg !4018
  br label %28, !dbg !4020

28:                                               ; preds = %37, %27
  %29 = load i32, i32* %1, align 4, !dbg !4021
  %30 = icmp slt i32 %29, 19, !dbg !4023
  br i1 %30, label %31, label %40, !dbg !4024

31:                                               ; preds = %28
  %32 = load i32, i32* %1, align 4, !dbg !4025
  %33 = sext i32 %32 to i64, !dbg !4026
  %34 = getelementptr inbounds [39 x %struct.ct_data], [39 x %struct.ct_data]* @bl_tree, i64 0, i64 %33, !dbg !4026
  %35 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %34, i32 0, i32 0, !dbg !4027
  %36 = bitcast %union.anon* %35 to i16*, !dbg !4027
  store i16 0, i16* %36, align 4, !dbg !4028
  br label %37, !dbg !4026

37:                                               ; preds = %31
  %38 = load i32, i32* %1, align 4, !dbg !4029
  %39 = add nsw i32 %38, 1, !dbg !4029
  store i32 %39, i32* %1, align 4, !dbg !4029
  br label %28, !dbg !4030, !llvm.loop !4031

40:                                               ; preds = %28
  store i16 1, i16* getelementptr inbounds ([573 x %struct.ct_data], [573 x %struct.ct_data]* @dyn_ltree, i64 0, i64 256, i32 0, i32 0), align 16, !dbg !4033
  store i64 0, i64* @static_len, align 8, !dbg !4034
  store i64 0, i64* @opt_len, align 8, !dbg !4035
  store i32 0, i32* @last_flags, align 4, !dbg !4036
  store i32 0, i32* @last_dist, align 4, !dbg !4037
  store i32 0, i32* @last_lit, align 4, !dbg !4038
  store i8 0, i8* @flags, align 1, !dbg !4039
  store i8 1, i8* @flag_bit, align 1, !dbg !4040
  ret void, !dbg !4041
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @flush_block(i8* noundef %0, i64 noundef %1, i32 noundef %2) #0 !dbg !4042 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !4045, metadata !DIExpression()), !dbg !4046
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !4047, metadata !DIExpression()), !dbg !4048
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !4049, metadata !DIExpression()), !dbg !4050
  call void @llvm.dbg.declare(metadata i64* %7, metadata !4051, metadata !DIExpression()), !dbg !4052
  call void @llvm.dbg.declare(metadata i64* %8, metadata !4053, metadata !DIExpression()), !dbg !4054
  call void @llvm.dbg.declare(metadata i32* %9, metadata !4055, metadata !DIExpression()), !dbg !4056
  %10 = load i8, i8* @flags, align 1, !dbg !4057
  %11 = load i32, i32* @last_flags, align 4, !dbg !4058
  %12 = zext i32 %11 to i64, !dbg !4059
  %13 = getelementptr inbounds [4096 x i8], [4096 x i8]* @flag_buf, i64 0, i64 %12, !dbg !4059
  store i8 %10, i8* %13, align 1, !dbg !4060
  %14 = load i16*, i16** @file_type, align 8, !dbg !4061
  %15 = load i16, i16* %14, align 2, !dbg !4063
  %16 = zext i16 %15 to i32, !dbg !4063
  %17 = icmp eq i32 %16, 65535, !dbg !4064
  br i1 %17, label %18, label %19, !dbg !4065

18:                                               ; preds = %3
  call void @set_file_type(), !dbg !4066
  br label %19, !dbg !4066

19:                                               ; preds = %18, %3
  call void @build_tree(%struct.tree_desc* noundef @l_desc), !dbg !4067
  call void @build_tree(%struct.tree_desc* noundef @d_desc), !dbg !4068
  %20 = call i32 @build_bl_tree(), !dbg !4069
  store i32 %20, i32* %9, align 4, !dbg !4070
  %21 = load i64, i64* @opt_len, align 8, !dbg !4071
  %22 = add i64 %21, 3, !dbg !4072
  %23 = add i64 %22, 7, !dbg !4073
  %24 = lshr i64 %23, 3, !dbg !4074
  store i64 %24, i64* %7, align 8, !dbg !4075
  %25 = load i64, i64* @static_len, align 8, !dbg !4076
  %26 = add i64 %25, 3, !dbg !4077
  %27 = add i64 %26, 7, !dbg !4078
  %28 = lshr i64 %27, 3, !dbg !4079
  store i64 %28, i64* %8, align 8, !dbg !4080
  %29 = load i64, i64* %5, align 8, !dbg !4081
  %30 = load i64, i64* @input_len, align 8, !dbg !4082
  %31 = add i64 %30, %29, !dbg !4082
  store i64 %31, i64* @input_len, align 8, !dbg !4082
  %32 = load i64, i64* %8, align 8, !dbg !4083
  %33 = load i64, i64* %7, align 8, !dbg !4085
  %34 = icmp ule i64 %32, %33, !dbg !4086
  br i1 %34, label %35, label %37, !dbg !4087

35:                                               ; preds = %19
  %36 = load i64, i64* %8, align 8, !dbg !4088
  store i64 %36, i64* %7, align 8, !dbg !4089
  br label %37, !dbg !4090

37:                                               ; preds = %35, %19
  %38 = load i64, i64* %5, align 8, !dbg !4091
  %39 = load i64, i64* %7, align 8, !dbg !4093
  %40 = icmp ule i64 %38, %39, !dbg !4094
  br i1 %40, label %41, label %59, !dbg !4095

41:                                               ; preds = %37
  %42 = load i32, i32* %6, align 4, !dbg !4096
  %43 = icmp ne i32 %42, 0, !dbg !4096
  br i1 %43, label %44, label %59, !dbg !4097

44:                                               ; preds = %41
  %45 = load i64, i64* @compressed_len, align 8, !dbg !4098
  %46 = icmp eq i64 %45, 0, !dbg !4099
  br i1 %46, label %47, label %59, !dbg !4100

47:                                               ; preds = %44
  br i1 false, label %48, label %59, !dbg !4101

48:                                               ; preds = %47
  %49 = load i8*, i8** %4, align 8, !dbg !4102
  %50 = icmp eq i8* %49, null, !dbg !4105
  br i1 %50, label %51, label %52, !dbg !4106

51:                                               ; preds = %48
  call void @error(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.158, i64 0, i64 0)), !dbg !4107
  br label %52, !dbg !4107

52:                                               ; preds = %51, %48
  %53 = load i8*, i8** %4, align 8, !dbg !4108
  %54 = load i64, i64* %5, align 8, !dbg !4109
  %55 = trunc i64 %54 to i32, !dbg !4110
  call void @copy_block(i8* noundef %53, i32 noundef %55, i32 noundef 0), !dbg !4111
  %56 = load i64, i64* %5, align 8, !dbg !4112
  %57 = shl i64 %56, 3, !dbg !4113
  store i64 %57, i64* @compressed_len, align 8, !dbg !4114
  %58 = load i32*, i32** @file_method, align 8, !dbg !4115
  store i32 0, i32* %58, align 4, !dbg !4116
  br label %108, !dbg !4117

59:                                               ; preds = %47, %44, %41, %37
  %60 = load i64, i64* %5, align 8, !dbg !4118
  %61 = add i64 %60, 4, !dbg !4120
  %62 = load i64, i64* %7, align 8, !dbg !4121
  %63 = icmp ule i64 %61, %62, !dbg !4122
  br i1 %63, label %64, label %82, !dbg !4123

64:                                               ; preds = %59
  %65 = load i8*, i8** %4, align 8, !dbg !4124
  %66 = icmp ne i8* %65, null, !dbg !4125
  br i1 %66, label %67, label %82, !dbg !4126

67:                                               ; preds = %64
  %68 = load i32, i32* %6, align 4, !dbg !4127
  %69 = add nsw i32 0, %68, !dbg !4129
  call void @send_bits(i32 noundef %69, i32 noundef 3), !dbg !4130
  %70 = load i64, i64* @compressed_len, align 8, !dbg !4131
  %71 = add i64 %70, 3, !dbg !4132
  %72 = add i64 %71, 7, !dbg !4133
  %73 = and i64 %72, -8, !dbg !4134
  store i64 %73, i64* @compressed_len, align 8, !dbg !4135
  %74 = load i64, i64* %5, align 8, !dbg !4136
  %75 = add i64 %74, 4, !dbg !4137
  %76 = shl i64 %75, 3, !dbg !4138
  %77 = load i64, i64* @compressed_len, align 8, !dbg !4139
  %78 = add i64 %77, %76, !dbg !4139
  store i64 %78, i64* @compressed_len, align 8, !dbg !4139
  %79 = load i8*, i8** %4, align 8, !dbg !4140
  %80 = load i64, i64* %5, align 8, !dbg !4141
  %81 = trunc i64 %80 to i32, !dbg !4142
  call void @copy_block(i8* noundef %79, i32 noundef %81, i32 noundef 1), !dbg !4143
  br label %107, !dbg !4144

82:                                               ; preds = %64, %59
  %83 = load i64, i64* %8, align 8, !dbg !4145
  %84 = load i64, i64* %7, align 8, !dbg !4147
  %85 = icmp eq i64 %83, %84, !dbg !4148
  br i1 %85, label %86, label %93, !dbg !4149

86:                                               ; preds = %82
  %87 = load i32, i32* %6, align 4, !dbg !4150
  %88 = add nsw i32 2, %87, !dbg !4152
  call void @send_bits(i32 noundef %88, i32 noundef 3), !dbg !4153
  call void @compress_block(%struct.ct_data* noundef getelementptr inbounds ([288 x %struct.ct_data], [288 x %struct.ct_data]* @static_ltree, i64 0, i64 0), %struct.ct_data* noundef getelementptr inbounds ([30 x %struct.ct_data], [30 x %struct.ct_data]* @static_dtree, i64 0, i64 0)), !dbg !4154
  %89 = load i64, i64* @static_len, align 8, !dbg !4155
  %90 = add i64 3, %89, !dbg !4156
  %91 = load i64, i64* @compressed_len, align 8, !dbg !4157
  %92 = add i64 %91, %90, !dbg !4157
  store i64 %92, i64* @compressed_len, align 8, !dbg !4157
  br label %106, !dbg !4158

93:                                               ; preds = %82
  %94 = load i32, i32* %6, align 4, !dbg !4159
  %95 = add nsw i32 4, %94, !dbg !4161
  call void @send_bits(i32 noundef %95, i32 noundef 3), !dbg !4162
  %96 = load i32, i32* getelementptr inbounds (%struct.tree_desc, %struct.tree_desc* @l_desc, i32 0, i32 6), align 4, !dbg !4163
  %97 = add nsw i32 %96, 1, !dbg !4164
  %98 = load i32, i32* getelementptr inbounds (%struct.tree_desc, %struct.tree_desc* @d_desc, i32 0, i32 6), align 4, !dbg !4165
  %99 = add nsw i32 %98, 1, !dbg !4166
  %100 = load i32, i32* %9, align 4, !dbg !4167
  %101 = add nsw i32 %100, 1, !dbg !4168
  call void @send_all_trees(i32 noundef %97, i32 noundef %99, i32 noundef %101), !dbg !4169
  call void @compress_block(%struct.ct_data* noundef getelementptr inbounds ([573 x %struct.ct_data], [573 x %struct.ct_data]* @dyn_ltree, i64 0, i64 0), %struct.ct_data* noundef getelementptr inbounds ([61 x %struct.ct_data], [61 x %struct.ct_data]* @dyn_dtree, i64 0, i64 0)), !dbg !4170
  %102 = load i64, i64* @opt_len, align 8, !dbg !4171
  %103 = add i64 3, %102, !dbg !4172
  %104 = load i64, i64* @compressed_len, align 8, !dbg !4173
  %105 = add i64 %104, %103, !dbg !4173
  store i64 %105, i64* @compressed_len, align 8, !dbg !4173
  br label %106

106:                                              ; preds = %93, %86
  br label %107

107:                                              ; preds = %106, %67
  br label %108

108:                                              ; preds = %107, %52
  call void @init_block(), !dbg !4174
  %109 = load i32, i32* %6, align 4, !dbg !4175
  %110 = icmp ne i32 %109, 0, !dbg !4175
  br i1 %110, label %111, label %114, !dbg !4177

111:                                              ; preds = %108
  call void @bi_windup(), !dbg !4178
  %112 = load i64, i64* @compressed_len, align 8, !dbg !4180
  %113 = add i64 %112, 7, !dbg !4180
  store i64 %113, i64* @compressed_len, align 8, !dbg !4180
  br label %114, !dbg !4181

114:                                              ; preds = %111, %108
  %115 = load i64, i64* @compressed_len, align 8, !dbg !4182
  %116 = lshr i64 %115, 3, !dbg !4183
  ret i64 %116, !dbg !4184
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @set_file_type() #0 !dbg !4185 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4186, metadata !DIExpression()), !dbg !4187
  store i32 0, i32* %1, align 4, !dbg !4187
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4188, metadata !DIExpression()), !dbg !4189
  store i32 0, i32* %2, align 4, !dbg !4189
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4190, metadata !DIExpression()), !dbg !4191
  store i32 0, i32* %3, align 4, !dbg !4191
  br label %4, !dbg !4192

4:                                                ; preds = %7, %0
  %5 = load i32, i32* %1, align 4, !dbg !4193
  %6 = icmp slt i32 %5, 7, !dbg !4194
  br i1 %6, label %7, label %18, !dbg !4192

7:                                                ; preds = %4
  %8 = load i32, i32* %1, align 4, !dbg !4195
  %9 = add nsw i32 %8, 1, !dbg !4195
  store i32 %9, i32* %1, align 4, !dbg !4195
  %10 = sext i32 %8 to i64, !dbg !4196
  %11 = getelementptr inbounds [573 x %struct.ct_data], [573 x %struct.ct_data]* @dyn_ltree, i64 0, i64 %10, !dbg !4196
  %12 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %11, i32 0, i32 0, !dbg !4197
  %13 = bitcast %union.anon* %12 to i16*, !dbg !4197
  %14 = load i16, i16* %13, align 4, !dbg !4197
  %15 = zext i16 %14 to i32, !dbg !4196
  %16 = load i32, i32* %3, align 4, !dbg !4198
  %17 = add i32 %16, %15, !dbg !4198
  store i32 %17, i32* %3, align 4, !dbg !4198
  br label %4, !dbg !4192, !llvm.loop !4199

18:                                               ; preds = %4
  br label %19, !dbg !4200

19:                                               ; preds = %22, %18
  %20 = load i32, i32* %1, align 4, !dbg !4201
  %21 = icmp slt i32 %20, 128, !dbg !4202
  br i1 %21, label %22, label %33, !dbg !4200

22:                                               ; preds = %19
  %23 = load i32, i32* %1, align 4, !dbg !4203
  %24 = add nsw i32 %23, 1, !dbg !4203
  store i32 %24, i32* %1, align 4, !dbg !4203
  %25 = sext i32 %23 to i64, !dbg !4204
  %26 = getelementptr inbounds [573 x %struct.ct_data], [573 x %struct.ct_data]* @dyn_ltree, i64 0, i64 %25, !dbg !4204
  %27 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %26, i32 0, i32 0, !dbg !4205
  %28 = bitcast %union.anon* %27 to i16*, !dbg !4205
  %29 = load i16, i16* %28, align 4, !dbg !4205
  %30 = zext i16 %29 to i32, !dbg !4204
  %31 = load i32, i32* %2, align 4, !dbg !4206
  %32 = add i32 %31, %30, !dbg !4206
  store i32 %32, i32* %2, align 4, !dbg !4206
  br label %19, !dbg !4200, !llvm.loop !4207

33:                                               ; preds = %19
  br label %34, !dbg !4208

34:                                               ; preds = %37, %33
  %35 = load i32, i32* %1, align 4, !dbg !4209
  %36 = icmp slt i32 %35, 256, !dbg !4210
  br i1 %36, label %37, label %48, !dbg !4208

37:                                               ; preds = %34
  %38 = load i32, i32* %1, align 4, !dbg !4211
  %39 = add nsw i32 %38, 1, !dbg !4211
  store i32 %39, i32* %1, align 4, !dbg !4211
  %40 = sext i32 %38 to i64, !dbg !4212
  %41 = getelementptr inbounds [573 x %struct.ct_data], [573 x %struct.ct_data]* @dyn_ltree, i64 0, i64 %40, !dbg !4212
  %42 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %41, i32 0, i32 0, !dbg !4213
  %43 = bitcast %union.anon* %42 to i16*, !dbg !4213
  %44 = load i16, i16* %43, align 4, !dbg !4213
  %45 = zext i16 %44 to i32, !dbg !4212
  %46 = load i32, i32* %3, align 4, !dbg !4214
  %47 = add i32 %46, %45, !dbg !4214
  store i32 %47, i32* %3, align 4, !dbg !4214
  br label %34, !dbg !4208, !llvm.loop !4215

48:                                               ; preds = %34
  %49 = load i32, i32* %3, align 4, !dbg !4216
  %50 = load i32, i32* %2, align 4, !dbg !4217
  %51 = lshr i32 %50, 2, !dbg !4218
  %52 = icmp ugt i32 %49, %51, !dbg !4219
  %53 = zext i1 %52 to i64, !dbg !4216
  %54 = select i1 %52, i32 0, i32 1, !dbg !4216
  %55 = trunc i32 %54 to i16, !dbg !4216
  %56 = load i16*, i16** @file_type, align 8, !dbg !4220
  store i16 %55, i16* %56, align 2, !dbg !4221
  %57 = load i16*, i16** @file_type, align 8, !dbg !4222
  %58 = load i16, i16* %57, align 2, !dbg !4224
  %59 = zext i16 %58 to i32, !dbg !4224
  %60 = icmp eq i32 %59, 0, !dbg !4225
  br i1 %60, label %61, label %63, !dbg !4226

61:                                               ; preds = %48
  br i1 false, label %62, label %63, !dbg !4227

62:                                               ; preds = %61
  call void @warn(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1.159, i64 0, i64 0), i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2.160, i64 0, i64 0)), !dbg !4228
  br label %63, !dbg !4230

63:                                               ; preds = %62, %61, %48
  ret void, !dbg !4231
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @build_tree(%struct.tree_desc* noundef %0) #0 !dbg !4232 {
  %2 = alloca %struct.tree_desc*, align 8
  %3 = alloca %struct.ct_data*, align 8
  %4 = alloca %struct.ct_data*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store %struct.tree_desc* %0, %struct.tree_desc** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.tree_desc** %2, metadata !4235, metadata !DIExpression()), !dbg !4236
  call void @llvm.dbg.declare(metadata %struct.ct_data** %3, metadata !4237, metadata !DIExpression()), !dbg !4238
  %11 = load %struct.tree_desc*, %struct.tree_desc** %2, align 8, !dbg !4239
  %12 = getelementptr inbounds %struct.tree_desc, %struct.tree_desc* %11, i32 0, i32 0, !dbg !4240
  %13 = load %struct.ct_data*, %struct.ct_data** %12, align 8, !dbg !4240
  store %struct.ct_data* %13, %struct.ct_data** %3, align 8, !dbg !4238
  call void @llvm.dbg.declare(metadata %struct.ct_data** %4, metadata !4241, metadata !DIExpression()), !dbg !4242
  %14 = load %struct.tree_desc*, %struct.tree_desc** %2, align 8, !dbg !4243
  %15 = getelementptr inbounds %struct.tree_desc, %struct.tree_desc* %14, i32 0, i32 1, !dbg !4244
  %16 = load %struct.ct_data*, %struct.ct_data** %15, align 8, !dbg !4244
  store %struct.ct_data* %16, %struct.ct_data** %4, align 8, !dbg !4242
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4245, metadata !DIExpression()), !dbg !4246
  %17 = load %struct.tree_desc*, %struct.tree_desc** %2, align 8, !dbg !4247
  %18 = getelementptr inbounds %struct.tree_desc, %struct.tree_desc* %17, i32 0, i32 4, !dbg !4248
  %19 = load i32, i32* %18, align 4, !dbg !4248
  store i32 %19, i32* %5, align 4, !dbg !4246
  call void @llvm.dbg.declare(metadata i32* %6, metadata !4249, metadata !DIExpression()), !dbg !4250
  call void @llvm.dbg.declare(metadata i32* %7, metadata !4251, metadata !DIExpression()), !dbg !4252
  call void @llvm.dbg.declare(metadata i32* %8, metadata !4253, metadata !DIExpression()), !dbg !4254
  store i32 -1, i32* %8, align 4, !dbg !4254
  call void @llvm.dbg.declare(metadata i32* %9, metadata !4255, metadata !DIExpression()), !dbg !4256
  %20 = load i32, i32* %5, align 4, !dbg !4257
  store i32 %20, i32* %9, align 4, !dbg !4256
  store i32 0, i32* @heap_len, align 4, !dbg !4258
  store i32 573, i32* @heap_max, align 4, !dbg !4259
  store i32 0, i32* %6, align 4, !dbg !4260
  br label %21, !dbg !4262

21:                                               ; preds = %52, %1
  %22 = load i32, i32* %6, align 4, !dbg !4263
  %23 = load i32, i32* %5, align 4, !dbg !4265
  %24 = icmp slt i32 %22, %23, !dbg !4266
  br i1 %24, label %25, label %55, !dbg !4267

25:                                               ; preds = %21
  %26 = load %struct.ct_data*, %struct.ct_data** %3, align 8, !dbg !4268
  %27 = load i32, i32* %6, align 4, !dbg !4271
  %28 = sext i32 %27 to i64, !dbg !4268
  %29 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %26, i64 %28, !dbg !4268
  %30 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %29, i32 0, i32 0, !dbg !4272
  %31 = bitcast %union.anon* %30 to i16*, !dbg !4272
  %32 = load i16, i16* %31, align 2, !dbg !4272
  %33 = zext i16 %32 to i32, !dbg !4268
  %34 = icmp ne i32 %33, 0, !dbg !4273
  br i1 %34, label %35, label %44, !dbg !4274

35:                                               ; preds = %25
  %36 = load i32, i32* %6, align 4, !dbg !4275
  store i32 %36, i32* %8, align 4, !dbg !4277
  %37 = load i32, i32* @heap_len, align 4, !dbg !4278
  %38 = add nsw i32 %37, 1, !dbg !4278
  store i32 %38, i32* @heap_len, align 4, !dbg !4278
  %39 = sext i32 %38 to i64, !dbg !4279
  %40 = getelementptr inbounds [573 x i32], [573 x i32]* @heap, i64 0, i64 %39, !dbg !4279
  store i32 %36, i32* %40, align 4, !dbg !4280
  %41 = load i32, i32* %6, align 4, !dbg !4281
  %42 = sext i32 %41 to i64, !dbg !4282
  %43 = getelementptr inbounds [573 x i8], [573 x i8]* @depth, i64 0, i64 %42, !dbg !4282
  store i8 0, i8* %43, align 1, !dbg !4283
  br label %51, !dbg !4284

44:                                               ; preds = %25
  %45 = load %struct.ct_data*, %struct.ct_data** %3, align 8, !dbg !4285
  %46 = load i32, i32* %6, align 4, !dbg !4287
  %47 = sext i32 %46 to i64, !dbg !4285
  %48 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %45, i64 %47, !dbg !4285
  %49 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %48, i32 0, i32 1, !dbg !4288
  %50 = bitcast %union.anon* %49 to i16*, !dbg !4288
  store i16 0, i16* %50, align 2, !dbg !4289
  br label %51

51:                                               ; preds = %44, %35
  br label %52, !dbg !4290

52:                                               ; preds = %51
  %53 = load i32, i32* %6, align 4, !dbg !4291
  %54 = add nsw i32 %53, 1, !dbg !4291
  store i32 %54, i32* %6, align 4, !dbg !4291
  br label %21, !dbg !4292, !llvm.loop !4293

55:                                               ; preds = %21
  br label %56, !dbg !4295

56:                                               ; preds = %96, %55
  %57 = load i32, i32* @heap_len, align 4, !dbg !4296
  %58 = icmp slt i32 %57, 2, !dbg !4297
  br i1 %58, label %59, label %97, !dbg !4295

59:                                               ; preds = %56
  call void @llvm.dbg.declare(metadata i32* %10, metadata !4298, metadata !DIExpression()), !dbg !4300
  %60 = load i32, i32* %8, align 4, !dbg !4301
  %61 = icmp slt i32 %60, 2, !dbg !4302
  br i1 %61, label %62, label %65, !dbg !4301

62:                                               ; preds = %59
  %63 = load i32, i32* %8, align 4, !dbg !4303
  %64 = add nsw i32 %63, 1, !dbg !4303
  store i32 %64, i32* %8, align 4, !dbg !4303
  br label %66, !dbg !4301

65:                                               ; preds = %59
  br label %66, !dbg !4301

66:                                               ; preds = %65, %62
  %67 = phi i32 [ %64, %62 ], [ 0, %65 ], !dbg !4301
  %68 = load i32, i32* @heap_len, align 4, !dbg !4304
  %69 = add nsw i32 %68, 1, !dbg !4304
  store i32 %69, i32* @heap_len, align 4, !dbg !4304
  %70 = sext i32 %69 to i64, !dbg !4305
  %71 = getelementptr inbounds [573 x i32], [573 x i32]* @heap, i64 0, i64 %70, !dbg !4305
  store i32 %67, i32* %71, align 4, !dbg !4306
  store i32 %67, i32* %10, align 4, !dbg !4300
  %72 = load %struct.ct_data*, %struct.ct_data** %3, align 8, !dbg !4307
  %73 = load i32, i32* %10, align 4, !dbg !4308
  %74 = sext i32 %73 to i64, !dbg !4307
  %75 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %72, i64 %74, !dbg !4307
  %76 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %75, i32 0, i32 0, !dbg !4309
  %77 = bitcast %union.anon* %76 to i16*, !dbg !4309
  store i16 1, i16* %77, align 2, !dbg !4310
  %78 = load i32, i32* %10, align 4, !dbg !4311
  %79 = sext i32 %78 to i64, !dbg !4312
  %80 = getelementptr inbounds [573 x i8], [573 x i8]* @depth, i64 0, i64 %79, !dbg !4312
  store i8 0, i8* %80, align 1, !dbg !4313
  %81 = load i64, i64* @opt_len, align 8, !dbg !4314
  %82 = add i64 %81, -1, !dbg !4314
  store i64 %82, i64* @opt_len, align 8, !dbg !4314
  %83 = load %struct.ct_data*, %struct.ct_data** %4, align 8, !dbg !4315
  %84 = icmp ne %struct.ct_data* %83, null, !dbg !4315
  br i1 %84, label %85, label %96, !dbg !4317

85:                                               ; preds = %66
  %86 = load %struct.ct_data*, %struct.ct_data** %4, align 8, !dbg !4318
  %87 = load i32, i32* %10, align 4, !dbg !4319
  %88 = sext i32 %87 to i64, !dbg !4318
  %89 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %86, i64 %88, !dbg !4318
  %90 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %89, i32 0, i32 1, !dbg !4320
  %91 = bitcast %union.anon* %90 to i16*, !dbg !4320
  %92 = load i16, i16* %91, align 2, !dbg !4320
  %93 = zext i16 %92 to i64, !dbg !4318
  %94 = load i64, i64* @static_len, align 8, !dbg !4321
  %95 = sub i64 %94, %93, !dbg !4321
  store i64 %95, i64* @static_len, align 8, !dbg !4321
  br label %96, !dbg !4322

96:                                               ; preds = %85, %66
  br label %56, !dbg !4295, !llvm.loop !4323

97:                                               ; preds = %56
  %98 = load i32, i32* %8, align 4, !dbg !4325
  %99 = load %struct.tree_desc*, %struct.tree_desc** %2, align 8, !dbg !4326
  %100 = getelementptr inbounds %struct.tree_desc, %struct.tree_desc* %99, i32 0, i32 6, !dbg !4327
  store i32 %98, i32* %100, align 4, !dbg !4328
  %101 = load i32, i32* @heap_len, align 4, !dbg !4329
  %102 = sdiv i32 %101, 2, !dbg !4331
  store i32 %102, i32* %6, align 4, !dbg !4332
  br label %103, !dbg !4333

103:                                              ; preds = %109, %97
  %104 = load i32, i32* %6, align 4, !dbg !4334
  %105 = icmp sge i32 %104, 1, !dbg !4336
  br i1 %105, label %106, label %112, !dbg !4337

106:                                              ; preds = %103
  %107 = load %struct.ct_data*, %struct.ct_data** %3, align 8, !dbg !4338
  %108 = load i32, i32* %6, align 4, !dbg !4339
  call void @pqdownheap(%struct.ct_data* noundef %107, i32 noundef %108), !dbg !4340
  br label %109, !dbg !4340

109:                                              ; preds = %106
  %110 = load i32, i32* %6, align 4, !dbg !4341
  %111 = add nsw i32 %110, -1, !dbg !4341
  store i32 %111, i32* %6, align 4, !dbg !4341
  br label %103, !dbg !4342, !llvm.loop !4343

112:                                              ; preds = %103
  br label %113, !dbg !4345

113:                                              ; preds = %203, %112
  %114 = load i32, i32* getelementptr inbounds ([573 x i32], [573 x i32]* @heap, i64 0, i64 1), align 4, !dbg !4346
  store i32 %114, i32* %6, align 4, !dbg !4346
  %115 = load i32, i32* @heap_len, align 4, !dbg !4346
  %116 = add nsw i32 %115, -1, !dbg !4346
  store i32 %116, i32* @heap_len, align 4, !dbg !4346
  %117 = sext i32 %115 to i64, !dbg !4346
  %118 = getelementptr inbounds [573 x i32], [573 x i32]* @heap, i64 0, i64 %117, !dbg !4346
  %119 = load i32, i32* %118, align 4, !dbg !4346
  store i32 %119, i32* getelementptr inbounds ([573 x i32], [573 x i32]* @heap, i64 0, i64 1), align 4, !dbg !4346
  %120 = load %struct.ct_data*, %struct.ct_data** %3, align 8, !dbg !4346
  call void @pqdownheap(%struct.ct_data* noundef %120, i32 noundef 1), !dbg !4346
  %121 = load i32, i32* getelementptr inbounds ([573 x i32], [573 x i32]* @heap, i64 0, i64 1), align 4, !dbg !4349
  store i32 %121, i32* %7, align 4, !dbg !4350
  %122 = load i32, i32* %6, align 4, !dbg !4351
  %123 = load i32, i32* @heap_max, align 4, !dbg !4352
  %124 = add nsw i32 %123, -1, !dbg !4352
  store i32 %124, i32* @heap_max, align 4, !dbg !4352
  %125 = sext i32 %124 to i64, !dbg !4353
  %126 = getelementptr inbounds [573 x i32], [573 x i32]* @heap, i64 0, i64 %125, !dbg !4353
  store i32 %122, i32* %126, align 4, !dbg !4354
  %127 = load i32, i32* %7, align 4, !dbg !4355
  %128 = load i32, i32* @heap_max, align 4, !dbg !4356
  %129 = add nsw i32 %128, -1, !dbg !4356
  store i32 %129, i32* @heap_max, align 4, !dbg !4356
  %130 = sext i32 %129 to i64, !dbg !4357
  %131 = getelementptr inbounds [573 x i32], [573 x i32]* @heap, i64 0, i64 %130, !dbg !4357
  store i32 %127, i32* %131, align 4, !dbg !4358
  %132 = load %struct.ct_data*, %struct.ct_data** %3, align 8, !dbg !4359
  %133 = load i32, i32* %6, align 4, !dbg !4360
  %134 = sext i32 %133 to i64, !dbg !4359
  %135 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %132, i64 %134, !dbg !4359
  %136 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %135, i32 0, i32 0, !dbg !4361
  %137 = bitcast %union.anon* %136 to i16*, !dbg !4361
  %138 = load i16, i16* %137, align 2, !dbg !4361
  %139 = zext i16 %138 to i32, !dbg !4359
  %140 = load %struct.ct_data*, %struct.ct_data** %3, align 8, !dbg !4362
  %141 = load i32, i32* %7, align 4, !dbg !4363
  %142 = sext i32 %141 to i64, !dbg !4362
  %143 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %140, i64 %142, !dbg !4362
  %144 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %143, i32 0, i32 0, !dbg !4364
  %145 = bitcast %union.anon* %144 to i16*, !dbg !4364
  %146 = load i16, i16* %145, align 2, !dbg !4364
  %147 = zext i16 %146 to i32, !dbg !4362
  %148 = add nsw i32 %139, %147, !dbg !4365
  %149 = trunc i32 %148 to i16, !dbg !4359
  %150 = load %struct.ct_data*, %struct.ct_data** %3, align 8, !dbg !4366
  %151 = load i32, i32* %9, align 4, !dbg !4367
  %152 = sext i32 %151 to i64, !dbg !4366
  %153 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %150, i64 %152, !dbg !4366
  %154 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %153, i32 0, i32 0, !dbg !4368
  %155 = bitcast %union.anon* %154 to i16*, !dbg !4368
  store i16 %149, i16* %155, align 2, !dbg !4369
  %156 = load i32, i32* %6, align 4, !dbg !4370
  %157 = sext i32 %156 to i64, !dbg !4370
  %158 = getelementptr inbounds [573 x i8], [573 x i8]* @depth, i64 0, i64 %157, !dbg !4370
  %159 = load i8, i8* %158, align 1, !dbg !4370
  %160 = zext i8 %159 to i32, !dbg !4370
  %161 = load i32, i32* %7, align 4, !dbg !4370
  %162 = sext i32 %161 to i64, !dbg !4370
  %163 = getelementptr inbounds [573 x i8], [573 x i8]* @depth, i64 0, i64 %162, !dbg !4370
  %164 = load i8, i8* %163, align 1, !dbg !4370
  %165 = zext i8 %164 to i32, !dbg !4370
  %166 = icmp sge i32 %160, %165, !dbg !4370
  br i1 %166, label %167, label %173, !dbg !4370

167:                                              ; preds = %113
  %168 = load i32, i32* %6, align 4, !dbg !4370
  %169 = sext i32 %168 to i64, !dbg !4370
  %170 = getelementptr inbounds [573 x i8], [573 x i8]* @depth, i64 0, i64 %169, !dbg !4370
  %171 = load i8, i8* %170, align 1, !dbg !4370
  %172 = zext i8 %171 to i32, !dbg !4370
  br label %179, !dbg !4370

173:                                              ; preds = %113
  %174 = load i32, i32* %7, align 4, !dbg !4370
  %175 = sext i32 %174 to i64, !dbg !4370
  %176 = getelementptr inbounds [573 x i8], [573 x i8]* @depth, i64 0, i64 %175, !dbg !4370
  %177 = load i8, i8* %176, align 1, !dbg !4370
  %178 = zext i8 %177 to i32, !dbg !4370
  br label %179, !dbg !4370

179:                                              ; preds = %173, %167
  %180 = phi i32 [ %172, %167 ], [ %178, %173 ], !dbg !4370
  %181 = add nsw i32 %180, 1, !dbg !4371
  %182 = trunc i32 %181 to i8, !dbg !4372
  %183 = load i32, i32* %9, align 4, !dbg !4373
  %184 = sext i32 %183 to i64, !dbg !4374
  %185 = getelementptr inbounds [573 x i8], [573 x i8]* @depth, i64 0, i64 %184, !dbg !4374
  store i8 %182, i8* %185, align 1, !dbg !4375
  %186 = load i32, i32* %9, align 4, !dbg !4376
  %187 = trunc i32 %186 to i16, !dbg !4377
  %188 = load %struct.ct_data*, %struct.ct_data** %3, align 8, !dbg !4378
  %189 = load i32, i32* %7, align 4, !dbg !4379
  %190 = sext i32 %189 to i64, !dbg !4378
  %191 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %188, i64 %190, !dbg !4378
  %192 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %191, i32 0, i32 1, !dbg !4380
  %193 = bitcast %union.anon* %192 to i16*, !dbg !4380
  store i16 %187, i16* %193, align 2, !dbg !4381
  %194 = load %struct.ct_data*, %struct.ct_data** %3, align 8, !dbg !4382
  %195 = load i32, i32* %6, align 4, !dbg !4383
  %196 = sext i32 %195 to i64, !dbg !4382
  %197 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %194, i64 %196, !dbg !4382
  %198 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %197, i32 0, i32 1, !dbg !4384
  %199 = bitcast %union.anon* %198 to i16*, !dbg !4384
  store i16 %187, i16* %199, align 2, !dbg !4385
  %200 = load i32, i32* %9, align 4, !dbg !4386
  %201 = add nsw i32 %200, 1, !dbg !4386
  store i32 %201, i32* %9, align 4, !dbg !4386
  store i32 %200, i32* getelementptr inbounds ([573 x i32], [573 x i32]* @heap, i64 0, i64 1), align 4, !dbg !4387
  %202 = load %struct.ct_data*, %struct.ct_data** %3, align 8, !dbg !4388
  call void @pqdownheap(%struct.ct_data* noundef %202, i32 noundef 1), !dbg !4389
  br label %203, !dbg !4390

203:                                              ; preds = %179
  %204 = load i32, i32* @heap_len, align 4, !dbg !4391
  %205 = icmp sge i32 %204, 2, !dbg !4392
  br i1 %205, label %113, label %206, !dbg !4390, !llvm.loop !4393

206:                                              ; preds = %203
  %207 = load i32, i32* getelementptr inbounds ([573 x i32], [573 x i32]* @heap, i64 0, i64 1), align 4, !dbg !4395
  %208 = load i32, i32* @heap_max, align 4, !dbg !4396
  %209 = add nsw i32 %208, -1, !dbg !4396
  store i32 %209, i32* @heap_max, align 4, !dbg !4396
  %210 = sext i32 %209 to i64, !dbg !4397
  %211 = getelementptr inbounds [573 x i32], [573 x i32]* @heap, i64 0, i64 %210, !dbg !4397
  store i32 %207, i32* %211, align 4, !dbg !4398
  %212 = load %struct.tree_desc*, %struct.tree_desc** %2, align 8, !dbg !4399
  call void @gen_bitlen(%struct.tree_desc* noundef %212), !dbg !4400
  %213 = load %struct.ct_data*, %struct.ct_data** %3, align 8, !dbg !4401
  %214 = load i32, i32* %8, align 4, !dbg !4402
  call void @gen_codes(%struct.ct_data* noundef %213, i32 noundef %214), !dbg !4403
  ret void, !dbg !4404
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @build_bl_tree() #0 !dbg !4405 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4406, metadata !DIExpression()), !dbg !4407
  %2 = load i32, i32* getelementptr inbounds (%struct.tree_desc, %struct.tree_desc* @l_desc, i32 0, i32 6), align 4, !dbg !4408
  call void @scan_tree(%struct.ct_data* noundef getelementptr inbounds ([573 x %struct.ct_data], [573 x %struct.ct_data]* @dyn_ltree, i64 0, i64 0), i32 noundef %2), !dbg !4409
  %3 = load i32, i32* getelementptr inbounds (%struct.tree_desc, %struct.tree_desc* @d_desc, i32 0, i32 6), align 4, !dbg !4410
  call void @scan_tree(%struct.ct_data* noundef getelementptr inbounds ([61 x %struct.ct_data], [61 x %struct.ct_data]* @dyn_dtree, i64 0, i64 0), i32 noundef %3), !dbg !4411
  call void @build_tree(%struct.tree_desc* noundef @bl_desc), !dbg !4412
  store i32 18, i32* %1, align 4, !dbg !4413
  br label %4, !dbg !4415

4:                                                ; preds = %21, %0
  %5 = load i32, i32* %1, align 4, !dbg !4416
  %6 = icmp sge i32 %5, 3, !dbg !4418
  br i1 %6, label %7, label %24, !dbg !4419

7:                                                ; preds = %4
  %8 = load i32, i32* %1, align 4, !dbg !4420
  %9 = sext i32 %8 to i64, !dbg !4423
  %10 = getelementptr inbounds [19 x i8], [19 x i8]* @bl_order, i64 0, i64 %9, !dbg !4423
  %11 = load i8, i8* %10, align 1, !dbg !4423
  %12 = zext i8 %11 to i64, !dbg !4424
  %13 = getelementptr inbounds [39 x %struct.ct_data], [39 x %struct.ct_data]* @bl_tree, i64 0, i64 %12, !dbg !4424
  %14 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %13, i32 0, i32 1, !dbg !4425
  %15 = bitcast %union.anon* %14 to i16*, !dbg !4425
  %16 = load i16, i16* %15, align 2, !dbg !4425
  %17 = zext i16 %16 to i32, !dbg !4424
  %18 = icmp ne i32 %17, 0, !dbg !4426
  br i1 %18, label %19, label %20, !dbg !4427

19:                                               ; preds = %7
  br label %24, !dbg !4428

20:                                               ; preds = %7
  br label %21, !dbg !4429

21:                                               ; preds = %20
  %22 = load i32, i32* %1, align 4, !dbg !4430
  %23 = add nsw i32 %22, -1, !dbg !4430
  store i32 %23, i32* %1, align 4, !dbg !4430
  br label %4, !dbg !4431, !llvm.loop !4432

24:                                               ; preds = %19, %4
  %25 = load i32, i32* %1, align 4, !dbg !4434
  %26 = add nsw i32 %25, 1, !dbg !4435
  %27 = mul nsw i32 3, %26, !dbg !4436
  %28 = add nsw i32 %27, 5, !dbg !4437
  %29 = add nsw i32 %28, 5, !dbg !4438
  %30 = add nsw i32 %29, 4, !dbg !4439
  %31 = sext i32 %30 to i64, !dbg !4440
  %32 = load i64, i64* @opt_len, align 8, !dbg !4441
  %33 = add i64 %32, %31, !dbg !4441
  store i64 %33, i64* @opt_len, align 8, !dbg !4441
  %34 = load i32, i32* %1, align 4, !dbg !4442
  ret i32 %34, !dbg !4443
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @compress_block(%struct.ct_data* noundef %0, %struct.ct_data* noundef %1) #0 !dbg !4444 {
  %3 = alloca %struct.ct_data*, align 8
  %4 = alloca %struct.ct_data*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8, align 1
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store %struct.ct_data* %0, %struct.ct_data** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.ct_data** %3, metadata !4447, metadata !DIExpression()), !dbg !4448
  store %struct.ct_data* %1, %struct.ct_data** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.ct_data** %4, metadata !4449, metadata !DIExpression()), !dbg !4450
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4451, metadata !DIExpression()), !dbg !4452
  call void @llvm.dbg.declare(metadata i32* %6, metadata !4453, metadata !DIExpression()), !dbg !4454
  call void @llvm.dbg.declare(metadata i32* %7, metadata !4455, metadata !DIExpression()), !dbg !4456
  store i32 0, i32* %7, align 4, !dbg !4456
  call void @llvm.dbg.declare(metadata i32* %8, metadata !4457, metadata !DIExpression()), !dbg !4458
  store i32 0, i32* %8, align 4, !dbg !4458
  call void @llvm.dbg.declare(metadata i32* %9, metadata !4459, metadata !DIExpression()), !dbg !4460
  store i32 0, i32* %9, align 4, !dbg !4460
  call void @llvm.dbg.declare(metadata i8* %10, metadata !4461, metadata !DIExpression()), !dbg !4462
  store i8 0, i8* %10, align 1, !dbg !4462
  call void @llvm.dbg.declare(metadata i32* %11, metadata !4463, metadata !DIExpression()), !dbg !4464
  call void @llvm.dbg.declare(metadata i32* %12, metadata !4465, metadata !DIExpression()), !dbg !4466
  %13 = load i32, i32* @last_lit, align 4, !dbg !4467
  %14 = icmp ne i32 %13, 0, !dbg !4469
  br i1 %14, label %15, label %162, !dbg !4470

15:                                               ; preds = %2
  br label %16, !dbg !4471

16:                                               ; preds = %157, %15
  %17 = load i32, i32* %7, align 4, !dbg !4472
  %18 = and i32 %17, 7, !dbg !4475
  %19 = icmp eq i32 %18, 0, !dbg !4476
  br i1 %19, label %20, label %26, !dbg !4477

20:                                               ; preds = %16
  %21 = load i32, i32* %9, align 4, !dbg !4478
  %22 = add i32 %21, 1, !dbg !4478
  store i32 %22, i32* %9, align 4, !dbg !4478
  %23 = zext i32 %21 to i64, !dbg !4479
  %24 = getelementptr inbounds [4096 x i8], [4096 x i8]* @flag_buf, i64 0, i64 %23, !dbg !4479
  %25 = load i8, i8* %24, align 1, !dbg !4479
  store i8 %25, i8* %10, align 1, !dbg !4480
  br label %26, !dbg !4481

26:                                               ; preds = %20, %16
  %27 = load i32, i32* %7, align 4, !dbg !4482
  %28 = add i32 %27, 1, !dbg !4482
  store i32 %28, i32* %7, align 4, !dbg !4482
  %29 = zext i32 %27 to i64, !dbg !4483
  %30 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i64 0, i64 %29, !dbg !4483
  %31 = load i8, i8* %30, align 1, !dbg !4483
  %32 = zext i8 %31 to i32, !dbg !4483
  store i32 %32, i32* %6, align 4, !dbg !4484
  %33 = load i8, i8* %10, align 1, !dbg !4485
  %34 = zext i8 %33 to i32, !dbg !4485
  %35 = and i32 %34, 1, !dbg !4487
  %36 = icmp eq i32 %35, 0, !dbg !4488
  br i1 %36, label %37, label %54, !dbg !4489

37:                                               ; preds = %26
  %38 = load %struct.ct_data*, %struct.ct_data** %3, align 8, !dbg !4490
  %39 = load i32, i32* %6, align 4, !dbg !4490
  %40 = sext i32 %39 to i64, !dbg !4490
  %41 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %38, i64 %40, !dbg !4490
  %42 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %41, i32 0, i32 0, !dbg !4490
  %43 = bitcast %union.anon* %42 to i16*, !dbg !4490
  %44 = load i16, i16* %43, align 2, !dbg !4490
  %45 = zext i16 %44 to i32, !dbg !4490
  %46 = load %struct.ct_data*, %struct.ct_data** %3, align 8, !dbg !4490
  %47 = load i32, i32* %6, align 4, !dbg !4490
  %48 = sext i32 %47 to i64, !dbg !4490
  %49 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %46, i64 %48, !dbg !4490
  %50 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %49, i32 0, i32 1, !dbg !4490
  %51 = bitcast %union.anon* %50 to i16*, !dbg !4490
  %52 = load i16, i16* %51, align 2, !dbg !4490
  %53 = zext i16 %52 to i32, !dbg !4490
  call void @send_bits(i32 noundef %45, i32 noundef %53), !dbg !4490
  br label %152, !dbg !4492

54:                                               ; preds = %26
  %55 = load i32, i32* %6, align 4, !dbg !4493
  %56 = sext i32 %55 to i64, !dbg !4495
  %57 = getelementptr inbounds [256 x i8], [256 x i8]* @length_code, i64 0, i64 %56, !dbg !4495
  %58 = load i8, i8* %57, align 1, !dbg !4495
  %59 = zext i8 %58 to i32, !dbg !4495
  store i32 %59, i32* %11, align 4, !dbg !4496
  %60 = load %struct.ct_data*, %struct.ct_data** %3, align 8, !dbg !4497
  %61 = load i32, i32* %11, align 4, !dbg !4497
  %62 = add i32 %61, 256, !dbg !4497
  %63 = add i32 %62, 1, !dbg !4497
  %64 = zext i32 %63 to i64, !dbg !4497
  %65 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %60, i64 %64, !dbg !4497
  %66 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %65, i32 0, i32 0, !dbg !4497
  %67 = bitcast %union.anon* %66 to i16*, !dbg !4497
  %68 = load i16, i16* %67, align 2, !dbg !4497
  %69 = zext i16 %68 to i32, !dbg !4497
  %70 = load %struct.ct_data*, %struct.ct_data** %3, align 8, !dbg !4497
  %71 = load i32, i32* %11, align 4, !dbg !4497
  %72 = add i32 %71, 256, !dbg !4497
  %73 = add i32 %72, 1, !dbg !4497
  %74 = zext i32 %73 to i64, !dbg !4497
  %75 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %70, i64 %74, !dbg !4497
  %76 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %75, i32 0, i32 1, !dbg !4497
  %77 = bitcast %union.anon* %76 to i16*, !dbg !4497
  %78 = load i16, i16* %77, align 2, !dbg !4497
  %79 = zext i16 %78 to i32, !dbg !4497
  call void @send_bits(i32 noundef %69, i32 noundef %79), !dbg !4497
  %80 = load i32, i32* %11, align 4, !dbg !4498
  %81 = zext i32 %80 to i64, !dbg !4499
  %82 = getelementptr inbounds [29 x i32], [29 x i32]* @extra_lbits, i64 0, i64 %81, !dbg !4499
  %83 = load i32, i32* %82, align 4, !dbg !4499
  store i32 %83, i32* %12, align 4, !dbg !4500
  %84 = load i32, i32* %12, align 4, !dbg !4501
  %85 = icmp ne i32 %84, 0, !dbg !4503
  br i1 %85, label %86, label %95, !dbg !4504

86:                                               ; preds = %54
  %87 = load i32, i32* %11, align 4, !dbg !4505
  %88 = zext i32 %87 to i64, !dbg !4507
  %89 = getelementptr inbounds [29 x i32], [29 x i32]* @base_length, i64 0, i64 %88, !dbg !4507
  %90 = load i32, i32* %89, align 4, !dbg !4507
  %91 = load i32, i32* %6, align 4, !dbg !4508
  %92 = sub nsw i32 %91, %90, !dbg !4508
  store i32 %92, i32* %6, align 4, !dbg !4508
  %93 = load i32, i32* %6, align 4, !dbg !4509
  %94 = load i32, i32* %12, align 4, !dbg !4510
  call void @send_bits(i32 noundef %93, i32 noundef %94), !dbg !4511
  br label %95, !dbg !4512

95:                                               ; preds = %86, %54
  %96 = load i32, i32* %8, align 4, !dbg !4513
  %97 = add i32 %96, 1, !dbg !4513
  store i32 %97, i32* %8, align 4, !dbg !4513
  %98 = zext i32 %96 to i64, !dbg !4514
  %99 = getelementptr inbounds [0 x i16], [0 x i16]* bitcast ([32768 x i16]* @d_buf to [0 x i16]*), i64 0, i64 %98, !dbg !4514
  %100 = load i16, i16* %99, align 2, !dbg !4514
  %101 = zext i16 %100 to i32, !dbg !4514
  store i32 %101, i32* %5, align 4, !dbg !4515
  %102 = load i32, i32* %5, align 4, !dbg !4516
  %103 = icmp ult i32 %102, 256, !dbg !4516
  br i1 %103, label %104, label %110, !dbg !4516

104:                                              ; preds = %95
  %105 = load i32, i32* %5, align 4, !dbg !4516
  %106 = zext i32 %105 to i64, !dbg !4516
  %107 = getelementptr inbounds [512 x i8], [512 x i8]* @dist_code, i64 0, i64 %106, !dbg !4516
  %108 = load i8, i8* %107, align 1, !dbg !4516
  %109 = zext i8 %108 to i32, !dbg !4516
  br label %118, !dbg !4516

110:                                              ; preds = %95
  %111 = load i32, i32* %5, align 4, !dbg !4516
  %112 = lshr i32 %111, 7, !dbg !4516
  %113 = add i32 256, %112, !dbg !4516
  %114 = zext i32 %113 to i64, !dbg !4516
  %115 = getelementptr inbounds [512 x i8], [512 x i8]* @dist_code, i64 0, i64 %114, !dbg !4516
  %116 = load i8, i8* %115, align 1, !dbg !4516
  %117 = zext i8 %116 to i32, !dbg !4516
  br label %118, !dbg !4516

118:                                              ; preds = %110, %104
  %119 = phi i32 [ %109, %104 ], [ %117, %110 ], !dbg !4516
  store i32 %119, i32* %11, align 4, !dbg !4517
  %120 = load %struct.ct_data*, %struct.ct_data** %4, align 8, !dbg !4518
  %121 = load i32, i32* %11, align 4, !dbg !4518
  %122 = zext i32 %121 to i64, !dbg !4518
  %123 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %120, i64 %122, !dbg !4518
  %124 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %123, i32 0, i32 0, !dbg !4518
  %125 = bitcast %union.anon* %124 to i16*, !dbg !4518
  %126 = load i16, i16* %125, align 2, !dbg !4518
  %127 = zext i16 %126 to i32, !dbg !4518
  %128 = load %struct.ct_data*, %struct.ct_data** %4, align 8, !dbg !4518
  %129 = load i32, i32* %11, align 4, !dbg !4518
  %130 = zext i32 %129 to i64, !dbg !4518
  %131 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %128, i64 %130, !dbg !4518
  %132 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %131, i32 0, i32 1, !dbg !4518
  %133 = bitcast %union.anon* %132 to i16*, !dbg !4518
  %134 = load i16, i16* %133, align 2, !dbg !4518
  %135 = zext i16 %134 to i32, !dbg !4518
  call void @send_bits(i32 noundef %127, i32 noundef %135), !dbg !4518
  %136 = load i32, i32* %11, align 4, !dbg !4519
  %137 = zext i32 %136 to i64, !dbg !4520
  %138 = getelementptr inbounds [30 x i32], [30 x i32]* @extra_dbits, i64 0, i64 %137, !dbg !4520
  %139 = load i32, i32* %138, align 4, !dbg !4520
  store i32 %139, i32* %12, align 4, !dbg !4521
  %140 = load i32, i32* %12, align 4, !dbg !4522
  %141 = icmp ne i32 %140, 0, !dbg !4524
  br i1 %141, label %142, label %151, !dbg !4525

142:                                              ; preds = %118
  %143 = load i32, i32* %11, align 4, !dbg !4526
  %144 = zext i32 %143 to i64, !dbg !4528
  %145 = getelementptr inbounds [30 x i32], [30 x i32]* @base_dist, i64 0, i64 %144, !dbg !4528
  %146 = load i32, i32* %145, align 4, !dbg !4528
  %147 = load i32, i32* %5, align 4, !dbg !4529
  %148 = sub i32 %147, %146, !dbg !4529
  store i32 %148, i32* %5, align 4, !dbg !4529
  %149 = load i32, i32* %5, align 4, !dbg !4530
  %150 = load i32, i32* %12, align 4, !dbg !4531
  call void @send_bits(i32 noundef %149, i32 noundef %150), !dbg !4532
  br label %151, !dbg !4533

151:                                              ; preds = %142, %118
  br label %152

152:                                              ; preds = %151, %37
  %153 = load i8, i8* %10, align 1, !dbg !4534
  %154 = zext i8 %153 to i32, !dbg !4534
  %155 = ashr i32 %154, 1, !dbg !4534
  %156 = trunc i32 %155 to i8, !dbg !4534
  store i8 %156, i8* %10, align 1, !dbg !4534
  br label %157, !dbg !4535

157:                                              ; preds = %152
  %158 = load i32, i32* %7, align 4, !dbg !4536
  %159 = load i32, i32* @last_lit, align 4, !dbg !4537
  %160 = icmp ult i32 %158, %159, !dbg !4538
  br i1 %160, label %16, label %161, !dbg !4535, !llvm.loop !4539

161:                                              ; preds = %157
  br label %162, !dbg !4535

162:                                              ; preds = %161, %2
  %163 = load %struct.ct_data*, %struct.ct_data** %3, align 8, !dbg !4541
  %164 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %163, i64 256, !dbg !4541
  %165 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %164, i32 0, i32 0, !dbg !4541
  %166 = bitcast %union.anon* %165 to i16*, !dbg !4541
  %167 = load i16, i16* %166, align 2, !dbg !4541
  %168 = zext i16 %167 to i32, !dbg !4541
  %169 = load %struct.ct_data*, %struct.ct_data** %3, align 8, !dbg !4541
  %170 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %169, i64 256, !dbg !4541
  %171 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %170, i32 0, i32 1, !dbg !4541
  %172 = bitcast %union.anon* %171 to i16*, !dbg !4541
  %173 = load i16, i16* %172, align 2, !dbg !4541
  %174 = zext i16 %173 to i32, !dbg !4541
  call void @send_bits(i32 noundef %168, i32 noundef %174), !dbg !4541
  ret void, !dbg !4542
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @send_all_trees(i32 noundef %0, i32 noundef %1, i32 noundef %2) #0 !dbg !4543 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4546, metadata !DIExpression()), !dbg !4547
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4548, metadata !DIExpression()), !dbg !4549
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !4550, metadata !DIExpression()), !dbg !4551
  call void @llvm.dbg.declare(metadata i32* %7, metadata !4552, metadata !DIExpression()), !dbg !4553
  %8 = load i32, i32* %4, align 4, !dbg !4554
  %9 = sub nsw i32 %8, 257, !dbg !4555
  call void @send_bits(i32 noundef %9, i32 noundef 5), !dbg !4556
  %10 = load i32, i32* %5, align 4, !dbg !4557
  %11 = sub nsw i32 %10, 1, !dbg !4558
  call void @send_bits(i32 noundef %11, i32 noundef 5), !dbg !4559
  %12 = load i32, i32* %6, align 4, !dbg !4560
  %13 = sub nsw i32 %12, 4, !dbg !4561
  call void @send_bits(i32 noundef %13, i32 noundef 4), !dbg !4562
  store i32 0, i32* %7, align 4, !dbg !4563
  br label %14, !dbg !4565

14:                                               ; preds = %29, %3
  %15 = load i32, i32* %7, align 4, !dbg !4566
  %16 = load i32, i32* %6, align 4, !dbg !4568
  %17 = icmp slt i32 %15, %16, !dbg !4569
  br i1 %17, label %18, label %32, !dbg !4570

18:                                               ; preds = %14
  %19 = load i32, i32* %7, align 4, !dbg !4571
  %20 = sext i32 %19 to i64, !dbg !4573
  %21 = getelementptr inbounds [19 x i8], [19 x i8]* @bl_order, i64 0, i64 %20, !dbg !4573
  %22 = load i8, i8* %21, align 1, !dbg !4573
  %23 = zext i8 %22 to i64, !dbg !4574
  %24 = getelementptr inbounds [39 x %struct.ct_data], [39 x %struct.ct_data]* @bl_tree, i64 0, i64 %23, !dbg !4574
  %25 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %24, i32 0, i32 1, !dbg !4575
  %26 = bitcast %union.anon* %25 to i16*, !dbg !4575
  %27 = load i16, i16* %26, align 2, !dbg !4575
  %28 = zext i16 %27 to i32, !dbg !4574
  call void @send_bits(i32 noundef %28, i32 noundef 3), !dbg !4576
  br label %29, !dbg !4577

29:                                               ; preds = %18
  %30 = load i32, i32* %7, align 4, !dbg !4578
  %31 = add nsw i32 %30, 1, !dbg !4578
  store i32 %31, i32* %7, align 4, !dbg !4578
  br label %14, !dbg !4579, !llvm.loop !4580

32:                                               ; preds = %14
  %33 = load i32, i32* %4, align 4, !dbg !4582
  %34 = sub nsw i32 %33, 1, !dbg !4583
  call void @send_tree(%struct.ct_data* noundef getelementptr inbounds ([573 x %struct.ct_data], [573 x %struct.ct_data]* @dyn_ltree, i64 0, i64 0), i32 noundef %34), !dbg !4584
  %35 = load i32, i32* %5, align 4, !dbg !4585
  %36 = sub nsw i32 %35, 1, !dbg !4586
  call void @send_tree(%struct.ct_data* noundef getelementptr inbounds ([61 x %struct.ct_data], [61 x %struct.ct_data]* @dyn_dtree, i64 0, i64 0), i32 noundef %36), !dbg !4587
  ret void, !dbg !4588
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @send_tree(%struct.ct_data* noundef %0, i32 noundef %1) #0 !dbg !4589 {
  %3 = alloca %struct.ct_data*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store %struct.ct_data* %0, %struct.ct_data** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.ct_data** %3, metadata !4590, metadata !DIExpression()), !dbg !4591
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4592, metadata !DIExpression()), !dbg !4593
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4594, metadata !DIExpression()), !dbg !4595
  call void @llvm.dbg.declare(metadata i32* %6, metadata !4596, metadata !DIExpression()), !dbg !4597
  store i32 -1, i32* %6, align 4, !dbg !4597
  call void @llvm.dbg.declare(metadata i32* %7, metadata !4598, metadata !DIExpression()), !dbg !4599
  call void @llvm.dbg.declare(metadata i32* %8, metadata !4600, metadata !DIExpression()), !dbg !4601
  %12 = load %struct.ct_data*, %struct.ct_data** %3, align 8, !dbg !4602
  %13 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %12, i64 0, !dbg !4602
  %14 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %13, i32 0, i32 1, !dbg !4603
  %15 = bitcast %union.anon* %14 to i16*, !dbg !4603
  %16 = load i16, i16* %15, align 2, !dbg !4603
  %17 = zext i16 %16 to i32, !dbg !4602
  store i32 %17, i32* %8, align 4, !dbg !4601
  call void @llvm.dbg.declare(metadata i32* %9, metadata !4604, metadata !DIExpression()), !dbg !4605
  store i32 0, i32* %9, align 4, !dbg !4605
  call void @llvm.dbg.declare(metadata i32* %10, metadata !4606, metadata !DIExpression()), !dbg !4607
  store i32 7, i32* %10, align 4, !dbg !4607
  call void @llvm.dbg.declare(metadata i32* %11, metadata !4608, metadata !DIExpression()), !dbg !4609
  store i32 4, i32* %11, align 4, !dbg !4609
  %18 = load i32, i32* %8, align 4, !dbg !4610
  %19 = icmp eq i32 %18, 0, !dbg !4612
  br i1 %19, label %20, label %21, !dbg !4613

20:                                               ; preds = %2
  store i32 138, i32* %10, align 4, !dbg !4614
  store i32 3, i32* %11, align 4, !dbg !4615
  br label %21, !dbg !4616

21:                                               ; preds = %20, %2
  store i32 0, i32* %5, align 4, !dbg !4617
  br label %22, !dbg !4619

22:                                               ; preds = %135, %21
  %23 = load i32, i32* %5, align 4, !dbg !4620
  %24 = load i32, i32* %4, align 4, !dbg !4622
  %25 = icmp sle i32 %23, %24, !dbg !4623
  br i1 %25, label %26, label %138, !dbg !4624

26:                                               ; preds = %22
  %27 = load i32, i32* %8, align 4, !dbg !4625
  store i32 %27, i32* %7, align 4, !dbg !4627
  %28 = load %struct.ct_data*, %struct.ct_data** %3, align 8, !dbg !4628
  %29 = load i32, i32* %5, align 4, !dbg !4629
  %30 = add nsw i32 %29, 1, !dbg !4630
  %31 = sext i32 %30 to i64, !dbg !4628
  %32 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %28, i64 %31, !dbg !4628
  %33 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %32, i32 0, i32 1, !dbg !4631
  %34 = bitcast %union.anon* %33 to i16*, !dbg !4631
  %35 = load i16, i16* %34, align 2, !dbg !4631
  %36 = zext i16 %35 to i32, !dbg !4628
  store i32 %36, i32* %8, align 4, !dbg !4632
  %37 = load i32, i32* %9, align 4, !dbg !4633
  %38 = add nsw i32 %37, 1, !dbg !4633
  store i32 %38, i32* %9, align 4, !dbg !4633
  %39 = load i32, i32* %10, align 4, !dbg !4635
  %40 = icmp slt i32 %38, %39, !dbg !4636
  br i1 %40, label %41, label %46, !dbg !4637

41:                                               ; preds = %26
  %42 = load i32, i32* %7, align 4, !dbg !4638
  %43 = load i32, i32* %8, align 4, !dbg !4639
  %44 = icmp eq i32 %42, %43, !dbg !4640
  br i1 %44, label %45, label %46, !dbg !4641

45:                                               ; preds = %41
  br label %135, !dbg !4642

46:                                               ; preds = %41, %26
  %47 = load i32, i32* %9, align 4, !dbg !4644
  %48 = load i32, i32* %11, align 4, !dbg !4646
  %49 = icmp slt i32 %47, %48, !dbg !4647
  br i1 %49, label %50, label %71, !dbg !4648

50:                                               ; preds = %46
  br label %51, !dbg !4649

51:                                               ; preds = %66, %50
  %52 = load i32, i32* %7, align 4, !dbg !4651
  %53 = sext i32 %52 to i64, !dbg !4651
  %54 = getelementptr inbounds [39 x %struct.ct_data], [39 x %struct.ct_data]* @bl_tree, i64 0, i64 %53, !dbg !4651
  %55 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %54, i32 0, i32 0, !dbg !4651
  %56 = bitcast %union.anon* %55 to i16*, !dbg !4651
  %57 = load i16, i16* %56, align 4, !dbg !4651
  %58 = zext i16 %57 to i32, !dbg !4651
  %59 = load i32, i32* %7, align 4, !dbg !4651
  %60 = sext i32 %59 to i64, !dbg !4651
  %61 = getelementptr inbounds [39 x %struct.ct_data], [39 x %struct.ct_data]* @bl_tree, i64 0, i64 %60, !dbg !4651
  %62 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %61, i32 0, i32 1, !dbg !4651
  %63 = bitcast %union.anon* %62 to i16*, !dbg !4651
  %64 = load i16, i16* %63, align 2, !dbg !4651
  %65 = zext i16 %64 to i32, !dbg !4651
  call void @send_bits(i32 noundef %58, i32 noundef %65), !dbg !4651
  br label %66, !dbg !4653

66:                                               ; preds = %51
  %67 = load i32, i32* %9, align 4, !dbg !4654
  %68 = add nsw i32 %67, -1, !dbg !4654
  store i32 %68, i32* %9, align 4, !dbg !4654
  %69 = icmp ne i32 %68, 0, !dbg !4655
  br i1 %69, label %51, label %70, !dbg !4653, !llvm.loop !4656

70:                                               ; preds = %66
  br label %121, !dbg !4658

71:                                               ; preds = %46
  %72 = load i32, i32* %7, align 4, !dbg !4659
  %73 = icmp ne i32 %72, 0, !dbg !4661
  br i1 %73, label %74, label %102, !dbg !4662

74:                                               ; preds = %71
  %75 = load i32, i32* %7, align 4, !dbg !4663
  %76 = load i32, i32* %6, align 4, !dbg !4666
  %77 = icmp ne i32 %75, %76, !dbg !4667
  br i1 %77, label %78, label %95, !dbg !4668

78:                                               ; preds = %74
  %79 = load i32, i32* %7, align 4, !dbg !4669
  %80 = sext i32 %79 to i64, !dbg !4669
  %81 = getelementptr inbounds [39 x %struct.ct_data], [39 x %struct.ct_data]* @bl_tree, i64 0, i64 %80, !dbg !4669
  %82 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %81, i32 0, i32 0, !dbg !4669
  %83 = bitcast %union.anon* %82 to i16*, !dbg !4669
  %84 = load i16, i16* %83, align 4, !dbg !4669
  %85 = zext i16 %84 to i32, !dbg !4669
  %86 = load i32, i32* %7, align 4, !dbg !4669
  %87 = sext i32 %86 to i64, !dbg !4669
  %88 = getelementptr inbounds [39 x %struct.ct_data], [39 x %struct.ct_data]* @bl_tree, i64 0, i64 %87, !dbg !4669
  %89 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %88, i32 0, i32 1, !dbg !4669
  %90 = bitcast %union.anon* %89 to i16*, !dbg !4669
  %91 = load i16, i16* %90, align 2, !dbg !4669
  %92 = zext i16 %91 to i32, !dbg !4669
  call void @send_bits(i32 noundef %85, i32 noundef %92), !dbg !4669
  %93 = load i32, i32* %9, align 4, !dbg !4671
  %94 = add nsw i32 %93, -1, !dbg !4671
  store i32 %94, i32* %9, align 4, !dbg !4671
  br label %95, !dbg !4672

95:                                               ; preds = %78, %74
  %96 = load i16, i16* getelementptr inbounds ([39 x %struct.ct_data], [39 x %struct.ct_data]* @bl_tree, i64 0, i64 16, i32 0, i32 0), align 16, !dbg !4673
  %97 = zext i16 %96 to i32, !dbg !4673
  %98 = load i16, i16* getelementptr inbounds ([39 x %struct.ct_data], [39 x %struct.ct_data]* @bl_tree, i64 0, i64 16, i32 1, i32 0), align 2, !dbg !4673
  %99 = zext i16 %98 to i32, !dbg !4673
  call void @send_bits(i32 noundef %97, i32 noundef %99), !dbg !4673
  %100 = load i32, i32* %9, align 4, !dbg !4674
  %101 = sub nsw i32 %100, 3, !dbg !4675
  call void @send_bits(i32 noundef %101, i32 noundef 2), !dbg !4676
  br label %120, !dbg !4677

102:                                              ; preds = %71
  %103 = load i32, i32* %9, align 4, !dbg !4678
  %104 = icmp sle i32 %103, 10, !dbg !4680
  br i1 %104, label %105, label %112, !dbg !4681

105:                                              ; preds = %102
  %106 = load i16, i16* getelementptr inbounds ([39 x %struct.ct_data], [39 x %struct.ct_data]* @bl_tree, i64 0, i64 17, i32 0, i32 0), align 4, !dbg !4682
  %107 = zext i16 %106 to i32, !dbg !4682
  %108 = load i16, i16* getelementptr inbounds ([39 x %struct.ct_data], [39 x %struct.ct_data]* @bl_tree, i64 0, i64 17, i32 1, i32 0), align 2, !dbg !4682
  %109 = zext i16 %108 to i32, !dbg !4682
  call void @send_bits(i32 noundef %107, i32 noundef %109), !dbg !4682
  %110 = load i32, i32* %9, align 4, !dbg !4684
  %111 = sub nsw i32 %110, 3, !dbg !4685
  call void @send_bits(i32 noundef %111, i32 noundef 3), !dbg !4686
  br label %119, !dbg !4687

112:                                              ; preds = %102
  %113 = load i16, i16* getelementptr inbounds ([39 x %struct.ct_data], [39 x %struct.ct_data]* @bl_tree, i64 0, i64 18, i32 0, i32 0), align 8, !dbg !4688
  %114 = zext i16 %113 to i32, !dbg !4688
  %115 = load i16, i16* getelementptr inbounds ([39 x %struct.ct_data], [39 x %struct.ct_data]* @bl_tree, i64 0, i64 18, i32 1, i32 0), align 2, !dbg !4688
  %116 = zext i16 %115 to i32, !dbg !4688
  call void @send_bits(i32 noundef %114, i32 noundef %116), !dbg !4688
  %117 = load i32, i32* %9, align 4, !dbg !4690
  %118 = sub nsw i32 %117, 11, !dbg !4691
  call void @send_bits(i32 noundef %118, i32 noundef 7), !dbg !4692
  br label %119

119:                                              ; preds = %112, %105
  br label %120

120:                                              ; preds = %119, %95
  br label %121

121:                                              ; preds = %120, %70
  br label %122

122:                                              ; preds = %121
  store i32 0, i32* %9, align 4, !dbg !4693
  %123 = load i32, i32* %7, align 4, !dbg !4694
  store i32 %123, i32* %6, align 4, !dbg !4695
  %124 = load i32, i32* %8, align 4, !dbg !4696
  %125 = icmp eq i32 %124, 0, !dbg !4698
  br i1 %125, label %126, label %127, !dbg !4699

126:                                              ; preds = %122
  store i32 138, i32* %10, align 4, !dbg !4700
  store i32 3, i32* %11, align 4, !dbg !4702
  br label %134, !dbg !4703

127:                                              ; preds = %122
  %128 = load i32, i32* %7, align 4, !dbg !4704
  %129 = load i32, i32* %8, align 4, !dbg !4706
  %130 = icmp eq i32 %128, %129, !dbg !4707
  br i1 %130, label %131, label %132, !dbg !4708

131:                                              ; preds = %127
  store i32 6, i32* %10, align 4, !dbg !4709
  store i32 3, i32* %11, align 4, !dbg !4711
  br label %133, !dbg !4712

132:                                              ; preds = %127
  store i32 7, i32* %10, align 4, !dbg !4713
  store i32 4, i32* %11, align 4, !dbg !4715
  br label %133

133:                                              ; preds = %132, %131
  br label %134

134:                                              ; preds = %133, %126
  br label %135, !dbg !4716

135:                                              ; preds = %134, %45
  %136 = load i32, i32* %5, align 4, !dbg !4717
  %137 = add nsw i32 %136, 1, !dbg !4717
  store i32 %137, i32* %5, align 4, !dbg !4717
  br label %22, !dbg !4718, !llvm.loop !4719

138:                                              ; preds = %22
  ret void, !dbg !4721
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @scan_tree(%struct.ct_data* noundef %0, i32 noundef %1) #0 !dbg !4722 {
  %3 = alloca %struct.ct_data*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store %struct.ct_data* %0, %struct.ct_data** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.ct_data** %3, metadata !4723, metadata !DIExpression()), !dbg !4724
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4725, metadata !DIExpression()), !dbg !4726
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4727, metadata !DIExpression()), !dbg !4728
  call void @llvm.dbg.declare(metadata i32* %6, metadata !4729, metadata !DIExpression()), !dbg !4730
  store i32 -1, i32* %6, align 4, !dbg !4730
  call void @llvm.dbg.declare(metadata i32* %7, metadata !4731, metadata !DIExpression()), !dbg !4732
  call void @llvm.dbg.declare(metadata i32* %8, metadata !4733, metadata !DIExpression()), !dbg !4734
  %12 = load %struct.ct_data*, %struct.ct_data** %3, align 8, !dbg !4735
  %13 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %12, i64 0, !dbg !4735
  %14 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %13, i32 0, i32 1, !dbg !4736
  %15 = bitcast %union.anon* %14 to i16*, !dbg !4736
  %16 = load i16, i16* %15, align 2, !dbg !4736
  %17 = zext i16 %16 to i32, !dbg !4735
  store i32 %17, i32* %8, align 4, !dbg !4734
  call void @llvm.dbg.declare(metadata i32* %9, metadata !4737, metadata !DIExpression()), !dbg !4738
  store i32 0, i32* %9, align 4, !dbg !4738
  call void @llvm.dbg.declare(metadata i32* %10, metadata !4739, metadata !DIExpression()), !dbg !4740
  store i32 7, i32* %10, align 4, !dbg !4740
  call void @llvm.dbg.declare(metadata i32* %11, metadata !4741, metadata !DIExpression()), !dbg !4742
  store i32 4, i32* %11, align 4, !dbg !4742
  %18 = load i32, i32* %8, align 4, !dbg !4743
  %19 = icmp eq i32 %18, 0, !dbg !4745
  br i1 %19, label %20, label %21, !dbg !4746

20:                                               ; preds = %2
  store i32 138, i32* %10, align 4, !dbg !4747
  store i32 3, i32* %11, align 4, !dbg !4748
  br label %21, !dbg !4749

21:                                               ; preds = %20, %2
  %22 = load %struct.ct_data*, %struct.ct_data** %3, align 8, !dbg !4750
  %23 = load i32, i32* %4, align 4, !dbg !4751
  %24 = add nsw i32 %23, 1, !dbg !4752
  %25 = sext i32 %24 to i64, !dbg !4750
  %26 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %22, i64 %25, !dbg !4750
  %27 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %26, i32 0, i32 1, !dbg !4753
  %28 = bitcast %union.anon* %27 to i16*, !dbg !4753
  store i16 -1, i16* %28, align 2, !dbg !4754
  store i32 0, i32* %5, align 4, !dbg !4755
  br label %29, !dbg !4757

29:                                               ; preds = %111, %21
  %30 = load i32, i32* %5, align 4, !dbg !4758
  %31 = load i32, i32* %4, align 4, !dbg !4760
  %32 = icmp sle i32 %30, %31, !dbg !4761
  br i1 %32, label %33, label %114, !dbg !4762

33:                                               ; preds = %29
  %34 = load i32, i32* %8, align 4, !dbg !4763
  store i32 %34, i32* %7, align 4, !dbg !4765
  %35 = load %struct.ct_data*, %struct.ct_data** %3, align 8, !dbg !4766
  %36 = load i32, i32* %5, align 4, !dbg !4767
  %37 = add nsw i32 %36, 1, !dbg !4768
  %38 = sext i32 %37 to i64, !dbg !4766
  %39 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %35, i64 %38, !dbg !4766
  %40 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %39, i32 0, i32 1, !dbg !4769
  %41 = bitcast %union.anon* %40 to i16*, !dbg !4769
  %42 = load i16, i16* %41, align 2, !dbg !4769
  %43 = zext i16 %42 to i32, !dbg !4766
  store i32 %43, i32* %8, align 4, !dbg !4770
  %44 = load i32, i32* %9, align 4, !dbg !4771
  %45 = add nsw i32 %44, 1, !dbg !4771
  store i32 %45, i32* %9, align 4, !dbg !4771
  %46 = load i32, i32* %10, align 4, !dbg !4773
  %47 = icmp slt i32 %45, %46, !dbg !4774
  br i1 %47, label %48, label %53, !dbg !4775

48:                                               ; preds = %33
  %49 = load i32, i32* %7, align 4, !dbg !4776
  %50 = load i32, i32* %8, align 4, !dbg !4777
  %51 = icmp eq i32 %49, %50, !dbg !4778
  br i1 %51, label %52, label %53, !dbg !4779

52:                                               ; preds = %48
  br label %111, !dbg !4780

53:                                               ; preds = %48, %33
  %54 = load i32, i32* %9, align 4, !dbg !4782
  %55 = load i32, i32* %11, align 4, !dbg !4784
  %56 = icmp slt i32 %54, %55, !dbg !4785
  br i1 %56, label %57, label %68, !dbg !4786

57:                                               ; preds = %53
  %58 = load i32, i32* %9, align 4, !dbg !4787
  %59 = load i32, i32* %7, align 4, !dbg !4789
  %60 = sext i32 %59 to i64, !dbg !4790
  %61 = getelementptr inbounds [39 x %struct.ct_data], [39 x %struct.ct_data]* @bl_tree, i64 0, i64 %60, !dbg !4790
  %62 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %61, i32 0, i32 0, !dbg !4791
  %63 = bitcast %union.anon* %62 to i16*, !dbg !4791
  %64 = load i16, i16* %63, align 4, !dbg !4792
  %65 = zext i16 %64 to i32, !dbg !4792
  %66 = add nsw i32 %65, %58, !dbg !4792
  %67 = trunc i32 %66 to i16, !dbg !4792
  store i16 %67, i16* %63, align 4, !dbg !4792
  br label %97, !dbg !4793

68:                                               ; preds = %53
  %69 = load i32, i32* %7, align 4, !dbg !4794
  %70 = icmp ne i32 %69, 0, !dbg !4796
  br i1 %70, label %71, label %86, !dbg !4797

71:                                               ; preds = %68
  %72 = load i32, i32* %7, align 4, !dbg !4798
  %73 = load i32, i32* %6, align 4, !dbg !4801
  %74 = icmp ne i32 %72, %73, !dbg !4802
  br i1 %74, label %75, label %83, !dbg !4803

75:                                               ; preds = %71
  %76 = load i32, i32* %7, align 4, !dbg !4804
  %77 = sext i32 %76 to i64, !dbg !4805
  %78 = getelementptr inbounds [39 x %struct.ct_data], [39 x %struct.ct_data]* @bl_tree, i64 0, i64 %77, !dbg !4805
  %79 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %78, i32 0, i32 0, !dbg !4806
  %80 = bitcast %union.anon* %79 to i16*, !dbg !4806
  %81 = load i16, i16* %80, align 4, !dbg !4807
  %82 = add i16 %81, 1, !dbg !4807
  store i16 %82, i16* %80, align 4, !dbg !4807
  br label %83, !dbg !4805

83:                                               ; preds = %75, %71
  %84 = load i16, i16* getelementptr inbounds ([39 x %struct.ct_data], [39 x %struct.ct_data]* @bl_tree, i64 0, i64 16, i32 0, i32 0), align 16, !dbg !4808
  %85 = add i16 %84, 1, !dbg !4808
  store i16 %85, i16* getelementptr inbounds ([39 x %struct.ct_data], [39 x %struct.ct_data]* @bl_tree, i64 0, i64 16, i32 0, i32 0), align 16, !dbg !4808
  br label %96, !dbg !4809

86:                                               ; preds = %68
  %87 = load i32, i32* %9, align 4, !dbg !4810
  %88 = icmp sle i32 %87, 10, !dbg !4812
  br i1 %88, label %89, label %92, !dbg !4813

89:                                               ; preds = %86
  %90 = load i16, i16* getelementptr inbounds ([39 x %struct.ct_data], [39 x %struct.ct_data]* @bl_tree, i64 0, i64 17, i32 0, i32 0), align 4, !dbg !4814
  %91 = add i16 %90, 1, !dbg !4814
  store i16 %91, i16* getelementptr inbounds ([39 x %struct.ct_data], [39 x %struct.ct_data]* @bl_tree, i64 0, i64 17, i32 0, i32 0), align 4, !dbg !4814
  br label %95, !dbg !4816

92:                                               ; preds = %86
  %93 = load i16, i16* getelementptr inbounds ([39 x %struct.ct_data], [39 x %struct.ct_data]* @bl_tree, i64 0, i64 18, i32 0, i32 0), align 8, !dbg !4817
  %94 = add i16 %93, 1, !dbg !4817
  store i16 %94, i16* getelementptr inbounds ([39 x %struct.ct_data], [39 x %struct.ct_data]* @bl_tree, i64 0, i64 18, i32 0, i32 0), align 8, !dbg !4817
  br label %95

95:                                               ; preds = %92, %89
  br label %96

96:                                               ; preds = %95, %83
  br label %97

97:                                               ; preds = %96, %57
  br label %98

98:                                               ; preds = %97
  store i32 0, i32* %9, align 4, !dbg !4819
  %99 = load i32, i32* %7, align 4, !dbg !4820
  store i32 %99, i32* %6, align 4, !dbg !4821
  %100 = load i32, i32* %8, align 4, !dbg !4822
  %101 = icmp eq i32 %100, 0, !dbg !4824
  br i1 %101, label %102, label %103, !dbg !4825

102:                                              ; preds = %98
  store i32 138, i32* %10, align 4, !dbg !4826
  store i32 3, i32* %11, align 4, !dbg !4828
  br label %110, !dbg !4829

103:                                              ; preds = %98
  %104 = load i32, i32* %7, align 4, !dbg !4830
  %105 = load i32, i32* %8, align 4, !dbg !4832
  %106 = icmp eq i32 %104, %105, !dbg !4833
  br i1 %106, label %107, label %108, !dbg !4834

107:                                              ; preds = %103
  store i32 6, i32* %10, align 4, !dbg !4835
  store i32 3, i32* %11, align 4, !dbg !4837
  br label %109, !dbg !4838

108:                                              ; preds = %103
  store i32 7, i32* %10, align 4, !dbg !4839
  store i32 4, i32* %11, align 4, !dbg !4841
  br label %109

109:                                              ; preds = %108, %107
  br label %110

110:                                              ; preds = %109, %102
  br label %111, !dbg !4842

111:                                              ; preds = %110, %52
  %112 = load i32, i32* %5, align 4, !dbg !4843
  %113 = add nsw i32 %112, 1, !dbg !4843
  store i32 %113, i32* %5, align 4, !dbg !4843
  br label %29, !dbg !4844, !llvm.loop !4845

114:                                              ; preds = %29
  ret void, !dbg !4847
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @pqdownheap(%struct.ct_data* noundef %0, i32 noundef %1) #0 !dbg !4848 {
  %3 = alloca %struct.ct_data*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.ct_data* %0, %struct.ct_data** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.ct_data** %3, metadata !4849, metadata !DIExpression()), !dbg !4850
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4851, metadata !DIExpression()), !dbg !4852
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4853, metadata !DIExpression()), !dbg !4854
  %7 = load i32, i32* %4, align 4, !dbg !4855
  %8 = sext i32 %7 to i64, !dbg !4856
  %9 = getelementptr inbounds [573 x i32], [573 x i32]* @heap, i64 0, i64 %8, !dbg !4856
  %10 = load i32, i32* %9, align 4, !dbg !4856
  store i32 %10, i32* %5, align 4, !dbg !4854
  call void @llvm.dbg.declare(metadata i32* %6, metadata !4857, metadata !DIExpression()), !dbg !4858
  %11 = load i32, i32* %4, align 4, !dbg !4859
  %12 = shl i32 %11, 1, !dbg !4860
  store i32 %12, i32* %6, align 4, !dbg !4858
  br label %13, !dbg !4861

13:                                               ; preds = %151, %2
  %14 = load i32, i32* %6, align 4, !dbg !4862
  %15 = load i32, i32* @heap_len, align 4, !dbg !4863
  %16 = icmp sle i32 %14, %15, !dbg !4864
  br i1 %16, label %17, label %162, !dbg !4861

17:                                               ; preds = %13
  %18 = load i32, i32* %6, align 4, !dbg !4865
  %19 = load i32, i32* @heap_len, align 4, !dbg !4868
  %20 = icmp slt i32 %18, %19, !dbg !4869
  br i1 %20, label %21, label %93, !dbg !4870

21:                                               ; preds = %17
  %22 = load %struct.ct_data*, %struct.ct_data** %3, align 8, !dbg !4871
  %23 = load i32, i32* %6, align 4, !dbg !4871
  %24 = add nsw i32 %23, 1, !dbg !4871
  %25 = sext i32 %24 to i64, !dbg !4871
  %26 = getelementptr inbounds [573 x i32], [573 x i32]* @heap, i64 0, i64 %25, !dbg !4871
  %27 = load i32, i32* %26, align 4, !dbg !4871
  %28 = sext i32 %27 to i64, !dbg !4871
  %29 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %22, i64 %28, !dbg !4871
  %30 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %29, i32 0, i32 0, !dbg !4871
  %31 = bitcast %union.anon* %30 to i16*, !dbg !4871
  %32 = load i16, i16* %31, align 2, !dbg !4871
  %33 = zext i16 %32 to i32, !dbg !4871
  %34 = load %struct.ct_data*, %struct.ct_data** %3, align 8, !dbg !4871
  %35 = load i32, i32* %6, align 4, !dbg !4871
  %36 = sext i32 %35 to i64, !dbg !4871
  %37 = getelementptr inbounds [573 x i32], [573 x i32]* @heap, i64 0, i64 %36, !dbg !4871
  %38 = load i32, i32* %37, align 4, !dbg !4871
  %39 = sext i32 %38 to i64, !dbg !4871
  %40 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %34, i64 %39, !dbg !4871
  %41 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %40, i32 0, i32 0, !dbg !4871
  %42 = bitcast %union.anon* %41 to i16*, !dbg !4871
  %43 = load i16, i16* %42, align 2, !dbg !4871
  %44 = zext i16 %43 to i32, !dbg !4871
  %45 = icmp slt i32 %33, %44, !dbg !4871
  br i1 %45, label %90, label %46, !dbg !4871

46:                                               ; preds = %21
  %47 = load %struct.ct_data*, %struct.ct_data** %3, align 8, !dbg !4871
  %48 = load i32, i32* %6, align 4, !dbg !4871
  %49 = add nsw i32 %48, 1, !dbg !4871
  %50 = sext i32 %49 to i64, !dbg !4871
  %51 = getelementptr inbounds [573 x i32], [573 x i32]* @heap, i64 0, i64 %50, !dbg !4871
  %52 = load i32, i32* %51, align 4, !dbg !4871
  %53 = sext i32 %52 to i64, !dbg !4871
  %54 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %47, i64 %53, !dbg !4871
  %55 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %54, i32 0, i32 0, !dbg !4871
  %56 = bitcast %union.anon* %55 to i16*, !dbg !4871
  %57 = load i16, i16* %56, align 2, !dbg !4871
  %58 = zext i16 %57 to i32, !dbg !4871
  %59 = load %struct.ct_data*, %struct.ct_data** %3, align 8, !dbg !4871
  %60 = load i32, i32* %6, align 4, !dbg !4871
  %61 = sext i32 %60 to i64, !dbg !4871
  %62 = getelementptr inbounds [573 x i32], [573 x i32]* @heap, i64 0, i64 %61, !dbg !4871
  %63 = load i32, i32* %62, align 4, !dbg !4871
  %64 = sext i32 %63 to i64, !dbg !4871
  %65 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %59, i64 %64, !dbg !4871
  %66 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %65, i32 0, i32 0, !dbg !4871
  %67 = bitcast %union.anon* %66 to i16*, !dbg !4871
  %68 = load i16, i16* %67, align 2, !dbg !4871
  %69 = zext i16 %68 to i32, !dbg !4871
  %70 = icmp eq i32 %58, %69, !dbg !4871
  br i1 %70, label %71, label %93, !dbg !4871

71:                                               ; preds = %46
  %72 = load i32, i32* %6, align 4, !dbg !4871
  %73 = add nsw i32 %72, 1, !dbg !4871
  %74 = sext i32 %73 to i64, !dbg !4871
  %75 = getelementptr inbounds [573 x i32], [573 x i32]* @heap, i64 0, i64 %74, !dbg !4871
  %76 = load i32, i32* %75, align 4, !dbg !4871
  %77 = sext i32 %76 to i64, !dbg !4871
  %78 = getelementptr inbounds [573 x i8], [573 x i8]* @depth, i64 0, i64 %77, !dbg !4871
  %79 = load i8, i8* %78, align 1, !dbg !4871
  %80 = zext i8 %79 to i32, !dbg !4871
  %81 = load i32, i32* %6, align 4, !dbg !4871
  %82 = sext i32 %81 to i64, !dbg !4871
  %83 = getelementptr inbounds [573 x i32], [573 x i32]* @heap, i64 0, i64 %82, !dbg !4871
  %84 = load i32, i32* %83, align 4, !dbg !4871
  %85 = sext i32 %84 to i64, !dbg !4871
  %86 = getelementptr inbounds [573 x i8], [573 x i8]* @depth, i64 0, i64 %85, !dbg !4871
  %87 = load i8, i8* %86, align 1, !dbg !4871
  %88 = zext i8 %87 to i32, !dbg !4871
  %89 = icmp sle i32 %80, %88, !dbg !4871
  br i1 %89, label %90, label %93, !dbg !4872

90:                                               ; preds = %71, %21
  %91 = load i32, i32* %6, align 4, !dbg !4873
  %92 = add nsw i32 %91, 1, !dbg !4873
  store i32 %92, i32* %6, align 4, !dbg !4873
  br label %93, !dbg !4874

93:                                               ; preds = %90, %71, %46, %17
  %94 = load %struct.ct_data*, %struct.ct_data** %3, align 8, !dbg !4875
  %95 = load i32, i32* %5, align 4, !dbg !4875
  %96 = sext i32 %95 to i64, !dbg !4875
  %97 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %94, i64 %96, !dbg !4875
  %98 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %97, i32 0, i32 0, !dbg !4875
  %99 = bitcast %union.anon* %98 to i16*, !dbg !4875
  %100 = load i16, i16* %99, align 2, !dbg !4875
  %101 = zext i16 %100 to i32, !dbg !4875
  %102 = load %struct.ct_data*, %struct.ct_data** %3, align 8, !dbg !4875
  %103 = load i32, i32* %6, align 4, !dbg !4875
  %104 = sext i32 %103 to i64, !dbg !4875
  %105 = getelementptr inbounds [573 x i32], [573 x i32]* @heap, i64 0, i64 %104, !dbg !4875
  %106 = load i32, i32* %105, align 4, !dbg !4875
  %107 = sext i32 %106 to i64, !dbg !4875
  %108 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %102, i64 %107, !dbg !4875
  %109 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %108, i32 0, i32 0, !dbg !4875
  %110 = bitcast %union.anon* %109 to i16*, !dbg !4875
  %111 = load i16, i16* %110, align 2, !dbg !4875
  %112 = zext i16 %111 to i32, !dbg !4875
  %113 = icmp slt i32 %101, %112, !dbg !4875
  br i1 %113, label %150, label %114, !dbg !4875

114:                                              ; preds = %93
  %115 = load %struct.ct_data*, %struct.ct_data** %3, align 8, !dbg !4875
  %116 = load i32, i32* %5, align 4, !dbg !4875
  %117 = sext i32 %116 to i64, !dbg !4875
  %118 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %115, i64 %117, !dbg !4875
  %119 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %118, i32 0, i32 0, !dbg !4875
  %120 = bitcast %union.anon* %119 to i16*, !dbg !4875
  %121 = load i16, i16* %120, align 2, !dbg !4875
  %122 = zext i16 %121 to i32, !dbg !4875
  %123 = load %struct.ct_data*, %struct.ct_data** %3, align 8, !dbg !4875
  %124 = load i32, i32* %6, align 4, !dbg !4875
  %125 = sext i32 %124 to i64, !dbg !4875
  %126 = getelementptr inbounds [573 x i32], [573 x i32]* @heap, i64 0, i64 %125, !dbg !4875
  %127 = load i32, i32* %126, align 4, !dbg !4875
  %128 = sext i32 %127 to i64, !dbg !4875
  %129 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %123, i64 %128, !dbg !4875
  %130 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %129, i32 0, i32 0, !dbg !4875
  %131 = bitcast %union.anon* %130 to i16*, !dbg !4875
  %132 = load i16, i16* %131, align 2, !dbg !4875
  %133 = zext i16 %132 to i32, !dbg !4875
  %134 = icmp eq i32 %122, %133, !dbg !4875
  br i1 %134, label %135, label %151, !dbg !4875

135:                                              ; preds = %114
  %136 = load i32, i32* %5, align 4, !dbg !4875
  %137 = sext i32 %136 to i64, !dbg !4875
  %138 = getelementptr inbounds [573 x i8], [573 x i8]* @depth, i64 0, i64 %137, !dbg !4875
  %139 = load i8, i8* %138, align 1, !dbg !4875
  %140 = zext i8 %139 to i32, !dbg !4875
  %141 = load i32, i32* %6, align 4, !dbg !4875
  %142 = sext i32 %141 to i64, !dbg !4875
  %143 = getelementptr inbounds [573 x i32], [573 x i32]* @heap, i64 0, i64 %142, !dbg !4875
  %144 = load i32, i32* %143, align 4, !dbg !4875
  %145 = sext i32 %144 to i64, !dbg !4875
  %146 = getelementptr inbounds [573 x i8], [573 x i8]* @depth, i64 0, i64 %145, !dbg !4875
  %147 = load i8, i8* %146, align 1, !dbg !4875
  %148 = zext i8 %147 to i32, !dbg !4875
  %149 = icmp sle i32 %140, %148, !dbg !4875
  br i1 %149, label %150, label %151, !dbg !4877

150:                                              ; preds = %135, %93
  br label %162, !dbg !4878

151:                                              ; preds = %135, %114
  %152 = load i32, i32* %6, align 4, !dbg !4879
  %153 = sext i32 %152 to i64, !dbg !4880
  %154 = getelementptr inbounds [573 x i32], [573 x i32]* @heap, i64 0, i64 %153, !dbg !4880
  %155 = load i32, i32* %154, align 4, !dbg !4880
  %156 = load i32, i32* %4, align 4, !dbg !4881
  %157 = sext i32 %156 to i64, !dbg !4882
  %158 = getelementptr inbounds [573 x i32], [573 x i32]* @heap, i64 0, i64 %157, !dbg !4882
  store i32 %155, i32* %158, align 4, !dbg !4883
  %159 = load i32, i32* %6, align 4, !dbg !4884
  store i32 %159, i32* %4, align 4, !dbg !4885
  %160 = load i32, i32* %6, align 4, !dbg !4886
  %161 = shl i32 %160, 1, !dbg !4886
  store i32 %161, i32* %6, align 4, !dbg !4886
  br label %13, !dbg !4861, !llvm.loop !4887

162:                                              ; preds = %150, %13
  %163 = load i32, i32* %5, align 4, !dbg !4889
  %164 = load i32, i32* %4, align 4, !dbg !4890
  %165 = sext i32 %164 to i64, !dbg !4891
  %166 = getelementptr inbounds [573 x i32], [573 x i32]* @heap, i64 0, i64 %165, !dbg !4891
  store i32 %163, i32* %166, align 4, !dbg !4892
  ret void, !dbg !4893
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @gen_bitlen(%struct.tree_desc* noundef %0) #0 !dbg !4894 {
  %2 = alloca %struct.tree_desc*, align 8
  %3 = alloca %struct.ct_data*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.ct_data*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i16, align 2
  %15 = alloca i32, align 4
  store %struct.tree_desc* %0, %struct.tree_desc** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.tree_desc** %2, metadata !4895, metadata !DIExpression()), !dbg !4896
  call void @llvm.dbg.declare(metadata %struct.ct_data** %3, metadata !4897, metadata !DIExpression()), !dbg !4898
  %16 = load %struct.tree_desc*, %struct.tree_desc** %2, align 8, !dbg !4899
  %17 = getelementptr inbounds %struct.tree_desc, %struct.tree_desc* %16, i32 0, i32 0, !dbg !4900
  %18 = load %struct.ct_data*, %struct.ct_data** %17, align 8, !dbg !4900
  store %struct.ct_data* %18, %struct.ct_data** %3, align 8, !dbg !4898
  call void @llvm.dbg.declare(metadata i32** %4, metadata !4901, metadata !DIExpression()), !dbg !4902
  %19 = load %struct.tree_desc*, %struct.tree_desc** %2, align 8, !dbg !4903
  %20 = getelementptr inbounds %struct.tree_desc, %struct.tree_desc* %19, i32 0, i32 2, !dbg !4904
  %21 = load i32*, i32** %20, align 8, !dbg !4904
  store i32* %21, i32** %4, align 8, !dbg !4902
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4905, metadata !DIExpression()), !dbg !4906
  %22 = load %struct.tree_desc*, %struct.tree_desc** %2, align 8, !dbg !4907
  %23 = getelementptr inbounds %struct.tree_desc, %struct.tree_desc* %22, i32 0, i32 3, !dbg !4908
  %24 = load i32, i32* %23, align 8, !dbg !4908
  store i32 %24, i32* %5, align 4, !dbg !4906
  call void @llvm.dbg.declare(metadata i32* %6, metadata !4909, metadata !DIExpression()), !dbg !4910
  %25 = load %struct.tree_desc*, %struct.tree_desc** %2, align 8, !dbg !4911
  %26 = getelementptr inbounds %struct.tree_desc, %struct.tree_desc* %25, i32 0, i32 6, !dbg !4912
  %27 = load i32, i32* %26, align 4, !dbg !4912
  store i32 %27, i32* %6, align 4, !dbg !4910
  call void @llvm.dbg.declare(metadata i32* %7, metadata !4913, metadata !DIExpression()), !dbg !4914
  %28 = load %struct.tree_desc*, %struct.tree_desc** %2, align 8, !dbg !4915
  %29 = getelementptr inbounds %struct.tree_desc, %struct.tree_desc* %28, i32 0, i32 5, !dbg !4916
  %30 = load i32, i32* %29, align 8, !dbg !4916
  store i32 %30, i32* %7, align 4, !dbg !4914
  call void @llvm.dbg.declare(metadata %struct.ct_data** %8, metadata !4917, metadata !DIExpression()), !dbg !4918
  %31 = load %struct.tree_desc*, %struct.tree_desc** %2, align 8, !dbg !4919
  %32 = getelementptr inbounds %struct.tree_desc, %struct.tree_desc* %31, i32 0, i32 1, !dbg !4920
  %33 = load %struct.ct_data*, %struct.ct_data** %32, align 8, !dbg !4920
  store %struct.ct_data* %33, %struct.ct_data** %8, align 8, !dbg !4918
  call void @llvm.dbg.declare(metadata i32* %9, metadata !4921, metadata !DIExpression()), !dbg !4922
  call void @llvm.dbg.declare(metadata i32* %10, metadata !4923, metadata !DIExpression()), !dbg !4924
  call void @llvm.dbg.declare(metadata i32* %11, metadata !4925, metadata !DIExpression()), !dbg !4926
  call void @llvm.dbg.declare(metadata i32* %12, metadata !4927, metadata !DIExpression()), !dbg !4928
  call void @llvm.dbg.declare(metadata i32* %13, metadata !4929, metadata !DIExpression()), !dbg !4930
  call void @llvm.dbg.declare(metadata i16* %14, metadata !4931, metadata !DIExpression()), !dbg !4932
  call void @llvm.dbg.declare(metadata i32* %15, metadata !4933, metadata !DIExpression()), !dbg !4934
  store i32 0, i32* %15, align 4, !dbg !4934
  store i32 0, i32* %12, align 4, !dbg !4935
  br label %34, !dbg !4937

34:                                               ; preds = %41, %1
  %35 = load i32, i32* %12, align 4, !dbg !4938
  %36 = icmp sle i32 %35, 15, !dbg !4940
  br i1 %36, label %37, label %44, !dbg !4941

37:                                               ; preds = %34
  %38 = load i32, i32* %12, align 4, !dbg !4942
  %39 = sext i32 %38 to i64, !dbg !4943
  %40 = getelementptr inbounds [16 x i16], [16 x i16]* @bl_count, i64 0, i64 %39, !dbg !4943
  store i16 0, i16* %40, align 2, !dbg !4944
  br label %41, !dbg !4943

41:                                               ; preds = %37
  %42 = load i32, i32* %12, align 4, !dbg !4945
  %43 = add nsw i32 %42, 1, !dbg !4945
  store i32 %43, i32* %12, align 4, !dbg !4945
  br label %34, !dbg !4946, !llvm.loop !4947

44:                                               ; preds = %34
  %45 = load %struct.ct_data*, %struct.ct_data** %3, align 8, !dbg !4949
  %46 = load i32, i32* @heap_max, align 4, !dbg !4950
  %47 = sext i32 %46 to i64, !dbg !4951
  %48 = getelementptr inbounds [573 x i32], [573 x i32]* @heap, i64 0, i64 %47, !dbg !4951
  %49 = load i32, i32* %48, align 4, !dbg !4951
  %50 = sext i32 %49 to i64, !dbg !4949
  %51 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %45, i64 %50, !dbg !4949
  %52 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %51, i32 0, i32 1, !dbg !4952
  %53 = bitcast %union.anon* %52 to i16*, !dbg !4952
  store i16 0, i16* %53, align 2, !dbg !4953
  %54 = load i32, i32* @heap_max, align 4, !dbg !4954
  %55 = add nsw i32 %54, 1, !dbg !4956
  store i32 %55, i32* %9, align 4, !dbg !4957
  br label %56, !dbg !4958

56:                                               ; preds = %153, %44
  %57 = load i32, i32* %9, align 4, !dbg !4959
  %58 = icmp slt i32 %57, 573, !dbg !4961
  br i1 %58, label %59, label %156, !dbg !4962

59:                                               ; preds = %56
  %60 = load i32, i32* %9, align 4, !dbg !4963
  %61 = sext i32 %60 to i64, !dbg !4965
  %62 = getelementptr inbounds [573 x i32], [573 x i32]* @heap, i64 0, i64 %61, !dbg !4965
  %63 = load i32, i32* %62, align 4, !dbg !4965
  store i32 %63, i32* %10, align 4, !dbg !4966
  %64 = load %struct.ct_data*, %struct.ct_data** %3, align 8, !dbg !4967
  %65 = load %struct.ct_data*, %struct.ct_data** %3, align 8, !dbg !4968
  %66 = load i32, i32* %10, align 4, !dbg !4969
  %67 = sext i32 %66 to i64, !dbg !4968
  %68 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %65, i64 %67, !dbg !4968
  %69 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %68, i32 0, i32 1, !dbg !4970
  %70 = bitcast %union.anon* %69 to i16*, !dbg !4970
  %71 = load i16, i16* %70, align 2, !dbg !4970
  %72 = zext i16 %71 to i64, !dbg !4967
  %73 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %64, i64 %72, !dbg !4967
  %74 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %73, i32 0, i32 1, !dbg !4971
  %75 = bitcast %union.anon* %74 to i16*, !dbg !4971
  %76 = load i16, i16* %75, align 2, !dbg !4971
  %77 = zext i16 %76 to i32, !dbg !4967
  %78 = add nsw i32 %77, 1, !dbg !4972
  store i32 %78, i32* %12, align 4, !dbg !4973
  %79 = load i32, i32* %12, align 4, !dbg !4974
  %80 = load i32, i32* %7, align 4, !dbg !4976
  %81 = icmp sgt i32 %79, %80, !dbg !4977
  br i1 %81, label %82, label %86, !dbg !4978

82:                                               ; preds = %59
  %83 = load i32, i32* %7, align 4, !dbg !4979
  store i32 %83, i32* %12, align 4, !dbg !4980
  %84 = load i32, i32* %15, align 4, !dbg !4981
  %85 = add nsw i32 %84, 1, !dbg !4981
  store i32 %85, i32* %15, align 4, !dbg !4981
  br label %86, !dbg !4982

86:                                               ; preds = %82, %59
  %87 = load i32, i32* %12, align 4, !dbg !4983
  %88 = trunc i32 %87 to i16, !dbg !4984
  %89 = load %struct.ct_data*, %struct.ct_data** %3, align 8, !dbg !4985
  %90 = load i32, i32* %10, align 4, !dbg !4986
  %91 = sext i32 %90 to i64, !dbg !4985
  %92 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %89, i64 %91, !dbg !4985
  %93 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %92, i32 0, i32 1, !dbg !4987
  %94 = bitcast %union.anon* %93 to i16*, !dbg !4987
  store i16 %88, i16* %94, align 2, !dbg !4988
  %95 = load i32, i32* %10, align 4, !dbg !4989
  %96 = load i32, i32* %6, align 4, !dbg !4991
  %97 = icmp sgt i32 %95, %96, !dbg !4992
  br i1 %97, label %98, label %99, !dbg !4993

98:                                               ; preds = %86
  br label %153, !dbg !4994

99:                                               ; preds = %86
  %100 = load i32, i32* %12, align 4, !dbg !4995
  %101 = sext i32 %100 to i64, !dbg !4996
  %102 = getelementptr inbounds [16 x i16], [16 x i16]* @bl_count, i64 0, i64 %101, !dbg !4996
  %103 = load i16, i16* %102, align 2, !dbg !4997
  %104 = add i16 %103, 1, !dbg !4997
  store i16 %104, i16* %102, align 2, !dbg !4997
  store i32 0, i32* %13, align 4, !dbg !4998
  %105 = load i32, i32* %10, align 4, !dbg !4999
  %106 = load i32, i32* %5, align 4, !dbg !5001
  %107 = icmp sge i32 %105, %106, !dbg !5002
  br i1 %107, label %108, label %116, !dbg !5003

108:                                              ; preds = %99
  %109 = load i32*, i32** %4, align 8, !dbg !5004
  %110 = load i32, i32* %10, align 4, !dbg !5005
  %111 = load i32, i32* %5, align 4, !dbg !5006
  %112 = sub nsw i32 %110, %111, !dbg !5007
  %113 = sext i32 %112 to i64, !dbg !5004
  %114 = getelementptr inbounds i32, i32* %109, i64 %113, !dbg !5004
  %115 = load i32, i32* %114, align 4, !dbg !5004
  store i32 %115, i32* %13, align 4, !dbg !5008
  br label %116, !dbg !5009

116:                                              ; preds = %108, %99
  %117 = load %struct.ct_data*, %struct.ct_data** %3, align 8, !dbg !5010
  %118 = load i32, i32* %10, align 4, !dbg !5011
  %119 = sext i32 %118 to i64, !dbg !5010
  %120 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %117, i64 %119, !dbg !5010
  %121 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %120, i32 0, i32 0, !dbg !5012
  %122 = bitcast %union.anon* %121 to i16*, !dbg !5012
  %123 = load i16, i16* %122, align 2, !dbg !5012
  store i16 %123, i16* %14, align 2, !dbg !5013
  %124 = load i16, i16* %14, align 2, !dbg !5014
  %125 = zext i16 %124 to i64, !dbg !5015
  %126 = load i32, i32* %12, align 4, !dbg !5016
  %127 = load i32, i32* %13, align 4, !dbg !5017
  %128 = add nsw i32 %126, %127, !dbg !5018
  %129 = sext i32 %128 to i64, !dbg !5019
  %130 = mul i64 %125, %129, !dbg !5020
  %131 = load i64, i64* @opt_len, align 8, !dbg !5021
  %132 = add i64 %131, %130, !dbg !5021
  store i64 %132, i64* @opt_len, align 8, !dbg !5021
  %133 = load %struct.ct_data*, %struct.ct_data** %8, align 8, !dbg !5022
  %134 = icmp ne %struct.ct_data* %133, null, !dbg !5022
  br i1 %134, label %135, label %152, !dbg !5024

135:                                              ; preds = %116
  %136 = load i16, i16* %14, align 2, !dbg !5025
  %137 = zext i16 %136 to i64, !dbg !5026
  %138 = load %struct.ct_data*, %struct.ct_data** %8, align 8, !dbg !5027
  %139 = load i32, i32* %10, align 4, !dbg !5028
  %140 = sext i32 %139 to i64, !dbg !5027
  %141 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %138, i64 %140, !dbg !5027
  %142 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %141, i32 0, i32 1, !dbg !5029
  %143 = bitcast %union.anon* %142 to i16*, !dbg !5029
  %144 = load i16, i16* %143, align 2, !dbg !5029
  %145 = zext i16 %144 to i32, !dbg !5027
  %146 = load i32, i32* %13, align 4, !dbg !5030
  %147 = add nsw i32 %145, %146, !dbg !5031
  %148 = sext i32 %147 to i64, !dbg !5032
  %149 = mul i64 %137, %148, !dbg !5033
  %150 = load i64, i64* @static_len, align 8, !dbg !5034
  %151 = add i64 %150, %149, !dbg !5034
  store i64 %151, i64* @static_len, align 8, !dbg !5034
  br label %152, !dbg !5035

152:                                              ; preds = %135, %116
  br label %153, !dbg !5036

153:                                              ; preds = %152, %98
  %154 = load i32, i32* %9, align 4, !dbg !5037
  %155 = add nsw i32 %154, 1, !dbg !5037
  store i32 %155, i32* %9, align 4, !dbg !5037
  br label %56, !dbg !5038, !llvm.loop !5039

156:                                              ; preds = %56
  %157 = load i32, i32* %15, align 4, !dbg !5041
  %158 = icmp eq i32 %157, 0, !dbg !5043
  br i1 %158, label %159, label %160, !dbg !5044

159:                                              ; preds = %156
  br label %271, !dbg !5045

160:                                              ; preds = %156
  br label %161, !dbg !5046

161:                                              ; preds = %195, %160
  %162 = load i32, i32* %7, align 4, !dbg !5047
  %163 = sub nsw i32 %162, 1, !dbg !5049
  store i32 %163, i32* %12, align 4, !dbg !5050
  br label %164, !dbg !5051

164:                                              ; preds = %171, %161
  %165 = load i32, i32* %12, align 4, !dbg !5052
  %166 = sext i32 %165 to i64, !dbg !5053
  %167 = getelementptr inbounds [16 x i16], [16 x i16]* @bl_count, i64 0, i64 %166, !dbg !5053
  %168 = load i16, i16* %167, align 2, !dbg !5053
  %169 = zext i16 %168 to i32, !dbg !5053
  %170 = icmp eq i32 %169, 0, !dbg !5054
  br i1 %170, label %171, label %174, !dbg !5051

171:                                              ; preds = %164
  %172 = load i32, i32* %12, align 4, !dbg !5055
  %173 = add nsw i32 %172, -1, !dbg !5055
  store i32 %173, i32* %12, align 4, !dbg !5055
  br label %164, !dbg !5051, !llvm.loop !5056

174:                                              ; preds = %164
  %175 = load i32, i32* %12, align 4, !dbg !5057
  %176 = sext i32 %175 to i64, !dbg !5058
  %177 = getelementptr inbounds [16 x i16], [16 x i16]* @bl_count, i64 0, i64 %176, !dbg !5058
  %178 = load i16, i16* %177, align 2, !dbg !5059
  %179 = add i16 %178, -1, !dbg !5059
  store i16 %179, i16* %177, align 2, !dbg !5059
  %180 = load i32, i32* %12, align 4, !dbg !5060
  %181 = add nsw i32 %180, 1, !dbg !5061
  %182 = sext i32 %181 to i64, !dbg !5062
  %183 = getelementptr inbounds [16 x i16], [16 x i16]* @bl_count, i64 0, i64 %182, !dbg !5062
  %184 = load i16, i16* %183, align 2, !dbg !5063
  %185 = zext i16 %184 to i32, !dbg !5063
  %186 = add nsw i32 %185, 2, !dbg !5063
  %187 = trunc i32 %186 to i16, !dbg !5063
  store i16 %187, i16* %183, align 2, !dbg !5063
  %188 = load i32, i32* %7, align 4, !dbg !5064
  %189 = sext i32 %188 to i64, !dbg !5065
  %190 = getelementptr inbounds [16 x i16], [16 x i16]* @bl_count, i64 0, i64 %189, !dbg !5065
  %191 = load i16, i16* %190, align 2, !dbg !5066
  %192 = add i16 %191, -1, !dbg !5066
  store i16 %192, i16* %190, align 2, !dbg !5066
  %193 = load i32, i32* %15, align 4, !dbg !5067
  %194 = sub nsw i32 %193, 2, !dbg !5067
  store i32 %194, i32* %15, align 4, !dbg !5067
  br label %195, !dbg !5068

195:                                              ; preds = %174
  %196 = load i32, i32* %15, align 4, !dbg !5069
  %197 = icmp sgt i32 %196, 0, !dbg !5070
  br i1 %197, label %161, label %198, !dbg !5068, !llvm.loop !5071

198:                                              ; preds = %195
  %199 = load i32, i32* %7, align 4, !dbg !5073
  store i32 %199, i32* %12, align 4, !dbg !5075
  br label %200, !dbg !5076

200:                                              ; preds = %268, %198
  %201 = load i32, i32* %12, align 4, !dbg !5077
  %202 = icmp ne i32 %201, 0, !dbg !5079
  br i1 %202, label %203, label %271, !dbg !5080

203:                                              ; preds = %200
  %204 = load i32, i32* %12, align 4, !dbg !5081
  %205 = sext i32 %204 to i64, !dbg !5083
  %206 = getelementptr inbounds [16 x i16], [16 x i16]* @bl_count, i64 0, i64 %205, !dbg !5083
  %207 = load i16, i16* %206, align 2, !dbg !5083
  %208 = zext i16 %207 to i32, !dbg !5083
  store i32 %208, i32* %10, align 4, !dbg !5084
  br label %209, !dbg !5085

209:                                              ; preds = %264, %221, %203
  %210 = load i32, i32* %10, align 4, !dbg !5086
  %211 = icmp ne i32 %210, 0, !dbg !5087
  br i1 %211, label %212, label %267, !dbg !5085

212:                                              ; preds = %209
  %213 = load i32, i32* %9, align 4, !dbg !5088
  %214 = add nsw i32 %213, -1, !dbg !5088
  store i32 %214, i32* %9, align 4, !dbg !5088
  %215 = sext i32 %214 to i64, !dbg !5090
  %216 = getelementptr inbounds [573 x i32], [573 x i32]* @heap, i64 0, i64 %215, !dbg !5090
  %217 = load i32, i32* %216, align 4, !dbg !5090
  store i32 %217, i32* %11, align 4, !dbg !5091
  %218 = load i32, i32* %11, align 4, !dbg !5092
  %219 = load i32, i32* %6, align 4, !dbg !5094
  %220 = icmp sgt i32 %218, %219, !dbg !5095
  br i1 %220, label %221, label %222, !dbg !5096

221:                                              ; preds = %212
  br label %209, !dbg !5097, !llvm.loop !5098

222:                                              ; preds = %212
  %223 = load %struct.ct_data*, %struct.ct_data** %3, align 8, !dbg !5100
  %224 = load i32, i32* %11, align 4, !dbg !5102
  %225 = sext i32 %224 to i64, !dbg !5100
  %226 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %223, i64 %225, !dbg !5100
  %227 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %226, i32 0, i32 1, !dbg !5103
  %228 = bitcast %union.anon* %227 to i16*, !dbg !5103
  %229 = load i16, i16* %228, align 2, !dbg !5103
  %230 = zext i16 %229 to i32, !dbg !5100
  %231 = load i32, i32* %12, align 4, !dbg !5104
  %232 = icmp ne i32 %230, %231, !dbg !5105
  br i1 %232, label %233, label %264, !dbg !5106

233:                                              ; preds = %222
  %234 = load i32, i32* %12, align 4, !dbg !5107
  %235 = sext i32 %234 to i64, !dbg !5109
  %236 = load %struct.ct_data*, %struct.ct_data** %3, align 8, !dbg !5110
  %237 = load i32, i32* %11, align 4, !dbg !5111
  %238 = sext i32 %237 to i64, !dbg !5110
  %239 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %236, i64 %238, !dbg !5110
  %240 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %239, i32 0, i32 1, !dbg !5112
  %241 = bitcast %union.anon* %240 to i16*, !dbg !5112
  %242 = load i16, i16* %241, align 2, !dbg !5112
  %243 = zext i16 %242 to i64, !dbg !5113
  %244 = sub nsw i64 %235, %243, !dbg !5114
  %245 = load %struct.ct_data*, %struct.ct_data** %3, align 8, !dbg !5115
  %246 = load i32, i32* %11, align 4, !dbg !5116
  %247 = sext i32 %246 to i64, !dbg !5115
  %248 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %245, i64 %247, !dbg !5115
  %249 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %248, i32 0, i32 0, !dbg !5117
  %250 = bitcast %union.anon* %249 to i16*, !dbg !5117
  %251 = load i16, i16* %250, align 2, !dbg !5117
  %252 = zext i16 %251 to i64, !dbg !5118
  %253 = mul nsw i64 %244, %252, !dbg !5119
  %254 = load i64, i64* @opt_len, align 8, !dbg !5120
  %255 = add i64 %254, %253, !dbg !5120
  store i64 %255, i64* @opt_len, align 8, !dbg !5120
  %256 = load i32, i32* %12, align 4, !dbg !5121
  %257 = trunc i32 %256 to i16, !dbg !5122
  %258 = load %struct.ct_data*, %struct.ct_data** %3, align 8, !dbg !5123
  %259 = load i32, i32* %11, align 4, !dbg !5124
  %260 = sext i32 %259 to i64, !dbg !5123
  %261 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %258, i64 %260, !dbg !5123
  %262 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %261, i32 0, i32 1, !dbg !5125
  %263 = bitcast %union.anon* %262 to i16*, !dbg !5125
  store i16 %257, i16* %263, align 2, !dbg !5126
  br label %264, !dbg !5127

264:                                              ; preds = %233, %222
  %265 = load i32, i32* %10, align 4, !dbg !5128
  %266 = add nsw i32 %265, -1, !dbg !5128
  store i32 %266, i32* %10, align 4, !dbg !5128
  br label %209, !dbg !5085, !llvm.loop !5098

267:                                              ; preds = %209
  br label %268, !dbg !5129

268:                                              ; preds = %267
  %269 = load i32, i32* %12, align 4, !dbg !5130
  %270 = add nsw i32 %269, -1, !dbg !5130
  store i32 %270, i32* %12, align 4, !dbg !5130
  br label %200, !dbg !5131, !llvm.loop !5132

271:                                              ; preds = %159, %200
  ret void, !dbg !5134
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @ct_tally(i32 noundef %0, i32 noundef %1) #0 !dbg !5135 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !5136, metadata !DIExpression()), !dbg !5137
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !5138, metadata !DIExpression()), !dbg !5139
  %9 = load i32, i32* %5, align 4, !dbg !5140
  %10 = trunc i32 %9 to i8, !dbg !5141
  %11 = load i32, i32* @last_lit, align 4, !dbg !5142
  %12 = add i32 %11, 1, !dbg !5142
  store i32 %12, i32* @last_lit, align 4, !dbg !5142
  %13 = zext i32 %11 to i64, !dbg !5143
  %14 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i64 0, i64 %13, !dbg !5143
  store i8 %10, i8* %14, align 1, !dbg !5144
  %15 = load i32, i32* %4, align 4, !dbg !5145
  %16 = icmp eq i32 %15, 0, !dbg !5147
  br i1 %16, label %17, label %25, !dbg !5148

17:                                               ; preds = %2
  %18 = load i32, i32* %5, align 4, !dbg !5149
  %19 = sext i32 %18 to i64, !dbg !5151
  %20 = getelementptr inbounds [573 x %struct.ct_data], [573 x %struct.ct_data]* @dyn_ltree, i64 0, i64 %19, !dbg !5151
  %21 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %20, i32 0, i32 0, !dbg !5152
  %22 = bitcast %union.anon* %21 to i16*, !dbg !5152
  %23 = load i16, i16* %22, align 4, !dbg !5153
  %24 = add i16 %23, 1, !dbg !5153
  store i16 %24, i16* %22, align 4, !dbg !5153
  br label %77, !dbg !5154

25:                                               ; preds = %2
  %26 = load i32, i32* %4, align 4, !dbg !5155
  %27 = add nsw i32 %26, -1, !dbg !5155
  store i32 %27, i32* %4, align 4, !dbg !5155
  %28 = load i32, i32* %5, align 4, !dbg !5157
  %29 = sext i32 %28 to i64, !dbg !5158
  %30 = getelementptr inbounds [256 x i8], [256 x i8]* @length_code, i64 0, i64 %29, !dbg !5158
  %31 = load i8, i8* %30, align 1, !dbg !5158
  %32 = zext i8 %31 to i32, !dbg !5158
  %33 = add nsw i32 %32, 256, !dbg !5159
  %34 = add nsw i32 %33, 1, !dbg !5160
  %35 = sext i32 %34 to i64, !dbg !5161
  %36 = getelementptr inbounds [573 x %struct.ct_data], [573 x %struct.ct_data]* @dyn_ltree, i64 0, i64 %35, !dbg !5161
  %37 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %36, i32 0, i32 0, !dbg !5162
  %38 = bitcast %union.anon* %37 to i16*, !dbg !5162
  %39 = load i16, i16* %38, align 4, !dbg !5163
  %40 = add i16 %39, 1, !dbg !5163
  store i16 %40, i16* %38, align 4, !dbg !5163
  %41 = load i32, i32* %4, align 4, !dbg !5164
  %42 = icmp slt i32 %41, 256, !dbg !5164
  br i1 %42, label %43, label %49, !dbg !5164

43:                                               ; preds = %25
  %44 = load i32, i32* %4, align 4, !dbg !5164
  %45 = sext i32 %44 to i64, !dbg !5164
  %46 = getelementptr inbounds [512 x i8], [512 x i8]* @dist_code, i64 0, i64 %45, !dbg !5164
  %47 = load i8, i8* %46, align 1, !dbg !5164
  %48 = zext i8 %47 to i32, !dbg !5164
  br label %57, !dbg !5164

49:                                               ; preds = %25
  %50 = load i32, i32* %4, align 4, !dbg !5164
  %51 = ashr i32 %50, 7, !dbg !5164
  %52 = add nsw i32 256, %51, !dbg !5164
  %53 = sext i32 %52 to i64, !dbg !5164
  %54 = getelementptr inbounds [512 x i8], [512 x i8]* @dist_code, i64 0, i64 %53, !dbg !5164
  %55 = load i8, i8* %54, align 1, !dbg !5164
  %56 = zext i8 %55 to i32, !dbg !5164
  br label %57, !dbg !5164

57:                                               ; preds = %49, %43
  %58 = phi i32 [ %48, %43 ], [ %56, %49 ], !dbg !5164
  %59 = sext i32 %58 to i64, !dbg !5165
  %60 = getelementptr inbounds [61 x %struct.ct_data], [61 x %struct.ct_data]* @dyn_dtree, i64 0, i64 %59, !dbg !5165
  %61 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %60, i32 0, i32 0, !dbg !5166
  %62 = bitcast %union.anon* %61 to i16*, !dbg !5166
  %63 = load i16, i16* %62, align 4, !dbg !5167
  %64 = add i16 %63, 1, !dbg !5167
  store i16 %64, i16* %62, align 4, !dbg !5167
  %65 = load i32, i32* %4, align 4, !dbg !5168
  %66 = trunc i32 %65 to i16, !dbg !5169
  %67 = load i32, i32* @last_dist, align 4, !dbg !5170
  %68 = add i32 %67, 1, !dbg !5170
  store i32 %68, i32* @last_dist, align 4, !dbg !5170
  %69 = zext i32 %67 to i64, !dbg !5171
  %70 = getelementptr inbounds [0 x i16], [0 x i16]* bitcast ([32768 x i16]* @d_buf to [0 x i16]*), i64 0, i64 %69, !dbg !5171
  store i16 %66, i16* %70, align 2, !dbg !5172
  %71 = load i8, i8* @flag_bit, align 1, !dbg !5173
  %72 = zext i8 %71 to i32, !dbg !5173
  %73 = load i8, i8* @flags, align 1, !dbg !5174
  %74 = zext i8 %73 to i32, !dbg !5174
  %75 = or i32 %74, %72, !dbg !5174
  %76 = trunc i32 %75 to i8, !dbg !5174
  store i8 %76, i8* @flags, align 1, !dbg !5174
  br label %77

77:                                               ; preds = %57, %17
  %78 = load i8, i8* @flag_bit, align 1, !dbg !5175
  %79 = zext i8 %78 to i32, !dbg !5175
  %80 = shl i32 %79, 1, !dbg !5175
  %81 = trunc i32 %80 to i8, !dbg !5175
  store i8 %81, i8* @flag_bit, align 1, !dbg !5175
  %82 = load i32, i32* @last_lit, align 4, !dbg !5176
  %83 = and i32 %82, 7, !dbg !5178
  %84 = icmp eq i32 %83, 0, !dbg !5179
  br i1 %84, label %85, label %91, !dbg !5180

85:                                               ; preds = %77
  %86 = load i8, i8* @flags, align 1, !dbg !5181
  %87 = load i32, i32* @last_flags, align 4, !dbg !5183
  %88 = add i32 %87, 1, !dbg !5183
  store i32 %88, i32* @last_flags, align 4, !dbg !5183
  %89 = zext i32 %87 to i64, !dbg !5184
  %90 = getelementptr inbounds [4096 x i8], [4096 x i8]* @flag_buf, i64 0, i64 %89, !dbg !5184
  store i8 %86, i8* %90, align 1, !dbg !5185
  store i8 0, i8* @flags, align 1, !dbg !5186
  store i8 1, i8* @flag_bit, align 1, !dbg !5187
  br label %91, !dbg !5188

91:                                               ; preds = %85, %77
  %92 = load i32, i32* @level, align 4, !dbg !5189
  %93 = icmp sgt i32 %92, 2, !dbg !5191
  br i1 %93, label %94, label %143, !dbg !5192

94:                                               ; preds = %91
  %95 = load i32, i32* @last_lit, align 4, !dbg !5193
  %96 = and i32 %95, 4095, !dbg !5194
  %97 = icmp eq i32 %96, 0, !dbg !5195
  br i1 %97, label %98, label %143, !dbg !5196

98:                                               ; preds = %94
  call void @llvm.dbg.declare(metadata i64* %6, metadata !5197, metadata !DIExpression()), !dbg !5199
  %99 = load i32, i32* @last_lit, align 4, !dbg !5200
  %100 = zext i32 %99 to i64, !dbg !5201
  %101 = mul i64 %100, 8, !dbg !5202
  store i64 %101, i64* %6, align 8, !dbg !5199
  call void @llvm.dbg.declare(metadata i64* %7, metadata !5203, metadata !DIExpression()), !dbg !5204
  %102 = load i32, i32* @strstart, align 4, !dbg !5205
  %103 = zext i32 %102 to i64, !dbg !5206
  %104 = load i64, i64* @block_start, align 8, !dbg !5207
  %105 = sub i64 %103, %104, !dbg !5208
  store i64 %105, i64* %7, align 8, !dbg !5204
  call void @llvm.dbg.declare(metadata i32* %8, metadata !5209, metadata !DIExpression()), !dbg !5210
  store i32 0, i32* %8, align 4, !dbg !5211
  br label %106, !dbg !5213

106:                                              ; preds = %126, %98
  %107 = load i32, i32* %8, align 4, !dbg !5214
  %108 = icmp slt i32 %107, 30, !dbg !5216
  br i1 %108, label %109, label %129, !dbg !5217

109:                                              ; preds = %106
  %110 = load i32, i32* %8, align 4, !dbg !5218
  %111 = sext i32 %110 to i64, !dbg !5220
  %112 = getelementptr inbounds [61 x %struct.ct_data], [61 x %struct.ct_data]* @dyn_dtree, i64 0, i64 %111, !dbg !5220
  %113 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %112, i32 0, i32 0, !dbg !5221
  %114 = bitcast %union.anon* %113 to i16*, !dbg !5221
  %115 = load i16, i16* %114, align 4, !dbg !5221
  %116 = zext i16 %115 to i64, !dbg !5222
  %117 = load i32, i32* %8, align 4, !dbg !5223
  %118 = sext i32 %117 to i64, !dbg !5224
  %119 = getelementptr inbounds [30 x i32], [30 x i32]* @extra_dbits, i64 0, i64 %118, !dbg !5224
  %120 = load i32, i32* %119, align 4, !dbg !5224
  %121 = sext i32 %120 to i64, !dbg !5224
  %122 = add nsw i64 5, %121, !dbg !5225
  %123 = mul i64 %116, %122, !dbg !5226
  %124 = load i64, i64* %6, align 8, !dbg !5227
  %125 = add i64 %124, %123, !dbg !5227
  store i64 %125, i64* %6, align 8, !dbg !5227
  br label %126, !dbg !5228

126:                                              ; preds = %109
  %127 = load i32, i32* %8, align 4, !dbg !5229
  %128 = add nsw i32 %127, 1, !dbg !5229
  store i32 %128, i32* %8, align 4, !dbg !5229
  br label %106, !dbg !5230, !llvm.loop !5231

129:                                              ; preds = %106
  %130 = load i64, i64* %6, align 8, !dbg !5233
  %131 = lshr i64 %130, 3, !dbg !5233
  store i64 %131, i64* %6, align 8, !dbg !5233
  %132 = load i32, i32* @last_dist, align 4, !dbg !5234
  %133 = load i32, i32* @last_lit, align 4, !dbg !5236
  %134 = udiv i32 %133, 2, !dbg !5237
  %135 = icmp ult i32 %132, %134, !dbg !5238
  br i1 %135, label %136, label %142, !dbg !5239

136:                                              ; preds = %129
  %137 = load i64, i64* %6, align 8, !dbg !5240
  %138 = load i64, i64* %7, align 8, !dbg !5241
  %139 = udiv i64 %138, 2, !dbg !5242
  %140 = icmp ult i64 %137, %139, !dbg !5243
  br i1 %140, label %141, label %142, !dbg !5244

141:                                              ; preds = %136
  store i32 1, i32* %3, align 4, !dbg !5245
  br label %152, !dbg !5245

142:                                              ; preds = %136, %129
  br label %143, !dbg !5246

143:                                              ; preds = %142, %94, %91
  %144 = load i32, i32* @last_lit, align 4, !dbg !5247
  %145 = icmp eq i32 %144, 32767, !dbg !5248
  br i1 %145, label %149, label %146, !dbg !5249

146:                                              ; preds = %143
  %147 = load i32, i32* @last_dist, align 4, !dbg !5250
  %148 = icmp eq i32 %147, 32768, !dbg !5251
  br label %149, !dbg !5249

149:                                              ; preds = %146, %143
  %150 = phi i1 [ true, %143 ], [ %148, %146 ]
  %151 = zext i1 %150 to i32, !dbg !5249
  store i32 %151, i32* %3, align 4, !dbg !5252
  br label %152, !dbg !5252

152:                                              ; preds = %149, %141
  %153 = load i32, i32* %3, align 4, !dbg !5253
  ret i32 %153, !dbg !5253
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @bi_init(i32 noundef %0) #0 !dbg !5254 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !5257, metadata !DIExpression()), !dbg !5258
  %3 = load i32, i32* %2, align 4, !dbg !5259
  store i32 %3, i32* @zfile, align 4, !dbg !5260
  store i16 0, i16* @bi_buf, align 2, !dbg !5261
  store i32 0, i32* @bi_valid, align 4, !dbg !5262
  %4 = load i32, i32* @zfile, align 4, !dbg !5263
  %5 = icmp ne i32 %4, -1, !dbg !5265
  br i1 %5, label %6, label %7, !dbg !5266

6:                                                ; preds = %1
  store i32 (i8*, i32)* @file_read, i32 (i8*, i32)** @read_buf, align 8, !dbg !5267
  br label %7, !dbg !5269

7:                                                ; preds = %6, %1
  ret void, !dbg !5270
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @send_bits(i32 noundef %0, i32 noundef %1) #0 !dbg !5271 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !5272, metadata !DIExpression()), !dbg !5273
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !5274, metadata !DIExpression()), !dbg !5275
  %5 = load i32, i32* @bi_valid, align 4, !dbg !5276
  %6 = load i32, i32* %4, align 4, !dbg !5278
  %7 = sub nsw i32 16, %6, !dbg !5279
  %8 = icmp sgt i32 %5, %7, !dbg !5280
  br i1 %8, label %9, label %78, !dbg !5281

9:                                                ; preds = %2
  %10 = load i32, i32* %3, align 4, !dbg !5282
  %11 = load i32, i32* @bi_valid, align 4, !dbg !5284
  %12 = shl i32 %10, %11, !dbg !5285
  %13 = load i16, i16* @bi_buf, align 2, !dbg !5286
  %14 = zext i16 %13 to i32, !dbg !5286
  %15 = or i32 %14, %12, !dbg !5286
  %16 = trunc i32 %15 to i16, !dbg !5286
  store i16 %16, i16* @bi_buf, align 2, !dbg !5286
  %17 = load i32, i32* @outcnt, align 4, !dbg !5287
  %18 = icmp ult i32 %17, 16382, !dbg !5287
  br i1 %18, label %19, label %36, !dbg !5290

19:                                               ; preds = %9
  %20 = load i16, i16* @bi_buf, align 2, !dbg !5291
  %21 = zext i16 %20 to i32, !dbg !5291
  %22 = and i32 %21, 255, !dbg !5291
  %23 = trunc i32 %22 to i8, !dbg !5291
  %24 = load i32, i32* @outcnt, align 4, !dbg !5291
  %25 = add i32 %24, 1, !dbg !5291
  store i32 %25, i32* @outcnt, align 4, !dbg !5291
  %26 = zext i32 %24 to i64, !dbg !5291
  %27 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %26, !dbg !5291
  store i8 %23, i8* %27, align 1, !dbg !5291
  %28 = load i16, i16* @bi_buf, align 2, !dbg !5291
  %29 = zext i16 %28 to i32, !dbg !5291
  %30 = ashr i32 %29, 8, !dbg !5291
  %31 = trunc i32 %30 to i8, !dbg !5291
  %32 = load i32, i32* @outcnt, align 4, !dbg !5291
  %33 = add i32 %32, 1, !dbg !5291
  store i32 %33, i32* @outcnt, align 4, !dbg !5291
  %34 = zext i32 %32 to i64, !dbg !5291
  %35 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %34, !dbg !5291
  store i8 %31, i8* %35, align 1, !dbg !5291
  br label %61, !dbg !5291

36:                                               ; preds = %9
  %37 = load i16, i16* @bi_buf, align 2, !dbg !5293
  %38 = zext i16 %37 to i32, !dbg !5293
  %39 = and i32 %38, 255, !dbg !5293
  %40 = trunc i32 %39 to i8, !dbg !5293
  %41 = load i32, i32* @outcnt, align 4, !dbg !5293
  %42 = add i32 %41, 1, !dbg !5293
  store i32 %42, i32* @outcnt, align 4, !dbg !5293
  %43 = zext i32 %41 to i64, !dbg !5293
  %44 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %43, !dbg !5293
  store i8 %40, i8* %44, align 1, !dbg !5293
  %45 = load i32, i32* @outcnt, align 4, !dbg !5296
  %46 = icmp eq i32 %45, 16384, !dbg !5296
  br i1 %46, label %47, label %48, !dbg !5293

47:                                               ; preds = %36
  call void @flush_outbuf(), !dbg !5296
  br label %48, !dbg !5296

48:                                               ; preds = %47, %36
  %49 = load i16, i16* @bi_buf, align 2, !dbg !5298
  %50 = zext i16 %49 to i32, !dbg !5298
  %51 = ashr i32 %50, 8, !dbg !5298
  %52 = trunc i32 %51 to i8, !dbg !5298
  %53 = load i32, i32* @outcnt, align 4, !dbg !5298
  %54 = add i32 %53, 1, !dbg !5298
  store i32 %54, i32* @outcnt, align 4, !dbg !5298
  %55 = zext i32 %53 to i64, !dbg !5298
  %56 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %55, !dbg !5298
  store i8 %52, i8* %56, align 1, !dbg !5298
  %57 = load i32, i32* @outcnt, align 4, !dbg !5300
  %58 = icmp eq i32 %57, 16384, !dbg !5300
  br i1 %58, label %59, label %60, !dbg !5298

59:                                               ; preds = %48
  call void @flush_outbuf(), !dbg !5300
  br label %60, !dbg !5300

60:                                               ; preds = %59, %48
  br label %61

61:                                               ; preds = %60, %19
  %62 = load i32, i32* %3, align 4, !dbg !5302
  %63 = trunc i32 %62 to i16, !dbg !5303
  %64 = zext i16 %63 to i32, !dbg !5303
  %65 = load i32, i32* @bi_valid, align 4, !dbg !5304
  %66 = sext i32 %65 to i64, !dbg !5304
  %67 = sub i64 16, %66, !dbg !5305
  %68 = trunc i64 %67 to i32, !dbg !5306
  %69 = ashr i32 %64, %68, !dbg !5306
  %70 = trunc i32 %69 to i16, !dbg !5303
  store i16 %70, i16* @bi_buf, align 2, !dbg !5307
  %71 = load i32, i32* %4, align 4, !dbg !5308
  %72 = sext i32 %71 to i64, !dbg !5308
  %73 = sub i64 %72, 16, !dbg !5309
  %74 = load i32, i32* @bi_valid, align 4, !dbg !5310
  %75 = sext i32 %74 to i64, !dbg !5310
  %76 = add i64 %75, %73, !dbg !5310
  %77 = trunc i64 %76 to i32, !dbg !5310
  store i32 %77, i32* @bi_valid, align 4, !dbg !5310
  br label %89, !dbg !5311

78:                                               ; preds = %2
  %79 = load i32, i32* %3, align 4, !dbg !5312
  %80 = load i32, i32* @bi_valid, align 4, !dbg !5314
  %81 = shl i32 %79, %80, !dbg !5315
  %82 = load i16, i16* @bi_buf, align 2, !dbg !5316
  %83 = zext i16 %82 to i32, !dbg !5316
  %84 = or i32 %83, %81, !dbg !5316
  %85 = trunc i32 %84 to i16, !dbg !5316
  store i16 %85, i16* @bi_buf, align 2, !dbg !5316
  %86 = load i32, i32* %4, align 4, !dbg !5317
  %87 = load i32, i32* @bi_valid, align 4, !dbg !5318
  %88 = add nsw i32 %87, %86, !dbg !5318
  store i32 %88, i32* @bi_valid, align 4, !dbg !5318
  br label %89

89:                                               ; preds = %78, %61
  ret void, !dbg !5319
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @bi_reverse(i32 noundef %0, i32 noundef %1) #0 !dbg !5320 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !5323, metadata !DIExpression()), !dbg !5324
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !5325, metadata !DIExpression()), !dbg !5326
  call void @llvm.dbg.declare(metadata i32* %5, metadata !5327, metadata !DIExpression()), !dbg !5328
  store i32 0, i32* %5, align 4, !dbg !5328
  br label %6, !dbg !5329

6:                                                ; preds = %15, %2
  %7 = load i32, i32* %3, align 4, !dbg !5330
  %8 = and i32 %7, 1, !dbg !5332
  %9 = load i32, i32* %5, align 4, !dbg !5333
  %10 = or i32 %9, %8, !dbg !5333
  store i32 %10, i32* %5, align 4, !dbg !5333
  %11 = load i32, i32* %3, align 4, !dbg !5334
  %12 = lshr i32 %11, 1, !dbg !5334
  store i32 %12, i32* %3, align 4, !dbg !5334
  %13 = load i32, i32* %5, align 4, !dbg !5335
  %14 = shl i32 %13, 1, !dbg !5335
  store i32 %14, i32* %5, align 4, !dbg !5335
  br label %15, !dbg !5336

15:                                               ; preds = %6
  %16 = load i32, i32* %4, align 4, !dbg !5337
  %17 = add nsw i32 %16, -1, !dbg !5337
  store i32 %17, i32* %4, align 4, !dbg !5337
  %18 = icmp sgt i32 %17, 0, !dbg !5338
  br i1 %18, label %6, label %19, !dbg !5336, !llvm.loop !5339

19:                                               ; preds = %15
  %20 = load i32, i32* %5, align 4, !dbg !5341
  %21 = lshr i32 %20, 1, !dbg !5342
  ret i32 %21, !dbg !5343
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @bi_windup() #0 !dbg !5344 {
  %1 = load i32, i32* @bi_valid, align 4, !dbg !5345
  %2 = icmp sgt i32 %1, 8, !dbg !5347
  br i1 %2, label %3, label %49, !dbg !5348

3:                                                ; preds = %0
  %4 = load i32, i32* @outcnt, align 4, !dbg !5349
  %5 = icmp ult i32 %4, 16382, !dbg !5349
  br i1 %5, label %6, label %23, !dbg !5353

6:                                                ; preds = %3
  %7 = load i16, i16* @bi_buf, align 2, !dbg !5354
  %8 = zext i16 %7 to i32, !dbg !5354
  %9 = and i32 %8, 255, !dbg !5354
  %10 = trunc i32 %9 to i8, !dbg !5354
  %11 = load i32, i32* @outcnt, align 4, !dbg !5354
  %12 = add i32 %11, 1, !dbg !5354
  store i32 %12, i32* @outcnt, align 4, !dbg !5354
  %13 = zext i32 %11 to i64, !dbg !5354
  %14 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %13, !dbg !5354
  store i8 %10, i8* %14, align 1, !dbg !5354
  %15 = load i16, i16* @bi_buf, align 2, !dbg !5354
  %16 = zext i16 %15 to i32, !dbg !5354
  %17 = ashr i32 %16, 8, !dbg !5354
  %18 = trunc i32 %17 to i8, !dbg !5354
  %19 = load i32, i32* @outcnt, align 4, !dbg !5354
  %20 = add i32 %19, 1, !dbg !5354
  store i32 %20, i32* @outcnt, align 4, !dbg !5354
  %21 = zext i32 %19 to i64, !dbg !5354
  %22 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %21, !dbg !5354
  store i8 %18, i8* %22, align 1, !dbg !5354
  br label %48, !dbg !5354

23:                                               ; preds = %3
  %24 = load i16, i16* @bi_buf, align 2, !dbg !5356
  %25 = zext i16 %24 to i32, !dbg !5356
  %26 = and i32 %25, 255, !dbg !5356
  %27 = trunc i32 %26 to i8, !dbg !5356
  %28 = load i32, i32* @outcnt, align 4, !dbg !5356
  %29 = add i32 %28, 1, !dbg !5356
  store i32 %29, i32* @outcnt, align 4, !dbg !5356
  %30 = zext i32 %28 to i64, !dbg !5356
  %31 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %30, !dbg !5356
  store i8 %27, i8* %31, align 1, !dbg !5356
  %32 = load i32, i32* @outcnt, align 4, !dbg !5359
  %33 = icmp eq i32 %32, 16384, !dbg !5359
  br i1 %33, label %34, label %35, !dbg !5356

34:                                               ; preds = %23
  call void @flush_outbuf(), !dbg !5359
  br label %35, !dbg !5359

35:                                               ; preds = %34, %23
  %36 = load i16, i16* @bi_buf, align 2, !dbg !5361
  %37 = zext i16 %36 to i32, !dbg !5361
  %38 = ashr i32 %37, 8, !dbg !5361
  %39 = trunc i32 %38 to i8, !dbg !5361
  %40 = load i32, i32* @outcnt, align 4, !dbg !5361
  %41 = add i32 %40, 1, !dbg !5361
  store i32 %41, i32* @outcnt, align 4, !dbg !5361
  %42 = zext i32 %40 to i64, !dbg !5361
  %43 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %42, !dbg !5361
  store i8 %39, i8* %43, align 1, !dbg !5361
  %44 = load i32, i32* @outcnt, align 4, !dbg !5363
  %45 = icmp eq i32 %44, 16384, !dbg !5363
  br i1 %45, label %46, label %47, !dbg !5361

46:                                               ; preds = %35
  call void @flush_outbuf(), !dbg !5363
  br label %47, !dbg !5363

47:                                               ; preds = %46, %35
  br label %48

48:                                               ; preds = %47, %6
  br label %64, !dbg !5365

49:                                               ; preds = %0
  %50 = load i32, i32* @bi_valid, align 4, !dbg !5366
  %51 = icmp sgt i32 %50, 0, !dbg !5368
  br i1 %51, label %52, label %63, !dbg !5369

52:                                               ; preds = %49
  %53 = load i16, i16* @bi_buf, align 2, !dbg !5370
  %54 = trunc i16 %53 to i8, !dbg !5370
  %55 = load i32, i32* @outcnt, align 4, !dbg !5370
  %56 = add i32 %55, 1, !dbg !5370
  store i32 %56, i32* @outcnt, align 4, !dbg !5370
  %57 = zext i32 %55 to i64, !dbg !5370
  %58 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %57, !dbg !5370
  store i8 %54, i8* %58, align 1, !dbg !5370
  %59 = load i32, i32* @outcnt, align 4, !dbg !5373
  %60 = icmp eq i32 %59, 16384, !dbg !5373
  br i1 %60, label %61, label %62, !dbg !5370

61:                                               ; preds = %52
  call void @flush_outbuf(), !dbg !5373
  br label %62, !dbg !5373

62:                                               ; preds = %61, %52
  br label %63, !dbg !5375

63:                                               ; preds = %62, %49
  br label %64

64:                                               ; preds = %63, %48
  store i16 0, i16* @bi_buf, align 2, !dbg !5376
  store i32 0, i32* @bi_valid, align 4, !dbg !5377
  ret void, !dbg !5378
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @copy_block(i8* noundef %0, i32 noundef %1, i32 noundef %2) #0 !dbg !5379 {
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !5382, metadata !DIExpression()), !dbg !5383
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !5384, metadata !DIExpression()), !dbg !5385
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !5386, metadata !DIExpression()), !dbg !5387
  call void @bi_windup(), !dbg !5388
  %7 = load i32, i32* %6, align 4, !dbg !5389
  %8 = icmp ne i32 %7, 0, !dbg !5389
  br i1 %8, label %9, label %112, !dbg !5391

9:                                                ; preds = %3
  %10 = load i32, i32* @outcnt, align 4, !dbg !5392
  %11 = icmp ult i32 %10, 16382, !dbg !5392
  br i1 %11, label %12, label %31, !dbg !5396

12:                                               ; preds = %9
  %13 = load i32, i32* %5, align 4, !dbg !5397
  %14 = trunc i32 %13 to i16, !dbg !5397
  %15 = zext i16 %14 to i32, !dbg !5397
  %16 = and i32 %15, 255, !dbg !5397
  %17 = trunc i32 %16 to i8, !dbg !5397
  %18 = load i32, i32* @outcnt, align 4, !dbg !5397
  %19 = add i32 %18, 1, !dbg !5397
  store i32 %19, i32* @outcnt, align 4, !dbg !5397
  %20 = zext i32 %18 to i64, !dbg !5397
  %21 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %20, !dbg !5397
  store i8 %17, i8* %21, align 1, !dbg !5397
  %22 = load i32, i32* %5, align 4, !dbg !5397
  %23 = trunc i32 %22 to i16, !dbg !5397
  %24 = zext i16 %23 to i32, !dbg !5397
  %25 = ashr i32 %24, 8, !dbg !5397
  %26 = trunc i32 %25 to i8, !dbg !5397
  %27 = load i32, i32* @outcnt, align 4, !dbg !5397
  %28 = add i32 %27, 1, !dbg !5397
  store i32 %28, i32* @outcnt, align 4, !dbg !5397
  %29 = zext i32 %27 to i64, !dbg !5397
  %30 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %29, !dbg !5397
  store i8 %26, i8* %30, align 1, !dbg !5397
  br label %58, !dbg !5397

31:                                               ; preds = %9
  %32 = load i32, i32* %5, align 4, !dbg !5399
  %33 = trunc i32 %32 to i16, !dbg !5399
  %34 = zext i16 %33 to i32, !dbg !5399
  %35 = and i32 %34, 255, !dbg !5399
  %36 = trunc i32 %35 to i8, !dbg !5399
  %37 = load i32, i32* @outcnt, align 4, !dbg !5399
  %38 = add i32 %37, 1, !dbg !5399
  store i32 %38, i32* @outcnt, align 4, !dbg !5399
  %39 = zext i32 %37 to i64, !dbg !5399
  %40 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %39, !dbg !5399
  store i8 %36, i8* %40, align 1, !dbg !5399
  %41 = load i32, i32* @outcnt, align 4, !dbg !5402
  %42 = icmp eq i32 %41, 16384, !dbg !5402
  br i1 %42, label %43, label %44, !dbg !5399

43:                                               ; preds = %31
  call void @flush_outbuf(), !dbg !5402
  br label %44, !dbg !5402

44:                                               ; preds = %43, %31
  %45 = load i32, i32* %5, align 4, !dbg !5404
  %46 = trunc i32 %45 to i16, !dbg !5404
  %47 = zext i16 %46 to i32, !dbg !5404
  %48 = ashr i32 %47, 8, !dbg !5404
  %49 = trunc i32 %48 to i8, !dbg !5404
  %50 = load i32, i32* @outcnt, align 4, !dbg !5404
  %51 = add i32 %50, 1, !dbg !5404
  store i32 %51, i32* @outcnt, align 4, !dbg !5404
  %52 = zext i32 %50 to i64, !dbg !5404
  %53 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %52, !dbg !5404
  store i8 %49, i8* %53, align 1, !dbg !5404
  %54 = load i32, i32* @outcnt, align 4, !dbg !5406
  %55 = icmp eq i32 %54, 16384, !dbg !5406
  br i1 %55, label %56, label %57, !dbg !5404

56:                                               ; preds = %44
  call void @flush_outbuf(), !dbg !5406
  br label %57, !dbg !5406

57:                                               ; preds = %56, %44
  br label %58

58:                                               ; preds = %57, %12
  %59 = load i32, i32* @outcnt, align 4, !dbg !5408
  %60 = icmp ult i32 %59, 16382, !dbg !5408
  br i1 %60, label %61, label %82, !dbg !5411

61:                                               ; preds = %58
  %62 = load i32, i32* %5, align 4, !dbg !5412
  %63 = xor i32 %62, -1, !dbg !5412
  %64 = trunc i32 %63 to i16, !dbg !5412
  %65 = zext i16 %64 to i32, !dbg !5412
  %66 = and i32 %65, 255, !dbg !5412
  %67 = trunc i32 %66 to i8, !dbg !5412
  %68 = load i32, i32* @outcnt, align 4, !dbg !5412
  %69 = add i32 %68, 1, !dbg !5412
  store i32 %69, i32* @outcnt, align 4, !dbg !5412
  %70 = zext i32 %68 to i64, !dbg !5412
  %71 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %70, !dbg !5412
  store i8 %67, i8* %71, align 1, !dbg !5412
  %72 = load i32, i32* %5, align 4, !dbg !5412
  %73 = xor i32 %72, -1, !dbg !5412
  %74 = trunc i32 %73 to i16, !dbg !5412
  %75 = zext i16 %74 to i32, !dbg !5412
  %76 = ashr i32 %75, 8, !dbg !5412
  %77 = trunc i32 %76 to i8, !dbg !5412
  %78 = load i32, i32* @outcnt, align 4, !dbg !5412
  %79 = add i32 %78, 1, !dbg !5412
  store i32 %79, i32* @outcnt, align 4, !dbg !5412
  %80 = zext i32 %78 to i64, !dbg !5412
  %81 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %80, !dbg !5412
  store i8 %77, i8* %81, align 1, !dbg !5412
  br label %111, !dbg !5412

82:                                               ; preds = %58
  %83 = load i32, i32* %5, align 4, !dbg !5414
  %84 = xor i32 %83, -1, !dbg !5414
  %85 = trunc i32 %84 to i16, !dbg !5414
  %86 = zext i16 %85 to i32, !dbg !5414
  %87 = and i32 %86, 255, !dbg !5414
  %88 = trunc i32 %87 to i8, !dbg !5414
  %89 = load i32, i32* @outcnt, align 4, !dbg !5414
  %90 = add i32 %89, 1, !dbg !5414
  store i32 %90, i32* @outcnt, align 4, !dbg !5414
  %91 = zext i32 %89 to i64, !dbg !5414
  %92 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %91, !dbg !5414
  store i8 %88, i8* %92, align 1, !dbg !5414
  %93 = load i32, i32* @outcnt, align 4, !dbg !5417
  %94 = icmp eq i32 %93, 16384, !dbg !5417
  br i1 %94, label %95, label %96, !dbg !5414

95:                                               ; preds = %82
  call void @flush_outbuf(), !dbg !5417
  br label %96, !dbg !5417

96:                                               ; preds = %95, %82
  %97 = load i32, i32* %5, align 4, !dbg !5419
  %98 = xor i32 %97, -1, !dbg !5419
  %99 = trunc i32 %98 to i16, !dbg !5419
  %100 = zext i16 %99 to i32, !dbg !5419
  %101 = ashr i32 %100, 8, !dbg !5419
  %102 = trunc i32 %101 to i8, !dbg !5419
  %103 = load i32, i32* @outcnt, align 4, !dbg !5419
  %104 = add i32 %103, 1, !dbg !5419
  store i32 %104, i32* @outcnt, align 4, !dbg !5419
  %105 = zext i32 %103 to i64, !dbg !5419
  %106 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %105, !dbg !5419
  store i8 %102, i8* %106, align 1, !dbg !5419
  %107 = load i32, i32* @outcnt, align 4, !dbg !5421
  %108 = icmp eq i32 %107, 16384, !dbg !5421
  br i1 %108, label %109, label %110, !dbg !5419

109:                                              ; preds = %96
  call void @flush_outbuf(), !dbg !5421
  br label %110, !dbg !5421

110:                                              ; preds = %109, %96
  br label %111

111:                                              ; preds = %110, %61
  br label %112, !dbg !5423

112:                                              ; preds = %111, %3
  br label %113, !dbg !5424

113:                                              ; preds = %128, %112
  %114 = load i32, i32* %5, align 4, !dbg !5425
  %115 = add i32 %114, -1, !dbg !5425
  store i32 %115, i32* %5, align 4, !dbg !5425
  %116 = icmp ne i32 %114, 0, !dbg !5424
  br i1 %116, label %117, label %129, !dbg !5424

117:                                              ; preds = %113
  %118 = load i8*, i8** %4, align 8, !dbg !5426
  %119 = getelementptr inbounds i8, i8* %118, i32 1, !dbg !5426
  store i8* %119, i8** %4, align 8, !dbg !5426
  %120 = load i8, i8* %118, align 1, !dbg !5426
  %121 = load i32, i32* @outcnt, align 4, !dbg !5426
  %122 = add i32 %121, 1, !dbg !5426
  store i32 %122, i32* @outcnt, align 4, !dbg !5426
  %123 = zext i32 %121 to i64, !dbg !5426
  %124 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %123, !dbg !5426
  store i8 %120, i8* %124, align 1, !dbg !5426
  %125 = load i32, i32* @outcnt, align 4, !dbg !5429
  %126 = icmp eq i32 %125, 16384, !dbg !5429
  br i1 %126, label %127, label %128, !dbg !5426

127:                                              ; preds = %117
  call void @flush_outbuf(), !dbg !5429
  br label %128, !dbg !5429

128:                                              ; preds = %127, %117
  br label %113, !dbg !5424, !llvm.loop !5431

129:                                              ; preds = %113
  ret void, !dbg !5433
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @check_zipfile(i32 noundef %0) #0 !dbg !5434 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !5435, metadata !DIExpression()), !dbg !5436
  call void @llvm.dbg.declare(metadata i8** %4, metadata !5437, metadata !DIExpression()), !dbg !5438
  %5 = load i32, i32* @inptr, align 4, !dbg !5439
  %6 = zext i32 %5 to i64, !dbg !5440
  %7 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 0), i64 %6, !dbg !5440
  store i8* %7, i8** %4, align 8, !dbg !5438
  %8 = load i32, i32* %3, align 4, !dbg !5441
  store i32 %8, i32* @ifd, align 4, !dbg !5442
  %9 = load i8*, i8** %4, align 8, !dbg !5443
  %10 = getelementptr inbounds i8, i8* %9, i64 26, !dbg !5443
  %11 = getelementptr inbounds i8, i8* %10, i64 0, !dbg !5443
  %12 = load i8, i8* %11, align 1, !dbg !5443
  %13 = zext i8 %12 to i16, !dbg !5443
  %14 = zext i16 %13 to i32, !dbg !5443
  %15 = load i8*, i8** %4, align 8, !dbg !5443
  %16 = getelementptr inbounds i8, i8* %15, i64 26, !dbg !5443
  %17 = getelementptr inbounds i8, i8* %16, i64 1, !dbg !5443
  %18 = load i8, i8* %17, align 1, !dbg !5443
  %19 = zext i8 %18 to i16, !dbg !5443
  %20 = zext i16 %19 to i32, !dbg !5443
  %21 = shl i32 %20, 8, !dbg !5443
  %22 = or i32 %14, %21, !dbg !5443
  %23 = add nsw i32 30, %22, !dbg !5444
  %24 = load i8*, i8** %4, align 8, !dbg !5445
  %25 = getelementptr inbounds i8, i8* %24, i64 28, !dbg !5445
  %26 = getelementptr inbounds i8, i8* %25, i64 0, !dbg !5445
  %27 = load i8, i8* %26, align 1, !dbg !5445
  %28 = zext i8 %27 to i16, !dbg !5445
  %29 = zext i16 %28 to i32, !dbg !5445
  %30 = load i8*, i8** %4, align 8, !dbg !5445
  %31 = getelementptr inbounds i8, i8* %30, i64 28, !dbg !5445
  %32 = getelementptr inbounds i8, i8* %31, i64 1, !dbg !5445
  %33 = load i8, i8* %32, align 1, !dbg !5445
  %34 = zext i8 %33 to i16, !dbg !5445
  %35 = zext i16 %34 to i32, !dbg !5445
  %36 = shl i32 %35, 8, !dbg !5445
  %37 = or i32 %29, %36, !dbg !5445
  %38 = add nsw i32 %23, %37, !dbg !5446
  %39 = load i32, i32* @inptr, align 4, !dbg !5447
  %40 = add i32 %39, %38, !dbg !5447
  store i32 %40, i32* @inptr, align 4, !dbg !5447
  %41 = load i32, i32* @inptr, align 4, !dbg !5448
  %42 = load i32, i32* @insize, align 4, !dbg !5450
  %43 = icmp ugt i32 %41, %42, !dbg !5451
  br i1 %43, label %76, label %44, !dbg !5452

44:                                               ; preds = %1
  %45 = load i8*, i8** %4, align 8, !dbg !5453
  %46 = getelementptr inbounds i8, i8* %45, i64 0, !dbg !5453
  %47 = load i8, i8* %46, align 1, !dbg !5453
  %48 = zext i8 %47 to i16, !dbg !5453
  %49 = zext i16 %48 to i32, !dbg !5453
  %50 = load i8*, i8** %4, align 8, !dbg !5453
  %51 = getelementptr inbounds i8, i8* %50, i64 1, !dbg !5453
  %52 = load i8, i8* %51, align 1, !dbg !5453
  %53 = zext i8 %52 to i16, !dbg !5453
  %54 = zext i16 %53 to i32, !dbg !5453
  %55 = shl i32 %54, 8, !dbg !5453
  %56 = or i32 %49, %55, !dbg !5453
  %57 = sext i32 %56 to i64, !dbg !5453
  %58 = load i8*, i8** %4, align 8, !dbg !5453
  %59 = getelementptr inbounds i8, i8* %58, i64 2, !dbg !5453
  %60 = getelementptr inbounds i8, i8* %59, i64 0, !dbg !5453
  %61 = load i8, i8* %60, align 1, !dbg !5453
  %62 = zext i8 %61 to i16, !dbg !5453
  %63 = zext i16 %62 to i32, !dbg !5453
  %64 = load i8*, i8** %4, align 8, !dbg !5453
  %65 = getelementptr inbounds i8, i8* %64, i64 2, !dbg !5453
  %66 = getelementptr inbounds i8, i8* %65, i64 1, !dbg !5453
  %67 = load i8, i8* %66, align 1, !dbg !5453
  %68 = zext i8 %67 to i16, !dbg !5453
  %69 = zext i16 %68 to i32, !dbg !5453
  %70 = shl i32 %69, 8, !dbg !5453
  %71 = or i32 %63, %70, !dbg !5453
  %72 = sext i32 %71 to i64, !dbg !5453
  %73 = shl i64 %72, 16, !dbg !5453
  %74 = or i64 %57, %73, !dbg !5453
  %75 = icmp ne i64 %74, 67324752, !dbg !5454
  br i1 %75, label %76, label %80, !dbg !5455

76:                                               ; preds = %44, %1
  %77 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !5456
  %78 = load i8*, i8** @progname, align 8, !dbg !5458
  %79 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %77, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.177, i64 0, i64 0), i8* noundef %78, i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0)), !dbg !5459
  store i32 1, i32* @exit_code, align 4, !dbg !5460
  store i32 1, i32* %2, align 4, !dbg !5461
  br label %113, !dbg !5461

80:                                               ; preds = %44
  %81 = load i8*, i8** %4, align 8, !dbg !5462
  %82 = getelementptr inbounds i8, i8* %81, i64 8, !dbg !5462
  %83 = load i8, i8* %82, align 1, !dbg !5462
  %84 = zext i8 %83 to i32, !dbg !5462
  store i32 %84, i32* @method, align 4, !dbg !5463
  %85 = load i32, i32* @method, align 4, !dbg !5464
  %86 = icmp ne i32 %85, 0, !dbg !5466
  br i1 %86, label %87, label %94, !dbg !5467

87:                                               ; preds = %80
  %88 = load i32, i32* @method, align 4, !dbg !5468
  %89 = icmp ne i32 %88, 8, !dbg !5469
  br i1 %89, label %90, label %94, !dbg !5470

90:                                               ; preds = %87
  %91 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !5471
  %92 = load i8*, i8** @progname, align 8, !dbg !5473
  %93 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %91, i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.178, i64 0, i64 0), i8* noundef %92, i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0)), !dbg !5474
  store i32 1, i32* @exit_code, align 4, !dbg !5475
  store i32 1, i32* %2, align 4, !dbg !5476
  br label %113, !dbg !5476

94:                                               ; preds = %87, %80
  %95 = load i8*, i8** %4, align 8, !dbg !5477
  %96 = getelementptr inbounds i8, i8* %95, i64 6, !dbg !5477
  %97 = load i8, i8* %96, align 1, !dbg !5477
  %98 = zext i8 %97 to i32, !dbg !5477
  %99 = and i32 %98, 1, !dbg !5479
  store i32 %99, i32* @decrypt, align 4, !dbg !5480
  %100 = icmp ne i32 %99, 0, !dbg !5481
  br i1 %100, label %101, label %105, !dbg !5482

101:                                              ; preds = %94
  %102 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !5483
  %103 = load i8*, i8** @progname, align 8, !dbg !5485
  %104 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %102, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.179, i64 0, i64 0), i8* noundef %103, i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0)), !dbg !5486
  store i32 1, i32* @exit_code, align 4, !dbg !5487
  store i32 1, i32* %2, align 4, !dbg !5488
  br label %113, !dbg !5488

105:                                              ; preds = %94
  %106 = load i8*, i8** %4, align 8, !dbg !5489
  %107 = getelementptr inbounds i8, i8* %106, i64 6, !dbg !5489
  %108 = load i8, i8* %107, align 1, !dbg !5489
  %109 = zext i8 %108 to i32, !dbg !5489
  %110 = and i32 %109, 8, !dbg !5490
  %111 = icmp ne i32 %110, 0, !dbg !5491
  %112 = zext i1 %111 to i32, !dbg !5491
  store i32 %112, i32* @ext_header, align 4, !dbg !5492
  store i32 1, i32* @pkzip, align 4, !dbg !5493
  store i32 0, i32* %2, align 4, !dbg !5494
  br label %113, !dbg !5494

113:                                              ; preds = %105, %101, %90, %76
  %114 = load i32, i32* %2, align 4, !dbg !5495
  ret i32 %114, !dbg !5495
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @unzip(i32 noundef %0, i32 noundef %1) #0 !dbg !5496 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca [16 x i8], align 16
  %10 = alloca i32, align 4
  %11 = alloca i64, align 8
  %12 = alloca i8, align 1
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !5497, metadata !DIExpression()), !dbg !5498
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !5499, metadata !DIExpression()), !dbg !5500
  call void @llvm.dbg.declare(metadata i64* %6, metadata !5501, metadata !DIExpression()), !dbg !5502
  store i64 0, i64* %6, align 8, !dbg !5502
  call void @llvm.dbg.declare(metadata i64* %7, metadata !5503, metadata !DIExpression()), !dbg !5504
  store i64 0, i64* %7, align 8, !dbg !5504
  call void @llvm.dbg.declare(metadata i32* %8, metadata !5505, metadata !DIExpression()), !dbg !5506
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !5507, metadata !DIExpression()), !dbg !5509
  %13 = load i32, i32* %4, align 4, !dbg !5510
  store i32 %13, i32* @ifd, align 4, !dbg !5511
  %14 = load i32, i32* %5, align 4, !dbg !5512
  store i32 %14, i32* @ofd, align 4, !dbg !5513
  %15 = call i64 @updcrc(i8* noundef null, i32 noundef 0), !dbg !5514
  %16 = load i32, i32* @pkzip, align 4, !dbg !5515
  %17 = icmp ne i32 %16, 0, !dbg !5515
  br i1 %17, label %18, label %62, !dbg !5517

18:                                               ; preds = %2
  %19 = load i32, i32* @ext_header, align 4, !dbg !5518
  %20 = icmp ne i32 %19, 0, !dbg !5518
  br i1 %20, label %62, label %21, !dbg !5519

21:                                               ; preds = %18
  %22 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 14), align 1, !dbg !5520
  %23 = zext i8 %22 to i16, !dbg !5520
  %24 = zext i16 %23 to i32, !dbg !5520
  %25 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 15), align 1, !dbg !5520
  %26 = zext i8 %25 to i16, !dbg !5520
  %27 = zext i16 %26 to i32, !dbg !5520
  %28 = shl i32 %27, 8, !dbg !5520
  %29 = or i32 %24, %28, !dbg !5520
  %30 = sext i32 %29 to i64, !dbg !5520
  %31 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 16), align 1, !dbg !5520
  %32 = zext i8 %31 to i16, !dbg !5520
  %33 = zext i16 %32 to i32, !dbg !5520
  %34 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 17), align 1, !dbg !5520
  %35 = zext i8 %34 to i16, !dbg !5520
  %36 = zext i16 %35 to i32, !dbg !5520
  %37 = shl i32 %36, 8, !dbg !5520
  %38 = or i32 %33, %37, !dbg !5520
  %39 = sext i32 %38 to i64, !dbg !5520
  %40 = shl i64 %39, 16, !dbg !5520
  %41 = or i64 %30, %40, !dbg !5520
  store i64 %41, i64* %6, align 8, !dbg !5522
  %42 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 22), align 1, !dbg !5523
  %43 = zext i8 %42 to i16, !dbg !5523
  %44 = zext i16 %43 to i32, !dbg !5523
  %45 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 23), align 1, !dbg !5523
  %46 = zext i8 %45 to i16, !dbg !5523
  %47 = zext i16 %46 to i32, !dbg !5523
  %48 = shl i32 %47, 8, !dbg !5523
  %49 = or i32 %44, %48, !dbg !5523
  %50 = sext i32 %49 to i64, !dbg !5523
  %51 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 24), align 1, !dbg !5523
  %52 = zext i8 %51 to i16, !dbg !5523
  %53 = zext i16 %52 to i32, !dbg !5523
  %54 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 25), align 1, !dbg !5523
  %55 = zext i8 %54 to i16, !dbg !5523
  %56 = zext i16 %55 to i32, !dbg !5523
  %57 = shl i32 %56, 8, !dbg !5523
  %58 = or i32 %53, %57, !dbg !5523
  %59 = sext i32 %58 to i64, !dbg !5523
  %60 = shl i64 %59, 16, !dbg !5523
  %61 = or i64 %50, %60, !dbg !5523
  store i64 %61, i64* %7, align 8, !dbg !5524
  br label %62, !dbg !5525

62:                                               ; preds = %21, %18, %2
  %63 = load i32, i32* @method, align 4, !dbg !5526
  %64 = icmp eq i32 %63, 8, !dbg !5528
  br i1 %64, label %65, label %76, !dbg !5529

65:                                               ; preds = %62
  call void @llvm.dbg.declare(metadata i32* %10, metadata !5530, metadata !DIExpression()), !dbg !5532
  %66 = call i32 @inflate(), !dbg !5533
  store i32 %66, i32* %10, align 4, !dbg !5532
  %67 = load i32, i32* %10, align 4, !dbg !5534
  %68 = icmp eq i32 %67, 3, !dbg !5536
  br i1 %68, label %69, label %70, !dbg !5537

69:                                               ; preds = %65
  call void @error(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.182, i64 0, i64 0)), !dbg !5538
  br label %75, !dbg !5540

70:                                               ; preds = %65
  %71 = load i32, i32* %10, align 4, !dbg !5541
  %72 = icmp ne i32 %71, 0, !dbg !5543
  br i1 %72, label %73, label %74, !dbg !5544

73:                                               ; preds = %70
  call void @error(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.4.183, i64 0, i64 0)), !dbg !5545
  br label %74, !dbg !5547

74:                                               ; preds = %73, %70
  br label %75

75:                                               ; preds = %74, %69
  br label %188, !dbg !5548

76:                                               ; preds = %62
  %77 = load i32, i32* @pkzip, align 4, !dbg !5549
  %78 = icmp ne i32 %77, 0, !dbg !5549
  br i1 %78, label %79, label %186, !dbg !5551

79:                                               ; preds = %76
  %80 = load i32, i32* @method, align 4, !dbg !5552
  %81 = icmp eq i32 %80, 0, !dbg !5553
  br i1 %81, label %82, label %186, !dbg !5554

82:                                               ; preds = %79
  call void @llvm.dbg.declare(metadata i64* %11, metadata !5555, metadata !DIExpression()), !dbg !5557
  %83 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 22), align 1, !dbg !5558
  %84 = zext i8 %83 to i16, !dbg !5558
  %85 = zext i16 %84 to i32, !dbg !5558
  %86 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 23), align 1, !dbg !5558
  %87 = zext i8 %86 to i16, !dbg !5558
  %88 = zext i16 %87 to i32, !dbg !5558
  %89 = shl i32 %88, 8, !dbg !5558
  %90 = or i32 %85, %89, !dbg !5558
  %91 = sext i32 %90 to i64, !dbg !5558
  %92 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 24), align 1, !dbg !5558
  %93 = zext i8 %92 to i16, !dbg !5558
  %94 = zext i16 %93 to i32, !dbg !5558
  %95 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 25), align 1, !dbg !5558
  %96 = zext i8 %95 to i16, !dbg !5558
  %97 = zext i16 %96 to i32, !dbg !5558
  %98 = shl i32 %97, 8, !dbg !5558
  %99 = or i32 %94, %98, !dbg !5558
  %100 = sext i32 %99 to i64, !dbg !5558
  %101 = shl i64 %100, 16, !dbg !5558
  %102 = or i64 %91, %101, !dbg !5558
  store i64 %102, i64* %11, align 8, !dbg !5557
  %103 = load i64, i64* %11, align 8, !dbg !5559
  %104 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 18), align 1, !dbg !5561
  %105 = zext i8 %104 to i16, !dbg !5561
  %106 = zext i16 %105 to i32, !dbg !5561
  %107 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 19), align 1, !dbg !5561
  %108 = zext i8 %107 to i16, !dbg !5561
  %109 = zext i16 %108 to i32, !dbg !5561
  %110 = shl i32 %109, 8, !dbg !5561
  %111 = or i32 %106, %110, !dbg !5561
  %112 = sext i32 %111 to i64, !dbg !5561
  %113 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 20), align 1, !dbg !5561
  %114 = zext i8 %113 to i16, !dbg !5561
  %115 = zext i16 %114 to i32, !dbg !5561
  %116 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 21), align 1, !dbg !5561
  %117 = zext i8 %116 to i16, !dbg !5561
  %118 = zext i16 %117 to i32, !dbg !5561
  %119 = shl i32 %118, 8, !dbg !5561
  %120 = or i32 %115, %119, !dbg !5561
  %121 = sext i32 %120 to i64, !dbg !5561
  %122 = shl i64 %121, 16, !dbg !5561
  %123 = or i64 %112, %122, !dbg !5561
  %124 = load i32, i32* @decrypt, align 4, !dbg !5562
  %125 = icmp ne i32 %124, 0, !dbg !5562
  %126 = zext i1 %125 to i64, !dbg !5562
  %127 = select i1 %125, i32 12, i32 0, !dbg !5562
  %128 = sext i32 %127 to i64, !dbg !5563
  %129 = sub i64 %123, %128, !dbg !5564
  %130 = icmp ne i64 %103, %129, !dbg !5565
  br i1 %130, label %131, label %155, !dbg !5566

131:                                              ; preds = %82
  %132 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !5567
  %133 = load i64, i64* %11, align 8, !dbg !5569
  %134 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 18), align 1, !dbg !5570
  %135 = zext i8 %134 to i16, !dbg !5570
  %136 = zext i16 %135 to i32, !dbg !5570
  %137 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 19), align 1, !dbg !5570
  %138 = zext i8 %137 to i16, !dbg !5570
  %139 = zext i16 %138 to i32, !dbg !5570
  %140 = shl i32 %139, 8, !dbg !5570
  %141 = or i32 %136, %140, !dbg !5570
  %142 = sext i32 %141 to i64, !dbg !5570
  %143 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 20), align 1, !dbg !5570
  %144 = zext i8 %143 to i16, !dbg !5570
  %145 = zext i16 %144 to i32, !dbg !5570
  %146 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 21), align 1, !dbg !5570
  %147 = zext i8 %146 to i16, !dbg !5570
  %148 = zext i16 %147 to i32, !dbg !5570
  %149 = shl i32 %148, 8, !dbg !5570
  %150 = or i32 %145, %149, !dbg !5570
  %151 = sext i32 %150 to i64, !dbg !5570
  %152 = shl i64 %151, 16, !dbg !5570
  %153 = or i64 %142, %152, !dbg !5570
  %154 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %132, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5.184, i64 0, i64 0), i64 noundef %133, i64 noundef %153), !dbg !5571
  call void @error(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.6.185, i64 0, i64 0)), !dbg !5572
  br label %155, !dbg !5573

155:                                              ; preds = %131, %82
  br label %156, !dbg !5574

156:                                              ; preds = %184, %155
  %157 = load i64, i64* %11, align 8, !dbg !5575
  %158 = add i64 %157, -1, !dbg !5575
  store i64 %158, i64* %11, align 8, !dbg !5575
  %159 = icmp ne i64 %157, 0, !dbg !5574
  br i1 %159, label %160, label %185, !dbg !5574

160:                                              ; preds = %156
  call void @llvm.dbg.declare(metadata i8* %12, metadata !5576, metadata !DIExpression()), !dbg !5578
  %161 = load i32, i32* @inptr, align 4, !dbg !5579
  %162 = load i32, i32* @insize, align 4, !dbg !5579
  %163 = icmp ult i32 %161, %162, !dbg !5579
  br i1 %163, label %164, label %171, !dbg !5579

164:                                              ; preds = %160
  %165 = load i32, i32* @inptr, align 4, !dbg !5579
  %166 = add i32 %165, 1, !dbg !5579
  store i32 %166, i32* @inptr, align 4, !dbg !5579
  %167 = zext i32 %165 to i64, !dbg !5579
  %168 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i64 0, i64 %167, !dbg !5579
  %169 = load i8, i8* %168, align 1, !dbg !5579
  %170 = zext i8 %169 to i32, !dbg !5579
  br label %173, !dbg !5579

171:                                              ; preds = %160
  %172 = call i32 @fill_inbuf(i32 noundef 0), !dbg !5579
  br label %173, !dbg !5579

173:                                              ; preds = %171, %164
  %174 = phi i32 [ %170, %164 ], [ %172, %171 ], !dbg !5579
  %175 = trunc i32 %174 to i8, !dbg !5580
  store i8 %175, i8* %12, align 1, !dbg !5578
  %176 = load i8, i8* %12, align 1, !dbg !5581
  %177 = load i32, i32* @outcnt, align 4, !dbg !5581
  %178 = add i32 %177, 1, !dbg !5581
  store i32 %178, i32* @outcnt, align 4, !dbg !5581
  %179 = zext i32 %177 to i64, !dbg !5581
  %180 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i64 0, i64 %179, !dbg !5581
  store i8 %176, i8* %180, align 1, !dbg !5581
  %181 = load i32, i32* @outcnt, align 4, !dbg !5583
  %182 = icmp eq i32 %181, 32768, !dbg !5583
  br i1 %182, label %183, label %184, !dbg !5581

183:                                              ; preds = %173
  call void @flush_window(), !dbg !5583
  br label %184, !dbg !5583

184:                                              ; preds = %183, %173
  br label %156, !dbg !5574, !llvm.loop !5585

185:                                              ; preds = %156
  call void @flush_window(), !dbg !5587
  br label %187, !dbg !5588

186:                                              ; preds = %79, %76
  call void @error(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.7.186, i64 0, i64 0)), !dbg !5589
  br label %187

187:                                              ; preds = %186, %185
  br label %188

188:                                              ; preds = %187, %75
  %189 = load i32, i32* @pkzip, align 4, !dbg !5591
  %190 = icmp ne i32 %189, 0, !dbg !5591
  br i1 %190, label %280, label %191, !dbg !5593

191:                                              ; preds = %188
  store i32 0, i32* %8, align 4, !dbg !5594
  br label %192, !dbg !5597

192:                                              ; preds = %214, %191
  %193 = load i32, i32* %8, align 4, !dbg !5598
  %194 = icmp slt i32 %193, 8, !dbg !5600
  br i1 %194, label %195, label %217, !dbg !5601

195:                                              ; preds = %192
  %196 = load i32, i32* @inptr, align 4, !dbg !5602
  %197 = load i32, i32* @insize, align 4, !dbg !5602
  %198 = icmp ult i32 %196, %197, !dbg !5602
  br i1 %198, label %199, label %206, !dbg !5602

199:                                              ; preds = %195
  %200 = load i32, i32* @inptr, align 4, !dbg !5602
  %201 = add i32 %200, 1, !dbg !5602
  store i32 %201, i32* @inptr, align 4, !dbg !5602
  %202 = zext i32 %200 to i64, !dbg !5602
  %203 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i64 0, i64 %202, !dbg !5602
  %204 = load i8, i8* %203, align 1, !dbg !5602
  %205 = zext i8 %204 to i32, !dbg !5602
  br label %208, !dbg !5602

206:                                              ; preds = %195
  %207 = call i32 @fill_inbuf(i32 noundef 0), !dbg !5602
  br label %208, !dbg !5602

208:                                              ; preds = %206, %199
  %209 = phi i32 [ %205, %199 ], [ %207, %206 ], !dbg !5602
  %210 = trunc i32 %209 to i8, !dbg !5604
  %211 = load i32, i32* %8, align 4, !dbg !5605
  %212 = sext i32 %211 to i64, !dbg !5606
  %213 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i64 0, i64 %212, !dbg !5606
  store i8 %210, i8* %213, align 1, !dbg !5607
  br label %214, !dbg !5608

214:                                              ; preds = %208
  %215 = load i32, i32* %8, align 4, !dbg !5609
  %216 = add nsw i32 %215, 1, !dbg !5609
  store i32 %216, i32* %8, align 4, !dbg !5609
  br label %192, !dbg !5610, !llvm.loop !5611

217:                                              ; preds = %192
  %218 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i64 0, i64 0, !dbg !5613
  %219 = load i8, i8* %218, align 16, !dbg !5613
  %220 = zext i8 %219 to i16, !dbg !5613
  %221 = zext i16 %220 to i32, !dbg !5613
  %222 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i64 0, i64 1, !dbg !5613
  %223 = load i8, i8* %222, align 1, !dbg !5613
  %224 = zext i8 %223 to i16, !dbg !5613
  %225 = zext i16 %224 to i32, !dbg !5613
  %226 = shl i32 %225, 8, !dbg !5613
  %227 = or i32 %221, %226, !dbg !5613
  %228 = sext i32 %227 to i64, !dbg !5613
  %229 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i64 0, i64 0, !dbg !5613
  %230 = getelementptr inbounds i8, i8* %229, i64 2, !dbg !5613
  %231 = getelementptr inbounds i8, i8* %230, i64 0, !dbg !5613
  %232 = load i8, i8* %231, align 1, !dbg !5613
  %233 = zext i8 %232 to i16, !dbg !5613
  %234 = zext i16 %233 to i32, !dbg !5613
  %235 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i64 0, i64 0, !dbg !5613
  %236 = getelementptr inbounds i8, i8* %235, i64 2, !dbg !5613
  %237 = getelementptr inbounds i8, i8* %236, i64 1, !dbg !5613
  %238 = load i8, i8* %237, align 1, !dbg !5613
  %239 = zext i8 %238 to i16, !dbg !5613
  %240 = zext i16 %239 to i32, !dbg !5613
  %241 = shl i32 %240, 8, !dbg !5613
  %242 = or i32 %234, %241, !dbg !5613
  %243 = sext i32 %242 to i64, !dbg !5613
  %244 = shl i64 %243, 16, !dbg !5613
  %245 = or i64 %228, %244, !dbg !5613
  store i64 %245, i64* %6, align 8, !dbg !5614
  %246 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i64 0, i64 0, !dbg !5615
  %247 = getelementptr inbounds i8, i8* %246, i64 4, !dbg !5615
  %248 = getelementptr inbounds i8, i8* %247, i64 0, !dbg !5615
  %249 = load i8, i8* %248, align 1, !dbg !5615
  %250 = zext i8 %249 to i16, !dbg !5615
  %251 = zext i16 %250 to i32, !dbg !5615
  %252 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i64 0, i64 0, !dbg !5615
  %253 = getelementptr inbounds i8, i8* %252, i64 4, !dbg !5615
  %254 = getelementptr inbounds i8, i8* %253, i64 1, !dbg !5615
  %255 = load i8, i8* %254, align 1, !dbg !5615
  %256 = zext i8 %255 to i16, !dbg !5615
  %257 = zext i16 %256 to i32, !dbg !5615
  %258 = shl i32 %257, 8, !dbg !5615
  %259 = or i32 %251, %258, !dbg !5615
  %260 = sext i32 %259 to i64, !dbg !5615
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i64 0, i64 0, !dbg !5615
  %262 = getelementptr inbounds i8, i8* %261, i64 4, !dbg !5615
  %263 = getelementptr inbounds i8, i8* %262, i64 2, !dbg !5615
  %264 = getelementptr inbounds i8, i8* %263, i64 0, !dbg !5615
  %265 = load i8, i8* %264, align 1, !dbg !5615
  %266 = zext i8 %265 to i16, !dbg !5615
  %267 = zext i16 %266 to i32, !dbg !5615
  %268 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i64 0, i64 0, !dbg !5615
  %269 = getelementptr inbounds i8, i8* %268, i64 4, !dbg !5615
  %270 = getelementptr inbounds i8, i8* %269, i64 2, !dbg !5615
  %271 = getelementptr inbounds i8, i8* %270, i64 1, !dbg !5615
  %272 = load i8, i8* %271, align 1, !dbg !5615
  %273 = zext i8 %272 to i16, !dbg !5615
  %274 = zext i16 %273 to i32, !dbg !5615
  %275 = shl i32 %274, 8, !dbg !5615
  %276 = or i32 %267, %275, !dbg !5615
  %277 = sext i32 %276 to i64, !dbg !5615
  %278 = shl i64 %277, 16, !dbg !5615
  %279 = or i64 %260, %278, !dbg !5615
  store i64 %279, i64* %7, align 8, !dbg !5616
  br label %379, !dbg !5617

280:                                              ; preds = %188
  %281 = load i32, i32* @ext_header, align 4, !dbg !5618
  %282 = icmp ne i32 %281, 0, !dbg !5618
  br i1 %282, label %283, label %378, !dbg !5620

283:                                              ; preds = %280
  store i32 0, i32* %8, align 4, !dbg !5621
  br label %284, !dbg !5624

284:                                              ; preds = %306, %283
  %285 = load i32, i32* %8, align 4, !dbg !5625
  %286 = icmp slt i32 %285, 16, !dbg !5627
  br i1 %286, label %287, label %309, !dbg !5628

287:                                              ; preds = %284
  %288 = load i32, i32* @inptr, align 4, !dbg !5629
  %289 = load i32, i32* @insize, align 4, !dbg !5629
  %290 = icmp ult i32 %288, %289, !dbg !5629
  br i1 %290, label %291, label %298, !dbg !5629

291:                                              ; preds = %287
  %292 = load i32, i32* @inptr, align 4, !dbg !5629
  %293 = add i32 %292, 1, !dbg !5629
  store i32 %293, i32* @inptr, align 4, !dbg !5629
  %294 = zext i32 %292 to i64, !dbg !5629
  %295 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i64 0, i64 %294, !dbg !5629
  %296 = load i8, i8* %295, align 1, !dbg !5629
  %297 = zext i8 %296 to i32, !dbg !5629
  br label %300, !dbg !5629

298:                                              ; preds = %287
  %299 = call i32 @fill_inbuf(i32 noundef 0), !dbg !5629
  br label %300, !dbg !5629

300:                                              ; preds = %298, %291
  %301 = phi i32 [ %297, %291 ], [ %299, %298 ], !dbg !5629
  %302 = trunc i32 %301 to i8, !dbg !5631
  %303 = load i32, i32* %8, align 4, !dbg !5632
  %304 = sext i32 %303 to i64, !dbg !5633
  %305 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i64 0, i64 %304, !dbg !5633
  store i8 %302, i8* %305, align 1, !dbg !5634
  br label %306, !dbg !5635

306:                                              ; preds = %300
  %307 = load i32, i32* %8, align 4, !dbg !5636
  %308 = add nsw i32 %307, 1, !dbg !5636
  store i32 %308, i32* %8, align 4, !dbg !5636
  br label %284, !dbg !5637, !llvm.loop !5638

309:                                              ; preds = %284
  %310 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i64 0, i64 0, !dbg !5640
  %311 = getelementptr inbounds i8, i8* %310, i64 4, !dbg !5640
  %312 = getelementptr inbounds i8, i8* %311, i64 0, !dbg !5640
  %313 = load i8, i8* %312, align 1, !dbg !5640
  %314 = zext i8 %313 to i16, !dbg !5640
  %315 = zext i16 %314 to i32, !dbg !5640
  %316 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i64 0, i64 0, !dbg !5640
  %317 = getelementptr inbounds i8, i8* %316, i64 4, !dbg !5640
  %318 = getelementptr inbounds i8, i8* %317, i64 1, !dbg !5640
  %319 = load i8, i8* %318, align 1, !dbg !5640
  %320 = zext i8 %319 to i16, !dbg !5640
  %321 = zext i16 %320 to i32, !dbg !5640
  %322 = shl i32 %321, 8, !dbg !5640
  %323 = or i32 %315, %322, !dbg !5640
  %324 = sext i32 %323 to i64, !dbg !5640
  %325 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i64 0, i64 0, !dbg !5640
  %326 = getelementptr inbounds i8, i8* %325, i64 4, !dbg !5640
  %327 = getelementptr inbounds i8, i8* %326, i64 2, !dbg !5640
  %328 = getelementptr inbounds i8, i8* %327, i64 0, !dbg !5640
  %329 = load i8, i8* %328, align 1, !dbg !5640
  %330 = zext i8 %329 to i16, !dbg !5640
  %331 = zext i16 %330 to i32, !dbg !5640
  %332 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i64 0, i64 0, !dbg !5640
  %333 = getelementptr inbounds i8, i8* %332, i64 4, !dbg !5640
  %334 = getelementptr inbounds i8, i8* %333, i64 2, !dbg !5640
  %335 = getelementptr inbounds i8, i8* %334, i64 1, !dbg !5640
  %336 = load i8, i8* %335, align 1, !dbg !5640
  %337 = zext i8 %336 to i16, !dbg !5640
  %338 = zext i16 %337 to i32, !dbg !5640
  %339 = shl i32 %338, 8, !dbg !5640
  %340 = or i32 %331, %339, !dbg !5640
  %341 = sext i32 %340 to i64, !dbg !5640
  %342 = shl i64 %341, 16, !dbg !5640
  %343 = or i64 %324, %342, !dbg !5640
  store i64 %343, i64* %6, align 8, !dbg !5641
  %344 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i64 0, i64 0, !dbg !5642
  %345 = getelementptr inbounds i8, i8* %344, i64 12, !dbg !5642
  %346 = getelementptr inbounds i8, i8* %345, i64 0, !dbg !5642
  %347 = load i8, i8* %346, align 1, !dbg !5642
  %348 = zext i8 %347 to i16, !dbg !5642
  %349 = zext i16 %348 to i32, !dbg !5642
  %350 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i64 0, i64 0, !dbg !5642
  %351 = getelementptr inbounds i8, i8* %350, i64 12, !dbg !5642
  %352 = getelementptr inbounds i8, i8* %351, i64 1, !dbg !5642
  %353 = load i8, i8* %352, align 1, !dbg !5642
  %354 = zext i8 %353 to i16, !dbg !5642
  %355 = zext i16 %354 to i32, !dbg !5642
  %356 = shl i32 %355, 8, !dbg !5642
  %357 = or i32 %349, %356, !dbg !5642
  %358 = sext i32 %357 to i64, !dbg !5642
  %359 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i64 0, i64 0, !dbg !5642
  %360 = getelementptr inbounds i8, i8* %359, i64 12, !dbg !5642
  %361 = getelementptr inbounds i8, i8* %360, i64 2, !dbg !5642
  %362 = getelementptr inbounds i8, i8* %361, i64 0, !dbg !5642
  %363 = load i8, i8* %362, align 1, !dbg !5642
  %364 = zext i8 %363 to i16, !dbg !5642
  %365 = zext i16 %364 to i32, !dbg !5642
  %366 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i64 0, i64 0, !dbg !5642
  %367 = getelementptr inbounds i8, i8* %366, i64 12, !dbg !5642
  %368 = getelementptr inbounds i8, i8* %367, i64 2, !dbg !5642
  %369 = getelementptr inbounds i8, i8* %368, i64 1, !dbg !5642
  %370 = load i8, i8* %369, align 1, !dbg !5642
  %371 = zext i8 %370 to i16, !dbg !5642
  %372 = zext i16 %371 to i32, !dbg !5642
  %373 = shl i32 %372, 8, !dbg !5642
  %374 = or i32 %365, %373, !dbg !5642
  %375 = sext i32 %374 to i64, !dbg !5642
  %376 = shl i64 %375, 16, !dbg !5642
  %377 = or i64 %358, %376, !dbg !5642
  store i64 %377, i64* %7, align 8, !dbg !5643
  br label %378, !dbg !5644

378:                                              ; preds = %309, %280
  br label %379

379:                                              ; preds = %378, %217
  %380 = load i64, i64* %6, align 8, !dbg !5645
  %381 = call i64 @updcrc(i8* noundef getelementptr inbounds ([18432 x i8], [18432 x i8]* @outbuf, i64 0, i64 0), i32 noundef 0), !dbg !5647
  %382 = icmp ne i64 %380, %381, !dbg !5648
  br i1 %382, label %383, label %384, !dbg !5649

383:                                              ; preds = %379
  call void @error(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.8.187, i64 0, i64 0)), !dbg !5650
  br label %384, !dbg !5652

384:                                              ; preds = %383, %379
  %385 = load i64, i64* %7, align 8, !dbg !5653
  %386 = load i64, i64* @bytes_out, align 8, !dbg !5655
  %387 = icmp ne i64 %385, %386, !dbg !5656
  br i1 %387, label %388, label %389, !dbg !5657

388:                                              ; preds = %384
  call void @error(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9.188, i64 0, i64 0)), !dbg !5658
  br label %389, !dbg !5660

389:                                              ; preds = %388, %384
  %390 = load i32, i32* @pkzip, align 4, !dbg !5661
  %391 = icmp ne i32 %390, 0, !dbg !5661
  br i1 %391, label %392, label %457, !dbg !5663

392:                                              ; preds = %389
  %393 = load i32, i32* @inptr, align 4, !dbg !5664
  %394 = add i32 %393, 4, !dbg !5665
  %395 = load i32, i32* @insize, align 4, !dbg !5666
  %396 = icmp ult i32 %394, %395, !dbg !5667
  br i1 %396, label %397, label %457, !dbg !5668

397:                                              ; preds = %392
  %398 = load i32, i32* @inptr, align 4, !dbg !5669
  %399 = zext i32 %398 to i64, !dbg !5669
  %400 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 0), i64 %399, !dbg !5669
  %401 = getelementptr inbounds i8, i8* %400, i64 0, !dbg !5669
  %402 = load i8, i8* %401, align 1, !dbg !5669
  %403 = zext i8 %402 to i16, !dbg !5669
  %404 = zext i16 %403 to i32, !dbg !5669
  %405 = load i32, i32* @inptr, align 4, !dbg !5669
  %406 = zext i32 %405 to i64, !dbg !5669
  %407 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 0), i64 %406, !dbg !5669
  %408 = getelementptr inbounds i8, i8* %407, i64 1, !dbg !5669
  %409 = load i8, i8* %408, align 1, !dbg !5669
  %410 = zext i8 %409 to i16, !dbg !5669
  %411 = zext i16 %410 to i32, !dbg !5669
  %412 = shl i32 %411, 8, !dbg !5669
  %413 = or i32 %404, %412, !dbg !5669
  %414 = sext i32 %413 to i64, !dbg !5669
  %415 = load i32, i32* @inptr, align 4, !dbg !5669
  %416 = zext i32 %415 to i64, !dbg !5669
  %417 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 0), i64 %416, !dbg !5669
  %418 = getelementptr inbounds i8, i8* %417, i64 2, !dbg !5669
  %419 = getelementptr inbounds i8, i8* %418, i64 0, !dbg !5669
  %420 = load i8, i8* %419, align 1, !dbg !5669
  %421 = zext i8 %420 to i16, !dbg !5669
  %422 = zext i16 %421 to i32, !dbg !5669
  %423 = load i32, i32* @inptr, align 4, !dbg !5669
  %424 = zext i32 %423 to i64, !dbg !5669
  %425 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 0), i64 %424, !dbg !5669
  %426 = getelementptr inbounds i8, i8* %425, i64 2, !dbg !5669
  %427 = getelementptr inbounds i8, i8* %426, i64 1, !dbg !5669
  %428 = load i8, i8* %427, align 1, !dbg !5669
  %429 = zext i8 %428 to i16, !dbg !5669
  %430 = zext i16 %429 to i32, !dbg !5669
  %431 = shl i32 %430, 8, !dbg !5669
  %432 = or i32 %422, %431, !dbg !5669
  %433 = sext i32 %432 to i64, !dbg !5669
  %434 = shl i64 %433, 16, !dbg !5669
  %435 = or i64 %414, %434, !dbg !5669
  %436 = icmp eq i64 %435, 67324752, !dbg !5670
  br i1 %436, label %437, label %457, !dbg !5671

437:                                              ; preds = %397
  %438 = load i32, i32* @to_stdout, align 4, !dbg !5672
  %439 = icmp ne i32 %438, 0, !dbg !5672
  br i1 %439, label %440, label %452, !dbg !5675

440:                                              ; preds = %437
  %441 = load i32, i32* @quiet, align 4, !dbg !5676
  %442 = icmp ne i32 %441, 0, !dbg !5676
  br i1 %442, label %447, label %443, !dbg !5680

443:                                              ; preds = %440
  %444 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !5676
  %445 = load i8*, i8** @progname, align 8, !dbg !5676
  %446 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %444, i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.10.189, i64 0, i64 0), i8* noundef %445, i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0)), !dbg !5676
  br label %447, !dbg !5676

447:                                              ; preds = %443, %440
  %448 = load i32, i32* @exit_code, align 4, !dbg !5681
  %449 = icmp eq i32 %448, 0, !dbg !5681
  br i1 %449, label %450, label %451, !dbg !5680

450:                                              ; preds = %447
  store i32 2, i32* @exit_code, align 4, !dbg !5681
  br label %451, !dbg !5681

451:                                              ; preds = %450, %447
  br label %456, !dbg !5683

452:                                              ; preds = %437
  %453 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !5684
  %454 = load i8*, i8** @progname, align 8, !dbg !5686
  %455 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %453, i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.11.190, i64 0, i64 0), i8* noundef %454, i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0)), !dbg !5687
  store i32 1, i32* @exit_code, align 4, !dbg !5688
  store i32 0, i32* @pkzip, align 4, !dbg !5689
  store i32 0, i32* @ext_header, align 4, !dbg !5690
  store i32 1, i32* %3, align 4, !dbg !5691
  br label %458, !dbg !5691

456:                                              ; preds = %451
  br label %457, !dbg !5692

457:                                              ; preds = %456, %397, %392, %389
  store i32 0, i32* @pkzip, align 4, !dbg !5693
  store i32 0, i32* @ext_header, align 4, !dbg !5694
  store i32 0, i32* %3, align 4, !dbg !5695
  br label %458, !dbg !5695

458:                                              ; preds = %457, %452
  %459 = load i32, i32* %3, align 4, !dbg !5696
  ret i32 %459, !dbg !5696
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @huft_build(i32* noundef %0, i32 noundef %1, i32 noundef %2, i16* noundef %3, i16* noundef %4, %struct.huft** noundef %5, i32* noundef %6) #0 !dbg !5697 {
  %8 = alloca i32, align 4
  %9 = alloca i32*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i16*, align 8
  %13 = alloca i16*, align 8
  %14 = alloca %struct.huft**, align 8
  %15 = alloca i32*, align 8
  %16 = alloca i32, align 4
  %17 = alloca [17 x i32], align 16
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32*, align 8
  %26 = alloca %struct.huft*, align 8
  %27 = alloca %struct.huft, align 8
  %28 = alloca [16 x %struct.huft*], align 16
  %29 = alloca [288 x i32], align 16
  %30 = alloca i32, align 4
  %31 = alloca [17 x i32], align 16
  %32 = alloca i32*, align 8
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  store i32* %0, i32** %9, align 8
  call void @llvm.dbg.declare(metadata i32** %9, metadata !5702, metadata !DIExpression()), !dbg !5703
  store i32 %1, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !5704, metadata !DIExpression()), !dbg !5705
  store i32 %2, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !5706, metadata !DIExpression()), !dbg !5707
  store i16* %3, i16** %12, align 8
  call void @llvm.dbg.declare(metadata i16** %12, metadata !5708, metadata !DIExpression()), !dbg !5709
  store i16* %4, i16** %13, align 8
  call void @llvm.dbg.declare(metadata i16** %13, metadata !5710, metadata !DIExpression()), !dbg !5711
  store %struct.huft** %5, %struct.huft*** %14, align 8
  call void @llvm.dbg.declare(metadata %struct.huft*** %14, metadata !5712, metadata !DIExpression()), !dbg !5713
  store i32* %6, i32** %15, align 8
  call void @llvm.dbg.declare(metadata i32** %15, metadata !5714, metadata !DIExpression()), !dbg !5715
  call void @llvm.dbg.declare(metadata i32* %16, metadata !5716, metadata !DIExpression()), !dbg !5717
  call void @llvm.dbg.declare(metadata [17 x i32]* %17, metadata !5718, metadata !DIExpression()), !dbg !5720
  call void @llvm.dbg.declare(metadata i32* %18, metadata !5721, metadata !DIExpression()), !dbg !5722
  call void @llvm.dbg.declare(metadata i32* %19, metadata !5723, metadata !DIExpression()), !dbg !5724
  call void @llvm.dbg.declare(metadata i32* %20, metadata !5725, metadata !DIExpression()), !dbg !5726
  call void @llvm.dbg.declare(metadata i32* %21, metadata !5727, metadata !DIExpression()), !dbg !5728
  call void @llvm.dbg.declare(metadata i32* %22, metadata !5729, metadata !DIExpression()), !dbg !5730
  call void @llvm.dbg.declare(metadata i32* %23, metadata !5731, metadata !DIExpression()), !dbg !5732
  call void @llvm.dbg.declare(metadata i32* %24, metadata !5733, metadata !DIExpression()), !dbg !5734
  call void @llvm.dbg.declare(metadata i32** %25, metadata !5735, metadata !DIExpression()), !dbg !5736
  call void @llvm.dbg.declare(metadata %struct.huft** %26, metadata !5737, metadata !DIExpression()), !dbg !5738
  call void @llvm.dbg.declare(metadata %struct.huft* %27, metadata !5739, metadata !DIExpression()), !dbg !5740
  call void @llvm.dbg.declare(metadata [16 x %struct.huft*]* %28, metadata !5741, metadata !DIExpression()), !dbg !5743
  call void @llvm.dbg.declare(metadata [288 x i32]* %29, metadata !5744, metadata !DIExpression()), !dbg !5746
  call void @llvm.dbg.declare(metadata i32* %30, metadata !5747, metadata !DIExpression()), !dbg !5748
  call void @llvm.dbg.declare(metadata [17 x i32]* %31, metadata !5749, metadata !DIExpression()), !dbg !5750
  call void @llvm.dbg.declare(metadata i32** %32, metadata !5751, metadata !DIExpression()), !dbg !5752
  call void @llvm.dbg.declare(metadata i32* %33, metadata !5753, metadata !DIExpression()), !dbg !5754
  call void @llvm.dbg.declare(metadata i32* %34, metadata !5755, metadata !DIExpression()), !dbg !5756
  %35 = getelementptr inbounds [17 x i32], [17 x i32]* %17, i64 0, i64 0, !dbg !5757
  %36 = bitcast i32* %35 to i8*, !dbg !5757
  call void @llvm.memset.p0i8.i64(i8* align 16 %36, i8 0, i64 68, i1 false), !dbg !5757
  %37 = load i32*, i32** %9, align 8, !dbg !5758
  store i32* %37, i32** %25, align 8, !dbg !5759
  %38 = load i32, i32* %10, align 4, !dbg !5760
  store i32 %38, i32* %21, align 4, !dbg !5761
  br label %39, !dbg !5762

39:                                               ; preds = %48, %7
  %40 = load i32*, i32** %25, align 8, !dbg !5763
  %41 = load i32, i32* %40, align 4, !dbg !5765
  %42 = zext i32 %41 to i64, !dbg !5766
  %43 = getelementptr inbounds [17 x i32], [17 x i32]* %17, i64 0, i64 %42, !dbg !5766
  %44 = load i32, i32* %43, align 4, !dbg !5767
  %45 = add i32 %44, 1, !dbg !5767
  store i32 %45, i32* %43, align 4, !dbg !5767
  %46 = load i32*, i32** %25, align 8, !dbg !5768
  %47 = getelementptr inbounds i32, i32* %46, i32 1, !dbg !5768
  store i32* %47, i32** %25, align 8, !dbg !5768
  br label %48, !dbg !5769

48:                                               ; preds = %39
  %49 = load i32, i32* %21, align 4, !dbg !5770
  %50 = add i32 %49, -1, !dbg !5770
  store i32 %50, i32* %21, align 4, !dbg !5770
  %51 = icmp ne i32 %50, 0, !dbg !5769
  br i1 %51, label %39, label %52, !dbg !5769, !llvm.loop !5771

52:                                               ; preds = %48
  %53 = getelementptr inbounds [17 x i32], [17 x i32]* %17, i64 0, i64 0, !dbg !5773
  %54 = load i32, i32* %53, align 16, !dbg !5773
  %55 = load i32, i32* %10, align 4, !dbg !5775
  %56 = icmp eq i32 %54, %55, !dbg !5776
  br i1 %56, label %57, label %60, !dbg !5777

57:                                               ; preds = %52
  %58 = load %struct.huft**, %struct.huft*** %14, align 8, !dbg !5778
  store %struct.huft* null, %struct.huft** %58, align 8, !dbg !5780
  %59 = load i32*, i32** %15, align 8, !dbg !5781
  store i32 0, i32* %59, align 4, !dbg !5782
  store i32 0, i32* %8, align 4, !dbg !5783
  br label %461, !dbg !5783

60:                                               ; preds = %52
  %61 = load i32*, i32** %15, align 8, !dbg !5784
  %62 = load i32, i32* %61, align 4, !dbg !5785
  store i32 %62, i32* %24, align 4, !dbg !5786
  store i32 1, i32* %22, align 4, !dbg !5787
  br label %63, !dbg !5789

63:                                               ; preds = %74, %60
  %64 = load i32, i32* %22, align 4, !dbg !5790
  %65 = icmp ule i32 %64, 16, !dbg !5792
  br i1 %65, label %66, label %77, !dbg !5793

66:                                               ; preds = %63
  %67 = load i32, i32* %22, align 4, !dbg !5794
  %68 = zext i32 %67 to i64, !dbg !5796
  %69 = getelementptr inbounds [17 x i32], [17 x i32]* %17, i64 0, i64 %68, !dbg !5796
  %70 = load i32, i32* %69, align 4, !dbg !5796
  %71 = icmp ne i32 %70, 0, !dbg !5796
  br i1 %71, label %72, label %73, !dbg !5797

72:                                               ; preds = %66
  br label %77, !dbg !5798

73:                                               ; preds = %66
  br label %74, !dbg !5799

74:                                               ; preds = %73
  %75 = load i32, i32* %22, align 4, !dbg !5800
  %76 = add i32 %75, 1, !dbg !5800
  store i32 %76, i32* %22, align 4, !dbg !5800
  br label %63, !dbg !5801, !llvm.loop !5802

77:                                               ; preds = %72, %63
  %78 = load i32, i32* %22, align 4, !dbg !5804
  store i32 %78, i32* %23, align 4, !dbg !5805
  %79 = load i32, i32* %24, align 4, !dbg !5806
  %80 = load i32, i32* %22, align 4, !dbg !5808
  %81 = icmp ult i32 %79, %80, !dbg !5809
  br i1 %81, label %82, label %84, !dbg !5810

82:                                               ; preds = %77
  %83 = load i32, i32* %22, align 4, !dbg !5811
  store i32 %83, i32* %24, align 4, !dbg !5812
  br label %84, !dbg !5813

84:                                               ; preds = %82, %77
  store i32 16, i32* %21, align 4, !dbg !5814
  br label %85, !dbg !5816

85:                                               ; preds = %96, %84
  %86 = load i32, i32* %21, align 4, !dbg !5817
  %87 = icmp ne i32 %86, 0, !dbg !5819
  br i1 %87, label %88, label %99, !dbg !5819

88:                                               ; preds = %85
  %89 = load i32, i32* %21, align 4, !dbg !5820
  %90 = zext i32 %89 to i64, !dbg !5822
  %91 = getelementptr inbounds [17 x i32], [17 x i32]* %17, i64 0, i64 %90, !dbg !5822
  %92 = load i32, i32* %91, align 4, !dbg !5822
  %93 = icmp ne i32 %92, 0, !dbg !5822
  br i1 %93, label %94, label %95, !dbg !5823

94:                                               ; preds = %88
  br label %99, !dbg !5824

95:                                               ; preds = %88
  br label %96, !dbg !5825

96:                                               ; preds = %95
  %97 = load i32, i32* %21, align 4, !dbg !5826
  %98 = add i32 %97, -1, !dbg !5826
  store i32 %98, i32* %21, align 4, !dbg !5826
  br label %85, !dbg !5827, !llvm.loop !5828

99:                                               ; preds = %94, %85
  %100 = load i32, i32* %21, align 4, !dbg !5830
  store i32 %100, i32* %19, align 4, !dbg !5831
  %101 = load i32, i32* %24, align 4, !dbg !5832
  %102 = load i32, i32* %21, align 4, !dbg !5834
  %103 = icmp ugt i32 %101, %102, !dbg !5835
  br i1 %103, label %104, label %106, !dbg !5836

104:                                              ; preds = %99
  %105 = load i32, i32* %21, align 4, !dbg !5837
  store i32 %105, i32* %24, align 4, !dbg !5838
  br label %106, !dbg !5839

106:                                              ; preds = %104, %99
  %107 = load i32, i32* %24, align 4, !dbg !5840
  %108 = load i32*, i32** %15, align 8, !dbg !5841
  store i32 %107, i32* %108, align 4, !dbg !5842
  %109 = load i32, i32* %22, align 4, !dbg !5843
  %110 = shl i32 1, %109, !dbg !5845
  store i32 %110, i32* %33, align 4, !dbg !5846
  br label %111, !dbg !5847

111:                                              ; preds = %125, %106
  %112 = load i32, i32* %22, align 4, !dbg !5848
  %113 = load i32, i32* %21, align 4, !dbg !5850
  %114 = icmp ult i32 %112, %113, !dbg !5851
  br i1 %114, label %115, label %130, !dbg !5852

115:                                              ; preds = %111
  %116 = load i32, i32* %22, align 4, !dbg !5853
  %117 = zext i32 %116 to i64, !dbg !5855
  %118 = getelementptr inbounds [17 x i32], [17 x i32]* %17, i64 0, i64 %117, !dbg !5855
  %119 = load i32, i32* %118, align 4, !dbg !5855
  %120 = load i32, i32* %33, align 4, !dbg !5856
  %121 = sub i32 %120, %119, !dbg !5856
  store i32 %121, i32* %33, align 4, !dbg !5856
  %122 = icmp slt i32 %121, 0, !dbg !5857
  br i1 %122, label %123, label %124, !dbg !5858

123:                                              ; preds = %115
  store i32 2, i32* %8, align 4, !dbg !5859
  br label %461, !dbg !5859

124:                                              ; preds = %115
  br label %125, !dbg !5860

125:                                              ; preds = %124
  %126 = load i32, i32* %22, align 4, !dbg !5861
  %127 = add i32 %126, 1, !dbg !5861
  store i32 %127, i32* %22, align 4, !dbg !5861
  %128 = load i32, i32* %33, align 4, !dbg !5862
  %129 = shl i32 %128, 1, !dbg !5862
  store i32 %129, i32* %33, align 4, !dbg !5862
  br label %111, !dbg !5863, !llvm.loop !5864

130:                                              ; preds = %111
  %131 = load i32, i32* %21, align 4, !dbg !5866
  %132 = zext i32 %131 to i64, !dbg !5868
  %133 = getelementptr inbounds [17 x i32], [17 x i32]* %17, i64 0, i64 %132, !dbg !5868
  %134 = load i32, i32* %133, align 4, !dbg !5868
  %135 = load i32, i32* %33, align 4, !dbg !5869
  %136 = sub i32 %135, %134, !dbg !5869
  store i32 %136, i32* %33, align 4, !dbg !5869
  %137 = icmp slt i32 %136, 0, !dbg !5870
  br i1 %137, label %138, label %139, !dbg !5871

138:                                              ; preds = %130
  store i32 2, i32* %8, align 4, !dbg !5872
  br label %461, !dbg !5872

139:                                              ; preds = %130
  %140 = load i32, i32* %33, align 4, !dbg !5873
  %141 = load i32, i32* %21, align 4, !dbg !5874
  %142 = zext i32 %141 to i64, !dbg !5875
  %143 = getelementptr inbounds [17 x i32], [17 x i32]* %17, i64 0, i64 %142, !dbg !5875
  %144 = load i32, i32* %143, align 4, !dbg !5876
  %145 = add i32 %144, %140, !dbg !5876
  store i32 %145, i32* %143, align 4, !dbg !5876
  store i32 0, i32* %22, align 4, !dbg !5877
  %146 = getelementptr inbounds [17 x i32], [17 x i32]* %31, i64 0, i64 1, !dbg !5878
  store i32 0, i32* %146, align 4, !dbg !5879
  %147 = getelementptr inbounds [17 x i32], [17 x i32]* %17, i64 0, i64 0, !dbg !5880
  %148 = getelementptr inbounds i32, i32* %147, i64 1, !dbg !5881
  store i32* %148, i32** %25, align 8, !dbg !5882
  %149 = getelementptr inbounds [17 x i32], [17 x i32]* %31, i64 0, i64 0, !dbg !5883
  %150 = getelementptr inbounds i32, i32* %149, i64 2, !dbg !5884
  store i32* %150, i32** %32, align 8, !dbg !5885
  br label %151, !dbg !5886

151:                                              ; preds = %155, %139
  %152 = load i32, i32* %21, align 4, !dbg !5887
  %153 = add i32 %152, -1, !dbg !5887
  store i32 %153, i32* %21, align 4, !dbg !5887
  %154 = icmp ne i32 %153, 0, !dbg !5886
  br i1 %154, label %155, label %163, !dbg !5886

155:                                              ; preds = %151
  %156 = load i32*, i32** %25, align 8, !dbg !5888
  %157 = getelementptr inbounds i32, i32* %156, i32 1, !dbg !5888
  store i32* %157, i32** %25, align 8, !dbg !5888
  %158 = load i32, i32* %156, align 4, !dbg !5890
  %159 = load i32, i32* %22, align 4, !dbg !5891
  %160 = add i32 %159, %158, !dbg !5891
  store i32 %160, i32* %22, align 4, !dbg !5891
  %161 = load i32*, i32** %32, align 8, !dbg !5892
  %162 = getelementptr inbounds i32, i32* %161, i32 1, !dbg !5892
  store i32* %162, i32** %32, align 8, !dbg !5892
  store i32 %160, i32* %161, align 4, !dbg !5893
  br label %151, !dbg !5886, !llvm.loop !5894

163:                                              ; preds = %151
  %164 = load i32*, i32** %9, align 8, !dbg !5896
  store i32* %164, i32** %25, align 8, !dbg !5897
  store i32 0, i32* %21, align 4, !dbg !5898
  br label %165, !dbg !5899

165:                                              ; preds = %180, %163
  %166 = load i32*, i32** %25, align 8, !dbg !5900
  %167 = getelementptr inbounds i32, i32* %166, i32 1, !dbg !5900
  store i32* %167, i32** %25, align 8, !dbg !5900
  %168 = load i32, i32* %166, align 4, !dbg !5903
  store i32 %168, i32* %22, align 4, !dbg !5904
  %169 = icmp ne i32 %168, 0, !dbg !5905
  br i1 %169, label %170, label %179, !dbg !5906

170:                                              ; preds = %165
  %171 = load i32, i32* %21, align 4, !dbg !5907
  %172 = load i32, i32* %22, align 4, !dbg !5908
  %173 = zext i32 %172 to i64, !dbg !5909
  %174 = getelementptr inbounds [17 x i32], [17 x i32]* %31, i64 0, i64 %173, !dbg !5909
  %175 = load i32, i32* %174, align 4, !dbg !5910
  %176 = add i32 %175, 1, !dbg !5910
  store i32 %176, i32* %174, align 4, !dbg !5910
  %177 = zext i32 %175 to i64, !dbg !5911
  %178 = getelementptr inbounds [288 x i32], [288 x i32]* %29, i64 0, i64 %177, !dbg !5911
  store i32 %171, i32* %178, align 4, !dbg !5912
  br label %179, !dbg !5911

179:                                              ; preds = %170, %165
  br label %180, !dbg !5913

180:                                              ; preds = %179
  %181 = load i32, i32* %21, align 4, !dbg !5914
  %182 = add i32 %181, 1, !dbg !5914
  store i32 %182, i32* %21, align 4, !dbg !5914
  %183 = load i32, i32* %10, align 4, !dbg !5915
  %184 = icmp ult i32 %182, %183, !dbg !5916
  br i1 %184, label %165, label %185, !dbg !5913, !llvm.loop !5917

185:                                              ; preds = %180
  store i32 0, i32* %21, align 4, !dbg !5919
  %186 = getelementptr inbounds [17 x i32], [17 x i32]* %31, i64 0, i64 0, !dbg !5920
  store i32 0, i32* %186, align 16, !dbg !5921
  %187 = getelementptr inbounds [288 x i32], [288 x i32]* %29, i64 0, i64 0, !dbg !5922
  store i32* %187, i32** %25, align 8, !dbg !5923
  store i32 -1, i32* %20, align 4, !dbg !5924
  %188 = load i32, i32* %24, align 4, !dbg !5925
  %189 = sub nsw i32 0, %188, !dbg !5926
  store i32 %189, i32* %30, align 4, !dbg !5927
  %190 = getelementptr inbounds [16 x %struct.huft*], [16 x %struct.huft*]* %28, i64 0, i64 0, !dbg !5928
  store %struct.huft* null, %struct.huft** %190, align 16, !dbg !5929
  store %struct.huft* null, %struct.huft** %26, align 8, !dbg !5930
  store i32 0, i32* %34, align 4, !dbg !5931
  br label %191, !dbg !5932

191:                                              ; preds = %449, %185
  %192 = load i32, i32* %23, align 4, !dbg !5933
  %193 = load i32, i32* %19, align 4, !dbg !5936
  %194 = icmp sle i32 %192, %193, !dbg !5937
  br i1 %194, label %195, label %452, !dbg !5938

195:                                              ; preds = %191
  %196 = load i32, i32* %23, align 4, !dbg !5939
  %197 = sext i32 %196 to i64, !dbg !5941
  %198 = getelementptr inbounds [17 x i32], [17 x i32]* %17, i64 0, i64 %197, !dbg !5941
  %199 = load i32, i32* %198, align 4, !dbg !5941
  store i32 %199, i32* %16, align 4, !dbg !5942
  br label %200, !dbg !5943

200:                                              ; preds = %447, %195
  %201 = load i32, i32* %16, align 4, !dbg !5944
  %202 = add i32 %201, -1, !dbg !5944
  store i32 %202, i32* %16, align 4, !dbg !5944
  %203 = icmp ne i32 %201, 0, !dbg !5943
  br i1 %203, label %204, label %448, !dbg !5943

204:                                              ; preds = %200
  br label %205, !dbg !5945

205:                                              ; preds = %329, %204
  %206 = load i32, i32* %23, align 4, !dbg !5947
  %207 = load i32, i32* %30, align 4, !dbg !5948
  %208 = load i32, i32* %24, align 4, !dbg !5949
  %209 = add nsw i32 %207, %208, !dbg !5950
  %210 = icmp sgt i32 %206, %209, !dbg !5951
  br i1 %210, label %211, label %330, !dbg !5945

211:                                              ; preds = %205
  %212 = load i32, i32* %20, align 4, !dbg !5952
  %213 = add nsw i32 %212, 1, !dbg !5952
  store i32 %213, i32* %20, align 4, !dbg !5952
  %214 = load i32, i32* %24, align 4, !dbg !5954
  %215 = load i32, i32* %30, align 4, !dbg !5955
  %216 = add nsw i32 %215, %214, !dbg !5955
  store i32 %216, i32* %30, align 4, !dbg !5955
  %217 = load i32, i32* %19, align 4, !dbg !5956
  %218 = load i32, i32* %30, align 4, !dbg !5957
  %219 = sub nsw i32 %217, %218, !dbg !5958
  store i32 %219, i32* %34, align 4, !dbg !5959
  %220 = load i32, i32* %24, align 4, !dbg !5960
  %221 = icmp ugt i32 %219, %220, !dbg !5961
  br i1 %221, label %222, label %224, !dbg !5962

222:                                              ; preds = %211
  %223 = load i32, i32* %24, align 4, !dbg !5963
  br label %226, !dbg !5962

224:                                              ; preds = %211
  %225 = load i32, i32* %34, align 4, !dbg !5964
  br label %226, !dbg !5962

226:                                              ; preds = %224, %222
  %227 = phi i32 [ %223, %222 ], [ %225, %224 ], !dbg !5962
  store i32 %227, i32* %34, align 4, !dbg !5965
  %228 = load i32, i32* %23, align 4, !dbg !5966
  %229 = load i32, i32* %30, align 4, !dbg !5968
  %230 = sub nsw i32 %228, %229, !dbg !5969
  store i32 %230, i32* %22, align 4, !dbg !5970
  %231 = shl i32 1, %230, !dbg !5971
  store i32 %231, i32* %18, align 4, !dbg !5972
  %232 = load i32, i32* %16, align 4, !dbg !5973
  %233 = add i32 %232, 1, !dbg !5974
  %234 = icmp ugt i32 %231, %233, !dbg !5975
  br i1 %234, label %235, label %263, !dbg !5976

235:                                              ; preds = %226
  %236 = load i32, i32* %16, align 4, !dbg !5977
  %237 = add i32 %236, 1, !dbg !5979
  %238 = load i32, i32* %18, align 4, !dbg !5980
  %239 = sub i32 %238, %237, !dbg !5980
  store i32 %239, i32* %18, align 4, !dbg !5980
  %240 = getelementptr inbounds [17 x i32], [17 x i32]* %17, i64 0, i64 0, !dbg !5981
  %241 = load i32, i32* %23, align 4, !dbg !5982
  %242 = sext i32 %241 to i64, !dbg !5983
  %243 = getelementptr inbounds i32, i32* %240, i64 %242, !dbg !5983
  store i32* %243, i32** %32, align 8, !dbg !5984
  br label %244, !dbg !5985

244:                                              ; preds = %257, %235
  %245 = load i32, i32* %22, align 4, !dbg !5986
  %246 = add i32 %245, 1, !dbg !5986
  store i32 %246, i32* %22, align 4, !dbg !5986
  %247 = load i32, i32* %34, align 4, !dbg !5987
  %248 = icmp ult i32 %246, %247, !dbg !5988
  br i1 %248, label %249, label %262, !dbg !5985

249:                                              ; preds = %244
  %250 = load i32, i32* %18, align 4, !dbg !5989
  %251 = shl i32 %250, 1, !dbg !5989
  store i32 %251, i32* %18, align 4, !dbg !5989
  %252 = load i32*, i32** %32, align 8, !dbg !5992
  %253 = getelementptr inbounds i32, i32* %252, i32 1, !dbg !5992
  store i32* %253, i32** %32, align 8, !dbg !5992
  %254 = load i32, i32* %253, align 4, !dbg !5993
  %255 = icmp ule i32 %251, %254, !dbg !5994
  br i1 %255, label %256, label %257, !dbg !5995

256:                                              ; preds = %249
  br label %262, !dbg !5996

257:                                              ; preds = %249
  %258 = load i32*, i32** %32, align 8, !dbg !5997
  %259 = load i32, i32* %258, align 4, !dbg !5998
  %260 = load i32, i32* %18, align 4, !dbg !5999
  %261 = sub i32 %260, %259, !dbg !5999
  store i32 %261, i32* %18, align 4, !dbg !5999
  br label %244, !dbg !5985, !llvm.loop !6000

262:                                              ; preds = %256, %244
  br label %263, !dbg !6002

263:                                              ; preds = %262, %226
  %264 = load i32, i32* %22, align 4, !dbg !6003
  %265 = shl i32 1, %264, !dbg !6004
  store i32 %265, i32* %34, align 4, !dbg !6005
  %266 = load i32, i32* %34, align 4, !dbg !6006
  %267 = add i32 %266, 1, !dbg !6008
  %268 = zext i32 %267 to i64, !dbg !6009
  %269 = mul i64 %268, 16, !dbg !6010
  %270 = call noalias i8* @malloc(i64 noundef %269) #10, !dbg !6011
  %271 = bitcast i8* %270 to %struct.huft*, !dbg !6012
  store %struct.huft* %271, %struct.huft** %26, align 8, !dbg !6013
  %272 = icmp eq %struct.huft* %271, null, !dbg !6014
  br i1 %272, label %273, label %281, !dbg !6015

273:                                              ; preds = %263
  %274 = load i32, i32* %20, align 4, !dbg !6016
  %275 = icmp ne i32 %274, 0, !dbg !6016
  br i1 %275, label %276, label %280, !dbg !6019

276:                                              ; preds = %273
  %277 = getelementptr inbounds [16 x %struct.huft*], [16 x %struct.huft*]* %28, i64 0, i64 0, !dbg !6020
  %278 = load %struct.huft*, %struct.huft** %277, align 16, !dbg !6020
  %279 = call i32 @huft_free(%struct.huft* noundef %278), !dbg !6021
  br label %280, !dbg !6021

280:                                              ; preds = %276, %273
  store i32 3, i32* %8, align 4, !dbg !6022
  br label %461, !dbg !6022

281:                                              ; preds = %263
  %282 = load i32, i32* %34, align 4, !dbg !6023
  %283 = add i32 %282, 1, !dbg !6024
  %284 = load i32, i32* @hufts, align 4, !dbg !6025
  %285 = add i32 %284, %283, !dbg !6025
  store i32 %285, i32* @hufts, align 4, !dbg !6025
  %286 = load %struct.huft*, %struct.huft** %26, align 8, !dbg !6026
  %287 = getelementptr inbounds %struct.huft, %struct.huft* %286, i64 1, !dbg !6027
  %288 = load %struct.huft**, %struct.huft*** %14, align 8, !dbg !6028
  store %struct.huft* %287, %struct.huft** %288, align 8, !dbg !6029
  %289 = load %struct.huft*, %struct.huft** %26, align 8, !dbg !6030
  %290 = getelementptr inbounds %struct.huft, %struct.huft* %289, i32 0, i32 2, !dbg !6031
  %291 = bitcast %union.anon.8* %290 to %struct.huft**, !dbg !6032
  store %struct.huft** %291, %struct.huft*** %14, align 8, !dbg !6033
  store %struct.huft* null, %struct.huft** %291, align 8, !dbg !6034
  %292 = load %struct.huft*, %struct.huft** %26, align 8, !dbg !6035
  %293 = getelementptr inbounds %struct.huft, %struct.huft* %292, i32 1, !dbg !6035
  store %struct.huft* %293, %struct.huft** %26, align 8, !dbg !6035
  %294 = load i32, i32* %20, align 4, !dbg !6036
  %295 = sext i32 %294 to i64, !dbg !6037
  %296 = getelementptr inbounds [16 x %struct.huft*], [16 x %struct.huft*]* %28, i64 0, i64 %295, !dbg !6037
  store %struct.huft* %293, %struct.huft** %296, align 8, !dbg !6038
  %297 = load i32, i32* %20, align 4, !dbg !6039
  %298 = icmp ne i32 %297, 0, !dbg !6039
  br i1 %298, label %299, label %329, !dbg !6041

299:                                              ; preds = %281
  %300 = load i32, i32* %21, align 4, !dbg !6042
  %301 = load i32, i32* %20, align 4, !dbg !6044
  %302 = sext i32 %301 to i64, !dbg !6045
  %303 = getelementptr inbounds [17 x i32], [17 x i32]* %31, i64 0, i64 %302, !dbg !6045
  store i32 %300, i32* %303, align 4, !dbg !6046
  %304 = load i32, i32* %24, align 4, !dbg !6047
  %305 = trunc i32 %304 to i8, !dbg !6048
  %306 = getelementptr inbounds %struct.huft, %struct.huft* %27, i32 0, i32 1, !dbg !6049
  store i8 %305, i8* %306, align 1, !dbg !6050
  %307 = load i32, i32* %22, align 4, !dbg !6051
  %308 = add i32 16, %307, !dbg !6052
  %309 = trunc i32 %308 to i8, !dbg !6053
  %310 = getelementptr inbounds %struct.huft, %struct.huft* %27, i32 0, i32 0, !dbg !6054
  store i8 %309, i8* %310, align 8, !dbg !6055
  %311 = load %struct.huft*, %struct.huft** %26, align 8, !dbg !6056
  %312 = getelementptr inbounds %struct.huft, %struct.huft* %27, i32 0, i32 2, !dbg !6057
  %313 = bitcast %union.anon.8* %312 to %struct.huft**, !dbg !6058
  store %struct.huft* %311, %struct.huft** %313, align 8, !dbg !6059
  %314 = load i32, i32* %21, align 4, !dbg !6060
  %315 = load i32, i32* %30, align 4, !dbg !6061
  %316 = load i32, i32* %24, align 4, !dbg !6062
  %317 = sub nsw i32 %315, %316, !dbg !6063
  %318 = lshr i32 %314, %317, !dbg !6064
  store i32 %318, i32* %22, align 4, !dbg !6065
  %319 = load i32, i32* %20, align 4, !dbg !6066
  %320 = sub nsw i32 %319, 1, !dbg !6067
  %321 = sext i32 %320 to i64, !dbg !6068
  %322 = getelementptr inbounds [16 x %struct.huft*], [16 x %struct.huft*]* %28, i64 0, i64 %321, !dbg !6068
  %323 = load %struct.huft*, %struct.huft** %322, align 8, !dbg !6068
  %324 = load i32, i32* %22, align 4, !dbg !6069
  %325 = zext i32 %324 to i64, !dbg !6068
  %326 = getelementptr inbounds %struct.huft, %struct.huft* %323, i64 %325, !dbg !6068
  %327 = bitcast %struct.huft* %326 to i8*, !dbg !6070
  %328 = bitcast %struct.huft* %27 to i8*, !dbg !6070
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %327, i8* align 8 %328, i64 16, i1 false), !dbg !6070
  br label %329, !dbg !6071

329:                                              ; preds = %299, %281
  br label %205, !dbg !5945, !llvm.loop !6072

330:                                              ; preds = %205
  %331 = load i32, i32* %23, align 4, !dbg !6074
  %332 = load i32, i32* %30, align 4, !dbg !6075
  %333 = sub nsw i32 %331, %332, !dbg !6076
  %334 = trunc i32 %333 to i8, !dbg !6077
  %335 = getelementptr inbounds %struct.huft, %struct.huft* %27, i32 0, i32 1, !dbg !6078
  store i8 %334, i8* %335, align 1, !dbg !6079
  %336 = load i32*, i32** %25, align 8, !dbg !6080
  %337 = getelementptr inbounds [288 x i32], [288 x i32]* %29, i64 0, i64 0, !dbg !6082
  %338 = load i32, i32* %10, align 4, !dbg !6083
  %339 = zext i32 %338 to i64, !dbg !6084
  %340 = getelementptr inbounds i32, i32* %337, i64 %339, !dbg !6084
  %341 = icmp uge i32* %336, %340, !dbg !6085
  br i1 %341, label %342, label %344, !dbg !6086

342:                                              ; preds = %330
  %343 = getelementptr inbounds %struct.huft, %struct.huft* %27, i32 0, i32 0, !dbg !6087
  store i8 99, i8* %343, align 8, !dbg !6088
  br label %387, !dbg !6089

344:                                              ; preds = %330
  %345 = load i32*, i32** %25, align 8, !dbg !6090
  %346 = load i32, i32* %345, align 4, !dbg !6092
  %347 = load i32, i32* %11, align 4, !dbg !6093
  %348 = icmp ult i32 %346, %347, !dbg !6094
  br i1 %348, label %349, label %364, !dbg !6095

349:                                              ; preds = %344
  %350 = load i32*, i32** %25, align 8, !dbg !6096
  %351 = load i32, i32* %350, align 4, !dbg !6098
  %352 = icmp ult i32 %351, 256, !dbg !6099
  %353 = zext i1 %352 to i64, !dbg !6098
  %354 = select i1 %352, i32 16, i32 15, !dbg !6098
  %355 = trunc i32 %354 to i8, !dbg !6100
  %356 = getelementptr inbounds %struct.huft, %struct.huft* %27, i32 0, i32 0, !dbg !6101
  store i8 %355, i8* %356, align 8, !dbg !6102
  %357 = load i32*, i32** %25, align 8, !dbg !6103
  %358 = load i32, i32* %357, align 4, !dbg !6104
  %359 = trunc i32 %358 to i16, !dbg !6105
  %360 = getelementptr inbounds %struct.huft, %struct.huft* %27, i32 0, i32 2, !dbg !6106
  %361 = bitcast %union.anon.8* %360 to i16*, !dbg !6107
  store i16 %359, i16* %361, align 8, !dbg !6108
  %362 = load i32*, i32** %25, align 8, !dbg !6109
  %363 = getelementptr inbounds i32, i32* %362, i32 1, !dbg !6109
  store i32* %363, i32** %25, align 8, !dbg !6109
  br label %386, !dbg !6110

364:                                              ; preds = %344
  %365 = load i16*, i16** %13, align 8, !dbg !6111
  %366 = load i32*, i32** %25, align 8, !dbg !6113
  %367 = load i32, i32* %366, align 4, !dbg !6114
  %368 = load i32, i32* %11, align 4, !dbg !6115
  %369 = sub i32 %367, %368, !dbg !6116
  %370 = zext i32 %369 to i64, !dbg !6111
  %371 = getelementptr inbounds i16, i16* %365, i64 %370, !dbg !6111
  %372 = load i16, i16* %371, align 2, !dbg !6111
  %373 = trunc i16 %372 to i8, !dbg !6117
  %374 = getelementptr inbounds %struct.huft, %struct.huft* %27, i32 0, i32 0, !dbg !6118
  store i8 %373, i8* %374, align 8, !dbg !6119
  %375 = load i16*, i16** %12, align 8, !dbg !6120
  %376 = load i32*, i32** %25, align 8, !dbg !6121
  %377 = getelementptr inbounds i32, i32* %376, i32 1, !dbg !6121
  store i32* %377, i32** %25, align 8, !dbg !6121
  %378 = load i32, i32* %376, align 4, !dbg !6122
  %379 = load i32, i32* %11, align 4, !dbg !6123
  %380 = sub i32 %378, %379, !dbg !6124
  %381 = zext i32 %380 to i64, !dbg !6120
  %382 = getelementptr inbounds i16, i16* %375, i64 %381, !dbg !6120
  %383 = load i16, i16* %382, align 2, !dbg !6120
  %384 = getelementptr inbounds %struct.huft, %struct.huft* %27, i32 0, i32 2, !dbg !6125
  %385 = bitcast %union.anon.8* %384 to i16*, !dbg !6126
  store i16 %383, i16* %385, align 8, !dbg !6127
  br label %386

386:                                              ; preds = %364, %349
  br label %387

387:                                              ; preds = %386, %342
  %388 = load i32, i32* %23, align 4, !dbg !6128
  %389 = load i32, i32* %30, align 4, !dbg !6129
  %390 = sub nsw i32 %388, %389, !dbg !6130
  %391 = shl i32 1, %390, !dbg !6131
  store i32 %391, i32* %18, align 4, !dbg !6132
  %392 = load i32, i32* %21, align 4, !dbg !6133
  %393 = load i32, i32* %30, align 4, !dbg !6135
  %394 = lshr i32 %392, %393, !dbg !6136
  store i32 %394, i32* %22, align 4, !dbg !6137
  br label %395, !dbg !6138

395:                                              ; preds = %406, %387
  %396 = load i32, i32* %22, align 4, !dbg !6139
  %397 = load i32, i32* %34, align 4, !dbg !6141
  %398 = icmp ult i32 %396, %397, !dbg !6142
  br i1 %398, label %399, label %410, !dbg !6143

399:                                              ; preds = %395
  %400 = load %struct.huft*, %struct.huft** %26, align 8, !dbg !6144
  %401 = load i32, i32* %22, align 4, !dbg !6145
  %402 = zext i32 %401 to i64, !dbg !6144
  %403 = getelementptr inbounds %struct.huft, %struct.huft* %400, i64 %402, !dbg !6144
  %404 = bitcast %struct.huft* %403 to i8*, !dbg !6146
  %405 = bitcast %struct.huft* %27 to i8*, !dbg !6146
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %404, i8* align 8 %405, i64 16, i1 false), !dbg !6146
  br label %406, !dbg !6144

406:                                              ; preds = %399
  %407 = load i32, i32* %18, align 4, !dbg !6147
  %408 = load i32, i32* %22, align 4, !dbg !6148
  %409 = add i32 %408, %407, !dbg !6148
  store i32 %409, i32* %22, align 4, !dbg !6148
  br label %395, !dbg !6149, !llvm.loop !6150

410:                                              ; preds = %395
  %411 = load i32, i32* %23, align 4, !dbg !6152
  %412 = sub nsw i32 %411, 1, !dbg !6154
  %413 = shl i32 1, %412, !dbg !6155
  store i32 %413, i32* %22, align 4, !dbg !6156
  br label %414, !dbg !6157

414:                                              ; preds = %423, %410
  %415 = load i32, i32* %21, align 4, !dbg !6158
  %416 = load i32, i32* %22, align 4, !dbg !6160
  %417 = and i32 %415, %416, !dbg !6161
  %418 = icmp ne i32 %417, 0, !dbg !6162
  br i1 %418, label %419, label %426, !dbg !6162

419:                                              ; preds = %414
  %420 = load i32, i32* %22, align 4, !dbg !6163
  %421 = load i32, i32* %21, align 4, !dbg !6164
  %422 = xor i32 %421, %420, !dbg !6164
  store i32 %422, i32* %21, align 4, !dbg !6164
  br label %423, !dbg !6165

423:                                              ; preds = %419
  %424 = load i32, i32* %22, align 4, !dbg !6166
  %425 = lshr i32 %424, 1, !dbg !6166
  store i32 %425, i32* %22, align 4, !dbg !6166
  br label %414, !dbg !6167, !llvm.loop !6168

426:                                              ; preds = %414
  %427 = load i32, i32* %22, align 4, !dbg !6170
  %428 = load i32, i32* %21, align 4, !dbg !6171
  %429 = xor i32 %428, %427, !dbg !6171
  store i32 %429, i32* %21, align 4, !dbg !6171
  br label %430, !dbg !6172

430:                                              ; preds = %441, %426
  %431 = load i32, i32* %21, align 4, !dbg !6173
  %432 = load i32, i32* %30, align 4, !dbg !6174
  %433 = shl i32 1, %432, !dbg !6175
  %434 = sub nsw i32 %433, 1, !dbg !6176
  %435 = and i32 %431, %434, !dbg !6177
  %436 = load i32, i32* %20, align 4, !dbg !6178
  %437 = sext i32 %436 to i64, !dbg !6179
  %438 = getelementptr inbounds [17 x i32], [17 x i32]* %31, i64 0, i64 %437, !dbg !6179
  %439 = load i32, i32* %438, align 4, !dbg !6179
  %440 = icmp ne i32 %435, %439, !dbg !6180
  br i1 %440, label %441, label %447, !dbg !6172

441:                                              ; preds = %430
  %442 = load i32, i32* %20, align 4, !dbg !6181
  %443 = add nsw i32 %442, -1, !dbg !6181
  store i32 %443, i32* %20, align 4, !dbg !6181
  %444 = load i32, i32* %24, align 4, !dbg !6183
  %445 = load i32, i32* %30, align 4, !dbg !6184
  %446 = sub nsw i32 %445, %444, !dbg !6184
  store i32 %446, i32* %30, align 4, !dbg !6184
  br label %430, !dbg !6172, !llvm.loop !6185

447:                                              ; preds = %430
  br label %200, !dbg !5943, !llvm.loop !6187

448:                                              ; preds = %200
  br label %449, !dbg !6189

449:                                              ; preds = %448
  %450 = load i32, i32* %23, align 4, !dbg !6190
  %451 = add nsw i32 %450, 1, !dbg !6190
  store i32 %451, i32* %23, align 4, !dbg !6190
  br label %191, !dbg !6191, !llvm.loop !6192

452:                                              ; preds = %191
  %453 = load i32, i32* %33, align 4, !dbg !6194
  %454 = icmp ne i32 %453, 0, !dbg !6195
  br i1 %454, label %455, label %458, !dbg !6196

455:                                              ; preds = %452
  %456 = load i32, i32* %19, align 4, !dbg !6197
  %457 = icmp ne i32 %456, 1, !dbg !6198
  br label %458

458:                                              ; preds = %455, %452
  %459 = phi i1 [ false, %452 ], [ %457, %455 ], !dbg !6199
  %460 = zext i1 %459 to i32, !dbg !6196
  store i32 %460, i32* %8, align 4, !dbg !6200
  br label %461, !dbg !6200

461:                                              ; preds = %458, %280, %138, %123, %57
  %462 = load i32, i32* %8, align 4, !dbg !6201
  ret i32 %462, !dbg !6201
}

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64 noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @huft_free(%struct.huft* noundef %0) #0 !dbg !6202 {
  %2 = alloca %struct.huft*, align 8
  %3 = alloca %struct.huft*, align 8
  %4 = alloca %struct.huft*, align 8
  store %struct.huft* %0, %struct.huft** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.huft** %2, metadata !6205, metadata !DIExpression()), !dbg !6206
  call void @llvm.dbg.declare(metadata %struct.huft** %3, metadata !6207, metadata !DIExpression()), !dbg !6208
  call void @llvm.dbg.declare(metadata %struct.huft** %4, metadata !6209, metadata !DIExpression()), !dbg !6210
  %5 = load %struct.huft*, %struct.huft** %2, align 8, !dbg !6211
  store %struct.huft* %5, %struct.huft** %3, align 8, !dbg !6212
  br label %6, !dbg !6213

6:                                                ; preds = %9, %1
  %7 = load %struct.huft*, %struct.huft** %3, align 8, !dbg !6214
  %8 = icmp ne %struct.huft* %7, null, !dbg !6215
  br i1 %8, label %9, label %18, !dbg !6213

9:                                                ; preds = %6
  %10 = load %struct.huft*, %struct.huft** %3, align 8, !dbg !6216
  %11 = getelementptr inbounds %struct.huft, %struct.huft* %10, i32 -1, !dbg !6216
  store %struct.huft* %11, %struct.huft** %3, align 8, !dbg !6216
  %12 = getelementptr inbounds %struct.huft, %struct.huft* %11, i32 0, i32 2, !dbg !6218
  %13 = bitcast %union.anon.8* %12 to %struct.huft**, !dbg !6219
  %14 = load %struct.huft*, %struct.huft** %13, align 8, !dbg !6219
  store %struct.huft* %14, %struct.huft** %4, align 8, !dbg !6220
  %15 = load %struct.huft*, %struct.huft** %3, align 8, !dbg !6221
  %16 = bitcast %struct.huft* %15 to i8*, !dbg !6222
  call void @free(i8* noundef %16) #10, !dbg !6223
  %17 = load %struct.huft*, %struct.huft** %4, align 8, !dbg !6224
  store %struct.huft* %17, %struct.huft** %3, align 8, !dbg !6225
  br label %6, !dbg !6213, !llvm.loop !6226

18:                                               ; preds = %6
  ret i32 0, !dbg !6228
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @inflate_codes(%struct.huft* noundef %0, %struct.huft* noundef %1, i32 noundef %2, i32 noundef %3) #0 !dbg !6229 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.huft*, align 8
  %7 = alloca %struct.huft*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %struct.huft*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i64, align 8
  %18 = alloca i32, align 4
  store %struct.huft* %0, %struct.huft** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.huft** %6, metadata !6232, metadata !DIExpression()), !dbg !6233
  store %struct.huft* %1, %struct.huft** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.huft** %7, metadata !6234, metadata !DIExpression()), !dbg !6235
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !6236, metadata !DIExpression()), !dbg !6237
  store i32 %3, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !6238, metadata !DIExpression()), !dbg !6239
  call void @llvm.dbg.declare(metadata i32* %10, metadata !6240, metadata !DIExpression()), !dbg !6241
  call void @llvm.dbg.declare(metadata i32* %11, metadata !6242, metadata !DIExpression()), !dbg !6243
  call void @llvm.dbg.declare(metadata i32* %12, metadata !6244, metadata !DIExpression()), !dbg !6245
  call void @llvm.dbg.declare(metadata i32* %13, metadata !6246, metadata !DIExpression()), !dbg !6247
  call void @llvm.dbg.declare(metadata %struct.huft** %14, metadata !6248, metadata !DIExpression()), !dbg !6249
  call void @llvm.dbg.declare(metadata i32* %15, metadata !6250, metadata !DIExpression()), !dbg !6251
  call void @llvm.dbg.declare(metadata i32* %16, metadata !6252, metadata !DIExpression()), !dbg !6253
  call void @llvm.dbg.declare(metadata i64* %17, metadata !6254, metadata !DIExpression()), !dbg !6255
  call void @llvm.dbg.declare(metadata i32* %18, metadata !6256, metadata !DIExpression()), !dbg !6257
  %19 = load i64, i64* @bb, align 8, !dbg !6258
  store i64 %19, i64* %17, align 8, !dbg !6259
  %20 = load i32, i32* @bk, align 4, !dbg !6260
  store i32 %20, i32* %18, align 4, !dbg !6261
  %21 = load i32, i32* @outcnt, align 4, !dbg !6262
  store i32 %21, i32* %13, align 4, !dbg !6263
  %22 = load i32, i32* %8, align 4, !dbg !6264
  %23 = sext i32 %22 to i64, !dbg !6265
  %24 = getelementptr inbounds [17 x i16], [17 x i16]* @mask_bits, i64 0, i64 %23, !dbg !6265
  %25 = load i16, i16* %24, align 2, !dbg !6265
  %26 = zext i16 %25 to i32, !dbg !6265
  store i32 %26, i32* %15, align 4, !dbg !6266
  %27 = load i32, i32* %9, align 4, !dbg !6267
  %28 = sext i32 %27 to i64, !dbg !6268
  %29 = getelementptr inbounds [17 x i16], [17 x i16]* @mask_bits, i64 0, i64 %28, !dbg !6268
  %30 = load i16, i16* %29, align 2, !dbg !6268
  %31 = zext i16 %30 to i32, !dbg !6268
  store i32 %31, i32* %16, align 4, !dbg !6269
  br label %32, !dbg !6270

32:                                               ; preds = %473, %4
  br label %33, !dbg !6271

33:                                               ; preds = %50, %32
  %34 = load i32, i32* %18, align 4, !dbg !6271
  %35 = load i32, i32* %8, align 4, !dbg !6271
  %36 = icmp ult i32 %34, %35, !dbg !6271
  br i1 %36, label %37, label %61, !dbg !6271

37:                                               ; preds = %33
  %38 = load i32, i32* @inptr, align 4, !dbg !6276
  %39 = load i32, i32* @insize, align 4, !dbg !6276
  %40 = icmp ult i32 %38, %39, !dbg !6276
  br i1 %40, label %41, label %48, !dbg !6276

41:                                               ; preds = %37
  %42 = load i32, i32* @inptr, align 4, !dbg !6276
  %43 = add i32 %42, 1, !dbg !6276
  store i32 %43, i32* @inptr, align 4, !dbg !6276
  %44 = zext i32 %42 to i64, !dbg !6276
  %45 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i64 0, i64 %44, !dbg !6276
  %46 = load i8, i8* %45, align 1, !dbg !6276
  %47 = zext i8 %46 to i32, !dbg !6276
  br label %50, !dbg !6276

48:                                               ; preds = %37
  %49 = call i32 @fill_inbuf(i32 noundef 0), !dbg !6276
  br label %50, !dbg !6276

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %47, %41 ], [ %49, %48 ], !dbg !6276
  %52 = trunc i32 %51 to i8, !dbg !6276
  %53 = zext i8 %52 to i64, !dbg !6276
  %54 = load i32, i32* %18, align 4, !dbg !6276
  %55 = zext i32 %54 to i64, !dbg !6276
  %56 = shl i64 %53, %55, !dbg !6276
  %57 = load i64, i64* %17, align 8, !dbg !6276
  %58 = or i64 %57, %56, !dbg !6276
  store i64 %58, i64* %17, align 8, !dbg !6276
  %59 = load i32, i32* %18, align 4, !dbg !6276
  %60 = add i32 %59, 8, !dbg !6276
  store i32 %60, i32* %18, align 4, !dbg !6276
  br label %33, !dbg !6271, !llvm.loop !6278

61:                                               ; preds = %33
  %62 = load %struct.huft*, %struct.huft** %6, align 8, !dbg !6279
  %63 = load i64, i64* %17, align 8, !dbg !6281
  %64 = trunc i64 %63 to i32, !dbg !6282
  %65 = load i32, i32* %15, align 4, !dbg !6283
  %66 = and i32 %64, %65, !dbg !6284
  %67 = zext i32 %66 to i64, !dbg !6285
  %68 = getelementptr inbounds %struct.huft, %struct.huft* %62, i64 %67, !dbg !6285
  store %struct.huft* %68, %struct.huft** %14, align 8, !dbg !6286
  %69 = getelementptr inbounds %struct.huft, %struct.huft* %68, i32 0, i32 0, !dbg !6287
  %70 = load i8, i8* %69, align 8, !dbg !6287
  %71 = zext i8 %70 to i32, !dbg !6288
  store i32 %71, i32* %10, align 4, !dbg !6289
  %72 = icmp ugt i32 %71, 16, !dbg !6290
  br i1 %72, label %73, label %143, !dbg !6291

73:                                               ; preds = %61
  br label %74, !dbg !6292

74:                                               ; preds = %123, %73
  %75 = load i32, i32* %10, align 4, !dbg !6293
  %76 = icmp eq i32 %75, 99, !dbg !6296
  br i1 %76, label %77, label %78, !dbg !6297

77:                                               ; preds = %74
  store i32 1, i32* %5, align 4, !dbg !6298
  br label %478, !dbg !6298

78:                                               ; preds = %74
  %79 = load %struct.huft*, %struct.huft** %14, align 8, !dbg !6299
  %80 = getelementptr inbounds %struct.huft, %struct.huft* %79, i32 0, i32 1, !dbg !6299
  %81 = load i8, i8* %80, align 1, !dbg !6299
  %82 = zext i8 %81 to i32, !dbg !6299
  %83 = load i64, i64* %17, align 8, !dbg !6299
  %84 = zext i32 %82 to i64, !dbg !6299
  %85 = lshr i64 %83, %84, !dbg !6299
  store i64 %85, i64* %17, align 8, !dbg !6299
  %86 = load %struct.huft*, %struct.huft** %14, align 8, !dbg !6299
  %87 = getelementptr inbounds %struct.huft, %struct.huft* %86, i32 0, i32 1, !dbg !6299
  %88 = load i8, i8* %87, align 1, !dbg !6299
  %89 = zext i8 %88 to i32, !dbg !6299
  %90 = load i32, i32* %18, align 4, !dbg !6299
  %91 = sub i32 %90, %89, !dbg !6299
  store i32 %91, i32* %18, align 4, !dbg !6299
  %92 = load i32, i32* %10, align 4, !dbg !6301
  %93 = sub i32 %92, 16, !dbg !6301
  store i32 %93, i32* %10, align 4, !dbg !6301
  br label %94, !dbg !6302

94:                                               ; preds = %111, %78
  %95 = load i32, i32* %18, align 4, !dbg !6302
  %96 = load i32, i32* %10, align 4, !dbg !6302
  %97 = icmp ult i32 %95, %96, !dbg !6302
  br i1 %97, label %98, label %122, !dbg !6302

98:                                               ; preds = %94
  %99 = load i32, i32* @inptr, align 4, !dbg !6304
  %100 = load i32, i32* @insize, align 4, !dbg !6304
  %101 = icmp ult i32 %99, %100, !dbg !6304
  br i1 %101, label %102, label %109, !dbg !6304

102:                                              ; preds = %98
  %103 = load i32, i32* @inptr, align 4, !dbg !6304
  %104 = add i32 %103, 1, !dbg !6304
  store i32 %104, i32* @inptr, align 4, !dbg !6304
  %105 = zext i32 %103 to i64, !dbg !6304
  %106 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i64 0, i64 %105, !dbg !6304
  %107 = load i8, i8* %106, align 1, !dbg !6304
  %108 = zext i8 %107 to i32, !dbg !6304
  br label %111, !dbg !6304

109:                                              ; preds = %98
  %110 = call i32 @fill_inbuf(i32 noundef 0), !dbg !6304
  br label %111, !dbg !6304

111:                                              ; preds = %109, %102
  %112 = phi i32 [ %108, %102 ], [ %110, %109 ], !dbg !6304
  %113 = trunc i32 %112 to i8, !dbg !6304
  %114 = zext i8 %113 to i64, !dbg !6304
  %115 = load i32, i32* %18, align 4, !dbg !6304
  %116 = zext i32 %115 to i64, !dbg !6304
  %117 = shl i64 %114, %116, !dbg !6304
  %118 = load i64, i64* %17, align 8, !dbg !6304
  %119 = or i64 %118, %117, !dbg !6304
  store i64 %119, i64* %17, align 8, !dbg !6304
  %120 = load i32, i32* %18, align 4, !dbg !6304
  %121 = add i32 %120, 8, !dbg !6304
  store i32 %121, i32* %18, align 4, !dbg !6304
  br label %94, !dbg !6302, !llvm.loop !6306

122:                                              ; preds = %94
  br label %123, !dbg !6307

123:                                              ; preds = %122
  %124 = load %struct.huft*, %struct.huft** %14, align 8, !dbg !6308
  %125 = getelementptr inbounds %struct.huft, %struct.huft* %124, i32 0, i32 2, !dbg !6309
  %126 = bitcast %union.anon.8* %125 to %struct.huft**, !dbg !6310
  %127 = load %struct.huft*, %struct.huft** %126, align 8, !dbg !6310
  %128 = load i64, i64* %17, align 8, !dbg !6311
  %129 = trunc i64 %128 to i32, !dbg !6312
  %130 = load i32, i32* %10, align 4, !dbg !6313
  %131 = zext i32 %130 to i64, !dbg !6314
  %132 = getelementptr inbounds [17 x i16], [17 x i16]* @mask_bits, i64 0, i64 %131, !dbg !6314
  %133 = load i16, i16* %132, align 2, !dbg !6314
  %134 = zext i16 %133 to i32, !dbg !6314
  %135 = and i32 %129, %134, !dbg !6315
  %136 = zext i32 %135 to i64, !dbg !6316
  %137 = getelementptr inbounds %struct.huft, %struct.huft* %127, i64 %136, !dbg !6316
  store %struct.huft* %137, %struct.huft** %14, align 8, !dbg !6317
  %138 = getelementptr inbounds %struct.huft, %struct.huft* %137, i32 0, i32 0, !dbg !6318
  %139 = load i8, i8* %138, align 8, !dbg !6318
  %140 = zext i8 %139 to i32, !dbg !6319
  store i32 %140, i32* %10, align 4, !dbg !6320
  %141 = icmp ugt i32 %140, 16, !dbg !6321
  br i1 %141, label %74, label %142, !dbg !6307, !llvm.loop !6322

142:                                              ; preds = %123
  br label %143, !dbg !6307

143:                                              ; preds = %142, %61
  %144 = load %struct.huft*, %struct.huft** %14, align 8, !dbg !6324
  %145 = getelementptr inbounds %struct.huft, %struct.huft* %144, i32 0, i32 1, !dbg !6324
  %146 = load i8, i8* %145, align 1, !dbg !6324
  %147 = zext i8 %146 to i32, !dbg !6324
  %148 = load i64, i64* %17, align 8, !dbg !6324
  %149 = zext i32 %147 to i64, !dbg !6324
  %150 = lshr i64 %148, %149, !dbg !6324
  store i64 %150, i64* %17, align 8, !dbg !6324
  %151 = load %struct.huft*, %struct.huft** %14, align 8, !dbg !6324
  %152 = getelementptr inbounds %struct.huft, %struct.huft* %151, i32 0, i32 1, !dbg !6324
  %153 = load i8, i8* %152, align 1, !dbg !6324
  %154 = zext i8 %153 to i32, !dbg !6324
  %155 = load i32, i32* %18, align 4, !dbg !6324
  %156 = sub i32 %155, %154, !dbg !6324
  store i32 %156, i32* %18, align 4, !dbg !6324
  %157 = load i32, i32* %10, align 4, !dbg !6326
  %158 = icmp eq i32 %157, 16, !dbg !6328
  br i1 %158, label %159, label %174, !dbg !6329

159:                                              ; preds = %143
  %160 = load %struct.huft*, %struct.huft** %14, align 8, !dbg !6330
  %161 = getelementptr inbounds %struct.huft, %struct.huft* %160, i32 0, i32 2, !dbg !6332
  %162 = bitcast %union.anon.8* %161 to i16*, !dbg !6333
  %163 = load i16, i16* %162, align 8, !dbg !6333
  %164 = trunc i16 %163 to i8, !dbg !6334
  %165 = load i32, i32* %13, align 4, !dbg !6335
  %166 = add i32 %165, 1, !dbg !6335
  store i32 %166, i32* %13, align 4, !dbg !6335
  %167 = zext i32 %165 to i64, !dbg !6336
  %168 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i64 0, i64 %167, !dbg !6336
  store i8 %164, i8* %168, align 1, !dbg !6337
  %169 = load i32, i32* %13, align 4, !dbg !6338
  %170 = icmp eq i32 %169, 32768, !dbg !6340
  br i1 %170, label %171, label %173, !dbg !6341

171:                                              ; preds = %159
  %172 = load i32, i32* %13, align 4, !dbg !6342
  store i32 %172, i32* @outcnt, align 4, !dbg !6342
  call void @flush_window(), !dbg !6342
  store i32 0, i32* %13, align 4, !dbg !6344
  br label %173, !dbg !6345

173:                                              ; preds = %171, %159
  br label %473, !dbg !6346

174:                                              ; preds = %143
  %175 = load i32, i32* %10, align 4, !dbg !6347
  %176 = icmp eq i32 %175, 15, !dbg !6350
  br i1 %176, label %177, label %178, !dbg !6351

177:                                              ; preds = %174
  br label %474, !dbg !6352

178:                                              ; preds = %174
  br label %179, !dbg !6353

179:                                              ; preds = %196, %178
  %180 = load i32, i32* %18, align 4, !dbg !6353
  %181 = load i32, i32* %10, align 4, !dbg !6353
  %182 = icmp ult i32 %180, %181, !dbg !6353
  br i1 %182, label %183, label %207, !dbg !6353

183:                                              ; preds = %179
  %184 = load i32, i32* @inptr, align 4, !dbg !6355
  %185 = load i32, i32* @insize, align 4, !dbg !6355
  %186 = icmp ult i32 %184, %185, !dbg !6355
  br i1 %186, label %187, label %194, !dbg !6355

187:                                              ; preds = %183
  %188 = load i32, i32* @inptr, align 4, !dbg !6355
  %189 = add i32 %188, 1, !dbg !6355
  store i32 %189, i32* @inptr, align 4, !dbg !6355
  %190 = zext i32 %188 to i64, !dbg !6355
  %191 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i64 0, i64 %190, !dbg !6355
  %192 = load i8, i8* %191, align 1, !dbg !6355
  %193 = zext i8 %192 to i32, !dbg !6355
  br label %196, !dbg !6355

194:                                              ; preds = %183
  %195 = call i32 @fill_inbuf(i32 noundef 0), !dbg !6355
  br label %196, !dbg !6355

196:                                              ; preds = %194, %187
  %197 = phi i32 [ %193, %187 ], [ %195, %194 ], !dbg !6355
  %198 = trunc i32 %197 to i8, !dbg !6355
  %199 = zext i8 %198 to i64, !dbg !6355
  %200 = load i32, i32* %18, align 4, !dbg !6355
  %201 = zext i32 %200 to i64, !dbg !6355
  %202 = shl i64 %199, %201, !dbg !6355
  %203 = load i64, i64* %17, align 8, !dbg !6355
  %204 = or i64 %203, %202, !dbg !6355
  store i64 %204, i64* %17, align 8, !dbg !6355
  %205 = load i32, i32* %18, align 4, !dbg !6355
  %206 = add i32 %205, 8, !dbg !6355
  store i32 %206, i32* %18, align 4, !dbg !6355
  br label %179, !dbg !6353, !llvm.loop !6357

207:                                              ; preds = %179
  %208 = load %struct.huft*, %struct.huft** %14, align 8, !dbg !6358
  %209 = getelementptr inbounds %struct.huft, %struct.huft* %208, i32 0, i32 2, !dbg !6359
  %210 = bitcast %union.anon.8* %209 to i16*, !dbg !6360
  %211 = load i16, i16* %210, align 8, !dbg !6360
  %212 = zext i16 %211 to i32, !dbg !6358
  %213 = load i64, i64* %17, align 8, !dbg !6361
  %214 = trunc i64 %213 to i32, !dbg !6362
  %215 = load i32, i32* %10, align 4, !dbg !6363
  %216 = zext i32 %215 to i64, !dbg !6364
  %217 = getelementptr inbounds [17 x i16], [17 x i16]* @mask_bits, i64 0, i64 %216, !dbg !6364
  %218 = load i16, i16* %217, align 2, !dbg !6364
  %219 = zext i16 %218 to i32, !dbg !6364
  %220 = and i32 %214, %219, !dbg !6365
  %221 = add i32 %212, %220, !dbg !6366
  store i32 %221, i32* %11, align 4, !dbg !6367
  %222 = load i32, i32* %10, align 4, !dbg !6368
  %223 = load i64, i64* %17, align 8, !dbg !6368
  %224 = zext i32 %222 to i64, !dbg !6368
  %225 = lshr i64 %223, %224, !dbg !6368
  store i64 %225, i64* %17, align 8, !dbg !6368
  %226 = load i32, i32* %10, align 4, !dbg !6368
  %227 = load i32, i32* %18, align 4, !dbg !6368
  %228 = sub i32 %227, %226, !dbg !6368
  store i32 %228, i32* %18, align 4, !dbg !6368
  br label %229, !dbg !6370

229:                                              ; preds = %246, %207
  %230 = load i32, i32* %18, align 4, !dbg !6370
  %231 = load i32, i32* %9, align 4, !dbg !6370
  %232 = icmp ult i32 %230, %231, !dbg !6370
  br i1 %232, label %233, label %257, !dbg !6370

233:                                              ; preds = %229
  %234 = load i32, i32* @inptr, align 4, !dbg !6372
  %235 = load i32, i32* @insize, align 4, !dbg !6372
  %236 = icmp ult i32 %234, %235, !dbg !6372
  br i1 %236, label %237, label %244, !dbg !6372

237:                                              ; preds = %233
  %238 = load i32, i32* @inptr, align 4, !dbg !6372
  %239 = add i32 %238, 1, !dbg !6372
  store i32 %239, i32* @inptr, align 4, !dbg !6372
  %240 = zext i32 %238 to i64, !dbg !6372
  %241 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i64 0, i64 %240, !dbg !6372
  %242 = load i8, i8* %241, align 1, !dbg !6372
  %243 = zext i8 %242 to i32, !dbg !6372
  br label %246, !dbg !6372

244:                                              ; preds = %233
  %245 = call i32 @fill_inbuf(i32 noundef 0), !dbg !6372
  br label %246, !dbg !6372

246:                                              ; preds = %244, %237
  %247 = phi i32 [ %243, %237 ], [ %245, %244 ], !dbg !6372
  %248 = trunc i32 %247 to i8, !dbg !6372
  %249 = zext i8 %248 to i64, !dbg !6372
  %250 = load i32, i32* %18, align 4, !dbg !6372
  %251 = zext i32 %250 to i64, !dbg !6372
  %252 = shl i64 %249, %251, !dbg !6372
  %253 = load i64, i64* %17, align 8, !dbg !6372
  %254 = or i64 %253, %252, !dbg !6372
  store i64 %254, i64* %17, align 8, !dbg !6372
  %255 = load i32, i32* %18, align 4, !dbg !6372
  %256 = add i32 %255, 8, !dbg !6372
  store i32 %256, i32* %18, align 4, !dbg !6372
  br label %229, !dbg !6370, !llvm.loop !6374

257:                                              ; preds = %229
  %258 = load %struct.huft*, %struct.huft** %7, align 8, !dbg !6375
  %259 = load i64, i64* %17, align 8, !dbg !6377
  %260 = trunc i64 %259 to i32, !dbg !6378
  %261 = load i32, i32* %16, align 4, !dbg !6379
  %262 = and i32 %260, %261, !dbg !6380
  %263 = zext i32 %262 to i64, !dbg !6381
  %264 = getelementptr inbounds %struct.huft, %struct.huft* %258, i64 %263, !dbg !6381
  store %struct.huft* %264, %struct.huft** %14, align 8, !dbg !6382
  %265 = getelementptr inbounds %struct.huft, %struct.huft* %264, i32 0, i32 0, !dbg !6383
  %266 = load i8, i8* %265, align 8, !dbg !6383
  %267 = zext i8 %266 to i32, !dbg !6384
  store i32 %267, i32* %10, align 4, !dbg !6385
  %268 = icmp ugt i32 %267, 16, !dbg !6386
  br i1 %268, label %269, label %339, !dbg !6387

269:                                              ; preds = %257
  br label %270, !dbg !6388

270:                                              ; preds = %319, %269
  %271 = load i32, i32* %10, align 4, !dbg !6389
  %272 = icmp eq i32 %271, 99, !dbg !6392
  br i1 %272, label %273, label %274, !dbg !6393

273:                                              ; preds = %270
  store i32 1, i32* %5, align 4, !dbg !6394
  br label %478, !dbg !6394

274:                                              ; preds = %270
  %275 = load %struct.huft*, %struct.huft** %14, align 8, !dbg !6395
  %276 = getelementptr inbounds %struct.huft, %struct.huft* %275, i32 0, i32 1, !dbg !6395
  %277 = load i8, i8* %276, align 1, !dbg !6395
  %278 = zext i8 %277 to i32, !dbg !6395
  %279 = load i64, i64* %17, align 8, !dbg !6395
  %280 = zext i32 %278 to i64, !dbg !6395
  %281 = lshr i64 %279, %280, !dbg !6395
  store i64 %281, i64* %17, align 8, !dbg !6395
  %282 = load %struct.huft*, %struct.huft** %14, align 8, !dbg !6395
  %283 = getelementptr inbounds %struct.huft, %struct.huft* %282, i32 0, i32 1, !dbg !6395
  %284 = load i8, i8* %283, align 1, !dbg !6395
  %285 = zext i8 %284 to i32, !dbg !6395
  %286 = load i32, i32* %18, align 4, !dbg !6395
  %287 = sub i32 %286, %285, !dbg !6395
  store i32 %287, i32* %18, align 4, !dbg !6395
  %288 = load i32, i32* %10, align 4, !dbg !6397
  %289 = sub i32 %288, 16, !dbg !6397
  store i32 %289, i32* %10, align 4, !dbg !6397
  br label %290, !dbg !6398

290:                                              ; preds = %307, %274
  %291 = load i32, i32* %18, align 4, !dbg !6398
  %292 = load i32, i32* %10, align 4, !dbg !6398
  %293 = icmp ult i32 %291, %292, !dbg !6398
  br i1 %293, label %294, label %318, !dbg !6398

294:                                              ; preds = %290
  %295 = load i32, i32* @inptr, align 4, !dbg !6400
  %296 = load i32, i32* @insize, align 4, !dbg !6400
  %297 = icmp ult i32 %295, %296, !dbg !6400
  br i1 %297, label %298, label %305, !dbg !6400

298:                                              ; preds = %294
  %299 = load i32, i32* @inptr, align 4, !dbg !6400
  %300 = add i32 %299, 1, !dbg !6400
  store i32 %300, i32* @inptr, align 4, !dbg !6400
  %301 = zext i32 %299 to i64, !dbg !6400
  %302 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i64 0, i64 %301, !dbg !6400
  %303 = load i8, i8* %302, align 1, !dbg !6400
  %304 = zext i8 %303 to i32, !dbg !6400
  br label %307, !dbg !6400

305:                                              ; preds = %294
  %306 = call i32 @fill_inbuf(i32 noundef 0), !dbg !6400
  br label %307, !dbg !6400

307:                                              ; preds = %305, %298
  %308 = phi i32 [ %304, %298 ], [ %306, %305 ], !dbg !6400
  %309 = trunc i32 %308 to i8, !dbg !6400
  %310 = zext i8 %309 to i64, !dbg !6400
  %311 = load i32, i32* %18, align 4, !dbg !6400
  %312 = zext i32 %311 to i64, !dbg !6400
  %313 = shl i64 %310, %312, !dbg !6400
  %314 = load i64, i64* %17, align 8, !dbg !6400
  %315 = or i64 %314, %313, !dbg !6400
  store i64 %315, i64* %17, align 8, !dbg !6400
  %316 = load i32, i32* %18, align 4, !dbg !6400
  %317 = add i32 %316, 8, !dbg !6400
  store i32 %317, i32* %18, align 4, !dbg !6400
  br label %290, !dbg !6398, !llvm.loop !6402

318:                                              ; preds = %290
  br label %319, !dbg !6403

319:                                              ; preds = %318
  %320 = load %struct.huft*, %struct.huft** %14, align 8, !dbg !6404
  %321 = getelementptr inbounds %struct.huft, %struct.huft* %320, i32 0, i32 2, !dbg !6405
  %322 = bitcast %union.anon.8* %321 to %struct.huft**, !dbg !6406
  %323 = load %struct.huft*, %struct.huft** %322, align 8, !dbg !6406
  %324 = load i64, i64* %17, align 8, !dbg !6407
  %325 = trunc i64 %324 to i32, !dbg !6408
  %326 = load i32, i32* %10, align 4, !dbg !6409
  %327 = zext i32 %326 to i64, !dbg !6410
  %328 = getelementptr inbounds [17 x i16], [17 x i16]* @mask_bits, i64 0, i64 %327, !dbg !6410
  %329 = load i16, i16* %328, align 2, !dbg !6410
  %330 = zext i16 %329 to i32, !dbg !6410
  %331 = and i32 %325, %330, !dbg !6411
  %332 = zext i32 %331 to i64, !dbg !6412
  %333 = getelementptr inbounds %struct.huft, %struct.huft* %323, i64 %332, !dbg !6412
  store %struct.huft* %333, %struct.huft** %14, align 8, !dbg !6413
  %334 = getelementptr inbounds %struct.huft, %struct.huft* %333, i32 0, i32 0, !dbg !6414
  %335 = load i8, i8* %334, align 8, !dbg !6414
  %336 = zext i8 %335 to i32, !dbg !6415
  store i32 %336, i32* %10, align 4, !dbg !6416
  %337 = icmp ugt i32 %336, 16, !dbg !6417
  br i1 %337, label %270, label %338, !dbg !6403, !llvm.loop !6418

338:                                              ; preds = %319
  br label %339, !dbg !6403

339:                                              ; preds = %338, %257
  %340 = load %struct.huft*, %struct.huft** %14, align 8, !dbg !6420
  %341 = getelementptr inbounds %struct.huft, %struct.huft* %340, i32 0, i32 1, !dbg !6420
  %342 = load i8, i8* %341, align 1, !dbg !6420
  %343 = zext i8 %342 to i32, !dbg !6420
  %344 = load i64, i64* %17, align 8, !dbg !6420
  %345 = zext i32 %343 to i64, !dbg !6420
  %346 = lshr i64 %344, %345, !dbg !6420
  store i64 %346, i64* %17, align 8, !dbg !6420
  %347 = load %struct.huft*, %struct.huft** %14, align 8, !dbg !6420
  %348 = getelementptr inbounds %struct.huft, %struct.huft* %347, i32 0, i32 1, !dbg !6420
  %349 = load i8, i8* %348, align 1, !dbg !6420
  %350 = zext i8 %349 to i32, !dbg !6420
  %351 = load i32, i32* %18, align 4, !dbg !6420
  %352 = sub i32 %351, %350, !dbg !6420
  store i32 %352, i32* %18, align 4, !dbg !6420
  br label %353, !dbg !6422

353:                                              ; preds = %370, %339
  %354 = load i32, i32* %18, align 4, !dbg !6422
  %355 = load i32, i32* %10, align 4, !dbg !6422
  %356 = icmp ult i32 %354, %355, !dbg !6422
  br i1 %356, label %357, label %381, !dbg !6422

357:                                              ; preds = %353
  %358 = load i32, i32* @inptr, align 4, !dbg !6424
  %359 = load i32, i32* @insize, align 4, !dbg !6424
  %360 = icmp ult i32 %358, %359, !dbg !6424
  br i1 %360, label %361, label %368, !dbg !6424

361:                                              ; preds = %357
  %362 = load i32, i32* @inptr, align 4, !dbg !6424
  %363 = add i32 %362, 1, !dbg !6424
  store i32 %363, i32* @inptr, align 4, !dbg !6424
  %364 = zext i32 %362 to i64, !dbg !6424
  %365 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i64 0, i64 %364, !dbg !6424
  %366 = load i8, i8* %365, align 1, !dbg !6424
  %367 = zext i8 %366 to i32, !dbg !6424
  br label %370, !dbg !6424

368:                                              ; preds = %357
  %369 = call i32 @fill_inbuf(i32 noundef 0), !dbg !6424
  br label %370, !dbg !6424

370:                                              ; preds = %368, %361
  %371 = phi i32 [ %367, %361 ], [ %369, %368 ], !dbg !6424
  %372 = trunc i32 %371 to i8, !dbg !6424
  %373 = zext i8 %372 to i64, !dbg !6424
  %374 = load i32, i32* %18, align 4, !dbg !6424
  %375 = zext i32 %374 to i64, !dbg !6424
  %376 = shl i64 %373, %375, !dbg !6424
  %377 = load i64, i64* %17, align 8, !dbg !6424
  %378 = or i64 %377, %376, !dbg !6424
  store i64 %378, i64* %17, align 8, !dbg !6424
  %379 = load i32, i32* %18, align 4, !dbg !6424
  %380 = add i32 %379, 8, !dbg !6424
  store i32 %380, i32* %18, align 4, !dbg !6424
  br label %353, !dbg !6422, !llvm.loop !6426

381:                                              ; preds = %353
  %382 = load i32, i32* %13, align 4, !dbg !6427
  %383 = load %struct.huft*, %struct.huft** %14, align 8, !dbg !6428
  %384 = getelementptr inbounds %struct.huft, %struct.huft* %383, i32 0, i32 2, !dbg !6429
  %385 = bitcast %union.anon.8* %384 to i16*, !dbg !6430
  %386 = load i16, i16* %385, align 8, !dbg !6430
  %387 = zext i16 %386 to i32, !dbg !6428
  %388 = sub i32 %382, %387, !dbg !6431
  %389 = load i64, i64* %17, align 8, !dbg !6432
  %390 = trunc i64 %389 to i32, !dbg !6433
  %391 = load i32, i32* %10, align 4, !dbg !6434
  %392 = zext i32 %391 to i64, !dbg !6435
  %393 = getelementptr inbounds [17 x i16], [17 x i16]* @mask_bits, i64 0, i64 %392, !dbg !6435
  %394 = load i16, i16* %393, align 2, !dbg !6435
  %395 = zext i16 %394 to i32, !dbg !6435
  %396 = and i32 %390, %395, !dbg !6436
  %397 = sub i32 %388, %396, !dbg !6437
  store i32 %397, i32* %12, align 4, !dbg !6438
  %398 = load i32, i32* %10, align 4, !dbg !6439
  %399 = load i64, i64* %17, align 8, !dbg !6439
  %400 = zext i32 %398 to i64, !dbg !6439
  %401 = lshr i64 %399, %400, !dbg !6439
  store i64 %401, i64* %17, align 8, !dbg !6439
  %402 = load i32, i32* %10, align 4, !dbg !6439
  %403 = load i32, i32* %18, align 4, !dbg !6439
  %404 = sub i32 %403, %402, !dbg !6439
  store i32 %404, i32* %18, align 4, !dbg !6439
  br label %405, !dbg !6441

405:                                              ; preds = %469, %381
  %406 = load i32, i32* %12, align 4, !dbg !6442
  %407 = and i32 %406, 32767, !dbg !6442
  store i32 %407, i32* %12, align 4, !dbg !6442
  %408 = load i32, i32* %13, align 4, !dbg !6444
  %409 = icmp ugt i32 %407, %408, !dbg !6445
  br i1 %409, label %410, label %412, !dbg !6446

410:                                              ; preds = %405
  %411 = load i32, i32* %12, align 4, !dbg !6447
  br label %414, !dbg !6446

412:                                              ; preds = %405
  %413 = load i32, i32* %13, align 4, !dbg !6448
  br label %414, !dbg !6446

414:                                              ; preds = %412, %410
  %415 = phi i32 [ %411, %410 ], [ %413, %412 ], !dbg !6446
  %416 = sub i32 32768, %415, !dbg !6449
  store i32 %416, i32* %10, align 4, !dbg !6450
  %417 = load i32, i32* %11, align 4, !dbg !6451
  %418 = icmp ugt i32 %416, %417, !dbg !6452
  br i1 %418, label %419, label %421, !dbg !6453

419:                                              ; preds = %414
  %420 = load i32, i32* %11, align 4, !dbg !6454
  br label %423, !dbg !6453

421:                                              ; preds = %414
  %422 = load i32, i32* %10, align 4, !dbg !6455
  br label %423, !dbg !6453

423:                                              ; preds = %421, %419
  %424 = phi i32 [ %420, %419 ], [ %422, %421 ], !dbg !6453
  store i32 %424, i32* %10, align 4, !dbg !6456
  %425 = load i32, i32* %11, align 4, !dbg !6457
  %426 = sub i32 %425, %424, !dbg !6457
  store i32 %426, i32* %11, align 4, !dbg !6457
  %427 = load i32, i32* %13, align 4, !dbg !6458
  %428 = load i32, i32* %12, align 4, !dbg !6460
  %429 = sub i32 %427, %428, !dbg !6461
  %430 = load i32, i32* %10, align 4, !dbg !6462
  %431 = icmp uge i32 %429, %430, !dbg !6463
  br i1 %431, label %432, label %447, !dbg !6464

432:                                              ; preds = %423
  %433 = load i32, i32* %13, align 4, !dbg !6465
  %434 = zext i32 %433 to i64, !dbg !6467
  %435 = getelementptr inbounds i8, i8* getelementptr inbounds ([65536 x i8], [65536 x i8]* @window, i64 0, i64 0), i64 %434, !dbg !6467
  %436 = load i32, i32* %12, align 4, !dbg !6468
  %437 = zext i32 %436 to i64, !dbg !6469
  %438 = getelementptr inbounds i8, i8* getelementptr inbounds ([65536 x i8], [65536 x i8]* @window, i64 0, i64 0), i64 %437, !dbg !6469
  %439 = load i32, i32* %10, align 4, !dbg !6470
  %440 = zext i32 %439 to i64, !dbg !6470
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %435, i8* align 1 %438, i64 %440, i1 false), !dbg !6471
  %441 = load i32, i32* %10, align 4, !dbg !6472
  %442 = load i32, i32* %13, align 4, !dbg !6473
  %443 = add i32 %442, %441, !dbg !6473
  store i32 %443, i32* %13, align 4, !dbg !6473
  %444 = load i32, i32* %10, align 4, !dbg !6474
  %445 = load i32, i32* %12, align 4, !dbg !6475
  %446 = add i32 %445, %444, !dbg !6475
  store i32 %446, i32* %12, align 4, !dbg !6475
  br label %463, !dbg !6476

447:                                              ; preds = %423
  br label %448, !dbg !6477

448:                                              ; preds = %458, %447
  %449 = load i32, i32* %12, align 4, !dbg !6478
  %450 = add i32 %449, 1, !dbg !6478
  store i32 %450, i32* %12, align 4, !dbg !6478
  %451 = zext i32 %449 to i64, !dbg !6480
  %452 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i64 0, i64 %451, !dbg !6480
  %453 = load i8, i8* %452, align 1, !dbg !6480
  %454 = load i32, i32* %13, align 4, !dbg !6481
  %455 = add i32 %454, 1, !dbg !6481
  store i32 %455, i32* %13, align 4, !dbg !6481
  %456 = zext i32 %454 to i64, !dbg !6482
  %457 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i64 0, i64 %456, !dbg !6482
  store i8 %453, i8* %457, align 1, !dbg !6483
  br label %458, !dbg !6484

458:                                              ; preds = %448
  %459 = load i32, i32* %10, align 4, !dbg !6485
  %460 = add i32 %459, -1, !dbg !6485
  store i32 %460, i32* %10, align 4, !dbg !6485
  %461 = icmp ne i32 %460, 0, !dbg !6484
  br i1 %461, label %448, label %462, !dbg !6484, !llvm.loop !6486

462:                                              ; preds = %458
  br label %463

463:                                              ; preds = %462, %432
  %464 = load i32, i32* %13, align 4, !dbg !6488
  %465 = icmp eq i32 %464, 32768, !dbg !6490
  br i1 %465, label %466, label %468, !dbg !6491

466:                                              ; preds = %463
  %467 = load i32, i32* %13, align 4, !dbg !6492
  store i32 %467, i32* @outcnt, align 4, !dbg !6492
  call void @flush_window(), !dbg !6492
  store i32 0, i32* %13, align 4, !dbg !6494
  br label %468, !dbg !6495

468:                                              ; preds = %466, %463
  br label %469, !dbg !6496

469:                                              ; preds = %468
  %470 = load i32, i32* %11, align 4, !dbg !6497
  %471 = icmp ne i32 %470, 0, !dbg !6496
  br i1 %471, label %405, label %472, !dbg !6496, !llvm.loop !6498

472:                                              ; preds = %469
  br label %473

473:                                              ; preds = %472, %173
  br label %32, !dbg !6500, !llvm.loop !6501

474:                                              ; preds = %177
  %475 = load i32, i32* %13, align 4, !dbg !6504
  store i32 %475, i32* @outcnt, align 4, !dbg !6505
  %476 = load i64, i64* %17, align 8, !dbg !6506
  store i64 %476, i64* @bb, align 8, !dbg !6507
  %477 = load i32, i32* %18, align 4, !dbg !6508
  store i32 %477, i32* @bk, align 4, !dbg !6509
  store i32 0, i32* %5, align 4, !dbg !6510
  br label %478, !dbg !6510

478:                                              ; preds = %474, %273, %77
  %479 = load i32, i32* %5, align 4, !dbg !6511
  ret i32 %479, !dbg !6511
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @inflate_stored() #0 !dbg !6512 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !6513, metadata !DIExpression()), !dbg !6514
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6515, metadata !DIExpression()), !dbg !6516
  call void @llvm.dbg.declare(metadata i64* %4, metadata !6517, metadata !DIExpression()), !dbg !6518
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6519, metadata !DIExpression()), !dbg !6520
  %6 = load i64, i64* @bb, align 8, !dbg !6521
  store i64 %6, i64* %4, align 8, !dbg !6522
  %7 = load i32, i32* @bk, align 4, !dbg !6523
  store i32 %7, i32* %5, align 4, !dbg !6524
  %8 = load i32, i32* @outcnt, align 4, !dbg !6525
  store i32 %8, i32* %3, align 4, !dbg !6526
  %9 = load i32, i32* %5, align 4, !dbg !6527
  %10 = and i32 %9, 7, !dbg !6528
  store i32 %10, i32* %2, align 4, !dbg !6529
  %11 = load i32, i32* %2, align 4, !dbg !6530
  %12 = load i64, i64* %4, align 8, !dbg !6530
  %13 = zext i32 %11 to i64, !dbg !6530
  %14 = lshr i64 %12, %13, !dbg !6530
  store i64 %14, i64* %4, align 8, !dbg !6530
  %15 = load i32, i32* %2, align 4, !dbg !6530
  %16 = load i32, i32* %5, align 4, !dbg !6530
  %17 = sub i32 %16, %15, !dbg !6530
  store i32 %17, i32* %5, align 4, !dbg !6530
  br label %18, !dbg !6532

18:                                               ; preds = %34, %0
  %19 = load i32, i32* %5, align 4, !dbg !6532
  %20 = icmp ult i32 %19, 16, !dbg !6532
  br i1 %20, label %21, label %45, !dbg !6532

21:                                               ; preds = %18
  %22 = load i32, i32* @inptr, align 4, !dbg !6534
  %23 = load i32, i32* @insize, align 4, !dbg !6534
  %24 = icmp ult i32 %22, %23, !dbg !6534
  br i1 %24, label %25, label %32, !dbg !6534

25:                                               ; preds = %21
  %26 = load i32, i32* @inptr, align 4, !dbg !6534
  %27 = add i32 %26, 1, !dbg !6534
  store i32 %27, i32* @inptr, align 4, !dbg !6534
  %28 = zext i32 %26 to i64, !dbg !6534
  %29 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i64 0, i64 %28, !dbg !6534
  %30 = load i8, i8* %29, align 1, !dbg !6534
  %31 = zext i8 %30 to i32, !dbg !6534
  br label %34, !dbg !6534

32:                                               ; preds = %21
  %33 = call i32 @fill_inbuf(i32 noundef 0), !dbg !6534
  br label %34, !dbg !6534

34:                                               ; preds = %32, %25
  %35 = phi i32 [ %31, %25 ], [ %33, %32 ], !dbg !6534
  %36 = trunc i32 %35 to i8, !dbg !6534
  %37 = zext i8 %36 to i64, !dbg !6534
  %38 = load i32, i32* %5, align 4, !dbg !6534
  %39 = zext i32 %38 to i64, !dbg !6534
  %40 = shl i64 %37, %39, !dbg !6534
  %41 = load i64, i64* %4, align 8, !dbg !6534
  %42 = or i64 %41, %40, !dbg !6534
  store i64 %42, i64* %4, align 8, !dbg !6534
  %43 = load i32, i32* %5, align 4, !dbg !6534
  %44 = add i32 %43, 8, !dbg !6534
  store i32 %44, i32* %5, align 4, !dbg !6534
  br label %18, !dbg !6532, !llvm.loop !6536

45:                                               ; preds = %18
  %46 = load i64, i64* %4, align 8, !dbg !6537
  %47 = trunc i64 %46 to i32, !dbg !6538
  %48 = and i32 %47, 65535, !dbg !6539
  store i32 %48, i32* %2, align 4, !dbg !6540
  %49 = load i64, i64* %4, align 8, !dbg !6541
  %50 = lshr i64 %49, 16, !dbg !6541
  store i64 %50, i64* %4, align 8, !dbg !6541
  %51 = load i32, i32* %5, align 4, !dbg !6541
  %52 = sub i32 %51, 16, !dbg !6541
  store i32 %52, i32* %5, align 4, !dbg !6541
  br label %53, !dbg !6543

53:                                               ; preds = %69, %45
  %54 = load i32, i32* %5, align 4, !dbg !6543
  %55 = icmp ult i32 %54, 16, !dbg !6543
  br i1 %55, label %56, label %80, !dbg !6543

56:                                               ; preds = %53
  %57 = load i32, i32* @inptr, align 4, !dbg !6545
  %58 = load i32, i32* @insize, align 4, !dbg !6545
  %59 = icmp ult i32 %57, %58, !dbg !6545
  br i1 %59, label %60, label %67, !dbg !6545

60:                                               ; preds = %56
  %61 = load i32, i32* @inptr, align 4, !dbg !6545
  %62 = add i32 %61, 1, !dbg !6545
  store i32 %62, i32* @inptr, align 4, !dbg !6545
  %63 = zext i32 %61 to i64, !dbg !6545
  %64 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i64 0, i64 %63, !dbg !6545
  %65 = load i8, i8* %64, align 1, !dbg !6545
  %66 = zext i8 %65 to i32, !dbg !6545
  br label %69, !dbg !6545

67:                                               ; preds = %56
  %68 = call i32 @fill_inbuf(i32 noundef 0), !dbg !6545
  br label %69, !dbg !6545

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %66, %60 ], [ %68, %67 ], !dbg !6545
  %71 = trunc i32 %70 to i8, !dbg !6545
  %72 = zext i8 %71 to i64, !dbg !6545
  %73 = load i32, i32* %5, align 4, !dbg !6545
  %74 = zext i32 %73 to i64, !dbg !6545
  %75 = shl i64 %72, %74, !dbg !6545
  %76 = load i64, i64* %4, align 8, !dbg !6545
  %77 = or i64 %76, %75, !dbg !6545
  store i64 %77, i64* %4, align 8, !dbg !6545
  %78 = load i32, i32* %5, align 4, !dbg !6545
  %79 = add i32 %78, 8, !dbg !6545
  store i32 %79, i32* %5, align 4, !dbg !6545
  br label %53, !dbg !6543, !llvm.loop !6547

80:                                               ; preds = %53
  %81 = load i32, i32* %2, align 4, !dbg !6548
  %82 = load i64, i64* %4, align 8, !dbg !6550
  %83 = xor i64 %82, -1, !dbg !6551
  %84 = and i64 %83, 65535, !dbg !6552
  %85 = trunc i64 %84 to i32, !dbg !6553
  %86 = icmp ne i32 %81, %85, !dbg !6554
  br i1 %86, label %87, label %88, !dbg !6555

87:                                               ; preds = %80
  store i32 1, i32* %1, align 4, !dbg !6556
  br label %145, !dbg !6556

88:                                               ; preds = %80
  %89 = load i64, i64* %4, align 8, !dbg !6557
  %90 = lshr i64 %89, 16, !dbg !6557
  store i64 %90, i64* %4, align 8, !dbg !6557
  %91 = load i32, i32* %5, align 4, !dbg !6557
  %92 = sub i32 %91, 16, !dbg !6557
  store i32 %92, i32* %5, align 4, !dbg !6557
  br label %93, !dbg !6559

93:                                               ; preds = %136, %88
  %94 = load i32, i32* %2, align 4, !dbg !6560
  %95 = add i32 %94, -1, !dbg !6560
  store i32 %95, i32* %2, align 4, !dbg !6560
  %96 = icmp ne i32 %94, 0, !dbg !6559
  br i1 %96, label %97, label %141, !dbg !6559

97:                                               ; preds = %93
  br label %98, !dbg !6561

98:                                               ; preds = %114, %97
  %99 = load i32, i32* %5, align 4, !dbg !6561
  %100 = icmp ult i32 %99, 8, !dbg !6561
  br i1 %100, label %101, label %125, !dbg !6561

101:                                              ; preds = %98
  %102 = load i32, i32* @inptr, align 4, !dbg !6564
  %103 = load i32, i32* @insize, align 4, !dbg !6564
  %104 = icmp ult i32 %102, %103, !dbg !6564
  br i1 %104, label %105, label %112, !dbg !6564

105:                                              ; preds = %101
  %106 = load i32, i32* @inptr, align 4, !dbg !6564
  %107 = add i32 %106, 1, !dbg !6564
  store i32 %107, i32* @inptr, align 4, !dbg !6564
  %108 = zext i32 %106 to i64, !dbg !6564
  %109 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i64 0, i64 %108, !dbg !6564
  %110 = load i8, i8* %109, align 1, !dbg !6564
  %111 = zext i8 %110 to i32, !dbg !6564
  br label %114, !dbg !6564

112:                                              ; preds = %101
  %113 = call i32 @fill_inbuf(i32 noundef 0), !dbg !6564
  br label %114, !dbg !6564

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %111, %105 ], [ %113, %112 ], !dbg !6564
  %116 = trunc i32 %115 to i8, !dbg !6564
  %117 = zext i8 %116 to i64, !dbg !6564
  %118 = load i32, i32* %5, align 4, !dbg !6564
  %119 = zext i32 %118 to i64, !dbg !6564
  %120 = shl i64 %117, %119, !dbg !6564
  %121 = load i64, i64* %4, align 8, !dbg !6564
  %122 = or i64 %121, %120, !dbg !6564
  store i64 %122, i64* %4, align 8, !dbg !6564
  %123 = load i32, i32* %5, align 4, !dbg !6564
  %124 = add i32 %123, 8, !dbg !6564
  store i32 %124, i32* %5, align 4, !dbg !6564
  br label %98, !dbg !6561, !llvm.loop !6566

125:                                              ; preds = %98
  %126 = load i64, i64* %4, align 8, !dbg !6567
  %127 = trunc i64 %126 to i8, !dbg !6568
  %128 = load i32, i32* %3, align 4, !dbg !6569
  %129 = add i32 %128, 1, !dbg !6569
  store i32 %129, i32* %3, align 4, !dbg !6569
  %130 = zext i32 %128 to i64, !dbg !6570
  %131 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i64 0, i64 %130, !dbg !6570
  store i8 %127, i8* %131, align 1, !dbg !6571
  %132 = load i32, i32* %3, align 4, !dbg !6572
  %133 = icmp eq i32 %132, 32768, !dbg !6574
  br i1 %133, label %134, label %136, !dbg !6575

134:                                              ; preds = %125
  %135 = load i32, i32* %3, align 4, !dbg !6576
  store i32 %135, i32* @outcnt, align 4, !dbg !6576
  call void @flush_window(), !dbg !6576
  store i32 0, i32* %3, align 4, !dbg !6578
  br label %136, !dbg !6579

136:                                              ; preds = %134, %125
  %137 = load i64, i64* %4, align 8, !dbg !6580
  %138 = lshr i64 %137, 8, !dbg !6580
  store i64 %138, i64* %4, align 8, !dbg !6580
  %139 = load i32, i32* %5, align 4, !dbg !6580
  %140 = sub i32 %139, 8, !dbg !6580
  store i32 %140, i32* %5, align 4, !dbg !6580
  br label %93, !dbg !6559, !llvm.loop !6582

141:                                              ; preds = %93
  %142 = load i32, i32* %3, align 4, !dbg !6584
  store i32 %142, i32* @outcnt, align 4, !dbg !6585
  %143 = load i64, i64* %4, align 8, !dbg !6586
  store i64 %143, i64* @bb, align 8, !dbg !6587
  %144 = load i32, i32* %5, align 4, !dbg !6588
  store i32 %144, i32* @bk, align 4, !dbg !6589
  store i32 0, i32* %1, align 4, !dbg !6590
  br label %145, !dbg !6590

145:                                              ; preds = %141, %87
  %146 = load i32, i32* %1, align 4, !dbg !6591
  ret i32 %146, !dbg !6591
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @inflate_fixed() #0 !dbg !6592 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %struct.huft*, align 8
  %4 = alloca %struct.huft*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca [288 x i32], align 16
  call void @llvm.dbg.declare(metadata i32* %2, metadata !6593, metadata !DIExpression()), !dbg !6594
  call void @llvm.dbg.declare(metadata %struct.huft** %3, metadata !6595, metadata !DIExpression()), !dbg !6596
  call void @llvm.dbg.declare(metadata %struct.huft** %4, metadata !6597, metadata !DIExpression()), !dbg !6598
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6599, metadata !DIExpression()), !dbg !6600
  call void @llvm.dbg.declare(metadata i32* %6, metadata !6601, metadata !DIExpression()), !dbg !6602
  call void @llvm.dbg.declare(metadata [288 x i32]* %7, metadata !6603, metadata !DIExpression()), !dbg !6604
  store i32 0, i32* %2, align 4, !dbg !6605
  br label %8, !dbg !6607

8:                                                ; preds = %15, %0
  %9 = load i32, i32* %2, align 4, !dbg !6608
  %10 = icmp slt i32 %9, 144, !dbg !6610
  br i1 %10, label %11, label %18, !dbg !6611

11:                                               ; preds = %8
  %12 = load i32, i32* %2, align 4, !dbg !6612
  %13 = sext i32 %12 to i64, !dbg !6613
  %14 = getelementptr inbounds [288 x i32], [288 x i32]* %7, i64 0, i64 %13, !dbg !6613
  store i32 8, i32* %14, align 4, !dbg !6614
  br label %15, !dbg !6613

15:                                               ; preds = %11
  %16 = load i32, i32* %2, align 4, !dbg !6615
  %17 = add nsw i32 %16, 1, !dbg !6615
  store i32 %17, i32* %2, align 4, !dbg !6615
  br label %8, !dbg !6616, !llvm.loop !6617

18:                                               ; preds = %8
  br label %19, !dbg !6619

19:                                               ; preds = %26, %18
  %20 = load i32, i32* %2, align 4, !dbg !6620
  %21 = icmp slt i32 %20, 256, !dbg !6623
  br i1 %21, label %22, label %29, !dbg !6624

22:                                               ; preds = %19
  %23 = load i32, i32* %2, align 4, !dbg !6625
  %24 = sext i32 %23 to i64, !dbg !6626
  %25 = getelementptr inbounds [288 x i32], [288 x i32]* %7, i64 0, i64 %24, !dbg !6626
  store i32 9, i32* %25, align 4, !dbg !6627
  br label %26, !dbg !6626

26:                                               ; preds = %22
  %27 = load i32, i32* %2, align 4, !dbg !6628
  %28 = add nsw i32 %27, 1, !dbg !6628
  store i32 %28, i32* %2, align 4, !dbg !6628
  br label %19, !dbg !6629, !llvm.loop !6630

29:                                               ; preds = %19
  br label %30, !dbg !6632

30:                                               ; preds = %37, %29
  %31 = load i32, i32* %2, align 4, !dbg !6633
  %32 = icmp slt i32 %31, 280, !dbg !6636
  br i1 %32, label %33, label %40, !dbg !6637

33:                                               ; preds = %30
  %34 = load i32, i32* %2, align 4, !dbg !6638
  %35 = sext i32 %34 to i64, !dbg !6639
  %36 = getelementptr inbounds [288 x i32], [288 x i32]* %7, i64 0, i64 %35, !dbg !6639
  store i32 7, i32* %36, align 4, !dbg !6640
  br label %37, !dbg !6639

37:                                               ; preds = %33
  %38 = load i32, i32* %2, align 4, !dbg !6641
  %39 = add nsw i32 %38, 1, !dbg !6641
  store i32 %39, i32* %2, align 4, !dbg !6641
  br label %30, !dbg !6642, !llvm.loop !6643

40:                                               ; preds = %30
  br label %41, !dbg !6645

41:                                               ; preds = %48, %40
  %42 = load i32, i32* %2, align 4, !dbg !6646
  %43 = icmp slt i32 %42, 288, !dbg !6649
  br i1 %43, label %44, label %51, !dbg !6650

44:                                               ; preds = %41
  %45 = load i32, i32* %2, align 4, !dbg !6651
  %46 = sext i32 %45 to i64, !dbg !6652
  %47 = getelementptr inbounds [288 x i32], [288 x i32]* %7, i64 0, i64 %46, !dbg !6652
  store i32 8, i32* %47, align 4, !dbg !6653
  br label %48, !dbg !6652

48:                                               ; preds = %44
  %49 = load i32, i32* %2, align 4, !dbg !6654
  %50 = add nsw i32 %49, 1, !dbg !6654
  store i32 %50, i32* %2, align 4, !dbg !6654
  br label %41, !dbg !6655, !llvm.loop !6656

51:                                               ; preds = %41
  store i32 7, i32* %5, align 4, !dbg !6658
  %52 = getelementptr inbounds [288 x i32], [288 x i32]* %7, i64 0, i64 0, !dbg !6659
  %53 = call i32 @huft_build(i32* noundef %52, i32 noundef 288, i32 noundef 257, i16* noundef getelementptr inbounds ([31 x i16], [31 x i16]* @cplens, i64 0, i64 0), i16* noundef getelementptr inbounds ([31 x i16], [31 x i16]* @cplext, i64 0, i64 0), %struct.huft** noundef %3, i32* noundef %5), !dbg !6661
  store i32 %53, i32* %2, align 4, !dbg !6662
  %54 = icmp ne i32 %53, 0, !dbg !6663
  br i1 %54, label %55, label %57, !dbg !6664

55:                                               ; preds = %51
  %56 = load i32, i32* %2, align 4, !dbg !6665
  store i32 %56, i32* %1, align 4, !dbg !6666
  br label %89, !dbg !6666

57:                                               ; preds = %51
  store i32 0, i32* %2, align 4, !dbg !6667
  br label %58, !dbg !6669

58:                                               ; preds = %65, %57
  %59 = load i32, i32* %2, align 4, !dbg !6670
  %60 = icmp slt i32 %59, 30, !dbg !6672
  br i1 %60, label %61, label %68, !dbg !6673

61:                                               ; preds = %58
  %62 = load i32, i32* %2, align 4, !dbg !6674
  %63 = sext i32 %62 to i64, !dbg !6675
  %64 = getelementptr inbounds [288 x i32], [288 x i32]* %7, i64 0, i64 %63, !dbg !6675
  store i32 5, i32* %64, align 4, !dbg !6676
  br label %65, !dbg !6675

65:                                               ; preds = %61
  %66 = load i32, i32* %2, align 4, !dbg !6677
  %67 = add nsw i32 %66, 1, !dbg !6677
  store i32 %67, i32* %2, align 4, !dbg !6677
  br label %58, !dbg !6678, !llvm.loop !6679

68:                                               ; preds = %58
  store i32 5, i32* %6, align 4, !dbg !6681
  %69 = getelementptr inbounds [288 x i32], [288 x i32]* %7, i64 0, i64 0, !dbg !6682
  %70 = call i32 @huft_build(i32* noundef %69, i32 noundef 30, i32 noundef 0, i16* noundef getelementptr inbounds ([30 x i16], [30 x i16]* @cpdist, i64 0, i64 0), i16* noundef getelementptr inbounds ([30 x i16], [30 x i16]* @cpdext, i64 0, i64 0), %struct.huft** noundef %4, i32* noundef %6), !dbg !6684
  store i32 %70, i32* %2, align 4, !dbg !6685
  %71 = icmp sgt i32 %70, 1, !dbg !6686
  br i1 %71, label %72, label %76, !dbg !6687

72:                                               ; preds = %68
  %73 = load %struct.huft*, %struct.huft** %3, align 8, !dbg !6688
  %74 = call i32 @huft_free(%struct.huft* noundef %73), !dbg !6690
  %75 = load i32, i32* %2, align 4, !dbg !6691
  store i32 %75, i32* %1, align 4, !dbg !6692
  br label %89, !dbg !6692

76:                                               ; preds = %68
  %77 = load %struct.huft*, %struct.huft** %3, align 8, !dbg !6693
  %78 = load %struct.huft*, %struct.huft** %4, align 8, !dbg !6695
  %79 = load i32, i32* %5, align 4, !dbg !6696
  %80 = load i32, i32* %6, align 4, !dbg !6697
  %81 = call i32 @inflate_codes(%struct.huft* noundef %77, %struct.huft* noundef %78, i32 noundef %79, i32 noundef %80), !dbg !6698
  %82 = icmp ne i32 %81, 0, !dbg !6698
  br i1 %82, label %83, label %84, !dbg !6699

83:                                               ; preds = %76
  store i32 1, i32* %1, align 4, !dbg !6700
  br label %89, !dbg !6700

84:                                               ; preds = %76
  %85 = load %struct.huft*, %struct.huft** %3, align 8, !dbg !6701
  %86 = call i32 @huft_free(%struct.huft* noundef %85), !dbg !6702
  %87 = load %struct.huft*, %struct.huft** %4, align 8, !dbg !6703
  %88 = call i32 @huft_free(%struct.huft* noundef %87), !dbg !6704
  store i32 0, i32* %1, align 4, !dbg !6705
  br label %89, !dbg !6705

89:                                               ; preds = %84, %83, %72, %55
  %90 = load i32, i32* %1, align 4, !dbg !6706
  ret i32 %90, !dbg !6706
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @inflate_dynamic() #0 !dbg !6707 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.huft*, align 8
  %8 = alloca %struct.huft*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca [316 x i32], align 16
  %15 = alloca i64, align 8
  %16 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !6708, metadata !DIExpression()), !dbg !6709
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6710, metadata !DIExpression()), !dbg !6711
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6712, metadata !DIExpression()), !dbg !6713
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6714, metadata !DIExpression()), !dbg !6715
  call void @llvm.dbg.declare(metadata i32* %6, metadata !6716, metadata !DIExpression()), !dbg !6717
  call void @llvm.dbg.declare(metadata %struct.huft** %7, metadata !6718, metadata !DIExpression()), !dbg !6719
  call void @llvm.dbg.declare(metadata %struct.huft** %8, metadata !6720, metadata !DIExpression()), !dbg !6721
  call void @llvm.dbg.declare(metadata i32* %9, metadata !6722, metadata !DIExpression()), !dbg !6723
  call void @llvm.dbg.declare(metadata i32* %10, metadata !6724, metadata !DIExpression()), !dbg !6725
  call void @llvm.dbg.declare(metadata i32* %11, metadata !6726, metadata !DIExpression()), !dbg !6727
  call void @llvm.dbg.declare(metadata i32* %12, metadata !6728, metadata !DIExpression()), !dbg !6729
  call void @llvm.dbg.declare(metadata i32* %13, metadata !6730, metadata !DIExpression()), !dbg !6731
  call void @llvm.dbg.declare(metadata [316 x i32]* %14, metadata !6732, metadata !DIExpression()), !dbg !6736
  call void @llvm.dbg.declare(metadata i64* %15, metadata !6737, metadata !DIExpression()), !dbg !6738
  call void @llvm.dbg.declare(metadata i32* %16, metadata !6739, metadata !DIExpression()), !dbg !6740
  %17 = load i64, i64* @bb, align 8, !dbg !6741
  store i64 %17, i64* %15, align 8, !dbg !6742
  %18 = load i32, i32* @bk, align 4, !dbg !6743
  store i32 %18, i32* %16, align 4, !dbg !6744
  br label %19, !dbg !6745

19:                                               ; preds = %35, %0
  %20 = load i32, i32* %16, align 4, !dbg !6745
  %21 = icmp ult i32 %20, 5, !dbg !6745
  br i1 %21, label %22, label %46, !dbg !6745

22:                                               ; preds = %19
  %23 = load i32, i32* @inptr, align 4, !dbg !6747
  %24 = load i32, i32* @insize, align 4, !dbg !6747
  %25 = icmp ult i32 %23, %24, !dbg !6747
  br i1 %25, label %26, label %33, !dbg !6747

26:                                               ; preds = %22
  %27 = load i32, i32* @inptr, align 4, !dbg !6747
  %28 = add i32 %27, 1, !dbg !6747
  store i32 %28, i32* @inptr, align 4, !dbg !6747
  %29 = zext i32 %27 to i64, !dbg !6747
  %30 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i64 0, i64 %29, !dbg !6747
  %31 = load i8, i8* %30, align 1, !dbg !6747
  %32 = zext i8 %31 to i32, !dbg !6747
  br label %35, !dbg !6747

33:                                               ; preds = %22
  %34 = call i32 @fill_inbuf(i32 noundef 0), !dbg !6747
  br label %35, !dbg !6747

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %32, %26 ], [ %34, %33 ], !dbg !6747
  %37 = trunc i32 %36 to i8, !dbg !6747
  %38 = zext i8 %37 to i64, !dbg !6747
  %39 = load i32, i32* %16, align 4, !dbg !6747
  %40 = zext i32 %39 to i64, !dbg !6747
  %41 = shl i64 %38, %40, !dbg !6747
  %42 = load i64, i64* %15, align 8, !dbg !6747
  %43 = or i64 %42, %41, !dbg !6747
  store i64 %43, i64* %15, align 8, !dbg !6747
  %44 = load i32, i32* %16, align 4, !dbg !6747
  %45 = add i32 %44, 8, !dbg !6747
  store i32 %45, i32* %16, align 4, !dbg !6747
  br label %19, !dbg !6745, !llvm.loop !6749

46:                                               ; preds = %19
  %47 = load i64, i64* %15, align 8, !dbg !6750
  %48 = trunc i64 %47 to i32, !dbg !6751
  %49 = and i32 %48, 31, !dbg !6752
  %50 = add i32 257, %49, !dbg !6753
  store i32 %50, i32* %12, align 4, !dbg !6754
  %51 = load i64, i64* %15, align 8, !dbg !6755
  %52 = lshr i64 %51, 5, !dbg !6755
  store i64 %52, i64* %15, align 8, !dbg !6755
  %53 = load i32, i32* %16, align 4, !dbg !6755
  %54 = sub i32 %53, 5, !dbg !6755
  store i32 %54, i32* %16, align 4, !dbg !6755
  br label %55, !dbg !6757

55:                                               ; preds = %71, %46
  %56 = load i32, i32* %16, align 4, !dbg !6757
  %57 = icmp ult i32 %56, 5, !dbg !6757
  br i1 %57, label %58, label %82, !dbg !6757

58:                                               ; preds = %55
  %59 = load i32, i32* @inptr, align 4, !dbg !6759
  %60 = load i32, i32* @insize, align 4, !dbg !6759
  %61 = icmp ult i32 %59, %60, !dbg !6759
  br i1 %61, label %62, label %69, !dbg !6759

62:                                               ; preds = %58
  %63 = load i32, i32* @inptr, align 4, !dbg !6759
  %64 = add i32 %63, 1, !dbg !6759
  store i32 %64, i32* @inptr, align 4, !dbg !6759
  %65 = zext i32 %63 to i64, !dbg !6759
  %66 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i64 0, i64 %65, !dbg !6759
  %67 = load i8, i8* %66, align 1, !dbg !6759
  %68 = zext i8 %67 to i32, !dbg !6759
  br label %71, !dbg !6759

69:                                               ; preds = %58
  %70 = call i32 @fill_inbuf(i32 noundef 0), !dbg !6759
  br label %71, !dbg !6759

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %68, %62 ], [ %70, %69 ], !dbg !6759
  %73 = trunc i32 %72 to i8, !dbg !6759
  %74 = zext i8 %73 to i64, !dbg !6759
  %75 = load i32, i32* %16, align 4, !dbg !6759
  %76 = zext i32 %75 to i64, !dbg !6759
  %77 = shl i64 %74, %76, !dbg !6759
  %78 = load i64, i64* %15, align 8, !dbg !6759
  %79 = or i64 %78, %77, !dbg !6759
  store i64 %79, i64* %15, align 8, !dbg !6759
  %80 = load i32, i32* %16, align 4, !dbg !6759
  %81 = add i32 %80, 8, !dbg !6759
  store i32 %81, i32* %16, align 4, !dbg !6759
  br label %55, !dbg !6757, !llvm.loop !6761

82:                                               ; preds = %55
  %83 = load i64, i64* %15, align 8, !dbg !6762
  %84 = trunc i64 %83 to i32, !dbg !6763
  %85 = and i32 %84, 31, !dbg !6764
  %86 = add i32 1, %85, !dbg !6765
  store i32 %86, i32* %13, align 4, !dbg !6766
  %87 = load i64, i64* %15, align 8, !dbg !6767
  %88 = lshr i64 %87, 5, !dbg !6767
  store i64 %88, i64* %15, align 8, !dbg !6767
  %89 = load i32, i32* %16, align 4, !dbg !6767
  %90 = sub i32 %89, 5, !dbg !6767
  store i32 %90, i32* %16, align 4, !dbg !6767
  br label %91, !dbg !6769

91:                                               ; preds = %107, %82
  %92 = load i32, i32* %16, align 4, !dbg !6769
  %93 = icmp ult i32 %92, 4, !dbg !6769
  br i1 %93, label %94, label %118, !dbg !6769

94:                                               ; preds = %91
  %95 = load i32, i32* @inptr, align 4, !dbg !6771
  %96 = load i32, i32* @insize, align 4, !dbg !6771
  %97 = icmp ult i32 %95, %96, !dbg !6771
  br i1 %97, label %98, label %105, !dbg !6771

98:                                               ; preds = %94
  %99 = load i32, i32* @inptr, align 4, !dbg !6771
  %100 = add i32 %99, 1, !dbg !6771
  store i32 %100, i32* @inptr, align 4, !dbg !6771
  %101 = zext i32 %99 to i64, !dbg !6771
  %102 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i64 0, i64 %101, !dbg !6771
  %103 = load i8, i8* %102, align 1, !dbg !6771
  %104 = zext i8 %103 to i32, !dbg !6771
  br label %107, !dbg !6771

105:                                              ; preds = %94
  %106 = call i32 @fill_inbuf(i32 noundef 0), !dbg !6771
  br label %107, !dbg !6771

107:                                              ; preds = %105, %98
  %108 = phi i32 [ %104, %98 ], [ %106, %105 ], !dbg !6771
  %109 = trunc i32 %108 to i8, !dbg !6771
  %110 = zext i8 %109 to i64, !dbg !6771
  %111 = load i32, i32* %16, align 4, !dbg !6771
  %112 = zext i32 %111 to i64, !dbg !6771
  %113 = shl i64 %110, %112, !dbg !6771
  %114 = load i64, i64* %15, align 8, !dbg !6771
  %115 = or i64 %114, %113, !dbg !6771
  store i64 %115, i64* %15, align 8, !dbg !6771
  %116 = load i32, i32* %16, align 4, !dbg !6771
  %117 = add i32 %116, 8, !dbg !6771
  store i32 %117, i32* %16, align 4, !dbg !6771
  br label %91, !dbg !6769, !llvm.loop !6773

118:                                              ; preds = %91
  %119 = load i64, i64* %15, align 8, !dbg !6774
  %120 = trunc i64 %119 to i32, !dbg !6775
  %121 = and i32 %120, 15, !dbg !6776
  %122 = add i32 4, %121, !dbg !6777
  store i32 %122, i32* %11, align 4, !dbg !6778
  %123 = load i64, i64* %15, align 8, !dbg !6779
  %124 = lshr i64 %123, 4, !dbg !6779
  store i64 %124, i64* %15, align 8, !dbg !6779
  %125 = load i32, i32* %16, align 4, !dbg !6779
  %126 = sub i32 %125, 4, !dbg !6779
  store i32 %126, i32* %16, align 4, !dbg !6779
  %127 = load i32, i32* %12, align 4, !dbg !6781
  %128 = icmp ugt i32 %127, 286, !dbg !6783
  br i1 %128, label %132, label %129, !dbg !6784

129:                                              ; preds = %118
  %130 = load i32, i32* %13, align 4, !dbg !6785
  %131 = icmp ugt i32 %130, 30, !dbg !6786
  br i1 %131, label %132, label %133, !dbg !6787

132:                                              ; preds = %129, %118
  store i32 1, i32* %1, align 4, !dbg !6788
  br label %508, !dbg !6788

133:                                              ; preds = %129
  store i32 0, i32* %3, align 4, !dbg !6789
  br label %134, !dbg !6791

134:                                              ; preds = %180, %133
  %135 = load i32, i32* %3, align 4, !dbg !6792
  %136 = load i32, i32* %11, align 4, !dbg !6794
  %137 = icmp ult i32 %135, %136, !dbg !6795
  br i1 %137, label %138, label %183, !dbg !6796

138:                                              ; preds = %134
  br label %139, !dbg !6797

139:                                              ; preds = %155, %138
  %140 = load i32, i32* %16, align 4, !dbg !6797
  %141 = icmp ult i32 %140, 3, !dbg !6797
  br i1 %141, label %142, label %166, !dbg !6797

142:                                              ; preds = %139
  %143 = load i32, i32* @inptr, align 4, !dbg !6800
  %144 = load i32, i32* @insize, align 4, !dbg !6800
  %145 = icmp ult i32 %143, %144, !dbg !6800
  br i1 %145, label %146, label %153, !dbg !6800

146:                                              ; preds = %142
  %147 = load i32, i32* @inptr, align 4, !dbg !6800
  %148 = add i32 %147, 1, !dbg !6800
  store i32 %148, i32* @inptr, align 4, !dbg !6800
  %149 = zext i32 %147 to i64, !dbg !6800
  %150 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i64 0, i64 %149, !dbg !6800
  %151 = load i8, i8* %150, align 1, !dbg !6800
  %152 = zext i8 %151 to i32, !dbg !6800
  br label %155, !dbg !6800

153:                                              ; preds = %142
  %154 = call i32 @fill_inbuf(i32 noundef 0), !dbg !6800
  br label %155, !dbg !6800

155:                                              ; preds = %153, %146
  %156 = phi i32 [ %152, %146 ], [ %154, %153 ], !dbg !6800
  %157 = trunc i32 %156 to i8, !dbg !6800
  %158 = zext i8 %157 to i64, !dbg !6800
  %159 = load i32, i32* %16, align 4, !dbg !6800
  %160 = zext i32 %159 to i64, !dbg !6800
  %161 = shl i64 %158, %160, !dbg !6800
  %162 = load i64, i64* %15, align 8, !dbg !6800
  %163 = or i64 %162, %161, !dbg !6800
  store i64 %163, i64* %15, align 8, !dbg !6800
  %164 = load i32, i32* %16, align 4, !dbg !6800
  %165 = add i32 %164, 8, !dbg !6800
  store i32 %165, i32* %16, align 4, !dbg !6800
  br label %139, !dbg !6797, !llvm.loop !6802

166:                                              ; preds = %139
  %167 = load i64, i64* %15, align 8, !dbg !6803
  %168 = trunc i64 %167 to i32, !dbg !6804
  %169 = and i32 %168, 7, !dbg !6805
  %170 = load i32, i32* %3, align 4, !dbg !6806
  %171 = zext i32 %170 to i64, !dbg !6807
  %172 = getelementptr inbounds [19 x i32], [19 x i32]* @border, i64 0, i64 %171, !dbg !6807
  %173 = load i32, i32* %172, align 4, !dbg !6807
  %174 = zext i32 %173 to i64, !dbg !6808
  %175 = getelementptr inbounds [316 x i32], [316 x i32]* %14, i64 0, i64 %174, !dbg !6808
  store i32 %169, i32* %175, align 4, !dbg !6809
  %176 = load i64, i64* %15, align 8, !dbg !6810
  %177 = lshr i64 %176, 3, !dbg !6810
  store i64 %177, i64* %15, align 8, !dbg !6810
  %178 = load i32, i32* %16, align 4, !dbg !6810
  %179 = sub i32 %178, 3, !dbg !6810
  store i32 %179, i32* %16, align 4, !dbg !6810
  br label %180, !dbg !6812

180:                                              ; preds = %166
  %181 = load i32, i32* %3, align 4, !dbg !6813
  %182 = add i32 %181, 1, !dbg !6813
  store i32 %182, i32* %3, align 4, !dbg !6813
  br label %134, !dbg !6814, !llvm.loop !6815

183:                                              ; preds = %134
  br label %184, !dbg !6817

184:                                              ; preds = %194, %183
  %185 = load i32, i32* %3, align 4, !dbg !6818
  %186 = icmp ult i32 %185, 19, !dbg !6821
  br i1 %186, label %187, label %197, !dbg !6822

187:                                              ; preds = %184
  %188 = load i32, i32* %3, align 4, !dbg !6823
  %189 = zext i32 %188 to i64, !dbg !6824
  %190 = getelementptr inbounds [19 x i32], [19 x i32]* @border, i64 0, i64 %189, !dbg !6824
  %191 = load i32, i32* %190, align 4, !dbg !6824
  %192 = zext i32 %191 to i64, !dbg !6825
  %193 = getelementptr inbounds [316 x i32], [316 x i32]* %14, i64 0, i64 %192, !dbg !6825
  store i32 0, i32* %193, align 4, !dbg !6826
  br label %194, !dbg !6825

194:                                              ; preds = %187
  %195 = load i32, i32* %3, align 4, !dbg !6827
  %196 = add i32 %195, 1, !dbg !6827
  store i32 %196, i32* %3, align 4, !dbg !6827
  br label %184, !dbg !6828, !llvm.loop !6829

197:                                              ; preds = %184
  store i32 7, i32* %9, align 4, !dbg !6831
  %198 = getelementptr inbounds [316 x i32], [316 x i32]* %14, i64 0, i64 0, !dbg !6832
  %199 = call i32 @huft_build(i32* noundef %198, i32 noundef 19, i32 noundef 19, i16* noundef null, i16* noundef null, %struct.huft** noundef %7, i32* noundef %9), !dbg !6834
  store i32 %199, i32* %2, align 4, !dbg !6835
  %200 = icmp ne i32 %199, 0, !dbg !6836
  br i1 %200, label %201, label %209, !dbg !6837

201:                                              ; preds = %197
  %202 = load i32, i32* %2, align 4, !dbg !6838
  %203 = icmp eq i32 %202, 1, !dbg !6841
  br i1 %203, label %204, label %207, !dbg !6842

204:                                              ; preds = %201
  %205 = load %struct.huft*, %struct.huft** %7, align 8, !dbg !6843
  %206 = call i32 @huft_free(%struct.huft* noundef %205), !dbg !6844
  br label %207, !dbg !6844

207:                                              ; preds = %204, %201
  %208 = load i32, i32* %2, align 4, !dbg !6845
  store i32 %208, i32* %1, align 4, !dbg !6846
  br label %508, !dbg !6846

209:                                              ; preds = %197
  %210 = load i32, i32* %12, align 4, !dbg !6847
  %211 = load i32, i32* %13, align 4, !dbg !6848
  %212 = add i32 %210, %211, !dbg !6849
  store i32 %212, i32* %6, align 4, !dbg !6850
  %213 = load i32, i32* %9, align 4, !dbg !6851
  %214 = sext i32 %213 to i64, !dbg !6852
  %215 = getelementptr inbounds [17 x i16], [17 x i16]* @mask_bits, i64 0, i64 %214, !dbg !6852
  %216 = load i16, i16* %215, align 2, !dbg !6852
  %217 = zext i16 %216 to i32, !dbg !6852
  store i32 %217, i32* %5, align 4, !dbg !6853
  store i32 0, i32* %4, align 4, !dbg !6854
  store i32 0, i32* %2, align 4, !dbg !6855
  br label %218, !dbg !6856

218:                                              ; preds = %453, %209
  %219 = load i32, i32* %2, align 4, !dbg !6857
  %220 = load i32, i32* %6, align 4, !dbg !6858
  %221 = icmp ult i32 %219, %220, !dbg !6859
  br i1 %221, label %222, label %454, !dbg !6856

222:                                              ; preds = %218
  br label %223, !dbg !6860

223:                                              ; preds = %240, %222
  %224 = load i32, i32* %16, align 4, !dbg !6860
  %225 = load i32, i32* %9, align 4, !dbg !6860
  %226 = icmp ult i32 %224, %225, !dbg !6860
  br i1 %226, label %227, label %251, !dbg !6860

227:                                              ; preds = %223
  %228 = load i32, i32* @inptr, align 4, !dbg !6863
  %229 = load i32, i32* @insize, align 4, !dbg !6863
  %230 = icmp ult i32 %228, %229, !dbg !6863
  br i1 %230, label %231, label %238, !dbg !6863

231:                                              ; preds = %227
  %232 = load i32, i32* @inptr, align 4, !dbg !6863
  %233 = add i32 %232, 1, !dbg !6863
  store i32 %233, i32* @inptr, align 4, !dbg !6863
  %234 = zext i32 %232 to i64, !dbg !6863
  %235 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i64 0, i64 %234, !dbg !6863
  %236 = load i8, i8* %235, align 1, !dbg !6863
  %237 = zext i8 %236 to i32, !dbg !6863
  br label %240, !dbg !6863

238:                                              ; preds = %227
  %239 = call i32 @fill_inbuf(i32 noundef 0), !dbg !6863
  br label %240, !dbg !6863

240:                                              ; preds = %238, %231
  %241 = phi i32 [ %237, %231 ], [ %239, %238 ], !dbg !6863
  %242 = trunc i32 %241 to i8, !dbg !6863
  %243 = zext i8 %242 to i64, !dbg !6863
  %244 = load i32, i32* %16, align 4, !dbg !6863
  %245 = zext i32 %244 to i64, !dbg !6863
  %246 = shl i64 %243, %245, !dbg !6863
  %247 = load i64, i64* %15, align 8, !dbg !6863
  %248 = or i64 %247, %246, !dbg !6863
  store i64 %248, i64* %15, align 8, !dbg !6863
  %249 = load i32, i32* %16, align 4, !dbg !6863
  %250 = add i32 %249, 8, !dbg !6863
  store i32 %250, i32* %16, align 4, !dbg !6863
  br label %223, !dbg !6860, !llvm.loop !6865

251:                                              ; preds = %223
  %252 = load %struct.huft*, %struct.huft** %7, align 8, !dbg !6866
  %253 = load i64, i64* %15, align 8, !dbg !6867
  %254 = trunc i64 %253 to i32, !dbg !6868
  %255 = load i32, i32* %5, align 4, !dbg !6869
  %256 = and i32 %254, %255, !dbg !6870
  %257 = zext i32 %256 to i64, !dbg !6871
  %258 = getelementptr inbounds %struct.huft, %struct.huft* %252, i64 %257, !dbg !6871
  store %struct.huft* %258, %struct.huft** %8, align 8, !dbg !6872
  %259 = getelementptr inbounds %struct.huft, %struct.huft* %258, i32 0, i32 1, !dbg !6873
  %260 = load i8, i8* %259, align 1, !dbg !6873
  %261 = zext i8 %260 to i32, !dbg !6874
  store i32 %261, i32* %3, align 4, !dbg !6875
  %262 = load i32, i32* %3, align 4, !dbg !6876
  %263 = load i64, i64* %15, align 8, !dbg !6876
  %264 = zext i32 %262 to i64, !dbg !6876
  %265 = lshr i64 %263, %264, !dbg !6876
  store i64 %265, i64* %15, align 8, !dbg !6876
  %266 = load i32, i32* %3, align 4, !dbg !6876
  %267 = load i32, i32* %16, align 4, !dbg !6876
  %268 = sub i32 %267, %266, !dbg !6876
  store i32 %268, i32* %16, align 4, !dbg !6876
  %269 = load %struct.huft*, %struct.huft** %8, align 8, !dbg !6878
  %270 = getelementptr inbounds %struct.huft, %struct.huft* %269, i32 0, i32 2, !dbg !6879
  %271 = bitcast %union.anon.8* %270 to i16*, !dbg !6880
  %272 = load i16, i16* %271, align 8, !dbg !6880
  %273 = zext i16 %272 to i32, !dbg !6878
  store i32 %273, i32* %3, align 4, !dbg !6881
  %274 = load i32, i32* %3, align 4, !dbg !6882
  %275 = icmp ult i32 %274, 16, !dbg !6884
  br i1 %275, label %276, label %282, !dbg !6885

276:                                              ; preds = %251
  %277 = load i32, i32* %3, align 4, !dbg !6886
  store i32 %277, i32* %4, align 4, !dbg !6887
  %278 = load i32, i32* %2, align 4, !dbg !6888
  %279 = add nsw i32 %278, 1, !dbg !6888
  store i32 %279, i32* %2, align 4, !dbg !6888
  %280 = sext i32 %278 to i64, !dbg !6889
  %281 = getelementptr inbounds [316 x i32], [316 x i32]* %14, i64 0, i64 %280, !dbg !6889
  store i32 %277, i32* %281, align 4, !dbg !6890
  br label %453, !dbg !6889

282:                                              ; preds = %251
  %283 = load i32, i32* %3, align 4, !dbg !6891
  %284 = icmp eq i32 %283, 16, !dbg !6893
  br i1 %284, label %285, label %340, !dbg !6894

285:                                              ; preds = %282
  br label %286, !dbg !6895

286:                                              ; preds = %302, %285
  %287 = load i32, i32* %16, align 4, !dbg !6895
  %288 = icmp ult i32 %287, 2, !dbg !6895
  br i1 %288, label %289, label %313, !dbg !6895

289:                                              ; preds = %286
  %290 = load i32, i32* @inptr, align 4, !dbg !6898
  %291 = load i32, i32* @insize, align 4, !dbg !6898
  %292 = icmp ult i32 %290, %291, !dbg !6898
  br i1 %292, label %293, label %300, !dbg !6898

293:                                              ; preds = %289
  %294 = load i32, i32* @inptr, align 4, !dbg !6898
  %295 = add i32 %294, 1, !dbg !6898
  store i32 %295, i32* @inptr, align 4, !dbg !6898
  %296 = zext i32 %294 to i64, !dbg !6898
  %297 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i64 0, i64 %296, !dbg !6898
  %298 = load i8, i8* %297, align 1, !dbg !6898
  %299 = zext i8 %298 to i32, !dbg !6898
  br label %302, !dbg !6898

300:                                              ; preds = %289
  %301 = call i32 @fill_inbuf(i32 noundef 0), !dbg !6898
  br label %302, !dbg !6898

302:                                              ; preds = %300, %293
  %303 = phi i32 [ %299, %293 ], [ %301, %300 ], !dbg !6898
  %304 = trunc i32 %303 to i8, !dbg !6898
  %305 = zext i8 %304 to i64, !dbg !6898
  %306 = load i32, i32* %16, align 4, !dbg !6898
  %307 = zext i32 %306 to i64, !dbg !6898
  %308 = shl i64 %305, %307, !dbg !6898
  %309 = load i64, i64* %15, align 8, !dbg !6898
  %310 = or i64 %309, %308, !dbg !6898
  store i64 %310, i64* %15, align 8, !dbg !6898
  %311 = load i32, i32* %16, align 4, !dbg !6898
  %312 = add i32 %311, 8, !dbg !6898
  store i32 %312, i32* %16, align 4, !dbg !6898
  br label %286, !dbg !6895, !llvm.loop !6900

313:                                              ; preds = %286
  %314 = load i64, i64* %15, align 8, !dbg !6901
  %315 = trunc i64 %314 to i32, !dbg !6902
  %316 = and i32 %315, 3, !dbg !6903
  %317 = add i32 3, %316, !dbg !6904
  store i32 %317, i32* %3, align 4, !dbg !6905
  %318 = load i64, i64* %15, align 8, !dbg !6906
  %319 = lshr i64 %318, 2, !dbg !6906
  store i64 %319, i64* %15, align 8, !dbg !6906
  %320 = load i32, i32* %16, align 4, !dbg !6906
  %321 = sub i32 %320, 2, !dbg !6906
  store i32 %321, i32* %16, align 4, !dbg !6906
  %322 = load i32, i32* %2, align 4, !dbg !6908
  %323 = load i32, i32* %3, align 4, !dbg !6910
  %324 = add i32 %322, %323, !dbg !6911
  %325 = load i32, i32* %6, align 4, !dbg !6912
  %326 = icmp ugt i32 %324, %325, !dbg !6913
  br i1 %326, label %327, label %328, !dbg !6914

327:                                              ; preds = %313
  store i32 1, i32* %1, align 4, !dbg !6915
  br label %508, !dbg !6915

328:                                              ; preds = %313
  br label %329, !dbg !6916

329:                                              ; preds = %333, %328
  %330 = load i32, i32* %3, align 4, !dbg !6917
  %331 = add i32 %330, -1, !dbg !6917
  store i32 %331, i32* %3, align 4, !dbg !6917
  %332 = icmp ne i32 %330, 0, !dbg !6916
  br i1 %332, label %333, label %339, !dbg !6916

333:                                              ; preds = %329
  %334 = load i32, i32* %4, align 4, !dbg !6918
  %335 = load i32, i32* %2, align 4, !dbg !6919
  %336 = add nsw i32 %335, 1, !dbg !6919
  store i32 %336, i32* %2, align 4, !dbg !6919
  %337 = sext i32 %335 to i64, !dbg !6920
  %338 = getelementptr inbounds [316 x i32], [316 x i32]* %14, i64 0, i64 %337, !dbg !6920
  store i32 %334, i32* %338, align 4, !dbg !6921
  br label %329, !dbg !6916, !llvm.loop !6922

339:                                              ; preds = %329
  br label %452, !dbg !6923

340:                                              ; preds = %282
  %341 = load i32, i32* %3, align 4, !dbg !6924
  %342 = icmp eq i32 %341, 17, !dbg !6926
  br i1 %342, label %343, label %397, !dbg !6927

343:                                              ; preds = %340
  br label %344, !dbg !6928

344:                                              ; preds = %360, %343
  %345 = load i32, i32* %16, align 4, !dbg !6928
  %346 = icmp ult i32 %345, 3, !dbg !6928
  br i1 %346, label %347, label %371, !dbg !6928

347:                                              ; preds = %344
  %348 = load i32, i32* @inptr, align 4, !dbg !6931
  %349 = load i32, i32* @insize, align 4, !dbg !6931
  %350 = icmp ult i32 %348, %349, !dbg !6931
  br i1 %350, label %351, label %358, !dbg !6931

351:                                              ; preds = %347
  %352 = load i32, i32* @inptr, align 4, !dbg !6931
  %353 = add i32 %352, 1, !dbg !6931
  store i32 %353, i32* @inptr, align 4, !dbg !6931
  %354 = zext i32 %352 to i64, !dbg !6931
  %355 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i64 0, i64 %354, !dbg !6931
  %356 = load i8, i8* %355, align 1, !dbg !6931
  %357 = zext i8 %356 to i32, !dbg !6931
  br label %360, !dbg !6931

358:                                              ; preds = %347
  %359 = call i32 @fill_inbuf(i32 noundef 0), !dbg !6931
  br label %360, !dbg !6931

360:                                              ; preds = %358, %351
  %361 = phi i32 [ %357, %351 ], [ %359, %358 ], !dbg !6931
  %362 = trunc i32 %361 to i8, !dbg !6931
  %363 = zext i8 %362 to i64, !dbg !6931
  %364 = load i32, i32* %16, align 4, !dbg !6931
  %365 = zext i32 %364 to i64, !dbg !6931
  %366 = shl i64 %363, %365, !dbg !6931
  %367 = load i64, i64* %15, align 8, !dbg !6931
  %368 = or i64 %367, %366, !dbg !6931
  store i64 %368, i64* %15, align 8, !dbg !6931
  %369 = load i32, i32* %16, align 4, !dbg !6931
  %370 = add i32 %369, 8, !dbg !6931
  store i32 %370, i32* %16, align 4, !dbg !6931
  br label %344, !dbg !6928, !llvm.loop !6933

371:                                              ; preds = %344
  %372 = load i64, i64* %15, align 8, !dbg !6934
  %373 = trunc i64 %372 to i32, !dbg !6935
  %374 = and i32 %373, 7, !dbg !6936
  %375 = add i32 3, %374, !dbg !6937
  store i32 %375, i32* %3, align 4, !dbg !6938
  %376 = load i64, i64* %15, align 8, !dbg !6939
  %377 = lshr i64 %376, 3, !dbg !6939
  store i64 %377, i64* %15, align 8, !dbg !6939
  %378 = load i32, i32* %16, align 4, !dbg !6939
  %379 = sub i32 %378, 3, !dbg !6939
  store i32 %379, i32* %16, align 4, !dbg !6939
  %380 = load i32, i32* %2, align 4, !dbg !6941
  %381 = load i32, i32* %3, align 4, !dbg !6943
  %382 = add i32 %380, %381, !dbg !6944
  %383 = load i32, i32* %6, align 4, !dbg !6945
  %384 = icmp ugt i32 %382, %383, !dbg !6946
  br i1 %384, label %385, label %386, !dbg !6947

385:                                              ; preds = %371
  store i32 1, i32* %1, align 4, !dbg !6948
  br label %508, !dbg !6948

386:                                              ; preds = %371
  br label %387, !dbg !6949

387:                                              ; preds = %391, %386
  %388 = load i32, i32* %3, align 4, !dbg !6950
  %389 = add i32 %388, -1, !dbg !6950
  store i32 %389, i32* %3, align 4, !dbg !6950
  %390 = icmp ne i32 %388, 0, !dbg !6949
  br i1 %390, label %391, label %396, !dbg !6949

391:                                              ; preds = %387
  %392 = load i32, i32* %2, align 4, !dbg !6951
  %393 = add nsw i32 %392, 1, !dbg !6951
  store i32 %393, i32* %2, align 4, !dbg !6951
  %394 = sext i32 %392 to i64, !dbg !6952
  %395 = getelementptr inbounds [316 x i32], [316 x i32]* %14, i64 0, i64 %394, !dbg !6952
  store i32 0, i32* %395, align 4, !dbg !6953
  br label %387, !dbg !6949, !llvm.loop !6954

396:                                              ; preds = %387
  store i32 0, i32* %4, align 4, !dbg !6956
  br label %451, !dbg !6957

397:                                              ; preds = %340
  br label %398, !dbg !6958

398:                                              ; preds = %414, %397
  %399 = load i32, i32* %16, align 4, !dbg !6958
  %400 = icmp ult i32 %399, 7, !dbg !6958
  br i1 %400, label %401, label %425, !dbg !6958

401:                                              ; preds = %398
  %402 = load i32, i32* @inptr, align 4, !dbg !6961
  %403 = load i32, i32* @insize, align 4, !dbg !6961
  %404 = icmp ult i32 %402, %403, !dbg !6961
  br i1 %404, label %405, label %412, !dbg !6961

405:                                              ; preds = %401
  %406 = load i32, i32* @inptr, align 4, !dbg !6961
  %407 = add i32 %406, 1, !dbg !6961
  store i32 %407, i32* @inptr, align 4, !dbg !6961
  %408 = zext i32 %406 to i64, !dbg !6961
  %409 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i64 0, i64 %408, !dbg !6961
  %410 = load i8, i8* %409, align 1, !dbg !6961
  %411 = zext i8 %410 to i32, !dbg !6961
  br label %414, !dbg !6961

412:                                              ; preds = %401
  %413 = call i32 @fill_inbuf(i32 noundef 0), !dbg !6961
  br label %414, !dbg !6961

414:                                              ; preds = %412, %405
  %415 = phi i32 [ %411, %405 ], [ %413, %412 ], !dbg !6961
  %416 = trunc i32 %415 to i8, !dbg !6961
  %417 = zext i8 %416 to i64, !dbg !6961
  %418 = load i32, i32* %16, align 4, !dbg !6961
  %419 = zext i32 %418 to i64, !dbg !6961
  %420 = shl i64 %417, %419, !dbg !6961
  %421 = load i64, i64* %15, align 8, !dbg !6961
  %422 = or i64 %421, %420, !dbg !6961
  store i64 %422, i64* %15, align 8, !dbg !6961
  %423 = load i32, i32* %16, align 4, !dbg !6961
  %424 = add i32 %423, 8, !dbg !6961
  store i32 %424, i32* %16, align 4, !dbg !6961
  br label %398, !dbg !6958, !llvm.loop !6963

425:                                              ; preds = %398
  %426 = load i64, i64* %15, align 8, !dbg !6964
  %427 = trunc i64 %426 to i32, !dbg !6965
  %428 = and i32 %427, 127, !dbg !6966
  %429 = add i32 11, %428, !dbg !6967
  store i32 %429, i32* %3, align 4, !dbg !6968
  %430 = load i64, i64* %15, align 8, !dbg !6969
  %431 = lshr i64 %430, 7, !dbg !6969
  store i64 %431, i64* %15, align 8, !dbg !6969
  %432 = load i32, i32* %16, align 4, !dbg !6969
  %433 = sub i32 %432, 7, !dbg !6969
  store i32 %433, i32* %16, align 4, !dbg !6969
  %434 = load i32, i32* %2, align 4, !dbg !6971
  %435 = load i32, i32* %3, align 4, !dbg !6973
  %436 = add i32 %434, %435, !dbg !6974
  %437 = load i32, i32* %6, align 4, !dbg !6975
  %438 = icmp ugt i32 %436, %437, !dbg !6976
  br i1 %438, label %439, label %440, !dbg !6977

439:                                              ; preds = %425
  store i32 1, i32* %1, align 4, !dbg !6978
  br label %508, !dbg !6978

440:                                              ; preds = %425
  br label %441, !dbg !6979

441:                                              ; preds = %445, %440
  %442 = load i32, i32* %3, align 4, !dbg !6980
  %443 = add i32 %442, -1, !dbg !6980
  store i32 %443, i32* %3, align 4, !dbg !6980
  %444 = icmp ne i32 %442, 0, !dbg !6979
  br i1 %444, label %445, label %450, !dbg !6979

445:                                              ; preds = %441
  %446 = load i32, i32* %2, align 4, !dbg !6981
  %447 = add nsw i32 %446, 1, !dbg !6981
  store i32 %447, i32* %2, align 4, !dbg !6981
  %448 = sext i32 %446 to i64, !dbg !6982
  %449 = getelementptr inbounds [316 x i32], [316 x i32]* %14, i64 0, i64 %448, !dbg !6982
  store i32 0, i32* %449, align 4, !dbg !6983
  br label %441, !dbg !6979, !llvm.loop !6984

450:                                              ; preds = %441
  store i32 0, i32* %4, align 4, !dbg !6986
  br label %451

451:                                              ; preds = %450, %396
  br label %452

452:                                              ; preds = %451, %339
  br label %453

453:                                              ; preds = %452, %276
  br label %218, !dbg !6856, !llvm.loop !6987

454:                                              ; preds = %218
  %455 = load %struct.huft*, %struct.huft** %7, align 8, !dbg !6989
  %456 = call i32 @huft_free(%struct.huft* noundef %455), !dbg !6990
  %457 = load i64, i64* %15, align 8, !dbg !6991
  store i64 %457, i64* @bb, align 8, !dbg !6992
  %458 = load i32, i32* %16, align 4, !dbg !6993
  store i32 %458, i32* @bk, align 4, !dbg !6994
  %459 = load i32, i32* @lbits, align 4, !dbg !6995
  store i32 %459, i32* %9, align 4, !dbg !6996
  %460 = getelementptr inbounds [316 x i32], [316 x i32]* %14, i64 0, i64 0, !dbg !6997
  %461 = load i32, i32* %12, align 4, !dbg !6999
  %462 = call i32 @huft_build(i32* noundef %460, i32 noundef %461, i32 noundef 257, i16* noundef getelementptr inbounds ([31 x i16], [31 x i16]* @cplens, i64 0, i64 0), i16* noundef getelementptr inbounds ([31 x i16], [31 x i16]* @cplext, i64 0, i64 0), %struct.huft** noundef %7, i32* noundef %9), !dbg !7000
  store i32 %462, i32* %2, align 4, !dbg !7001
  %463 = icmp ne i32 %462, 0, !dbg !7002
  br i1 %463, label %464, label %474, !dbg !7003

464:                                              ; preds = %454
  %465 = load i32, i32* %2, align 4, !dbg !7004
  %466 = icmp eq i32 %465, 1, !dbg !7007
  br i1 %466, label %467, label %472, !dbg !7008

467:                                              ; preds = %464
  %468 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7009
  %469 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %468, i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.191, i64 0, i64 0)), !dbg !7011
  %470 = load %struct.huft*, %struct.huft** %7, align 8, !dbg !7012
  %471 = call i32 @huft_free(%struct.huft* noundef %470), !dbg !7013
  br label %472, !dbg !7014

472:                                              ; preds = %467, %464
  %473 = load i32, i32* %2, align 4, !dbg !7015
  store i32 %473, i32* %1, align 4, !dbg !7016
  br label %508, !dbg !7016

474:                                              ; preds = %454
  %475 = load i32, i32* @dbits, align 4, !dbg !7017
  store i32 %475, i32* %10, align 4, !dbg !7018
  %476 = getelementptr inbounds [316 x i32], [316 x i32]* %14, i64 0, i64 0, !dbg !7019
  %477 = load i32, i32* %12, align 4, !dbg !7021
  %478 = zext i32 %477 to i64, !dbg !7022
  %479 = getelementptr inbounds i32, i32* %476, i64 %478, !dbg !7022
  %480 = load i32, i32* %13, align 4, !dbg !7023
  %481 = call i32 @huft_build(i32* noundef %479, i32 noundef %480, i32 noundef 0, i16* noundef getelementptr inbounds ([30 x i16], [30 x i16]* @cpdist, i64 0, i64 0), i16* noundef getelementptr inbounds ([30 x i16], [30 x i16]* @cpdext, i64 0, i64 0), %struct.huft** noundef %8, i32* noundef %10), !dbg !7024
  store i32 %481, i32* %2, align 4, !dbg !7025
  %482 = icmp ne i32 %481, 0, !dbg !7026
  br i1 %482, label %483, label %495, !dbg !7027

483:                                              ; preds = %474
  %484 = load i32, i32* %2, align 4, !dbg !7028
  %485 = icmp eq i32 %484, 1, !dbg !7031
  br i1 %485, label %486, label %491, !dbg !7032

486:                                              ; preds = %483
  %487 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7033
  %488 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %487, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.192, i64 0, i64 0)), !dbg !7035
  %489 = load %struct.huft*, %struct.huft** %8, align 8, !dbg !7036
  %490 = call i32 @huft_free(%struct.huft* noundef %489), !dbg !7037
  br label %491, !dbg !7038

491:                                              ; preds = %486, %483
  %492 = load %struct.huft*, %struct.huft** %7, align 8, !dbg !7039
  %493 = call i32 @huft_free(%struct.huft* noundef %492), !dbg !7040
  %494 = load i32, i32* %2, align 4, !dbg !7041
  store i32 %494, i32* %1, align 4, !dbg !7042
  br label %508, !dbg !7042

495:                                              ; preds = %474
  %496 = load %struct.huft*, %struct.huft** %7, align 8, !dbg !7043
  %497 = load %struct.huft*, %struct.huft** %8, align 8, !dbg !7045
  %498 = load i32, i32* %9, align 4, !dbg !7046
  %499 = load i32, i32* %10, align 4, !dbg !7047
  %500 = call i32 @inflate_codes(%struct.huft* noundef %496, %struct.huft* noundef %497, i32 noundef %498, i32 noundef %499), !dbg !7048
  %501 = icmp ne i32 %500, 0, !dbg !7048
  br i1 %501, label %502, label %503, !dbg !7049

502:                                              ; preds = %495
  store i32 1, i32* %1, align 4, !dbg !7050
  br label %508, !dbg !7050

503:                                              ; preds = %495
  %504 = load %struct.huft*, %struct.huft** %7, align 8, !dbg !7051
  %505 = call i32 @huft_free(%struct.huft* noundef %504), !dbg !7052
  %506 = load %struct.huft*, %struct.huft** %8, align 8, !dbg !7053
  %507 = call i32 @huft_free(%struct.huft* noundef %506), !dbg !7054
  store i32 0, i32* %1, align 4, !dbg !7055
  br label %508, !dbg !7055

508:                                              ; preds = %503, %502, %491, %472, %439, %385, %327, %207, %132
  %509 = load i32, i32* %1, align 4, !dbg !7056
  ret i32 %509, !dbg !7056
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @inflate_block(i32* noundef %0) #0 !dbg !7057 {
  %2 = alloca i32, align 4
  %3 = alloca i32*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  store i32* %0, i32** %3, align 8
  call void @llvm.dbg.declare(metadata i32** %3, metadata !7060, metadata !DIExpression()), !dbg !7061
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7062, metadata !DIExpression()), !dbg !7063
  call void @llvm.dbg.declare(metadata i64* %5, metadata !7064, metadata !DIExpression()), !dbg !7065
  call void @llvm.dbg.declare(metadata i32* %6, metadata !7066, metadata !DIExpression()), !dbg !7067
  %7 = load i64, i64* @bb, align 8, !dbg !7068
  store i64 %7, i64* %5, align 8, !dbg !7069
  %8 = load i32, i32* @bk, align 4, !dbg !7070
  store i32 %8, i32* %6, align 4, !dbg !7071
  br label %9, !dbg !7072

9:                                                ; preds = %25, %1
  %10 = load i32, i32* %6, align 4, !dbg !7072
  %11 = icmp ult i32 %10, 1, !dbg !7072
  br i1 %11, label %12, label %36, !dbg !7072

12:                                               ; preds = %9
  %13 = load i32, i32* @inptr, align 4, !dbg !7074
  %14 = load i32, i32* @insize, align 4, !dbg !7074
  %15 = icmp ult i32 %13, %14, !dbg !7074
  br i1 %15, label %16, label %23, !dbg !7074

16:                                               ; preds = %12
  %17 = load i32, i32* @inptr, align 4, !dbg !7074
  %18 = add i32 %17, 1, !dbg !7074
  store i32 %18, i32* @inptr, align 4, !dbg !7074
  %19 = zext i32 %17 to i64, !dbg !7074
  %20 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i64 0, i64 %19, !dbg !7074
  %21 = load i8, i8* %20, align 1, !dbg !7074
  %22 = zext i8 %21 to i32, !dbg !7074
  br label %25, !dbg !7074

23:                                               ; preds = %12
  %24 = call i32 @fill_inbuf(i32 noundef 0), !dbg !7074
  br label %25, !dbg !7074

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %22, %16 ], [ %24, %23 ], !dbg !7074
  %27 = trunc i32 %26 to i8, !dbg !7074
  %28 = zext i8 %27 to i64, !dbg !7074
  %29 = load i32, i32* %6, align 4, !dbg !7074
  %30 = zext i32 %29 to i64, !dbg !7074
  %31 = shl i64 %28, %30, !dbg !7074
  %32 = load i64, i64* %5, align 8, !dbg !7074
  %33 = or i64 %32, %31, !dbg !7074
  store i64 %33, i64* %5, align 8, !dbg !7074
  %34 = load i32, i32* %6, align 4, !dbg !7074
  %35 = add i32 %34, 8, !dbg !7074
  store i32 %35, i32* %6, align 4, !dbg !7074
  br label %9, !dbg !7072, !llvm.loop !7076

36:                                               ; preds = %9
  %37 = load i64, i64* %5, align 8, !dbg !7077
  %38 = trunc i64 %37 to i32, !dbg !7078
  %39 = and i32 %38, 1, !dbg !7079
  %40 = load i32*, i32** %3, align 8, !dbg !7080
  store i32 %39, i32* %40, align 4, !dbg !7081
  %41 = load i64, i64* %5, align 8, !dbg !7082
  %42 = lshr i64 %41, 1, !dbg !7082
  store i64 %42, i64* %5, align 8, !dbg !7082
  %43 = load i32, i32* %6, align 4, !dbg !7082
  %44 = sub i32 %43, 1, !dbg !7082
  store i32 %44, i32* %6, align 4, !dbg !7082
  br label %45, !dbg !7084

45:                                               ; preds = %61, %36
  %46 = load i32, i32* %6, align 4, !dbg !7084
  %47 = icmp ult i32 %46, 2, !dbg !7084
  br i1 %47, label %48, label %72, !dbg !7084

48:                                               ; preds = %45
  %49 = load i32, i32* @inptr, align 4, !dbg !7086
  %50 = load i32, i32* @insize, align 4, !dbg !7086
  %51 = icmp ult i32 %49, %50, !dbg !7086
  br i1 %51, label %52, label %59, !dbg !7086

52:                                               ; preds = %48
  %53 = load i32, i32* @inptr, align 4, !dbg !7086
  %54 = add i32 %53, 1, !dbg !7086
  store i32 %54, i32* @inptr, align 4, !dbg !7086
  %55 = zext i32 %53 to i64, !dbg !7086
  %56 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i64 0, i64 %55, !dbg !7086
  %57 = load i8, i8* %56, align 1, !dbg !7086
  %58 = zext i8 %57 to i32, !dbg !7086
  br label %61, !dbg !7086

59:                                               ; preds = %48
  %60 = call i32 @fill_inbuf(i32 noundef 0), !dbg !7086
  br label %61, !dbg !7086

61:                                               ; preds = %59, %52
  %62 = phi i32 [ %58, %52 ], [ %60, %59 ], !dbg !7086
  %63 = trunc i32 %62 to i8, !dbg !7086
  %64 = zext i8 %63 to i64, !dbg !7086
  %65 = load i32, i32* %6, align 4, !dbg !7086
  %66 = zext i32 %65 to i64, !dbg !7086
  %67 = shl i64 %64, %66, !dbg !7086
  %68 = load i64, i64* %5, align 8, !dbg !7086
  %69 = or i64 %68, %67, !dbg !7086
  store i64 %69, i64* %5, align 8, !dbg !7086
  %70 = load i32, i32* %6, align 4, !dbg !7086
  %71 = add i32 %70, 8, !dbg !7086
  store i32 %71, i32* %6, align 4, !dbg !7086
  br label %45, !dbg !7084, !llvm.loop !7088

72:                                               ; preds = %45
  %73 = load i64, i64* %5, align 8, !dbg !7089
  %74 = trunc i64 %73 to i32, !dbg !7090
  %75 = and i32 %74, 3, !dbg !7091
  store i32 %75, i32* %4, align 4, !dbg !7092
  %76 = load i64, i64* %5, align 8, !dbg !7093
  %77 = lshr i64 %76, 2, !dbg !7093
  store i64 %77, i64* %5, align 8, !dbg !7093
  %78 = load i32, i32* %6, align 4, !dbg !7093
  %79 = sub i32 %78, 2, !dbg !7093
  store i32 %79, i32* %6, align 4, !dbg !7093
  %80 = load i64, i64* %5, align 8, !dbg !7095
  store i64 %80, i64* @bb, align 8, !dbg !7096
  %81 = load i32, i32* %6, align 4, !dbg !7097
  store i32 %81, i32* @bk, align 4, !dbg !7098
  %82 = load i32, i32* %4, align 4, !dbg !7099
  %83 = icmp eq i32 %82, 2, !dbg !7101
  br i1 %83, label %84, label %86, !dbg !7102

84:                                               ; preds = %72
  %85 = call i32 @inflate_dynamic(), !dbg !7103
  store i32 %85, i32* %2, align 4, !dbg !7104
  br label %97, !dbg !7104

86:                                               ; preds = %72
  %87 = load i32, i32* %4, align 4, !dbg !7105
  %88 = icmp eq i32 %87, 0, !dbg !7107
  br i1 %88, label %89, label %91, !dbg !7108

89:                                               ; preds = %86
  %90 = call i32 @inflate_stored(), !dbg !7109
  store i32 %90, i32* %2, align 4, !dbg !7110
  br label %97, !dbg !7110

91:                                               ; preds = %86
  %92 = load i32, i32* %4, align 4, !dbg !7111
  %93 = icmp eq i32 %92, 1, !dbg !7113
  br i1 %93, label %94, label %96, !dbg !7114

94:                                               ; preds = %91
  %95 = call i32 @inflate_fixed(), !dbg !7115
  store i32 %95, i32* %2, align 4, !dbg !7116
  br label %97, !dbg !7116

96:                                               ; preds = %91
  store i32 2, i32* %2, align 4, !dbg !7117
  br label %97, !dbg !7117

97:                                               ; preds = %96, %94, %89, %84
  %98 = load i32, i32* %2, align 4, !dbg !7118
  ret i32 %98, !dbg !7118
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @inflate() #0 !dbg !7119 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !7120, metadata !DIExpression()), !dbg !7121
  call void @llvm.dbg.declare(metadata i32* %3, metadata !7122, metadata !DIExpression()), !dbg !7123
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7124, metadata !DIExpression()), !dbg !7125
  store i32 0, i32* @outcnt, align 4, !dbg !7126
  store i32 0, i32* @bk, align 4, !dbg !7127
  store i64 0, i64* @bb, align 8, !dbg !7128
  store i32 0, i32* %4, align 4, !dbg !7129
  br label %5, !dbg !7130

5:                                                ; preds = %17, %0
  store i32 0, i32* @hufts, align 4, !dbg !7131
  %6 = call i32 @inflate_block(i32* noundef %2), !dbg !7133
  store i32 %6, i32* %3, align 4, !dbg !7135
  %7 = icmp ne i32 %6, 0, !dbg !7136
  br i1 %7, label %8, label %10, !dbg !7137

8:                                                ; preds = %5
  %9 = load i32, i32* %3, align 4, !dbg !7138
  store i32 %9, i32* %1, align 4, !dbg !7139
  br label %32, !dbg !7139

10:                                               ; preds = %5
  %11 = load i32, i32* @hufts, align 4, !dbg !7140
  %12 = load i32, i32* %4, align 4, !dbg !7142
  %13 = icmp ugt i32 %11, %12, !dbg !7143
  br i1 %13, label %14, label %16, !dbg !7144

14:                                               ; preds = %10
  %15 = load i32, i32* @hufts, align 4, !dbg !7145
  store i32 %15, i32* %4, align 4, !dbg !7146
  br label %16, !dbg !7147

16:                                               ; preds = %14, %10
  br label %17, !dbg !7148

17:                                               ; preds = %16
  %18 = load i32, i32* %2, align 4, !dbg !7149
  %19 = icmp ne i32 %18, 0, !dbg !7150
  %20 = xor i1 %19, true, !dbg !7150
  br i1 %20, label %5, label %21, !dbg !7148, !llvm.loop !7151

21:                                               ; preds = %17
  br label %22, !dbg !7153

22:                                               ; preds = %25, %21
  %23 = load i32, i32* @bk, align 4, !dbg !7154
  %24 = icmp uge i32 %23, 8, !dbg !7155
  br i1 %24, label %25, label %30, !dbg !7153

25:                                               ; preds = %22
  %26 = load i32, i32* @bk, align 4, !dbg !7156
  %27 = sub i32 %26, 8, !dbg !7156
  store i32 %27, i32* @bk, align 4, !dbg !7156
  %28 = load i32, i32* @inptr, align 4, !dbg !7158
  %29 = add i32 %28, -1, !dbg !7158
  store i32 %29, i32* @inptr, align 4, !dbg !7158
  br label %22, !dbg !7153, !llvm.loop !7159

30:                                               ; preds = %22
  %31 = load i32, i32* @outcnt, align 4, !dbg !7161
  store i32 %31, i32* @outcnt, align 4, !dbg !7161
  call void @flush_window(), !dbg !7161
  store i32 0, i32* %1, align 4, !dbg !7162
  br label %32, !dbg !7162

32:                                               ; preds = %30, %8
  %33 = load i32, i32* %1, align 4, !dbg !7163
  ret i32 %33, !dbg !7163
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @copy(i32 noundef %0, i32 noundef %1) #0 !dbg !7164 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !7165, metadata !DIExpression()), !dbg !7166
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7167, metadata !DIExpression()), !dbg !7168
  %5 = call i32* @__errno_location() #12, !dbg !7169
  store i32 0, i32* %5, align 4, !dbg !7170
  br label %6, !dbg !7171

6:                                                ; preds = %14, %2
  %7 = load i32, i32* @insize, align 4, !dbg !7172
  %8 = icmp ne i32 %7, 0, !dbg !7173
  br i1 %8, label %9, label %12, !dbg !7174

9:                                                ; preds = %6
  %10 = load i32, i32* @insize, align 4, !dbg !7175
  %11 = icmp ne i32 %10, -1, !dbg !7176
  br label %12

12:                                               ; preds = %9, %6
  %13 = phi i1 [ false, %6 ], [ %11, %9 ], !dbg !7177
  br i1 %13, label %14, label %24, !dbg !7171

14:                                               ; preds = %12
  %15 = load i32, i32* %4, align 4, !dbg !7178
  %16 = load i32, i32* @insize, align 4, !dbg !7180
  call void @write_buf(i32 noundef %15, i8* noundef getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 0), i32 noundef %16), !dbg !7181
  %17 = load i32, i32* @insize, align 4, !dbg !7182
  %18 = zext i32 %17 to i64, !dbg !7182
  %19 = load i64, i64* @bytes_out, align 8, !dbg !7183
  %20 = add nsw i64 %19, %18, !dbg !7183
  store i64 %20, i64* @bytes_out, align 8, !dbg !7183
  %21 = load i32, i32* %3, align 4, !dbg !7184
  %22 = call i64 @read(i32 noundef %21, i8* noundef getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 0), i64 noundef 32768), !dbg !7185
  %23 = trunc i64 %22 to i32, !dbg !7185
  store i32 %23, i32* @insize, align 4, !dbg !7186
  br label %6, !dbg !7171, !llvm.loop !7187

24:                                               ; preds = %12
  %25 = load i32, i32* @insize, align 4, !dbg !7189
  %26 = icmp eq i32 %25, -1, !dbg !7191
  br i1 %26, label %27, label %32, !dbg !7192

27:                                               ; preds = %24
  %28 = call i32* @__errno_location() #12, !dbg !7193
  %29 = load i32, i32* %28, align 4, !dbg !7193
  %30 = icmp ne i32 %29, 0, !dbg !7194
  br i1 %30, label %31, label %32, !dbg !7195

31:                                               ; preds = %27
  call void @read_error(), !dbg !7196
  br label %32, !dbg !7198

32:                                               ; preds = %31, %27, %24
  %33 = load i64, i64* @bytes_out, align 8, !dbg !7199
  store i64 %33, i64* @bytes_in, align 8, !dbg !7200
  ret i32 0, !dbg !7201
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @write_buf(i32 noundef %0, i8* noundef %1, i32 noundef %2) #0 !dbg !7202 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7205, metadata !DIExpression()), !dbg !7206
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7207, metadata !DIExpression()), !dbg !7208
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !7209, metadata !DIExpression()), !dbg !7210
  call void @llvm.dbg.declare(metadata i32* %7, metadata !7211, metadata !DIExpression()), !dbg !7212
  br label %8, !dbg !7213

8:                                                ; preds = %21, %3
  %9 = load i32, i32* %4, align 4, !dbg !7214
  %10 = load i8*, i8** %5, align 8, !dbg !7215
  %11 = load i32, i32* %6, align 4, !dbg !7216
  %12 = zext i32 %11 to i64, !dbg !7216
  %13 = call i64 @write(i32 noundef %9, i8* noundef %10, i64 noundef %12), !dbg !7217
  %14 = trunc i64 %13 to i32, !dbg !7217
  store i32 %14, i32* %7, align 4, !dbg !7218
  %15 = load i32, i32* %6, align 4, !dbg !7219
  %16 = icmp ne i32 %14, %15, !dbg !7220
  br i1 %16, label %17, label %29, !dbg !7213

17:                                               ; preds = %8
  %18 = load i32, i32* %7, align 4, !dbg !7221
  %19 = icmp eq i32 %18, -1, !dbg !7224
  br i1 %19, label %20, label %21, !dbg !7225

20:                                               ; preds = %17
  call void @write_error(), !dbg !7226
  br label %21, !dbg !7228

21:                                               ; preds = %20, %17
  %22 = load i32, i32* %7, align 4, !dbg !7229
  %23 = load i32, i32* %6, align 4, !dbg !7230
  %24 = sub i32 %23, %22, !dbg !7230
  store i32 %24, i32* %6, align 4, !dbg !7230
  %25 = load i8*, i8** %5, align 8, !dbg !7231
  %26 = load i32, i32* %7, align 4, !dbg !7232
  %27 = zext i32 %26 to i64, !dbg !7233
  %28 = getelementptr inbounds i8, i8* %25, i64 %27, !dbg !7233
  store i8* %28, i8** %5, align 8, !dbg !7234
  br label %8, !dbg !7213, !llvm.loop !7235

29:                                               ; preds = %8
  ret void, !dbg !7237
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @read_error() #0 !dbg !7238 {
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7239
  %2 = load i8*, i8** @progname, align 8, !dbg !7240
  %3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %1, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.199, i64 0, i64 0), i8* noundef %2), !dbg !7241
  %4 = call i32* @__errno_location() #12, !dbg !7242
  %5 = load i32, i32* %4, align 4, !dbg !7242
  %6 = icmp ne i32 %5, 0, !dbg !7244
  br i1 %6, label %7, label %8, !dbg !7245

7:                                                ; preds = %0
  call void @perror(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0)), !dbg !7246
  br label %11, !dbg !7248

8:                                                ; preds = %0
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7249
  %10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %9, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6.200, i64 0, i64 0), i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0)), !dbg !7251
  br label %11

11:                                               ; preds = %8, %7
  call void @abort_gzip(), !dbg !7252
  ret void, !dbg !7253
}

declare dso_local i64 @write(i32 noundef, i8* noundef, i64 noundef) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @write_error() #0 !dbg !7254 {
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7255
  %2 = load i8*, i8** @progname, align 8, !dbg !7256
  %3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %1, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.199, i64 0, i64 0), i8* noundef %2), !dbg !7257
  call void @perror(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i64 0, i64 0)), !dbg !7258
  call void @abort_gzip(), !dbg !7259
  ret void, !dbg !7260
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @updcrc(i8* noundef %0, i32 noundef %1) #0 !dbg !566 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !7261, metadata !DIExpression()), !dbg !7262
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7263, metadata !DIExpression()), !dbg !7264
  call void @llvm.dbg.declare(metadata i64* %5, metadata !7265, metadata !DIExpression()), !dbg !7266
  %6 = load i8*, i8** %3, align 8, !dbg !7267
  %7 = icmp eq i8* %6, null, !dbg !7269
  br i1 %7, label %8, label %9, !dbg !7270

8:                                                ; preds = %2
  store i64 4294967295, i64* %5, align 8, !dbg !7271
  br label %35, !dbg !7273

9:                                                ; preds = %2
  %10 = load i64, i64* @updcrc.crc, align 8, !dbg !7274
  store i64 %10, i64* %5, align 8, !dbg !7276
  %11 = load i32, i32* %4, align 4, !dbg !7277
  %12 = icmp ne i32 %11, 0, !dbg !7277
  br i1 %12, label %13, label %34, !dbg !7279

13:                                               ; preds = %9
  br label %14, !dbg !7280

14:                                               ; preds = %29, %13
  %15 = load i64, i64* %5, align 8, !dbg !7281
  %16 = trunc i64 %15 to i32, !dbg !7283
  %17 = load i8*, i8** %3, align 8, !dbg !7284
  %18 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7284
  store i8* %18, i8** %3, align 8, !dbg !7284
  %19 = load i8, i8* %17, align 1, !dbg !7285
  %20 = zext i8 %19 to i32, !dbg !7286
  %21 = xor i32 %16, %20, !dbg !7287
  %22 = and i32 %21, 255, !dbg !7288
  %23 = sext i32 %22 to i64, !dbg !7289
  %24 = getelementptr inbounds [0 x i64], [0 x i64]* bitcast ([256 x i64]* @crc_32_tab to [0 x i64]*), i64 0, i64 %23, !dbg !7289
  %25 = load i64, i64* %24, align 8, !dbg !7289
  %26 = load i64, i64* %5, align 8, !dbg !7290
  %27 = lshr i64 %26, 8, !dbg !7291
  %28 = xor i64 %25, %27, !dbg !7292
  store i64 %28, i64* %5, align 8, !dbg !7293
  br label %29, !dbg !7294

29:                                               ; preds = %14
  %30 = load i32, i32* %4, align 4, !dbg !7295
  %31 = add i32 %30, -1, !dbg !7295
  store i32 %31, i32* %4, align 4, !dbg !7295
  %32 = icmp ne i32 %31, 0, !dbg !7294
  br i1 %32, label %14, label %33, !dbg !7294, !llvm.loop !7296

33:                                               ; preds = %29
  br label %34, !dbg !7294

34:                                               ; preds = %33, %9
  br label %35

35:                                               ; preds = %34, %8
  %36 = load i64, i64* %5, align 8, !dbg !7298
  store i64 %36, i64* @updcrc.crc, align 8, !dbg !7299
  %37 = load i64, i64* %5, align 8, !dbg !7300
  %38 = xor i64 %37, 4294967295, !dbg !7301
  ret i64 %38, !dbg !7302
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @clear_bufs() #0 !dbg !7303 {
  store i32 0, i32* @outcnt, align 4, !dbg !7304
  store i32 0, i32* @inptr, align 4, !dbg !7305
  store i32 0, i32* @insize, align 4, !dbg !7306
  store i64 0, i64* @bytes_out, align 8, !dbg !7307
  store i64 0, i64* @bytes_in, align 8, !dbg !7308
  ret void, !dbg !7309
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fill_inbuf(i32 noundef %0) #0 !dbg !7310 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !7311, metadata !DIExpression()), !dbg !7312
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7313, metadata !DIExpression()), !dbg !7314
  store i32 0, i32* @insize, align 4, !dbg !7315
  %5 = call i32* @__errno_location() #12, !dbg !7316
  store i32 0, i32* %5, align 4, !dbg !7317
  br label %6, !dbg !7318

6:                                                ; preds = %26, %1
  %7 = load i32, i32* @ifd, align 4, !dbg !7319
  %8 = load i32, i32* @insize, align 4, !dbg !7321
  %9 = zext i32 %8 to i64, !dbg !7322
  %10 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 0), i64 %9, !dbg !7322
  %11 = load i32, i32* @insize, align 4, !dbg !7323
  %12 = sub i32 32768, %11, !dbg !7324
  %13 = zext i32 %12 to i64, !dbg !7325
  %14 = call i64 @read(i32 noundef %7, i8* noundef %10, i64 noundef %13), !dbg !7326
  %15 = trunc i64 %14 to i32, !dbg !7326
  store i32 %15, i32* %4, align 4, !dbg !7327
  %16 = load i32, i32* %4, align 4, !dbg !7328
  %17 = icmp eq i32 %16, 0, !dbg !7330
  br i1 %17, label %21, label %18, !dbg !7331

18:                                               ; preds = %6
  %19 = load i32, i32* %4, align 4, !dbg !7332
  %20 = icmp eq i32 %19, -1, !dbg !7333
  br i1 %20, label %21, label %22, !dbg !7334

21:                                               ; preds = %18, %6
  br label %29, !dbg !7335

22:                                               ; preds = %18
  %23 = load i32, i32* %4, align 4, !dbg !7336
  %24 = load i32, i32* @insize, align 4, !dbg !7337
  %25 = add i32 %24, %23, !dbg !7337
  store i32 %25, i32* @insize, align 4, !dbg !7337
  br label %26, !dbg !7338

26:                                               ; preds = %22
  %27 = load i32, i32* @insize, align 4, !dbg !7339
  %28 = icmp ult i32 %27, 32768, !dbg !7340
  br i1 %28, label %6, label %29, !dbg !7338, !llvm.loop !7341

29:                                               ; preds = %26, %21
  %30 = load i32, i32* @insize, align 4, !dbg !7343
  %31 = icmp eq i32 %30, 0, !dbg !7345
  br i1 %31, label %32, label %37, !dbg !7346

32:                                               ; preds = %29
  %33 = load i32, i32* %3, align 4, !dbg !7347
  %34 = icmp ne i32 %33, 0, !dbg !7347
  br i1 %34, label %35, label %36, !dbg !7350

35:                                               ; preds = %32
  store i32 -1, i32* %2, align 4, !dbg !7351
  br label %44, !dbg !7351

36:                                               ; preds = %32
  call void @read_error(), !dbg !7352
  br label %37, !dbg !7353

37:                                               ; preds = %36, %29
  %38 = load i32, i32* @insize, align 4, !dbg !7354
  %39 = zext i32 %38 to i64, !dbg !7355
  %40 = load i64, i64* @bytes_in, align 8, !dbg !7356
  %41 = add i64 %40, %39, !dbg !7356
  store i64 %41, i64* @bytes_in, align 8, !dbg !7356
  store i32 1, i32* @inptr, align 4, !dbg !7357
  %42 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 0), align 1, !dbg !7358
  %43 = zext i8 %42 to i32, !dbg !7358
  store i32 %43, i32* %2, align 4, !dbg !7359
  br label %44, !dbg !7359

44:                                               ; preds = %37, %35
  %45 = load i32, i32* %2, align 4, !dbg !7360
  ret i32 %45, !dbg !7360
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @flush_outbuf() #0 !dbg !7361 {
  %1 = load i32, i32* @outcnt, align 4, !dbg !7362
  %2 = icmp eq i32 %1, 0, !dbg !7364
  br i1 %2, label %3, label %4, !dbg !7365

3:                                                ; preds = %0
  br label %11, !dbg !7366

4:                                                ; preds = %0
  %5 = load i32, i32* @ofd, align 4, !dbg !7367
  %6 = load i32, i32* @outcnt, align 4, !dbg !7368
  call void @write_buf(i32 noundef %5, i8* noundef getelementptr inbounds ([18432 x i8], [18432 x i8]* @outbuf, i64 0, i64 0), i32 noundef %6), !dbg !7369
  %7 = load i32, i32* @outcnt, align 4, !dbg !7370
  %8 = zext i32 %7 to i64, !dbg !7371
  %9 = load i64, i64* @bytes_out, align 8, !dbg !7372
  %10 = add i64 %9, %8, !dbg !7372
  store i64 %10, i64* @bytes_out, align 8, !dbg !7372
  store i32 0, i32* @outcnt, align 4, !dbg !7373
  br label %11, !dbg !7374

11:                                               ; preds = %4, %3
  ret void, !dbg !7374
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @flush_window() #0 !dbg !7375 {
  %1 = load i32, i32* @outcnt, align 4, !dbg !7376
  %2 = icmp eq i32 %1, 0, !dbg !7378
  br i1 %2, label %3, label %4, !dbg !7379

3:                                                ; preds = %0
  br label %17, !dbg !7380

4:                                                ; preds = %0
  %5 = load i32, i32* @outcnt, align 4, !dbg !7381
  %6 = call i64 @updcrc(i8* noundef getelementptr inbounds ([65536 x i8], [65536 x i8]* @window, i64 0, i64 0), i32 noundef %5), !dbg !7382
  %7 = load i32, i32* @test, align 4, !dbg !7383
  %8 = icmp ne i32 %7, 0, !dbg !7383
  br i1 %8, label %12, label %9, !dbg !7385

9:                                                ; preds = %4
  %10 = load i32, i32* @ofd, align 4, !dbg !7386
  %11 = load i32, i32* @outcnt, align 4, !dbg !7388
  call void @write_buf(i32 noundef %10, i8* noundef getelementptr inbounds ([65536 x i8], [65536 x i8]* @window, i64 0, i64 0), i32 noundef %11), !dbg !7389
  br label %12, !dbg !7390

12:                                               ; preds = %9, %4
  %13 = load i32, i32* @outcnt, align 4, !dbg !7391
  %14 = zext i32 %13 to i64, !dbg !7392
  %15 = load i64, i64* @bytes_out, align 8, !dbg !7393
  %16 = add i64 %15, %14, !dbg !7393
  store i64 %16, i64* @bytes_out, align 8, !dbg !7393
  store i32 0, i32* @outcnt, align 4, !dbg !7394
  br label %17, !dbg !7395

17:                                               ; preds = %12, %3
  ret void, !dbg !7395
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @strlwr(i8* noundef %0) #0 !dbg !7396 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !7397, metadata !DIExpression()), !dbg !7398
  call void @llvm.dbg.declare(metadata i8** %3, metadata !7399, metadata !DIExpression()), !dbg !7400
  %4 = load i8*, i8** %2, align 8, !dbg !7401
  store i8* %4, i8** %3, align 8, !dbg !7403
  br label %5, !dbg !7404

5:                                                ; preds = %35, %1
  %6 = load i8*, i8** %3, align 8, !dbg !7405
  %7 = load i8, i8* %6, align 1, !dbg !7407
  %8 = icmp ne i8 %7, 0, !dbg !7408
  br i1 %8, label %9, label %38, !dbg !7408

9:                                                ; preds = %5
  %10 = call i16** @__ctype_b_loc() #12, !dbg !7409
  %11 = load i16*, i16** %10, align 8, !dbg !7409
  %12 = load i8*, i8** %3, align 8, !dbg !7409
  %13 = load i8, i8* %12, align 1, !dbg !7409
  %14 = sext i8 %13 to i32, !dbg !7409
  %15 = sext i32 %14 to i64, !dbg !7409
  %16 = getelementptr inbounds i16, i16* %11, i64 %15, !dbg !7409
  %17 = load i16, i16* %16, align 2, !dbg !7409
  %18 = zext i16 %17 to i32, !dbg !7409
  %19 = and i32 %18, 256, !dbg !7409
  %20 = icmp ne i32 %19, 0, !dbg !7409
  br i1 %20, label %21, label %27, !dbg !7409

21:                                               ; preds = %9
  %22 = load i8*, i8** %3, align 8, !dbg !7409
  %23 = load i8, i8* %22, align 1, !dbg !7409
  %24 = sext i8 %23 to i32, !dbg !7409
  %25 = sub nsw i32 %24, 65, !dbg !7409
  %26 = add nsw i32 %25, 97, !dbg !7409
  br label %31, !dbg !7409

27:                                               ; preds = %9
  %28 = load i8*, i8** %3, align 8, !dbg !7409
  %29 = load i8, i8* %28, align 1, !dbg !7409
  %30 = sext i8 %29 to i32, !dbg !7409
  br label %31, !dbg !7409

31:                                               ; preds = %27, %21
  %32 = phi i32 [ %26, %21 ], [ %30, %27 ], !dbg !7409
  %33 = trunc i32 %32 to i8, !dbg !7409
  %34 = load i8*, i8** %3, align 8, !dbg !7410
  store i8 %33, i8* %34, align 1, !dbg !7411
  br label %35, !dbg !7412

35:                                               ; preds = %31
  %36 = load i8*, i8** %3, align 8, !dbg !7413
  %37 = getelementptr inbounds i8, i8* %36, i32 1, !dbg !7413
  store i8* %37, i8** %3, align 8, !dbg !7413
  br label %5, !dbg !7414, !llvm.loop !7415

38:                                               ; preds = %5
  %39 = load i8*, i8** %2, align 8, !dbg !7417
  ret i8* %39, !dbg !7418
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @basename(i8* noundef %0) #0 !dbg !7419 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !7420, metadata !DIExpression()), !dbg !7421
  call void @llvm.dbg.declare(metadata i8** %3, metadata !7422, metadata !DIExpression()), !dbg !7423
  %4 = load i8*, i8** %2, align 8, !dbg !7424
  %5 = call i8* @strrchr(i8* noundef %4, i32 noundef 47) #9, !dbg !7426
  store i8* %5, i8** %3, align 8, !dbg !7427
  %6 = icmp ne i8* %5, null, !dbg !7428
  br i1 %6, label %7, label %10, !dbg !7429

7:                                                ; preds = %1
  %8 = load i8*, i8** %3, align 8, !dbg !7430
  %9 = getelementptr inbounds i8, i8* %8, i64 1, !dbg !7431
  store i8* %9, i8** %2, align 8, !dbg !7432
  br label %10, !dbg !7433

10:                                               ; preds = %7, %1
  %11 = load i8*, i8** %2, align 8, !dbg !7434
  ret i8* %11, !dbg !7435
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @make_simple_name(i8* noundef %0) #0 !dbg !7436 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !7437, metadata !DIExpression()), !dbg !7438
  call void @llvm.dbg.declare(metadata i8** %3, metadata !7439, metadata !DIExpression()), !dbg !7440
  %4 = load i8*, i8** %2, align 8, !dbg !7441
  %5 = call i8* @strrchr(i8* noundef %4, i32 noundef 46) #9, !dbg !7442
  store i8* %5, i8** %3, align 8, !dbg !7440
  %6 = load i8*, i8** %3, align 8, !dbg !7443
  %7 = icmp eq i8* %6, null, !dbg !7445
  br i1 %7, label %8, label %9, !dbg !7446

8:                                                ; preds = %1
  br label %30, !dbg !7447

9:                                                ; preds = %1
  %10 = load i8*, i8** %3, align 8, !dbg !7448
  %11 = load i8*, i8** %2, align 8, !dbg !7450
  %12 = icmp eq i8* %10, %11, !dbg !7451
  br i1 %12, label %13, label %16, !dbg !7452

13:                                               ; preds = %9
  %14 = load i8*, i8** %3, align 8, !dbg !7453
  %15 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7453
  store i8* %15, i8** %3, align 8, !dbg !7453
  br label %16, !dbg !7454

16:                                               ; preds = %13, %9
  br label %17, !dbg !7455

17:                                               ; preds = %26, %16
  %18 = load i8*, i8** %3, align 8, !dbg !7456
  %19 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !7456
  store i8* %19, i8** %3, align 8, !dbg !7456
  %20 = load i8, i8* %19, align 1, !dbg !7459
  %21 = sext i8 %20 to i32, !dbg !7459
  %22 = icmp eq i32 %21, 46, !dbg !7460
  br i1 %22, label %23, label %25, !dbg !7461

23:                                               ; preds = %17
  %24 = load i8*, i8** %3, align 8, !dbg !7462
  store i8 95, i8* %24, align 1, !dbg !7463
  br label %25, !dbg !7464

25:                                               ; preds = %23, %17
  br label %26, !dbg !7465

26:                                               ; preds = %25
  %27 = load i8*, i8** %3, align 8, !dbg !7466
  %28 = load i8*, i8** %2, align 8, !dbg !7467
  %29 = icmp ne i8* %27, %28, !dbg !7468
  br i1 %29, label %17, label %30, !dbg !7465, !llvm.loop !7469

30:                                               ; preds = %8, %26
  ret void, !dbg !7471
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @add_envopt(i32* noundef %0, i8*** noundef %1, i8* noundef %2) #0 !dbg !7472 {
  %4 = alloca i8*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i8***, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8**, align 8
  %10 = alloca i8**, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store i32* %0, i32** %5, align 8
  call void @llvm.dbg.declare(metadata i32** %5, metadata !7476, metadata !DIExpression()), !dbg !7477
  store i8*** %1, i8**** %6, align 8
  call void @llvm.dbg.declare(metadata i8**** %6, metadata !7478, metadata !DIExpression()), !dbg !7479
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !7480, metadata !DIExpression()), !dbg !7481
  call void @llvm.dbg.declare(metadata i8** %8, metadata !7482, metadata !DIExpression()), !dbg !7483
  call void @llvm.dbg.declare(metadata i8*** %9, metadata !7484, metadata !DIExpression()), !dbg !7485
  call void @llvm.dbg.declare(metadata i8*** %10, metadata !7486, metadata !DIExpression()), !dbg !7487
  call void @llvm.dbg.declare(metadata i32* %11, metadata !7488, metadata !DIExpression()), !dbg !7489
  %13 = load i32*, i32** %5, align 8, !dbg !7490
  %14 = load i32, i32* %13, align 4, !dbg !7491
  store i32 %14, i32* %11, align 4, !dbg !7489
  call void @llvm.dbg.declare(metadata i32* %12, metadata !7492, metadata !DIExpression()), !dbg !7493
  store i32 0, i32* %12, align 4, !dbg !7493
  %15 = load i8*, i8** %7, align 8, !dbg !7494
  %16 = call i8* @getenv(i8* noundef %15) #10, !dbg !7495
  store i8* %16, i8** %7, align 8, !dbg !7496
  %17 = load i8*, i8** %7, align 8, !dbg !7497
  %18 = icmp eq i8* %17, null, !dbg !7499
  br i1 %18, label %19, label %20, !dbg !7500

19:                                               ; preds = %3
  store i8* null, i8** %4, align 8, !dbg !7501
  br label %129, !dbg !7501

20:                                               ; preds = %3
  %21 = load i8*, i8** %7, align 8, !dbg !7502
  %22 = call i64 @strlen(i8* noundef %21) #9, !dbg !7503
  %23 = add i64 %22, 1, !dbg !7504
  %24 = trunc i64 %23 to i32, !dbg !7503
  %25 = call i8* @xmalloc(i32 noundef %24), !dbg !7505
  store i8* %25, i8** %8, align 8, !dbg !7506
  %26 = load i8*, i8** %8, align 8, !dbg !7507
  %27 = load i8*, i8** %7, align 8, !dbg !7508
  %28 = call i8* @strcpy(i8* noundef %26, i8* noundef %27) #10, !dbg !7509
  store i8* %28, i8** %7, align 8, !dbg !7510
  %29 = load i8*, i8** %7, align 8, !dbg !7511
  store i8* %29, i8** %8, align 8, !dbg !7513
  br label %30, !dbg !7514

30:                                               ; preds = %56, %20
  %31 = load i8*, i8** %8, align 8, !dbg !7515
  %32 = load i8, i8* %31, align 1, !dbg !7517
  %33 = icmp ne i8 %32, 0, !dbg !7518
  br i1 %33, label %34, label %59, !dbg !7518

34:                                               ; preds = %30
  %35 = load i8*, i8** %8, align 8, !dbg !7519
  %36 = call i64 @strspn(i8* noundef %35, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.219, i64 0, i64 0)) #9, !dbg !7521
  %37 = load i8*, i8** %8, align 8, !dbg !7522
  %38 = getelementptr inbounds i8, i8* %37, i64 %36, !dbg !7522
  store i8* %38, i8** %8, align 8, !dbg !7522
  %39 = load i8*, i8** %8, align 8, !dbg !7523
  %40 = load i8, i8* %39, align 1, !dbg !7525
  %41 = sext i8 %40 to i32, !dbg !7525
  %42 = icmp eq i32 %41, 0, !dbg !7526
  br i1 %42, label %43, label %44, !dbg !7527

43:                                               ; preds = %34
  br label %59, !dbg !7528

44:                                               ; preds = %34
  %45 = load i8*, i8** %8, align 8, !dbg !7529
  %46 = call i64 @strcspn(i8* noundef %45, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.219, i64 0, i64 0)) #9, !dbg !7530
  %47 = load i8*, i8** %8, align 8, !dbg !7531
  %48 = getelementptr inbounds i8, i8* %47, i64 %46, !dbg !7531
  store i8* %48, i8** %8, align 8, !dbg !7531
  %49 = load i8*, i8** %8, align 8, !dbg !7532
  %50 = load i8, i8* %49, align 1, !dbg !7534
  %51 = icmp ne i8 %50, 0, !dbg !7534
  br i1 %51, label %52, label %55, !dbg !7535

52:                                               ; preds = %44
  %53 = load i8*, i8** %8, align 8, !dbg !7536
  %54 = getelementptr inbounds i8, i8* %53, i32 1, !dbg !7536
  store i8* %54, i8** %8, align 8, !dbg !7536
  store i8 0, i8* %53, align 1, !dbg !7537
  br label %55, !dbg !7538

55:                                               ; preds = %52, %44
  br label %56, !dbg !7539

56:                                               ; preds = %55
  %57 = load i32, i32* %12, align 4, !dbg !7540
  %58 = add nsw i32 %57, 1, !dbg !7540
  store i32 %58, i32* %12, align 4, !dbg !7540
  br label %30, !dbg !7541, !llvm.loop !7542

59:                                               ; preds = %43, %30
  %60 = load i32, i32* %12, align 4, !dbg !7544
  %61 = icmp eq i32 %60, 0, !dbg !7546
  br i1 %61, label %62, label %64, !dbg !7547

62:                                               ; preds = %59
  %63 = load i8*, i8** %7, align 8, !dbg !7548
  call void @free(i8* noundef %63) #10, !dbg !7550
  store i8* null, i8** %4, align 8, !dbg !7551
  br label %129, !dbg !7551

64:                                               ; preds = %59
  %65 = load i32, i32* %12, align 4, !dbg !7552
  %66 = load i32*, i32** %5, align 8, !dbg !7553
  %67 = load i32, i32* %66, align 4, !dbg !7554
  %68 = add nsw i32 %67, %65, !dbg !7554
  store i32 %68, i32* %66, align 4, !dbg !7554
  %69 = load i32*, i32** %5, align 8, !dbg !7555
  %70 = load i32, i32* %69, align 4, !dbg !7556
  %71 = add nsw i32 %70, 1, !dbg !7557
  %72 = sext i32 %71 to i64, !dbg !7556
  %73 = call noalias i8* @calloc(i64 noundef %72, i64 noundef 8) #10, !dbg !7558
  %74 = bitcast i8* %73 to i8**, !dbg !7559
  store i8** %74, i8*** %10, align 8, !dbg !7560
  %75 = load i8**, i8*** %10, align 8, !dbg !7561
  %76 = icmp eq i8** %75, null, !dbg !7563
  br i1 %76, label %77, label %78, !dbg !7564

77:                                               ; preds = %64
  call void @error(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.220, i64 0, i64 0)), !dbg !7565
  br label %78, !dbg !7565

78:                                               ; preds = %77, %64
  %79 = load i8***, i8**** %6, align 8, !dbg !7566
  %80 = load i8**, i8*** %79, align 8, !dbg !7567
  store i8** %80, i8*** %9, align 8, !dbg !7568
  %81 = load i8**, i8*** %10, align 8, !dbg !7569
  %82 = load i8***, i8**** %6, align 8, !dbg !7570
  store i8** %81, i8*** %82, align 8, !dbg !7571
  %83 = load i32, i32* %11, align 4, !dbg !7572
  %84 = add nsw i32 %83, -1, !dbg !7572
  store i32 %84, i32* %11, align 4, !dbg !7572
  %85 = icmp slt i32 %83, 0, !dbg !7574
  br i1 %85, label %86, label %87, !dbg !7575

86:                                               ; preds = %78
  call void @error(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2.223, i64 0, i64 0)), !dbg !7576
  br label %87, !dbg !7576

87:                                               ; preds = %86, %78
  %88 = load i8**, i8*** %9, align 8, !dbg !7577
  %89 = getelementptr inbounds i8*, i8** %88, i32 1, !dbg !7577
  store i8** %89, i8*** %9, align 8, !dbg !7577
  %90 = load i8*, i8** %88, align 8, !dbg !7578
  %91 = load i8**, i8*** %10, align 8, !dbg !7579
  %92 = getelementptr inbounds i8*, i8** %91, i32 1, !dbg !7579
  store i8** %92, i8*** %10, align 8, !dbg !7579
  store i8* %90, i8** %91, align 8, !dbg !7580
  %93 = load i8*, i8** %7, align 8, !dbg !7581
  store i8* %93, i8** %8, align 8, !dbg !7583
  br label %94, !dbg !7584

94:                                               ; preds = %112, %87
  %95 = load i32, i32* %12, align 4, !dbg !7585
  %96 = icmp sgt i32 %95, 0, !dbg !7587
  br i1 %96, label %97, label %115, !dbg !7588

97:                                               ; preds = %94
  %98 = load i8*, i8** %8, align 8, !dbg !7589
  %99 = call i64 @strspn(i8* noundef %98, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.219, i64 0, i64 0)) #9, !dbg !7591
  %100 = load i8*, i8** %8, align 8, !dbg !7592
  %101 = getelementptr inbounds i8, i8* %100, i64 %99, !dbg !7592
  store i8* %101, i8** %8, align 8, !dbg !7592
  %102 = load i8*, i8** %8, align 8, !dbg !7593
  %103 = load i8**, i8*** %10, align 8, !dbg !7594
  %104 = getelementptr inbounds i8*, i8** %103, i32 1, !dbg !7594
  store i8** %104, i8*** %10, align 8, !dbg !7594
  store i8* %102, i8** %103, align 8, !dbg !7595
  br label %105, !dbg !7596

105:                                              ; preds = %110, %97
  %106 = load i8*, i8** %8, align 8, !dbg !7597
  %107 = getelementptr inbounds i8, i8* %106, i32 1, !dbg !7597
  store i8* %107, i8** %8, align 8, !dbg !7597
  %108 = load i8, i8* %106, align 1, !dbg !7598
  %109 = icmp ne i8 %108, 0, !dbg !7596
  br i1 %109, label %110, label %111, !dbg !7596

110:                                              ; preds = %105
  br label %105, !dbg !7596, !llvm.loop !7599

111:                                              ; preds = %105
  br label %112, !dbg !7601

112:                                              ; preds = %111
  %113 = load i32, i32* %12, align 4, !dbg !7602
  %114 = add nsw i32 %113, -1, !dbg !7602
  store i32 %114, i32* %12, align 4, !dbg !7602
  br label %94, !dbg !7603, !llvm.loop !7604

115:                                              ; preds = %94
  br label %116, !dbg !7606

116:                                              ; preds = %120, %115
  %117 = load i32, i32* %11, align 4, !dbg !7607
  %118 = add nsw i32 %117, -1, !dbg !7607
  store i32 %118, i32* %11, align 4, !dbg !7607
  %119 = icmp ne i32 %117, 0, !dbg !7606
  br i1 %119, label %120, label %126, !dbg !7606

120:                                              ; preds = %116
  %121 = load i8**, i8*** %9, align 8, !dbg !7608
  %122 = getelementptr inbounds i8*, i8** %121, i32 1, !dbg !7608
  store i8** %122, i8*** %9, align 8, !dbg !7608
  %123 = load i8*, i8** %121, align 8, !dbg !7609
  %124 = load i8**, i8*** %10, align 8, !dbg !7610
  %125 = getelementptr inbounds i8*, i8** %124, i32 1, !dbg !7610
  store i8** %125, i8*** %10, align 8, !dbg !7610
  store i8* %123, i8** %124, align 8, !dbg !7611
  br label %116, !dbg !7606, !llvm.loop !7612

126:                                              ; preds = %116
  %127 = load i8**, i8*** %10, align 8, !dbg !7614
  store i8* null, i8** %127, align 8, !dbg !7615
  %128 = load i8*, i8** %7, align 8, !dbg !7616
  store i8* %128, i8** %4, align 8, !dbg !7617
  br label %129, !dbg !7617

129:                                              ; preds = %126, %62, %19
  %130 = load i8*, i8** %4, align 8, !dbg !7618
  ret i8* %130, !dbg !7618
}

; Function Attrs: nounwind
declare dso_local i8* @getenv(i8* noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xmalloc(i32 noundef %0) #0 !dbg !7619 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !7622, metadata !DIExpression()), !dbg !7623
  call void @llvm.dbg.declare(metadata i8** %3, metadata !7624, metadata !DIExpression()), !dbg !7625
  %4 = load i32, i32* %2, align 4, !dbg !7626
  %5 = zext i32 %4 to i64, !dbg !7626
  %6 = call noalias i8* @malloc(i64 noundef %5) #10, !dbg !7627
  store i8* %6, i8** %3, align 8, !dbg !7625
  %7 = load i8*, i8** %3, align 8, !dbg !7628
  %8 = icmp eq i8* %7, null, !dbg !7630
  br i1 %8, label %9, label %10, !dbg !7631

9:                                                ; preds = %1
  call void @error(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.220, i64 0, i64 0)), !dbg !7632
  br label %10, !dbg !7632

10:                                               ; preds = %9, %1
  %11 = load i8*, i8** %3, align 8, !dbg !7633
  ret i8* %11, !dbg !7634
}

; Function Attrs: nounwind readonly willreturn
declare dso_local i64 @strspn(i8* noundef, i8* noundef) #2

; Function Attrs: nounwind
declare dso_local noalias i8* @calloc(i64 noundef, i64 noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @error(i8* noundef %0) #0 !dbg !7635 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !7636, metadata !DIExpression()), !dbg !7637
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7638
  %4 = load i8*, i8** @progname, align 8, !dbg !7639
  %5 = load i8*, i8** %2, align 8, !dbg !7640
  %6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %3, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3.224, i64 0, i64 0), i8* noundef %4, i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0), i8* noundef %5), !dbg !7641
  call void @abort_gzip(), !dbg !7642
  ret void, !dbg !7643
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @warn(i8* noundef %0, i8* noundef %1) #0 !dbg !7644 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !7647, metadata !DIExpression()), !dbg !7648
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !7649, metadata !DIExpression()), !dbg !7650
  %5 = load i32, i32* @quiet, align 4, !dbg !7651
  %6 = icmp ne i32 %5, 0, !dbg !7651
  br i1 %6, label %13, label %7, !dbg !7654

7:                                                ; preds = %2
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7651
  %9 = load i8*, i8** @progname, align 8, !dbg !7651
  %10 = load i8*, i8** %3, align 8, !dbg !7651
  %11 = load i8*, i8** %4, align 8, !dbg !7651
  %12 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %8, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.227, i64 0, i64 0), i8* noundef %9, i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0), i8* noundef %10, i8* noundef %11), !dbg !7651
  br label %13, !dbg !7651

13:                                               ; preds = %7, %2
  %14 = load i32, i32* @exit_code, align 4, !dbg !7655
  %15 = icmp eq i32 %14, 0, !dbg !7655
  br i1 %15, label %16, label %17, !dbg !7654

16:                                               ; preds = %13
  store i32 2, i32* @exit_code, align 4, !dbg !7655
  br label %17, !dbg !7655

17:                                               ; preds = %16, %13
  ret void, !dbg !7657
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @display_ratio(i64 noundef %0, i64 noundef %1, %struct._IO_FILE* noundef %2) #0 !dbg !7658 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca %struct._IO_FILE*, align 8
  %7 = alloca i64, align 8
  store i64 %0, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !7695, metadata !DIExpression()), !dbg !7696
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !7697, metadata !DIExpression()), !dbg !7698
  store %struct._IO_FILE* %2, %struct._IO_FILE** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %6, metadata !7699, metadata !DIExpression()), !dbg !7700
  call void @llvm.dbg.declare(metadata i64* %7, metadata !7701, metadata !DIExpression()), !dbg !7702
  %8 = load i64, i64* %5, align 8, !dbg !7703
  %9 = icmp eq i64 %8, 0, !dbg !7705
  br i1 %9, label %10, label %11, !dbg !7706

10:                                               ; preds = %3
  store i64 0, i64* %7, align 8, !dbg !7707
  br label %25, !dbg !7709

11:                                               ; preds = %3
  %12 = load i64, i64* %5, align 8, !dbg !7710
  %13 = icmp slt i64 %12, 2147483, !dbg !7712
  br i1 %13, label %14, label %19, !dbg !7713

14:                                               ; preds = %11
  %15 = load i64, i64* %4, align 8, !dbg !7714
  %16 = mul nsw i64 1000, %15, !dbg !7716
  %17 = load i64, i64* %5, align 8, !dbg !7717
  %18 = sdiv i64 %16, %17, !dbg !7718
  store i64 %18, i64* %7, align 8, !dbg !7719
  br label %24, !dbg !7720

19:                                               ; preds = %11
  %20 = load i64, i64* %4, align 8, !dbg !7721
  %21 = load i64, i64* %5, align 8, !dbg !7723
  %22 = sdiv i64 %21, 1000, !dbg !7724
  %23 = sdiv i64 %20, %22, !dbg !7725
  store i64 %23, i64* %7, align 8, !dbg !7726
  br label %24

24:                                               ; preds = %19, %14
  br label %25

25:                                               ; preds = %24, %10
  %26 = load i64, i64* %7, align 8, !dbg !7727
  %27 = icmp slt i64 %26, 0, !dbg !7729
  br i1 %27, label %28, label %33, !dbg !7730

28:                                               ; preds = %25
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !7731
  %30 = call i32 @putc(i32 noundef 45, %struct._IO_FILE* noundef %29), !dbg !7733
  %31 = load i64, i64* %7, align 8, !dbg !7734
  %32 = sub nsw i64 0, %31, !dbg !7735
  store i64 %32, i64* %7, align 8, !dbg !7736
  br label %36, !dbg !7737

33:                                               ; preds = %25
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !7738
  %35 = call i32 @putc(i32 noundef 32, %struct._IO_FILE* noundef %34), !dbg !7740
  br label %36

36:                                               ; preds = %33, %28
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !7741
  %38 = load i64, i64* %7, align 8, !dbg !7742
  %39 = sdiv i64 %38, 10, !dbg !7743
  %40 = load i64, i64* %7, align 8, !dbg !7744
  %41 = srem i64 %40, 10, !dbg !7745
  %42 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %37, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.230, i64 0, i64 0), i64 noundef %39, i64 noundef %41), !dbg !7746
  ret void, !dbg !7747
}

declare dso_local i32 @putc(i32 noundef, %struct._IO_FILE* noundef) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lzw(i32 noundef %0, i32 noundef %1) #0 !dbg !7748 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7749, metadata !DIExpression()), !dbg !7750
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !7751, metadata !DIExpression()), !dbg !7752
  %6 = load i32, i32* @msg_done, align 4, !dbg !7753
  %7 = icmp ne i32 %6, 0, !dbg !7753
  br i1 %7, label %8, label %9, !dbg !7755

8:                                                ; preds = %2
  store i32 1, i32* %3, align 4, !dbg !7756
  br label %17, !dbg !7756

9:                                                ; preds = %2
  store i32 1, i32* @msg_done, align 4, !dbg !7757
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7758
  %11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %10, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.233, i64 0, i64 0)), !dbg !7759
  %12 = load i32, i32* %4, align 4, !dbg !7760
  %13 = load i32, i32* %5, align 4, !dbg !7762
  %14 = icmp ne i32 %12, %13, !dbg !7763
  br i1 %14, label %15, label %16, !dbg !7764

15:                                               ; preds = %9
  store i32 1, i32* @exit_code, align 4, !dbg !7765
  br label %16, !dbg !7767

16:                                               ; preds = %15, %9
  store i32 1, i32* %3, align 4, !dbg !7768
  br label %17, !dbg !7768

17:                                               ; preds = %16, %8
  %18 = load i32, i32* %3, align 4, !dbg !7769
  ret i32 %18, !dbg !7769
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @unlzw(i32 noundef %0, i32 noundef %1) #0 !dbg !7770 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i8*, align 8
  %24 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7771, metadata !DIExpression()), !dbg !7772
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !7773, metadata !DIExpression()), !dbg !7774
  call void @llvm.dbg.declare(metadata i8** %6, metadata !7775, metadata !DIExpression()), !dbg !7776
  call void @llvm.dbg.declare(metadata i64* %7, metadata !7777, metadata !DIExpression()), !dbg !7779
  call void @llvm.dbg.declare(metadata i32* %8, metadata !7780, metadata !DIExpression()), !dbg !7781
  call void @llvm.dbg.declare(metadata i64* %9, metadata !7782, metadata !DIExpression()), !dbg !7783
  call void @llvm.dbg.declare(metadata i64* %10, metadata !7784, metadata !DIExpression()), !dbg !7785
  call void @llvm.dbg.declare(metadata i64* %11, metadata !7786, metadata !DIExpression()), !dbg !7787
  call void @llvm.dbg.declare(metadata i64* %12, metadata !7788, metadata !DIExpression()), !dbg !7789
  call void @llvm.dbg.declare(metadata i32* %13, metadata !7790, metadata !DIExpression()), !dbg !7791
  call void @llvm.dbg.declare(metadata i32* %14, metadata !7792, metadata !DIExpression()), !dbg !7793
  call void @llvm.dbg.declare(metadata i64* %15, metadata !7794, metadata !DIExpression()), !dbg !7795
  call void @llvm.dbg.declare(metadata i64* %16, metadata !7796, metadata !DIExpression()), !dbg !7797
  call void @llvm.dbg.declare(metadata i64* %17, metadata !7798, metadata !DIExpression()), !dbg !7799
  call void @llvm.dbg.declare(metadata i32* %18, metadata !7800, metadata !DIExpression()), !dbg !7801
  call void @llvm.dbg.declare(metadata i32* %19, metadata !7802, metadata !DIExpression()), !dbg !7803
  %25 = load i32, i32* @inptr, align 4, !dbg !7804
  %26 = load i32, i32* @insize, align 4, !dbg !7804
  %27 = icmp ult i32 %25, %26, !dbg !7804
  br i1 %27, label %28, label %35, !dbg !7804

28:                                               ; preds = %2
  %29 = load i32, i32* @inptr, align 4, !dbg !7804
  %30 = add i32 %29, 1, !dbg !7804
  store i32 %30, i32* @inptr, align 4, !dbg !7804
  %31 = zext i32 %29 to i64, !dbg !7804
  %32 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i64 0, i64 %31, !dbg !7804
  %33 = load i8, i8* %32, align 1, !dbg !7804
  %34 = zext i8 %33 to i32, !dbg !7804
  br label %37, !dbg !7804

35:                                               ; preds = %2
  %36 = call i32 @fill_inbuf(i32 noundef 0), !dbg !7804
  br label %37, !dbg !7804

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %34, %28 ], [ %36, %35 ], !dbg !7804
  store i32 %38, i32* @maxbits, align 4, !dbg !7805
  %39 = load i32, i32* @maxbits, align 4, !dbg !7806
  %40 = and i32 %39, 128, !dbg !7807
  store i32 %40, i32* @block_mode, align 4, !dbg !7808
  %41 = load i32, i32* @maxbits, align 4, !dbg !7809
  %42 = and i32 %41, 96, !dbg !7811
  %43 = icmp ne i32 %42, 0, !dbg !7812
  br i1 %43, label %44, label %58, !dbg !7813

44:                                               ; preds = %37
  %45 = load i32, i32* @quiet, align 4, !dbg !7814
  %46 = icmp ne i32 %45, 0, !dbg !7814
  br i1 %46, label %53, label %47, !dbg !7818

47:                                               ; preds = %44
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7814
  %49 = load i8*, i8** @progname, align 8, !dbg !7814
  %50 = load i32, i32* @maxbits, align 4, !dbg !7814
  %51 = and i32 %50, 96, !dbg !7814
  %52 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %48, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.236, i64 0, i64 0), i8* noundef %49, i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0), i32 noundef %51), !dbg !7814
  br label %53, !dbg !7814

53:                                               ; preds = %47, %44
  %54 = load i32, i32* @exit_code, align 4, !dbg !7819
  %55 = icmp eq i32 %54, 0, !dbg !7819
  br i1 %55, label %56, label %57, !dbg !7818

56:                                               ; preds = %53
  store i32 2, i32* @exit_code, align 4, !dbg !7819
  br label %57, !dbg !7819

57:                                               ; preds = %56, %53
  br label %58, !dbg !7821

58:                                               ; preds = %57, %37
  %59 = load i32, i32* @maxbits, align 4, !dbg !7822
  %60 = and i32 %59, 31, !dbg !7822
  store i32 %60, i32* @maxbits, align 4, !dbg !7822
  %61 = load i32, i32* @maxbits, align 4, !dbg !7823
  %62 = zext i32 %61 to i64, !dbg !7823
  %63 = shl i64 1, %62, !dbg !7823
  store i64 %63, i64* %17, align 8, !dbg !7824
  %64 = load i32, i32* @maxbits, align 4, !dbg !7825
  %65 = icmp sgt i32 %64, 16, !dbg !7827
  br i1 %65, label %66, label %71, !dbg !7828

66:                                               ; preds = %58
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7829
  %68 = load i8*, i8** @progname, align 8, !dbg !7831
  %69 = load i32, i32* @maxbits, align 4, !dbg !7832
  %70 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %67, i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1.237, i64 0, i64 0), i8* noundef %68, i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i64 0, i64 0), i32 noundef %69, i32 noundef 16), !dbg !7833
  store i32 1, i32* @exit_code, align 4, !dbg !7834
  store i32 1, i32* %3, align 4, !dbg !7835
  br label %431, !dbg !7835

71:                                               ; preds = %58
  %72 = load i32, i32* @insize, align 4, !dbg !7836
  store i32 %72, i32* %19, align 4, !dbg !7837
  store i32 9, i32* %18, align 4, !dbg !7838
  store i64 511, i64* %16, align 8, !dbg !7839
  %73 = load i32, i32* %18, align 4, !dbg !7840
  %74 = shl i32 1, %73, !dbg !7841
  %75 = sub nsw i32 %74, 1, !dbg !7842
  store i32 %75, i32* %14, align 4, !dbg !7843
  store i64 -1, i64* %9, align 8, !dbg !7844
  store i32 0, i32* %8, align 4, !dbg !7845
  store i32 0, i32* %13, align 4, !dbg !7846
  %76 = load i32, i32* @inptr, align 4, !dbg !7847
  %77 = shl i32 %76, 3, !dbg !7848
  %78 = zext i32 %77 to i64, !dbg !7847
  store i64 %78, i64* %12, align 8, !dbg !7849
  %79 = load i32, i32* @block_mode, align 4, !dbg !7850
  %80 = icmp ne i32 %79, 0, !dbg !7851
  %81 = zext i1 %80 to i64, !dbg !7851
  %82 = select i1 %80, i32 257, i32 256, !dbg !7851
  %83 = sext i32 %82 to i64, !dbg !7852
  store i64 %83, i64* %15, align 8, !dbg !7853
  call void @llvm.memset.p0i8.i64(i8* align 2 bitcast ([65536 x i16]* @prev to i8*), i8 0, i64 256, i1 false), !dbg !7854
  store i64 255, i64* %7, align 8, !dbg !7855
  br label %84, !dbg !7857

84:                                               ; preds = %92, %71
  %85 = load i64, i64* %7, align 8, !dbg !7858
  %86 = icmp sge i64 %85, 0, !dbg !7860
  br i1 %86, label %87, label %95, !dbg !7861

87:                                               ; preds = %84
  %88 = load i64, i64* %7, align 8, !dbg !7862
  %89 = trunc i64 %88 to i8, !dbg !7864
  %90 = load i64, i64* %7, align 8, !dbg !7865
  %91 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i64 0, i64 %90, !dbg !7865
  store i8 %89, i8* %91, align 1, !dbg !7866
  br label %92, !dbg !7867

92:                                               ; preds = %87
  %93 = load i64, i64* %7, align 8, !dbg !7868
  %94 = add nsw i64 %93, -1, !dbg !7868
  store i64 %94, i64* %7, align 8, !dbg !7868
  br label %84, !dbg !7869, !llvm.loop !7870

95:                                               ; preds = %84
  br label %96, !dbg !7872

96:                                               ; preds = %414, %95
  call void @llvm.dbg.declare(metadata i32* %20, metadata !7873, metadata !DIExpression()), !dbg !7875
  call void @llvm.dbg.declare(metadata i32* %21, metadata !7876, metadata !DIExpression()), !dbg !7877
  call void @llvm.dbg.declare(metadata i32* %22, metadata !7878, metadata !DIExpression()), !dbg !7879
  br label %97, !dbg !7880

97:                                               ; preds = %255, %201, %96
  call void @llvm.dbg.label(metadata !7881), !dbg !7882
  %98 = load i32, i32* @insize, align 4, !dbg !7883
  %99 = load i64, i64* %12, align 8, !dbg !7884
  %100 = ashr i64 %99, 3, !dbg !7885
  %101 = trunc i64 %100 to i32, !dbg !7886
  store i32 %101, i32* %22, align 4, !dbg !7887
  %102 = sub i32 %98, %101, !dbg !7888
  store i32 %102, i32* %21, align 4, !dbg !7889
  store i32 0, i32* %20, align 4, !dbg !7890
  br label %103, !dbg !7892

103:                                              ; preds = %117, %97
  %104 = load i32, i32* %20, align 4, !dbg !7893
  %105 = load i32, i32* %21, align 4, !dbg !7895
  %106 = icmp slt i32 %104, %105, !dbg !7896
  br i1 %106, label %107, label %120, !dbg !7897

107:                                              ; preds = %103
  %108 = load i32, i32* %20, align 4, !dbg !7898
  %109 = load i32, i32* %22, align 4, !dbg !7900
  %110 = add nsw i32 %108, %109, !dbg !7901
  %111 = sext i32 %110 to i64, !dbg !7902
  %112 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i64 0, i64 %111, !dbg !7902
  %113 = load i8, i8* %112, align 1, !dbg !7902
  %114 = load i32, i32* %20, align 4, !dbg !7903
  %115 = sext i32 %114 to i64, !dbg !7904
  %116 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i64 0, i64 %115, !dbg !7904
  store i8 %113, i8* %116, align 1, !dbg !7905
  br label %117, !dbg !7906

117:                                              ; preds = %107
  %118 = load i32, i32* %20, align 4, !dbg !7907
  %119 = add nsw i32 %118, 1, !dbg !7907
  store i32 %119, i32* %20, align 4, !dbg !7907
  br label %103, !dbg !7908, !llvm.loop !7909

120:                                              ; preds = %103
  %121 = load i32, i32* %21, align 4, !dbg !7911
  store i32 %121, i32* @insize, align 4, !dbg !7912
  store i64 0, i64* %12, align 8, !dbg !7913
  %122 = load i32, i32* @insize, align 4, !dbg !7914
  %123 = icmp ult i32 %122, 64, !dbg !7916
  br i1 %123, label %124, label %141, !dbg !7917

124:                                              ; preds = %120
  %125 = load i32, i32* %4, align 4, !dbg !7918
  %126 = load i32, i32* @insize, align 4, !dbg !7921
  %127 = zext i32 %126 to i64, !dbg !7922
  %128 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i64 0, i64 0), i64 %127, !dbg !7922
  %129 = call i64 @read(i32 noundef %125, i8* noundef %128, i64 noundef 32768), !dbg !7923
  %130 = trunc i64 %129 to i32, !dbg !7923
  store i32 %130, i32* %19, align 4, !dbg !7924
  %131 = icmp eq i32 %130, -1, !dbg !7925
  br i1 %131, label %132, label %133, !dbg !7926

132:                                              ; preds = %124
  call void @read_error(), !dbg !7927
  br label %133, !dbg !7929

133:                                              ; preds = %132, %124
  %134 = load i32, i32* %19, align 4, !dbg !7930
  %135 = load i32, i32* @insize, align 4, !dbg !7931
  %136 = add i32 %135, %134, !dbg !7931
  store i32 %136, i32* @insize, align 4, !dbg !7931
  %137 = load i32, i32* %19, align 4, !dbg !7932
  %138 = sext i32 %137 to i64, !dbg !7933
  %139 = load i64, i64* @bytes_in, align 8, !dbg !7934
  %140 = add i64 %139, %138, !dbg !7934
  store i64 %140, i64* @bytes_in, align 8, !dbg !7934
  br label %141, !dbg !7935

141:                                              ; preds = %133, %120
  %142 = load i32, i32* %19, align 4, !dbg !7936
  %143 = icmp ne i32 %142, 0, !dbg !7937
  br i1 %143, label %144, label %153, !dbg !7938

144:                                              ; preds = %141
  %145 = load i32, i32* @insize, align 4, !dbg !7939
  %146 = zext i32 %145 to i64, !dbg !7940
  %147 = load i32, i32* @insize, align 4, !dbg !7941
  %148 = load i32, i32* %18, align 4, !dbg !7942
  %149 = urem i32 %147, %148, !dbg !7943
  %150 = zext i32 %149 to i64, !dbg !7941
  %151 = sub nsw i64 %146, %150, !dbg !7944
  %152 = shl i64 %151, 3, !dbg !7945
  br label %161, !dbg !7938

153:                                              ; preds = %141
  %154 = load i32, i32* @insize, align 4, !dbg !7946
  %155 = zext i32 %154 to i64, !dbg !7947
  %156 = shl i64 %155, 3, !dbg !7948
  %157 = load i32, i32* %18, align 4, !dbg !7949
  %158 = sub nsw i32 %157, 1, !dbg !7950
  %159 = sext i32 %158 to i64, !dbg !7951
  %160 = sub nsw i64 %156, %159, !dbg !7952
  br label %161, !dbg !7938

161:                                              ; preds = %153, %144
  %162 = phi i64 [ %152, %144 ], [ %160, %153 ], !dbg !7938
  store i64 %162, i64* %11, align 8, !dbg !7953
  br label %163, !dbg !7954

163:                                              ; preds = %411, %241, %161
  %164 = load i64, i64* %11, align 8, !dbg !7955
  %165 = load i64, i64* %12, align 8, !dbg !7956
  %166 = icmp sgt i64 %164, %165, !dbg !7957
  br i1 %166, label %167, label %413, !dbg !7954

167:                                              ; preds = %163
  %168 = load i64, i64* %15, align 8, !dbg !7958
  %169 = load i64, i64* %16, align 8, !dbg !7961
  %170 = icmp sgt i64 %168, %169, !dbg !7962
  br i1 %170, label %171, label %205, !dbg !7963

171:                                              ; preds = %167
  %172 = load i64, i64* %12, align 8, !dbg !7964
  %173 = sub nsw i64 %172, 1, !dbg !7966
  %174 = load i32, i32* %18, align 4, !dbg !7967
  %175 = shl i32 %174, 3, !dbg !7968
  %176 = sext i32 %175 to i64, !dbg !7969
  %177 = load i64, i64* %12, align 8, !dbg !7970
  %178 = sub nsw i64 %177, 1, !dbg !7971
  %179 = load i32, i32* %18, align 4, !dbg !7972
  %180 = shl i32 %179, 3, !dbg !7973
  %181 = sext i32 %180 to i64, !dbg !7974
  %182 = add nsw i64 %178, %181, !dbg !7975
  %183 = load i32, i32* %18, align 4, !dbg !7976
  %184 = shl i32 %183, 3, !dbg !7977
  %185 = sext i32 %184 to i64, !dbg !7978
  %186 = srem i64 %182, %185, !dbg !7979
  %187 = sub nsw i64 %176, %186, !dbg !7980
  %188 = add nsw i64 %173, %187, !dbg !7981
  store i64 %188, i64* %12, align 8, !dbg !7982
  %189 = load i32, i32* %18, align 4, !dbg !7983
  %190 = add nsw i32 %189, 1, !dbg !7983
  store i32 %190, i32* %18, align 4, !dbg !7983
  %191 = load i32, i32* %18, align 4, !dbg !7984
  %192 = load i32, i32* @maxbits, align 4, !dbg !7986
  %193 = icmp eq i32 %191, %192, !dbg !7987
  br i1 %193, label %194, label %196, !dbg !7988

194:                                              ; preds = %171
  %195 = load i64, i64* %17, align 8, !dbg !7989
  store i64 %195, i64* %16, align 8, !dbg !7991
  br label %201, !dbg !7992

196:                                              ; preds = %171
  %197 = load i32, i32* %18, align 4, !dbg !7993
  %198 = zext i32 %197 to i64, !dbg !7993
  %199 = shl i64 1, %198, !dbg !7993
  %200 = sub nsw i64 %199, 1, !dbg !7995
  store i64 %200, i64* %16, align 8, !dbg !7996
  br label %201

201:                                              ; preds = %196, %194
  %202 = load i32, i32* %18, align 4, !dbg !7997
  %203 = shl i32 1, %202, !dbg !7998
  %204 = sub nsw i32 %203, 1, !dbg !7999
  store i32 %204, i32* %14, align 4, !dbg !8000
  br label %97, !dbg !8001

205:                                              ; preds = %167
  call void @llvm.dbg.declare(metadata i8** %23, metadata !8002, metadata !DIExpression()), !dbg !8004
  %206 = load i64, i64* %12, align 8, !dbg !8004
  %207 = ashr i64 %206, 3, !dbg !8004
  %208 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i64 0, i64 %207, !dbg !8004
  store i8* %208, i8** %23, align 8, !dbg !8004
  %209 = load i8*, i8** %23, align 8, !dbg !8004
  %210 = getelementptr inbounds i8, i8* %209, i64 0, !dbg !8004
  %211 = load i8, i8* %210, align 1, !dbg !8004
  %212 = zext i8 %211 to i64, !dbg !8004
  %213 = load i8*, i8** %23, align 8, !dbg !8004
  %214 = getelementptr inbounds i8, i8* %213, i64 1, !dbg !8004
  %215 = load i8, i8* %214, align 1, !dbg !8004
  %216 = zext i8 %215 to i64, !dbg !8004
  %217 = shl i64 %216, 8, !dbg !8004
  %218 = or i64 %212, %217, !dbg !8004
  %219 = load i8*, i8** %23, align 8, !dbg !8004
  %220 = getelementptr inbounds i8, i8* %219, i64 2, !dbg !8004
  %221 = load i8, i8* %220, align 1, !dbg !8004
  %222 = zext i8 %221 to i64, !dbg !8004
  %223 = shl i64 %222, 16, !dbg !8004
  %224 = or i64 %218, %223, !dbg !8004
  %225 = load i64, i64* %12, align 8, !dbg !8004
  %226 = and i64 %225, 7, !dbg !8004
  %227 = ashr i64 %224, %226, !dbg !8004
  %228 = load i32, i32* %14, align 4, !dbg !8004
  %229 = zext i32 %228 to i64, !dbg !8004
  %230 = and i64 %227, %229, !dbg !8004
  store i64 %230, i64* %7, align 8, !dbg !8004
  %231 = load i32, i32* %18, align 4, !dbg !8004
  %232 = sext i32 %231 to i64, !dbg !8004
  %233 = load i64, i64* %12, align 8, !dbg !8004
  %234 = add nsw i64 %233, %232, !dbg !8004
  store i64 %234, i64* %12, align 8, !dbg !8004
  %235 = load i64, i64* %9, align 8, !dbg !8005
  %236 = icmp eq i64 %235, -1, !dbg !8007
  br i1 %236, label %237, label %249, !dbg !8008

237:                                              ; preds = %205
  %238 = load i64, i64* %7, align 8, !dbg !8009
  %239 = icmp sge i64 %238, 256, !dbg !8012
  br i1 %239, label %240, label %241, !dbg !8013

240:                                              ; preds = %237
  call void @error(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.238, i64 0, i64 0)), !dbg !8014
  br label %241, !dbg !8014

241:                                              ; preds = %240, %237
  %242 = load i64, i64* %7, align 8, !dbg !8015
  store i64 %242, i64* %9, align 8, !dbg !8016
  %243 = trunc i64 %242 to i32, !dbg !8017
  store i32 %243, i32* %8, align 4, !dbg !8018
  %244 = trunc i32 %243 to i8, !dbg !8019
  %245 = load i32, i32* %13, align 4, !dbg !8020
  %246 = add nsw i32 %245, 1, !dbg !8020
  store i32 %246, i32* %13, align 4, !dbg !8020
  %247 = sext i32 %245 to i64, !dbg !8021
  %248 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %247, !dbg !8021
  store i8 %244, i8* %248, align 1, !dbg !8022
  br label %163, !dbg !8023, !llvm.loop !8024

249:                                              ; preds = %205
  %250 = load i64, i64* %7, align 8, !dbg !8026
  %251 = icmp eq i64 %250, 256, !dbg !8028
  br i1 %251, label %252, label %276, !dbg !8029

252:                                              ; preds = %249
  %253 = load i32, i32* @block_mode, align 4, !dbg !8030
  %254 = icmp ne i32 %253, 0, !dbg !8030
  br i1 %254, label %255, label %276, !dbg !8031

255:                                              ; preds = %252
  call void @llvm.memset.p0i8.i64(i8* align 2 bitcast ([65536 x i16]* @prev to i8*), i8 0, i64 256, i1 false), !dbg !8032
  store i64 256, i64* %15, align 8, !dbg !8034
  %256 = load i64, i64* %12, align 8, !dbg !8035
  %257 = sub nsw i64 %256, 1, !dbg !8036
  %258 = load i32, i32* %18, align 4, !dbg !8037
  %259 = shl i32 %258, 3, !dbg !8038
  %260 = sext i32 %259 to i64, !dbg !8039
  %261 = load i64, i64* %12, align 8, !dbg !8040
  %262 = sub nsw i64 %261, 1, !dbg !8041
  %263 = load i32, i32* %18, align 4, !dbg !8042
  %264 = shl i32 %263, 3, !dbg !8043
  %265 = sext i32 %264 to i64, !dbg !8044
  %266 = add nsw i64 %262, %265, !dbg !8045
  %267 = load i32, i32* %18, align 4, !dbg !8046
  %268 = shl i32 %267, 3, !dbg !8047
  %269 = sext i32 %268 to i64, !dbg !8048
  %270 = srem i64 %266, %269, !dbg !8049
  %271 = sub nsw i64 %260, %270, !dbg !8050
  %272 = add nsw i64 %257, %271, !dbg !8051
  store i64 %272, i64* %12, align 8, !dbg !8052
  store i32 9, i32* %18, align 4, !dbg !8053
  store i64 511, i64* %16, align 8, !dbg !8054
  %273 = load i32, i32* %18, align 4, !dbg !8055
  %274 = shl i32 1, %273, !dbg !8056
  %275 = sub nsw i32 %274, 1, !dbg !8057
  store i32 %275, i32* %14, align 4, !dbg !8058
  br label %97, !dbg !8059

276:                                              ; preds = %252, %249
  %277 = load i64, i64* %7, align 8, !dbg !8060
  store i64 %277, i64* %10, align 8, !dbg !8061
  store i8* bitcast (i16* getelementptr inbounds ([32768 x i16], [32768 x i16]* @d_buf, i64 0, i64 32767) to i8*), i8** %6, align 8, !dbg !8062
  %278 = load i64, i64* %7, align 8, !dbg !8063
  %279 = load i64, i64* %15, align 8, !dbg !8065
  %280 = icmp sge i64 %278, %279, !dbg !8066
  br i1 %280, label %281, label %309, !dbg !8067

281:                                              ; preds = %276
  %282 = load i64, i64* %7, align 8, !dbg !8068
  %283 = load i64, i64* %15, align 8, !dbg !8071
  %284 = icmp sgt i64 %282, %283, !dbg !8072
  br i1 %284, label %285, label %303, !dbg !8073

285:                                              ; preds = %281
  %286 = load i32, i32* @test, align 4, !dbg !8074
  %287 = icmp ne i32 %286, 0, !dbg !8074
  br i1 %287, label %298, label %288, !dbg !8077

288:                                              ; preds = %285
  %289 = load i32, i32* %13, align 4, !dbg !8078
  %290 = icmp sgt i32 %289, 0, !dbg !8079
  br i1 %290, label %291, label %298, !dbg !8080

291:                                              ; preds = %288
  %292 = load i32, i32* %5, align 4, !dbg !8081
  %293 = load i32, i32* %13, align 4, !dbg !8083
  call void @write_buf(i32 noundef %292, i8* noundef getelementptr inbounds ([18432 x i8], [18432 x i8]* @outbuf, i64 0, i64 0), i32 noundef %293), !dbg !8084
  %294 = load i32, i32* %13, align 4, !dbg !8085
  %295 = sext i32 %294 to i64, !dbg !8086
  %296 = load i64, i64* @bytes_out, align 8, !dbg !8087
  %297 = add i64 %296, %295, !dbg !8087
  store i64 %297, i64* @bytes_out, align 8, !dbg !8087
  br label %298, !dbg !8088

298:                                              ; preds = %291, %288, %285
  %299 = load i32, i32* @to_stdout, align 4, !dbg !8089
  %300 = icmp ne i32 %299, 0, !dbg !8089
  %301 = zext i1 %300 to i64, !dbg !8089
  %302 = select i1 %300, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.238, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.3.239, i64 0, i64 0), !dbg !8089
  call void @error(i8* noundef %302), !dbg !8090
  br label %303, !dbg !8091

303:                                              ; preds = %298, %281
  %304 = load i32, i32* %8, align 4, !dbg !8092
  %305 = trunc i32 %304 to i8, !dbg !8093
  %306 = load i8*, i8** %6, align 8, !dbg !8094
  %307 = getelementptr inbounds i8, i8* %306, i32 -1, !dbg !8094
  store i8* %307, i8** %6, align 8, !dbg !8094
  store i8 %305, i8* %307, align 1, !dbg !8095
  %308 = load i64, i64* %9, align 8, !dbg !8096
  store i64 %308, i64* %7, align 8, !dbg !8097
  br label %309, !dbg !8098

309:                                              ; preds = %303, %276
  br label %310, !dbg !8099

310:                                              ; preds = %313, %309
  %311 = load i64, i64* %7, align 8, !dbg !8100
  %312 = icmp uge i64 %311, 256, !dbg !8101
  br i1 %312, label %313, label %323, !dbg !8099

313:                                              ; preds = %310
  %314 = load i64, i64* %7, align 8, !dbg !8102
  %315 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i64 0, i64 %314, !dbg !8102
  %316 = load i8, i8* %315, align 1, !dbg !8102
  %317 = load i8*, i8** %6, align 8, !dbg !8104
  %318 = getelementptr inbounds i8, i8* %317, i32 -1, !dbg !8104
  store i8* %318, i8** %6, align 8, !dbg !8104
  store i8 %316, i8* %318, align 1, !dbg !8105
  %319 = load i64, i64* %7, align 8, !dbg !8106
  %320 = getelementptr inbounds [0 x i16], [0 x i16]* bitcast ([65536 x i16]* @prev to [0 x i16]*), i64 0, i64 %319, !dbg !8106
  %321 = load i16, i16* %320, align 2, !dbg !8106
  %322 = zext i16 %321 to i64, !dbg !8106
  store i64 %322, i64* %7, align 8, !dbg !8107
  br label %310, !dbg !8099, !llvm.loop !8108

323:                                              ; preds = %310
  %324 = load i64, i64* %7, align 8, !dbg !8110
  %325 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i64 0, i64 %324, !dbg !8110
  %326 = load i8, i8* %325, align 1, !dbg !8110
  %327 = zext i8 %326 to i32, !dbg !8110
  store i32 %327, i32* %8, align 4, !dbg !8111
  %328 = trunc i32 %327 to i8, !dbg !8112
  %329 = load i8*, i8** %6, align 8, !dbg !8113
  %330 = getelementptr inbounds i8, i8* %329, i32 -1, !dbg !8113
  store i8* %330, i8** %6, align 8, !dbg !8113
  store i8 %328, i8* %330, align 1, !dbg !8114
  call void @llvm.dbg.declare(metadata i32* %24, metadata !8115, metadata !DIExpression()), !dbg !8117
  %331 = load i32, i32* %13, align 4, !dbg !8118
  %332 = load i8*, i8** %6, align 8, !dbg !8120
  %333 = ptrtoint i8* %332 to i64, !dbg !8121
  %334 = sub i64 ptrtoint (i16* getelementptr inbounds ([32768 x i16], [32768 x i16]* @d_buf, i64 0, i64 32767) to i64), %333, !dbg !8121
  %335 = trunc i64 %334 to i32, !dbg !8122
  store i32 %335, i32* %24, align 4, !dbg !8123
  %336 = add nsw i32 %331, %335, !dbg !8124
  %337 = icmp sge i32 %336, 16384, !dbg !8125
  br i1 %337, label %338, label %386, !dbg !8126

338:                                              ; preds = %323
  br label %339, !dbg !8127

339:                                              ; preds = %379, %338
  %340 = load i32, i32* %24, align 4, !dbg !8129
  %341 = load i32, i32* %13, align 4, !dbg !8132
  %342 = sub nsw i32 16384, %341, !dbg !8133
  %343 = icmp sgt i32 %340, %342, !dbg !8134
  br i1 %343, label %344, label %347, !dbg !8135

344:                                              ; preds = %339
  %345 = load i32, i32* %13, align 4, !dbg !8136
  %346 = sub nsw i32 16384, %345, !dbg !8137
  store i32 %346, i32* %24, align 4, !dbg !8138
  br label %347, !dbg !8139

347:                                              ; preds = %344, %339
  %348 = load i32, i32* %24, align 4, !dbg !8140
  %349 = icmp sgt i32 %348, 0, !dbg !8142
  br i1 %349, label %350, label %360, !dbg !8143

350:                                              ; preds = %347
  %351 = load i32, i32* %13, align 4, !dbg !8144
  %352 = sext i32 %351 to i64, !dbg !8146
  %353 = getelementptr inbounds i8, i8* getelementptr inbounds ([18432 x i8], [18432 x i8]* @outbuf, i64 0, i64 0), i64 %352, !dbg !8146
  %354 = load i8*, i8** %6, align 8, !dbg !8147
  %355 = load i32, i32* %24, align 4, !dbg !8148
  %356 = sext i32 %355 to i64, !dbg !8148
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %353, i8* align 1 %354, i64 %356, i1 false), !dbg !8149
  %357 = load i32, i32* %24, align 4, !dbg !8150
  %358 = load i32, i32* %13, align 4, !dbg !8151
  %359 = add nsw i32 %358, %357, !dbg !8151
  store i32 %359, i32* %13, align 4, !dbg !8151
  br label %360, !dbg !8152

360:                                              ; preds = %350, %347
  %361 = load i32, i32* %13, align 4, !dbg !8153
  %362 = icmp sge i32 %361, 16384, !dbg !8155
  br i1 %362, label %363, label %374, !dbg !8156

363:                                              ; preds = %360
  %364 = load i32, i32* @test, align 4, !dbg !8157
  %365 = icmp ne i32 %364, 0, !dbg !8157
  br i1 %365, label %373, label %366, !dbg !8160

366:                                              ; preds = %363
  %367 = load i32, i32* %5, align 4, !dbg !8161
  %368 = load i32, i32* %13, align 4, !dbg !8163
  call void @write_buf(i32 noundef %367, i8* noundef getelementptr inbounds ([18432 x i8], [18432 x i8]* @outbuf, i64 0, i64 0), i32 noundef %368), !dbg !8164
  %369 = load i32, i32* %13, align 4, !dbg !8165
  %370 = sext i32 %369 to i64, !dbg !8166
  %371 = load i64, i64* @bytes_out, align 8, !dbg !8167
  %372 = add i64 %371, %370, !dbg !8167
  store i64 %372, i64* @bytes_out, align 8, !dbg !8167
  br label %373, !dbg !8168

373:                                              ; preds = %366, %363
  store i32 0, i32* %13, align 4, !dbg !8169
  br label %374, !dbg !8170

374:                                              ; preds = %373, %360
  %375 = load i32, i32* %24, align 4, !dbg !8171
  %376 = load i8*, i8** %6, align 8, !dbg !8172
  %377 = sext i32 %375 to i64, !dbg !8172
  %378 = getelementptr inbounds i8, i8* %376, i64 %377, !dbg !8172
  store i8* %378, i8** %6, align 8, !dbg !8172
  br label %379, !dbg !8173

379:                                              ; preds = %374
  %380 = load i8*, i8** %6, align 8, !dbg !8174
  %381 = ptrtoint i8* %380 to i64, !dbg !8175
  %382 = sub i64 ptrtoint (i16* getelementptr inbounds ([32768 x i16], [32768 x i16]* @d_buf, i64 0, i64 32767) to i64), %381, !dbg !8175
  %383 = trunc i64 %382 to i32, !dbg !8176
  store i32 %383, i32* %24, align 4, !dbg !8177
  %384 = icmp sgt i32 %383, 0, !dbg !8178
  br i1 %384, label %339, label %385, !dbg !8173, !llvm.loop !8179

385:                                              ; preds = %379
  br label %396, !dbg !8181

386:                                              ; preds = %323
  %387 = load i32, i32* %13, align 4, !dbg !8182
  %388 = sext i32 %387 to i64, !dbg !8184
  %389 = getelementptr inbounds i8, i8* getelementptr inbounds ([18432 x i8], [18432 x i8]* @outbuf, i64 0, i64 0), i64 %388, !dbg !8184
  %390 = load i8*, i8** %6, align 8, !dbg !8185
  %391 = load i32, i32* %24, align 4, !dbg !8186
  %392 = sext i32 %391 to i64, !dbg !8186
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %389, i8* align 1 %390, i64 %392, i1 false), !dbg !8187
  %393 = load i32, i32* %24, align 4, !dbg !8188
  %394 = load i32, i32* %13, align 4, !dbg !8189
  %395 = add nsw i32 %394, %393, !dbg !8189
  store i32 %395, i32* %13, align 4, !dbg !8189
  br label %396

396:                                              ; preds = %386, %385
  %397 = load i64, i64* %15, align 8, !dbg !8190
  store i64 %397, i64* %7, align 8, !dbg !8192
  %398 = load i64, i64* %17, align 8, !dbg !8193
  %399 = icmp slt i64 %397, %398, !dbg !8194
  br i1 %399, label %400, label %411, !dbg !8195

400:                                              ; preds = %396
  %401 = load i64, i64* %9, align 8, !dbg !8196
  %402 = trunc i64 %401 to i16, !dbg !8198
  %403 = load i64, i64* %7, align 8, !dbg !8199
  %404 = getelementptr inbounds [0 x i16], [0 x i16]* bitcast ([65536 x i16]* @prev to [0 x i16]*), i64 0, i64 %403, !dbg !8199
  store i16 %402, i16* %404, align 2, !dbg !8200
  %405 = load i32, i32* %8, align 4, !dbg !8201
  %406 = trunc i32 %405 to i8, !dbg !8202
  %407 = load i64, i64* %7, align 8, !dbg !8203
  %408 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i64 0, i64 %407, !dbg !8203
  store i8 %406, i8* %408, align 1, !dbg !8204
  %409 = load i64, i64* %7, align 8, !dbg !8205
  %410 = add nsw i64 %409, 1, !dbg !8206
  store i64 %410, i64* %15, align 8, !dbg !8207
  br label %411, !dbg !8208

411:                                              ; preds = %400, %396
  %412 = load i64, i64* %10, align 8, !dbg !8209
  store i64 %412, i64* %9, align 8, !dbg !8210
  br label %163, !dbg !7954, !llvm.loop !8024

413:                                              ; preds = %163
  br label %414, !dbg !8211

414:                                              ; preds = %413
  %415 = load i32, i32* %19, align 4, !dbg !8212
  %416 = icmp ne i32 %415, 0, !dbg !8213
  br i1 %416, label %96, label %417, !dbg !8211, !llvm.loop !8214

417:                                              ; preds = %414
  %418 = load i32, i32* @test, align 4, !dbg !8216
  %419 = icmp ne i32 %418, 0, !dbg !8216
  br i1 %419, label %430, label %420, !dbg !8218

420:                                              ; preds = %417
  %421 = load i32, i32* %13, align 4, !dbg !8219
  %422 = icmp sgt i32 %421, 0, !dbg !8220
  br i1 %422, label %423, label %430, !dbg !8221

423:                                              ; preds = %420
  %424 = load i32, i32* %5, align 4, !dbg !8222
  %425 = load i32, i32* %13, align 4, !dbg !8224
  call void @write_buf(i32 noundef %424, i8* noundef getelementptr inbounds ([18432 x i8], [18432 x i8]* @outbuf, i64 0, i64 0), i32 noundef %425), !dbg !8225
  %426 = load i32, i32* %13, align 4, !dbg !8226
  %427 = sext i32 %426 to i64, !dbg !8227
  %428 = load i64, i64* @bytes_out, align 8, !dbg !8228
  %429 = add i64 %428, %427, !dbg !8228
  store i64 %429, i64* @bytes_out, align 8, !dbg !8228
  br label %430, !dbg !8229

430:                                              ; preds = %423, %420, %417
  store i32 0, i32* %3, align 4, !dbg !8230
  br label %431, !dbg !8230

431:                                              ; preds = %430, %66
  %432 = load i32, i32* %3, align 4, !dbg !8231
  ret i32 %432, !dbg !8231
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @unpack(i32 noundef %0, i32 noundef %1) #0 !dbg !8232 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8233, metadata !DIExpression()), !dbg !8234
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !8235, metadata !DIExpression()), !dbg !8236
  call void @llvm.dbg.declare(metadata i32* %5, metadata !8237, metadata !DIExpression()), !dbg !8238
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8239, metadata !DIExpression()), !dbg !8240
  call void @llvm.dbg.declare(metadata i32* %7, metadata !8241, metadata !DIExpression()), !dbg !8242
  call void @llvm.dbg.declare(metadata i32* %8, metadata !8243, metadata !DIExpression()), !dbg !8244
  %10 = load i32, i32* %3, align 4, !dbg !8245
  store i32 %10, i32* @ifd, align 4, !dbg !8246
  %11 = load i32, i32* %4, align 4, !dbg !8247
  store i32 %11, i32* @ofd, align 4, !dbg !8248
  call void @read_tree(), !dbg !8249
  call void @build_tree.242(), !dbg !8250
  store i32 0, i32* @valid, align 4, !dbg !8251
  store i64 0, i64* @bitbuf, align 8, !dbg !8251
  %12 = load i32, i32* @peek_bits, align 4, !dbg !8252
  %13 = shl i32 1, %12, !dbg !8253
  %14 = sub nsw i32 %13, 1, !dbg !8254
  store i32 %14, i32* %8, align 4, !dbg !8255
  %15 = load i32, i32* @max_len, align 4, !dbg !8256
  %16 = sext i32 %15 to i64, !dbg !8257
  %17 = getelementptr inbounds [26 x i32], [26 x i32]* @leaves, i64 0, i64 %16, !dbg !8257
  %18 = load i32, i32* %17, align 4, !dbg !8257
  %19 = sub nsw i32 %18, 1, !dbg !8258
  store i32 %19, i32* %6, align 4, !dbg !8259
  br label %20, !dbg !8260

20:                                               ; preds = %149, %2
  br label %21, !dbg !8261

21:                                               ; preds = %40, %20
  %22 = load i32, i32* @valid, align 4, !dbg !8261
  %23 = load i32, i32* @peek_bits, align 4, !dbg !8261
  %24 = icmp slt i32 %22, %23, !dbg !8261
  br i1 %24, label %25, label %46, !dbg !8261

25:                                               ; preds = %21
  %26 = load i64, i64* @bitbuf, align 8, !dbg !8261
  %27 = shl i64 %26, 8, !dbg !8261
  %28 = load i32, i32* @inptr, align 4, !dbg !8261
  %29 = load i32, i32* @insize, align 4, !dbg !8261
  %30 = icmp ult i32 %28, %29, !dbg !8261
  br i1 %30, label %31, label %38, !dbg !8261

31:                                               ; preds = %25
  %32 = load i32, i32* @inptr, align 4, !dbg !8261
  %33 = add i32 %32, 1, !dbg !8261
  store i32 %33, i32* @inptr, align 4, !dbg !8261
  %34 = zext i32 %32 to i64, !dbg !8261
  %35 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i64 0, i64 %34, !dbg !8261
  %36 = load i8, i8* %35, align 1, !dbg !8261
  %37 = zext i8 %36 to i32, !dbg !8261
  br label %40, !dbg !8261

38:                                               ; preds = %25
  %39 = call i32 @fill_inbuf(i32 noundef 0), !dbg !8261
  br label %40, !dbg !8261

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %37, %31 ], [ %39, %38 ], !dbg !8261
  %42 = sext i32 %41 to i64, !dbg !8261
  %43 = or i64 %27, %42, !dbg !8261
  store i64 %43, i64* @bitbuf, align 8, !dbg !8261
  %44 = load i32, i32* @valid, align 4, !dbg !8261
  %45 = add nsw i32 %44, 8, !dbg !8261
  store i32 %45, i32* @valid, align 4, !dbg !8261
  br label %21, !dbg !8261, !llvm.loop !8266

46:                                               ; preds = %21
  %47 = load i64, i64* @bitbuf, align 8, !dbg !8261
  %48 = load i32, i32* @valid, align 4, !dbg !8261
  %49 = load i32, i32* @peek_bits, align 4, !dbg !8261
  %50 = sub nsw i32 %48, %49, !dbg !8261
  %51 = zext i32 %50 to i64, !dbg !8261
  %52 = lshr i64 %47, %51, !dbg !8261
  %53 = load i32, i32* %8, align 4, !dbg !8261
  %54 = zext i32 %53 to i64, !dbg !8261
  %55 = and i64 %52, %54, !dbg !8261
  %56 = trunc i64 %55 to i32, !dbg !8261
  store i32 %56, i32* %7, align 4, !dbg !8261
  %57 = load i32, i32* %7, align 4, !dbg !8267
  %58 = zext i32 %57 to i64, !dbg !8268
  %59 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %58, !dbg !8268
  %60 = load i8, i8* %59, align 1, !dbg !8268
  %61 = zext i8 %60 to i32, !dbg !8268
  store i32 %61, i32* %5, align 4, !dbg !8269
  %62 = load i32, i32* %5, align 4, !dbg !8270
  %63 = icmp sgt i32 %62, 0, !dbg !8272
  br i1 %63, label %64, label %70, !dbg !8273

64:                                               ; preds = %46
  %65 = load i32, i32* @peek_bits, align 4, !dbg !8274
  %66 = load i32, i32* %5, align 4, !dbg !8276
  %67 = sub nsw i32 %65, %66, !dbg !8277
  %68 = load i32, i32* %7, align 4, !dbg !8278
  %69 = lshr i32 %68, %67, !dbg !8278
  store i32 %69, i32* %7, align 4, !dbg !8278
  br label %123, !dbg !8279

70:                                               ; preds = %46
  call void @llvm.dbg.declare(metadata i64* %9, metadata !8280, metadata !DIExpression()), !dbg !8282
  %71 = load i32, i32* %8, align 4, !dbg !8283
  %72 = zext i32 %71 to i64, !dbg !8283
  store i64 %72, i64* %9, align 8, !dbg !8282
  %73 = load i32, i32* @peek_bits, align 4, !dbg !8284
  store i32 %73, i32* %5, align 4, !dbg !8285
  br label %74, !dbg !8286

74:                                               ; preds = %115, %70
  %75 = load i32, i32* %5, align 4, !dbg !8287
  %76 = add nsw i32 %75, 1, !dbg !8287
  store i32 %76, i32* %5, align 4, !dbg !8287
  %77 = load i64, i64* %9, align 8, !dbg !8289
  %78 = shl i64 %77, 1, !dbg !8290
  %79 = add i64 %78, 1, !dbg !8291
  store i64 %79, i64* %9, align 8, !dbg !8292
  br label %80, !dbg !8293

80:                                               ; preds = %99, %74
  %81 = load i32, i32* @valid, align 4, !dbg !8293
  %82 = load i32, i32* %5, align 4, !dbg !8293
  %83 = icmp slt i32 %81, %82, !dbg !8293
  br i1 %83, label %84, label %105, !dbg !8293

84:                                               ; preds = %80
  %85 = load i64, i64* @bitbuf, align 8, !dbg !8293
  %86 = shl i64 %85, 8, !dbg !8293
  %87 = load i32, i32* @inptr, align 4, !dbg !8293
  %88 = load i32, i32* @insize, align 4, !dbg !8293
  %89 = icmp ult i32 %87, %88, !dbg !8293
  br i1 %89, label %90, label %97, !dbg !8293

90:                                               ; preds = %84
  %91 = load i32, i32* @inptr, align 4, !dbg !8293
  %92 = add i32 %91, 1, !dbg !8293
  store i32 %92, i32* @inptr, align 4, !dbg !8293
  %93 = zext i32 %91 to i64, !dbg !8293
  %94 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i64 0, i64 %93, !dbg !8293
  %95 = load i8, i8* %94, align 1, !dbg !8293
  %96 = zext i8 %95 to i32, !dbg !8293
  br label %99, !dbg !8293

97:                                               ; preds = %84
  %98 = call i32 @fill_inbuf(i32 noundef 0), !dbg !8293
  br label %99, !dbg !8293

99:                                               ; preds = %97, %90
  %100 = phi i32 [ %96, %90 ], [ %98, %97 ], !dbg !8293
  %101 = sext i32 %100 to i64, !dbg !8293
  %102 = or i64 %86, %101, !dbg !8293
  store i64 %102, i64* @bitbuf, align 8, !dbg !8293
  %103 = load i32, i32* @valid, align 4, !dbg !8293
  %104 = add nsw i32 %103, 8, !dbg !8293
  store i32 %104, i32* @valid, align 4, !dbg !8293
  br label %80, !dbg !8293, !llvm.loop !8295

105:                                              ; preds = %80
  %106 = load i64, i64* @bitbuf, align 8, !dbg !8293
  %107 = load i32, i32* @valid, align 4, !dbg !8293
  %108 = load i32, i32* %5, align 4, !dbg !8293
  %109 = sub nsw i32 %107, %108, !dbg !8293
  %110 = zext i32 %109 to i64, !dbg !8293
  %111 = lshr i64 %106, %110, !dbg !8293
  %112 = load i64, i64* %9, align 8, !dbg !8293
  %113 = and i64 %111, %112, !dbg !8293
  %114 = trunc i64 %113 to i32, !dbg !8293
  store i32 %114, i32* %7, align 4, !dbg !8293
  br label %115, !dbg !8296

115:                                              ; preds = %105
  %116 = load i32, i32* %7, align 4, !dbg !8297
  %117 = load i32, i32* %5, align 4, !dbg !8298
  %118 = sext i32 %117 to i64, !dbg !8299
  %119 = getelementptr inbounds [26 x i32], [26 x i32]* @parents, i64 0, i64 %118, !dbg !8299
  %120 = load i32, i32* %119, align 4, !dbg !8299
  %121 = icmp ult i32 %116, %120, !dbg !8300
  br i1 %121, label %74, label %122, !dbg !8296, !llvm.loop !8301

122:                                              ; preds = %115
  br label %123

123:                                              ; preds = %122, %64
  %124 = load i32, i32* %7, align 4, !dbg !8303
  %125 = load i32, i32* %6, align 4, !dbg !8305
  %126 = icmp eq i32 %124, %125, !dbg !8306
  br i1 %126, label %127, label %132, !dbg !8307

127:                                              ; preds = %123
  %128 = load i32, i32* %5, align 4, !dbg !8308
  %129 = load i32, i32* @max_len, align 4, !dbg !8309
  %130 = icmp eq i32 %128, %129, !dbg !8310
  br i1 %130, label %131, label %132, !dbg !8311

131:                                              ; preds = %127
  br label %153, !dbg !8312

132:                                              ; preds = %127, %123
  %133 = load i32, i32* %7, align 4, !dbg !8313
  %134 = load i32, i32* %5, align 4, !dbg !8313
  %135 = sext i32 %134 to i64, !dbg !8313
  %136 = getelementptr inbounds [26 x i32], [26 x i32]* @lit_base, i64 0, i64 %135, !dbg !8313
  %137 = load i32, i32* %136, align 4, !dbg !8313
  %138 = add i32 %133, %137, !dbg !8313
  %139 = zext i32 %138 to i64, !dbg !8313
  %140 = getelementptr inbounds [256 x i8], [256 x i8]* @literal, i64 0, i64 %139, !dbg !8313
  %141 = load i8, i8* %140, align 1, !dbg !8313
  %142 = load i32, i32* @outcnt, align 4, !dbg !8313
  %143 = add i32 %142, 1, !dbg !8313
  store i32 %143, i32* @outcnt, align 4, !dbg !8313
  %144 = zext i32 %142 to i64, !dbg !8313
  %145 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i64 0, i64 %144, !dbg !8313
  store i8 %141, i8* %145, align 1, !dbg !8313
  %146 = load i32, i32* @outcnt, align 4, !dbg !8315
  %147 = icmp eq i32 %146, 32768, !dbg !8315
  br i1 %147, label %148, label %149, !dbg !8313

148:                                              ; preds = %132
  call void @flush_window(), !dbg !8315
  br label %149, !dbg !8315

149:                                              ; preds = %148, %132
  %150 = load i32, i32* %5, align 4, !dbg !8317
  %151 = load i32, i32* @valid, align 4, !dbg !8317
  %152 = sub nsw i32 %151, %150, !dbg !8317
  store i32 %152, i32* @valid, align 4, !dbg !8317
  br label %20, !dbg !8318, !llvm.loop !8319

153:                                              ; preds = %131
  call void @flush_window(), !dbg !8322
  %154 = load i64, i64* @orig_len, align 8, !dbg !8323
  %155 = load i64, i64* @bytes_out, align 8, !dbg !8325
  %156 = icmp ne i64 %154, %155, !dbg !8326
  br i1 %156, label %157, label %158, !dbg !8327

157:                                              ; preds = %153
  call void @error(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.243, i64 0, i64 0)), !dbg !8328
  br label %158, !dbg !8330

158:                                              ; preds = %157, %153
  ret i32 0, !dbg !8331
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @read_tree() #0 !dbg !8332 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8333, metadata !DIExpression()), !dbg !8334
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8335, metadata !DIExpression()), !dbg !8336
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8337, metadata !DIExpression()), !dbg !8338
  store i64 0, i64* @orig_len, align 8, !dbg !8339
  store i32 1, i32* %3, align 4, !dbg !8340
  br label %4, !dbg !8342

4:                                                ; preds = %26, %0
  %5 = load i32, i32* %3, align 4, !dbg !8343
  %6 = icmp sle i32 %5, 4, !dbg !8345
  br i1 %6, label %7, label %29, !dbg !8346

7:                                                ; preds = %4
  %8 = load i64, i64* @orig_len, align 8, !dbg !8347
  %9 = shl i64 %8, 8, !dbg !8348
  %10 = load i32, i32* @inptr, align 4, !dbg !8349
  %11 = load i32, i32* @insize, align 4, !dbg !8349
  %12 = icmp ult i32 %10, %11, !dbg !8349
  br i1 %12, label %13, label %20, !dbg !8349

13:                                               ; preds = %7
  %14 = load i32, i32* @inptr, align 4, !dbg !8349
  %15 = add i32 %14, 1, !dbg !8349
  store i32 %15, i32* @inptr, align 4, !dbg !8349
  %16 = zext i32 %14 to i64, !dbg !8349
  %17 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i64 0, i64 %16, !dbg !8349
  %18 = load i8, i8* %17, align 1, !dbg !8349
  %19 = zext i8 %18 to i32, !dbg !8349
  br label %22, !dbg !8349

20:                                               ; preds = %7
  %21 = call i32 @fill_inbuf(i32 noundef 0), !dbg !8349
  br label %22, !dbg !8349

22:                                               ; preds = %20, %13
  %23 = phi i32 [ %19, %13 ], [ %21, %20 ], !dbg !8349
  %24 = sext i32 %23 to i64, !dbg !8350
  %25 = or i64 %9, %24, !dbg !8351
  store i64 %25, i64* @orig_len, align 8, !dbg !8352
  br label %26, !dbg !8353

26:                                               ; preds = %22
  %27 = load i32, i32* %3, align 4, !dbg !8354
  %28 = add nsw i32 %27, 1, !dbg !8354
  store i32 %28, i32* %3, align 4, !dbg !8354
  br label %4, !dbg !8355, !llvm.loop !8356

29:                                               ; preds = %4
  %30 = load i32, i32* @inptr, align 4, !dbg !8358
  %31 = load i32, i32* @insize, align 4, !dbg !8358
  %32 = icmp ult i32 %30, %31, !dbg !8358
  br i1 %32, label %33, label %40, !dbg !8358

33:                                               ; preds = %29
  %34 = load i32, i32* @inptr, align 4, !dbg !8358
  %35 = add i32 %34, 1, !dbg !8358
  store i32 %35, i32* @inptr, align 4, !dbg !8358
  %36 = zext i32 %34 to i64, !dbg !8358
  %37 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i64 0, i64 %36, !dbg !8358
  %38 = load i8, i8* %37, align 1, !dbg !8358
  %39 = zext i8 %38 to i32, !dbg !8358
  br label %42, !dbg !8358

40:                                               ; preds = %29
  %41 = call i32 @fill_inbuf(i32 noundef 0), !dbg !8358
  br label %42, !dbg !8358

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %39, %33 ], [ %41, %40 ], !dbg !8358
  store i32 %43, i32* @max_len, align 4, !dbg !8359
  %44 = load i32, i32* @max_len, align 4, !dbg !8360
  %45 = icmp sgt i32 %44, 25, !dbg !8362
  br i1 %45, label %46, label %47, !dbg !8363

46:                                               ; preds = %42
  call void @error(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.1.244, i64 0, i64 0)), !dbg !8364
  br label %47, !dbg !8366

47:                                               ; preds = %46, %42
  store i32 0, i32* %3, align 4, !dbg !8367
  store i32 1, i32* %1, align 4, !dbg !8368
  br label %48, !dbg !8370

48:                                               ; preds = %76, %47
  %49 = load i32, i32* %1, align 4, !dbg !8371
  %50 = load i32, i32* @max_len, align 4, !dbg !8373
  %51 = icmp sle i32 %49, %50, !dbg !8374
  br i1 %51, label %52, label %79, !dbg !8375

52:                                               ; preds = %48
  %53 = load i32, i32* @inptr, align 4, !dbg !8376
  %54 = load i32, i32* @insize, align 4, !dbg !8376
  %55 = icmp ult i32 %53, %54, !dbg !8376
  br i1 %55, label %56, label %63, !dbg !8376

56:                                               ; preds = %52
  %57 = load i32, i32* @inptr, align 4, !dbg !8376
  %58 = add i32 %57, 1, !dbg !8376
  store i32 %58, i32* @inptr, align 4, !dbg !8376
  %59 = zext i32 %57 to i64, !dbg !8376
  %60 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i64 0, i64 %59, !dbg !8376
  %61 = load i8, i8* %60, align 1, !dbg !8376
  %62 = zext i8 %61 to i32, !dbg !8376
  br label %65, !dbg !8376

63:                                               ; preds = %52
  %64 = call i32 @fill_inbuf(i32 noundef 0), !dbg !8376
  br label %65, !dbg !8376

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %62, %56 ], [ %64, %63 ], !dbg !8376
  %67 = load i32, i32* %1, align 4, !dbg !8378
  %68 = sext i32 %67 to i64, !dbg !8379
  %69 = getelementptr inbounds [26 x i32], [26 x i32]* @leaves, i64 0, i64 %68, !dbg !8379
  store i32 %66, i32* %69, align 4, !dbg !8380
  %70 = load i32, i32* %1, align 4, !dbg !8381
  %71 = sext i32 %70 to i64, !dbg !8382
  %72 = getelementptr inbounds [26 x i32], [26 x i32]* @leaves, i64 0, i64 %71, !dbg !8382
  %73 = load i32, i32* %72, align 4, !dbg !8382
  %74 = load i32, i32* %3, align 4, !dbg !8383
  %75 = add nsw i32 %74, %73, !dbg !8383
  store i32 %75, i32* %3, align 4, !dbg !8383
  br label %76, !dbg !8384

76:                                               ; preds = %65
  %77 = load i32, i32* %1, align 4, !dbg !8385
  %78 = add nsw i32 %77, 1, !dbg !8385
  store i32 %78, i32* %1, align 4, !dbg !8385
  br label %48, !dbg !8386, !llvm.loop !8387

79:                                               ; preds = %48
  %80 = load i32, i32* %3, align 4, !dbg !8389
  %81 = icmp sgt i32 %80, 256, !dbg !8391
  br i1 %81, label %82, label %83, !dbg !8392

82:                                               ; preds = %79
  call void @error(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2.245, i64 0, i64 0)), !dbg !8393
  br label %83, !dbg !8395

83:                                               ; preds = %82, %79
  %84 = load i32, i32* @max_len, align 4, !dbg !8396
  %85 = sext i32 %84 to i64, !dbg !8397
  %86 = getelementptr inbounds [26 x i32], [26 x i32]* @leaves, i64 0, i64 %85, !dbg !8397
  %87 = load i32, i32* %86, align 4, !dbg !8398
  %88 = add nsw i32 %87, 1, !dbg !8398
  store i32 %88, i32* %86, align 4, !dbg !8398
  store i32 0, i32* %2, align 4, !dbg !8399
  store i32 1, i32* %1, align 4, !dbg !8400
  br label %89, !dbg !8402

89:                                               ; preds = %129, %83
  %90 = load i32, i32* %1, align 4, !dbg !8403
  %91 = load i32, i32* @max_len, align 4, !dbg !8405
  %92 = icmp sle i32 %90, %91, !dbg !8406
  br i1 %92, label %93, label %132, !dbg !8407

93:                                               ; preds = %89
  %94 = load i32, i32* %2, align 4, !dbg !8408
  %95 = load i32, i32* %1, align 4, !dbg !8410
  %96 = sext i32 %95 to i64, !dbg !8411
  %97 = getelementptr inbounds [26 x i32], [26 x i32]* @lit_base, i64 0, i64 %96, !dbg !8411
  store i32 %94, i32* %97, align 4, !dbg !8412
  %98 = load i32, i32* %1, align 4, !dbg !8413
  %99 = sext i32 %98 to i64, !dbg !8415
  %100 = getelementptr inbounds [26 x i32], [26 x i32]* @leaves, i64 0, i64 %99, !dbg !8415
  %101 = load i32, i32* %100, align 4, !dbg !8415
  store i32 %101, i32* %3, align 4, !dbg !8416
  br label %102, !dbg !8417

102:                                              ; preds = %125, %93
  %103 = load i32, i32* %3, align 4, !dbg !8418
  %104 = icmp sgt i32 %103, 0, !dbg !8420
  br i1 %104, label %105, label %128, !dbg !8421

105:                                              ; preds = %102
  %106 = load i32, i32* @inptr, align 4, !dbg !8422
  %107 = load i32, i32* @insize, align 4, !dbg !8422
  %108 = icmp ult i32 %106, %107, !dbg !8422
  br i1 %108, label %109, label %116, !dbg !8422

109:                                              ; preds = %105
  %110 = load i32, i32* @inptr, align 4, !dbg !8422
  %111 = add i32 %110, 1, !dbg !8422
  store i32 %111, i32* @inptr, align 4, !dbg !8422
  %112 = zext i32 %110 to i64, !dbg !8422
  %113 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i64 0, i64 %112, !dbg !8422
  %114 = load i8, i8* %113, align 1, !dbg !8422
  %115 = zext i8 %114 to i32, !dbg !8422
  br label %118, !dbg !8422

116:                                              ; preds = %105
  %117 = call i32 @fill_inbuf(i32 noundef 0), !dbg !8422
  br label %118, !dbg !8422

118:                                              ; preds = %116, %109
  %119 = phi i32 [ %115, %109 ], [ %117, %116 ], !dbg !8422
  %120 = trunc i32 %119 to i8, !dbg !8424
  %121 = load i32, i32* %2, align 4, !dbg !8425
  %122 = add nsw i32 %121, 1, !dbg !8425
  store i32 %122, i32* %2, align 4, !dbg !8425
  %123 = sext i32 %121 to i64, !dbg !8426
  %124 = getelementptr inbounds [256 x i8], [256 x i8]* @literal, i64 0, i64 %123, !dbg !8426
  store i8 %120, i8* %124, align 1, !dbg !8427
  br label %125, !dbg !8428

125:                                              ; preds = %118
  %126 = load i32, i32* %3, align 4, !dbg !8429
  %127 = add nsw i32 %126, -1, !dbg !8429
  store i32 %127, i32* %3, align 4, !dbg !8429
  br label %102, !dbg !8430, !llvm.loop !8431

128:                                              ; preds = %102
  br label %129, !dbg !8433

129:                                              ; preds = %128
  %130 = load i32, i32* %1, align 4, !dbg !8434
  %131 = add nsw i32 %130, 1, !dbg !8434
  store i32 %131, i32* %1, align 4, !dbg !8434
  br label %89, !dbg !8435, !llvm.loop !8436

132:                                              ; preds = %89
  %133 = load i32, i32* @max_len, align 4, !dbg !8438
  %134 = sext i32 %133 to i64, !dbg !8439
  %135 = getelementptr inbounds [26 x i32], [26 x i32]* @leaves, i64 0, i64 %134, !dbg !8439
  %136 = load i32, i32* %135, align 4, !dbg !8440
  %137 = add nsw i32 %136, 1, !dbg !8440
  store i32 %137, i32* %135, align 4, !dbg !8440
  ret void, !dbg !8441
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @build_tree.242() #0 !dbg !8442 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8443, metadata !DIExpression()), !dbg !8444
  store i32 0, i32* %1, align 4, !dbg !8444
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8445, metadata !DIExpression()), !dbg !8446
  call void @llvm.dbg.declare(metadata i8** %3, metadata !8447, metadata !DIExpression()), !dbg !8448
  %5 = load i32, i32* @max_len, align 4, !dbg !8449
  store i32 %5, i32* %2, align 4, !dbg !8451
  br label %6, !dbg !8452

6:                                                ; preds = %28, %0
  %7 = load i32, i32* %2, align 4, !dbg !8453
  %8 = icmp sge i32 %7, 1, !dbg !8455
  br i1 %8, label %9, label %31, !dbg !8456

9:                                                ; preds = %6
  %10 = load i32, i32* %1, align 4, !dbg !8457
  %11 = ashr i32 %10, 1, !dbg !8457
  store i32 %11, i32* %1, align 4, !dbg !8457
  %12 = load i32, i32* %1, align 4, !dbg !8459
  %13 = load i32, i32* %2, align 4, !dbg !8460
  %14 = sext i32 %13 to i64, !dbg !8461
  %15 = getelementptr inbounds [26 x i32], [26 x i32]* @parents, i64 0, i64 %14, !dbg !8461
  store i32 %12, i32* %15, align 4, !dbg !8462
  %16 = load i32, i32* %1, align 4, !dbg !8463
  %17 = load i32, i32* %2, align 4, !dbg !8464
  %18 = sext i32 %17 to i64, !dbg !8465
  %19 = getelementptr inbounds [26 x i32], [26 x i32]* @lit_base, i64 0, i64 %18, !dbg !8465
  %20 = load i32, i32* %19, align 4, !dbg !8466
  %21 = sub nsw i32 %20, %16, !dbg !8466
  store i32 %21, i32* %19, align 4, !dbg !8466
  %22 = load i32, i32* %2, align 4, !dbg !8467
  %23 = sext i32 %22 to i64, !dbg !8468
  %24 = getelementptr inbounds [26 x i32], [26 x i32]* @leaves, i64 0, i64 %23, !dbg !8468
  %25 = load i32, i32* %24, align 4, !dbg !8468
  %26 = load i32, i32* %1, align 4, !dbg !8469
  %27 = add nsw i32 %26, %25, !dbg !8469
  store i32 %27, i32* %1, align 4, !dbg !8469
  br label %28, !dbg !8470

28:                                               ; preds = %9
  %29 = load i32, i32* %2, align 4, !dbg !8471
  %30 = add nsw i32 %29, -1, !dbg !8471
  store i32 %30, i32* %2, align 4, !dbg !8471
  br label %6, !dbg !8472, !llvm.loop !8473

31:                                               ; preds = %6
  %32 = load i32, i32* @max_len, align 4, !dbg !8475
  %33 = icmp sle i32 %32, 12, !dbg !8475
  br i1 %33, label %34, label %36, !dbg !8475

34:                                               ; preds = %31
  %35 = load i32, i32* @max_len, align 4, !dbg !8475
  br label %37, !dbg !8475

36:                                               ; preds = %31
  br label %37, !dbg !8475

37:                                               ; preds = %36, %34
  %38 = phi i32 [ %35, %34 ], [ 12, %36 ], !dbg !8475
  store i32 %38, i32* @peek_bits, align 4, !dbg !8476
  %39 = load i32, i32* @peek_bits, align 4, !dbg !8477
  %40 = shl i32 1, %39, !dbg !8478
  %41 = sext i32 %40 to i64, !dbg !8479
  %42 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %41, !dbg !8479
  store i8* %42, i8** %3, align 8, !dbg !8480
  store i32 1, i32* %2, align 4, !dbg !8481
  br label %43, !dbg !8483

43:                                               ; preds = %66, %37
  %44 = load i32, i32* %2, align 4, !dbg !8484
  %45 = load i32, i32* @peek_bits, align 4, !dbg !8486
  %46 = icmp sle i32 %44, %45, !dbg !8487
  br i1 %46, label %47, label %69, !dbg !8488

47:                                               ; preds = %43
  call void @llvm.dbg.declare(metadata i32* %4, metadata !8489, metadata !DIExpression()), !dbg !8491
  %48 = load i32, i32* %2, align 4, !dbg !8492
  %49 = sext i32 %48 to i64, !dbg !8493
  %50 = getelementptr inbounds [26 x i32], [26 x i32]* @leaves, i64 0, i64 %49, !dbg !8493
  %51 = load i32, i32* %50, align 4, !dbg !8493
  %52 = load i32, i32* @peek_bits, align 4, !dbg !8494
  %53 = load i32, i32* %2, align 4, !dbg !8495
  %54 = sub nsw i32 %52, %53, !dbg !8496
  %55 = shl i32 %51, %54, !dbg !8497
  store i32 %55, i32* %4, align 4, !dbg !8491
  br label %56, !dbg !8498

56:                                               ; preds = %60, %47
  %57 = load i32, i32* %4, align 4, !dbg !8499
  %58 = add nsw i32 %57, -1, !dbg !8499
  store i32 %58, i32* %4, align 4, !dbg !8499
  %59 = icmp ne i32 %57, 0, !dbg !8498
  br i1 %59, label %60, label %65, !dbg !8498

60:                                               ; preds = %56
  %61 = load i32, i32* %2, align 4, !dbg !8500
  %62 = trunc i32 %61 to i8, !dbg !8501
  %63 = load i8*, i8** %3, align 8, !dbg !8502
  %64 = getelementptr inbounds i8, i8* %63, i32 -1, !dbg !8502
  store i8* %64, i8** %3, align 8, !dbg !8502
  store i8 %62, i8* %64, align 1, !dbg !8503
  br label %56, !dbg !8498, !llvm.loop !8504

65:                                               ; preds = %56
  br label %66, !dbg !8505

66:                                               ; preds = %65
  %67 = load i32, i32* %2, align 4, !dbg !8506
  %68 = add nsw i32 %67, 1, !dbg !8506
  store i32 %68, i32* %2, align 4, !dbg !8506
  br label %43, !dbg !8507, !llvm.loop !8508

69:                                               ; preds = %43
  br label %70, !dbg !8510

70:                                               ; preds = %73, %69
  %71 = load i8*, i8** %3, align 8, !dbg !8511
  %72 = icmp ugt i8* %71, getelementptr inbounds ([18432 x i8], [18432 x i8]* @outbuf, i64 0, i64 0), !dbg !8512
  br i1 %72, label %73, label %76, !dbg !8510

73:                                               ; preds = %70
  %74 = load i8*, i8** %3, align 8, !dbg !8513
  %75 = getelementptr inbounds i8, i8* %74, i32 -1, !dbg !8513
  store i8* %75, i8** %3, align 8, !dbg !8513
  store i8 0, i8* %75, align 1, !dbg !8514
  br label %70, !dbg !8510, !llvm.loop !8515

76:                                               ; preds = %70
  ret void, !dbg !8517
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @unlzh(i32 noundef %0, i32 noundef %1) #0 !dbg !8518 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8519, metadata !DIExpression()), !dbg !8520
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !8521, metadata !DIExpression()), !dbg !8522
  call void @llvm.dbg.declare(metadata i32* %5, metadata !8523, metadata !DIExpression()), !dbg !8524
  %6 = load i32, i32* %3, align 4, !dbg !8525
  store i32 %6, i32* @ifd, align 4, !dbg !8526
  %7 = load i32, i32* %4, align 4, !dbg !8527
  store i32 %7, i32* @ofd, align 4, !dbg !8528
  call void @decode_start(), !dbg !8529
  br label %8, !dbg !8530

8:                                                ; preds = %22, %2
  %9 = load i32, i32* @done, align 4, !dbg !8531
  %10 = icmp ne i32 %9, 0, !dbg !8532
  %11 = xor i1 %10, true, !dbg !8532
  br i1 %11, label %12, label %23, !dbg !8530

12:                                               ; preds = %8
  %13 = call i32 @decode(i32 noundef 8192, i8* noundef getelementptr inbounds ([65536 x i8], [65536 x i8]* @window, i64 0, i64 0)), !dbg !8533
  store i32 %13, i32* %5, align 4, !dbg !8535
  %14 = load i32, i32* @test, align 4, !dbg !8536
  %15 = icmp ne i32 %14, 0, !dbg !8536
  br i1 %15, label %22, label %16, !dbg !8538

16:                                               ; preds = %12
  %17 = load i32, i32* %5, align 4, !dbg !8539
  %18 = icmp ugt i32 %17, 0, !dbg !8540
  br i1 %18, label %19, label %22, !dbg !8541

19:                                               ; preds = %16
  %20 = load i32, i32* %4, align 4, !dbg !8542
  %21 = load i32, i32* %5, align 4, !dbg !8544
  call void @write_buf(i32 noundef %20, i8* noundef getelementptr inbounds ([65536 x i8], [65536 x i8]* @window, i64 0, i64 0), i32 noundef %21), !dbg !8545
  br label %22, !dbg !8546

22:                                               ; preds = %19, %16, %12
  br label %8, !dbg !8530, !llvm.loop !8547

23:                                               ; preds = %8
  ret i32 0, !dbg !8549
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @decode_start() #0 !dbg !8550 {
  call void @huf_decode_start(), !dbg !8551
  store i32 0, i32* @j, align 4, !dbg !8552
  store i32 0, i32* @done, align 4, !dbg !8553
  ret void, !dbg !8554
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @decode(i32 noundef %0, i8* noundef %1) #0 !dbg !633 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !8555, metadata !DIExpression()), !dbg !8556
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !8557, metadata !DIExpression()), !dbg !8558
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8559, metadata !DIExpression()), !dbg !8560
  call void @llvm.dbg.declare(metadata i32* %7, metadata !8561, metadata !DIExpression()), !dbg !8562
  store i32 0, i32* %6, align 4, !dbg !8563
  br label %8, !dbg !8564

8:                                                ; preds = %31, %2
  %9 = load i32, i32* @j, align 4, !dbg !8565
  %10 = add nsw i32 %9, -1, !dbg !8565
  store i32 %10, i32* @j, align 4, !dbg !8565
  %11 = icmp sge i32 %10, 0, !dbg !8566
  br i1 %11, label %12, label %32, !dbg !8564

12:                                               ; preds = %8
  %13 = load i8*, i8** %5, align 8, !dbg !8567
  %14 = load i32, i32* @decode.i, align 4, !dbg !8569
  %15 = zext i32 %14 to i64, !dbg !8567
  %16 = getelementptr inbounds i8, i8* %13, i64 %15, !dbg !8567
  %17 = load i8, i8* %16, align 1, !dbg !8567
  %18 = load i8*, i8** %5, align 8, !dbg !8570
  %19 = load i32, i32* %6, align 4, !dbg !8571
  %20 = zext i32 %19 to i64, !dbg !8570
  %21 = getelementptr inbounds i8, i8* %18, i64 %20, !dbg !8570
  store i8 %17, i8* %21, align 1, !dbg !8572
  %22 = load i32, i32* @decode.i, align 4, !dbg !8573
  %23 = add i32 %22, 1, !dbg !8574
  %24 = and i32 %23, 8191, !dbg !8575
  store i32 %24, i32* @decode.i, align 4, !dbg !8576
  %25 = load i32, i32* %6, align 4, !dbg !8577
  %26 = add i32 %25, 1, !dbg !8577
  store i32 %26, i32* %6, align 4, !dbg !8577
  %27 = load i32, i32* %4, align 4, !dbg !8579
  %28 = icmp eq i32 %26, %27, !dbg !8580
  br i1 %28, label %29, label %31, !dbg !8581

29:                                               ; preds = %12
  %30 = load i32, i32* %6, align 4, !dbg !8582
  store i32 %30, i32* %3, align 4, !dbg !8583
  br label %90, !dbg !8583

31:                                               ; preds = %12
  br label %8, !dbg !8564, !llvm.loop !8584

32:                                               ; preds = %8
  br label %33, !dbg !8586

33:                                               ; preds = %89, %32
  %34 = call i32 @decode_c(), !dbg !8587
  store i32 %34, i32* %7, align 4, !dbg !8591
  %35 = load i32, i32* %7, align 4, !dbg !8592
  %36 = icmp eq i32 %35, 510, !dbg !8594
  br i1 %36, label %37, label %39, !dbg !8595

37:                                               ; preds = %33
  store i32 1, i32* @done, align 4, !dbg !8596
  %38 = load i32, i32* %6, align 4, !dbg !8598
  store i32 %38, i32* %3, align 4, !dbg !8599
  br label %90, !dbg !8599

39:                                               ; preds = %33
  %40 = load i32, i32* %7, align 4, !dbg !8600
  %41 = icmp ule i32 %40, 255, !dbg !8602
  br i1 %41, label %42, label %56, !dbg !8603

42:                                               ; preds = %39
  %43 = load i32, i32* %7, align 4, !dbg !8604
  %44 = trunc i32 %43 to i8, !dbg !8604
  %45 = load i8*, i8** %5, align 8, !dbg !8606
  %46 = load i32, i32* %6, align 4, !dbg !8607
  %47 = zext i32 %46 to i64, !dbg !8606
  %48 = getelementptr inbounds i8, i8* %45, i64 %47, !dbg !8606
  store i8 %44, i8* %48, align 1, !dbg !8608
  %49 = load i32, i32* %6, align 4, !dbg !8609
  %50 = add i32 %49, 1, !dbg !8609
  store i32 %50, i32* %6, align 4, !dbg !8609
  %51 = load i32, i32* %4, align 4, !dbg !8611
  %52 = icmp eq i32 %50, %51, !dbg !8612
  br i1 %52, label %53, label %55, !dbg !8613

53:                                               ; preds = %42
  %54 = load i32, i32* %6, align 4, !dbg !8614
  store i32 %54, i32* %3, align 4, !dbg !8615
  br label %90, !dbg !8615

55:                                               ; preds = %42
  br label %89, !dbg !8616

56:                                               ; preds = %39
  %57 = load i32, i32* %7, align 4, !dbg !8617
  %58 = sub i32 %57, 253, !dbg !8619
  store i32 %58, i32* @j, align 4, !dbg !8620
  %59 = load i32, i32* %6, align 4, !dbg !8621
  %60 = call i32 @decode_p(), !dbg !8622
  %61 = sub i32 %59, %60, !dbg !8623
  %62 = sub i32 %61, 1, !dbg !8624
  %63 = and i32 %62, 8191, !dbg !8625
  store i32 %63, i32* @decode.i, align 4, !dbg !8626
  br label %64, !dbg !8627

64:                                               ; preds = %87, %56
  %65 = load i32, i32* @j, align 4, !dbg !8628
  %66 = add nsw i32 %65, -1, !dbg !8628
  store i32 %66, i32* @j, align 4, !dbg !8628
  %67 = icmp sge i32 %66, 0, !dbg !8629
  br i1 %67, label %68, label %88, !dbg !8627

68:                                               ; preds = %64
  %69 = load i8*, i8** %5, align 8, !dbg !8630
  %70 = load i32, i32* @decode.i, align 4, !dbg !8632
  %71 = zext i32 %70 to i64, !dbg !8630
  %72 = getelementptr inbounds i8, i8* %69, i64 %71, !dbg !8630
  %73 = load i8, i8* %72, align 1, !dbg !8630
  %74 = load i8*, i8** %5, align 8, !dbg !8633
  %75 = load i32, i32* %6, align 4, !dbg !8634
  %76 = zext i32 %75 to i64, !dbg !8633
  %77 = getelementptr inbounds i8, i8* %74, i64 %76, !dbg !8633
  store i8 %73, i8* %77, align 1, !dbg !8635
  %78 = load i32, i32* @decode.i, align 4, !dbg !8636
  %79 = add i32 %78, 1, !dbg !8637
  %80 = and i32 %79, 8191, !dbg !8638
  store i32 %80, i32* @decode.i, align 4, !dbg !8639
  %81 = load i32, i32* %6, align 4, !dbg !8640
  %82 = add i32 %81, 1, !dbg !8640
  store i32 %82, i32* %6, align 4, !dbg !8640
  %83 = load i32, i32* %4, align 4, !dbg !8642
  %84 = icmp eq i32 %82, %83, !dbg !8643
  br i1 %84, label %85, label %87, !dbg !8644

85:                                               ; preds = %68
  %86 = load i32, i32* %6, align 4, !dbg !8645
  store i32 %86, i32* %3, align 4, !dbg !8646
  br label %90, !dbg !8646

87:                                               ; preds = %68
  br label %64, !dbg !8627, !llvm.loop !8647

88:                                               ; preds = %64
  br label %89

89:                                               ; preds = %88, %55
  br label %33, !dbg !8649, !llvm.loop !8650

90:                                               ; preds = %85, %53, %37, %29
  %91 = load i32, i32* %3, align 4, !dbg !8653
  ret i32 %91, !dbg !8653
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @decode_c() #0 !dbg !8654 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8657, metadata !DIExpression()), !dbg !8658
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8659, metadata !DIExpression()), !dbg !8660
  %4 = load i32, i32* @blocksize, align 4, !dbg !8661
  %5 = icmp eq i32 %4, 0, !dbg !8663
  br i1 %5, label %6, label %12, !dbg !8664

6:                                                ; preds = %0
  %7 = call i32 @getbits(i32 noundef 16), !dbg !8665
  store i32 %7, i32* @blocksize, align 4, !dbg !8667
  %8 = load i32, i32* @blocksize, align 4, !dbg !8668
  %9 = icmp eq i32 %8, 0, !dbg !8670
  br i1 %9, label %10, label %11, !dbg !8671

10:                                               ; preds = %6
  store i32 510, i32* %1, align 4, !dbg !8672
  br label %57, !dbg !8672

11:                                               ; preds = %6
  call void @read_pt_len(i32 noundef 19, i32 noundef 5, i32 noundef 3), !dbg !8674
  call void @read_c_len(), !dbg !8675
  call void @read_pt_len(i32 noundef 14, i32 noundef 4, i32 noundef -1), !dbg !8676
  br label %12, !dbg !8677

12:                                               ; preds = %11, %0
  %13 = load i32, i32* @blocksize, align 4, !dbg !8678
  %14 = add i32 %13, -1, !dbg !8678
  store i32 %14, i32* @blocksize, align 4, !dbg !8678
  %15 = load i16, i16* @bitbuf.248, align 2, !dbg !8679
  %16 = zext i16 %15 to i32, !dbg !8679
  %17 = ashr i32 %16, 4, !dbg !8680
  %18 = sext i32 %17 to i64, !dbg !8681
  %19 = getelementptr inbounds [0 x i16], [0 x i16]* bitcast ([32768 x i16]* @d_buf to [0 x i16]*), i64 0, i64 %18, !dbg !8681
  %20 = load i16, i16* %19, align 2, !dbg !8681
  %21 = zext i16 %20 to i32, !dbg !8681
  store i32 %21, i32* %2, align 4, !dbg !8682
  %22 = load i32, i32* %2, align 4, !dbg !8683
  %23 = icmp uge i32 %22, 510, !dbg !8685
  br i1 %23, label %24, label %50, !dbg !8686

24:                                               ; preds = %12
  store i32 8, i32* %3, align 4, !dbg !8687
  br label %25, !dbg !8689

25:                                               ; preds = %46, %24
  %26 = load i16, i16* @bitbuf.248, align 2, !dbg !8690
  %27 = zext i16 %26 to i32, !dbg !8690
  %28 = load i32, i32* %3, align 4, !dbg !8693
  %29 = and i32 %27, %28, !dbg !8694
  %30 = icmp ne i32 %29, 0, !dbg !8694
  br i1 %30, label %31, label %37, !dbg !8695

31:                                               ; preds = %25
  %32 = load i32, i32* %2, align 4, !dbg !8696
  %33 = zext i32 %32 to i64, !dbg !8697
  %34 = getelementptr inbounds i16, i16* getelementptr inbounds ([65536 x i16], [65536 x i16]* @prev, i64 0, i64 32768), i64 %33, !dbg !8697
  %35 = load i16, i16* %34, align 2, !dbg !8697
  %36 = zext i16 %35 to i32, !dbg !8697
  store i32 %36, i32* %2, align 4, !dbg !8698
  br label %43, !dbg !8699

37:                                               ; preds = %25
  %38 = load i32, i32* %2, align 4, !dbg !8700
  %39 = zext i32 %38 to i64, !dbg !8701
  %40 = getelementptr inbounds [0 x i16], [0 x i16]* bitcast ([65536 x i16]* @prev to [0 x i16]*), i64 0, i64 %39, !dbg !8701
  %41 = load i16, i16* %40, align 2, !dbg !8701
  %42 = zext i16 %41 to i32, !dbg !8701
  store i32 %42, i32* %2, align 4, !dbg !8702
  br label %43

43:                                               ; preds = %37, %31
  %44 = load i32, i32* %3, align 4, !dbg !8703
  %45 = lshr i32 %44, 1, !dbg !8703
  store i32 %45, i32* %3, align 4, !dbg !8703
  br label %46, !dbg !8704

46:                                               ; preds = %43
  %47 = load i32, i32* %2, align 4, !dbg !8705
  %48 = icmp uge i32 %47, 510, !dbg !8706
  br i1 %48, label %25, label %49, !dbg !8704, !llvm.loop !8707

49:                                               ; preds = %46
  br label %50, !dbg !8709

50:                                               ; preds = %49, %12
  %51 = load i32, i32* %2, align 4, !dbg !8710
  %52 = zext i32 %51 to i64, !dbg !8711
  %53 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %52, !dbg !8711
  %54 = load i8, i8* %53, align 1, !dbg !8711
  %55 = zext i8 %54 to i32, !dbg !8712
  call void @fillbuf(i32 noundef %55), !dbg !8713
  %56 = load i32, i32* %2, align 4, !dbg !8714
  store i32 %56, i32* %1, align 4, !dbg !8715
  br label %57, !dbg !8715

57:                                               ; preds = %50, %10
  %58 = load i32, i32* %1, align 4, !dbg !8716
  ret i32 %58, !dbg !8716
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @decode_p() #0 !dbg !8717 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8718, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8720, metadata !DIExpression()), !dbg !8721
  %3 = load i16, i16* @bitbuf.248, align 2, !dbg !8722
  %4 = zext i16 %3 to i32, !dbg !8722
  %5 = ashr i32 %4, 8, !dbg !8723
  %6 = sext i32 %5 to i64, !dbg !8724
  %7 = getelementptr inbounds [256 x i16], [256 x i16]* @pt_table, i64 0, i64 %6, !dbg !8724
  %8 = load i16, i16* %7, align 2, !dbg !8724
  %9 = zext i16 %8 to i32, !dbg !8724
  store i32 %9, i32* %1, align 4, !dbg !8725
  %10 = load i32, i32* %1, align 4, !dbg !8726
  %11 = icmp uge i32 %10, 14, !dbg !8728
  br i1 %11, label %12, label %38, !dbg !8729

12:                                               ; preds = %0
  store i32 128, i32* %2, align 4, !dbg !8730
  br label %13, !dbg !8732

13:                                               ; preds = %34, %12
  %14 = load i16, i16* @bitbuf.248, align 2, !dbg !8733
  %15 = zext i16 %14 to i32, !dbg !8733
  %16 = load i32, i32* %2, align 4, !dbg !8736
  %17 = and i32 %15, %16, !dbg !8737
  %18 = icmp ne i32 %17, 0, !dbg !8737
  br i1 %18, label %19, label %25, !dbg !8738

19:                                               ; preds = %13
  %20 = load i32, i32* %1, align 4, !dbg !8739
  %21 = zext i32 %20 to i64, !dbg !8740
  %22 = getelementptr inbounds i16, i16* getelementptr inbounds ([65536 x i16], [65536 x i16]* @prev, i64 0, i64 32768), i64 %21, !dbg !8740
  %23 = load i16, i16* %22, align 2, !dbg !8740
  %24 = zext i16 %23 to i32, !dbg !8740
  store i32 %24, i32* %1, align 4, !dbg !8741
  br label %31, !dbg !8742

25:                                               ; preds = %13
  %26 = load i32, i32* %1, align 4, !dbg !8743
  %27 = zext i32 %26 to i64, !dbg !8744
  %28 = getelementptr inbounds [0 x i16], [0 x i16]* bitcast ([65536 x i16]* @prev to [0 x i16]*), i64 0, i64 %27, !dbg !8744
  %29 = load i16, i16* %28, align 2, !dbg !8744
  %30 = zext i16 %29 to i32, !dbg !8744
  store i32 %30, i32* %1, align 4, !dbg !8745
  br label %31

31:                                               ; preds = %25, %19
  %32 = load i32, i32* %2, align 4, !dbg !8746
  %33 = lshr i32 %32, 1, !dbg !8746
  store i32 %33, i32* %2, align 4, !dbg !8746
  br label %34, !dbg !8747

34:                                               ; preds = %31
  %35 = load i32, i32* %1, align 4, !dbg !8748
  %36 = icmp uge i32 %35, 14, !dbg !8749
  br i1 %36, label %13, label %37, !dbg !8747, !llvm.loop !8750

37:                                               ; preds = %34
  br label %38, !dbg !8752

38:                                               ; preds = %37, %0
  %39 = load i32, i32* %1, align 4, !dbg !8753
  %40 = zext i32 %39 to i64, !dbg !8754
  %41 = getelementptr inbounds [19 x i8], [19 x i8]* @pt_len, i64 0, i64 %40, !dbg !8754
  %42 = load i8, i8* %41, align 1, !dbg !8754
  %43 = zext i8 %42 to i32, !dbg !8755
  call void @fillbuf(i32 noundef %43), !dbg !8756
  %44 = load i32, i32* %1, align 4, !dbg !8757
  %45 = icmp ne i32 %44, 0, !dbg !8759
  br i1 %45, label %46, label %54, !dbg !8760

46:                                               ; preds = %38
  %47 = load i32, i32* %1, align 4, !dbg !8761
  %48 = sub i32 %47, 1, !dbg !8762
  %49 = shl i32 1, %48, !dbg !8763
  %50 = load i32, i32* %1, align 4, !dbg !8764
  %51 = sub i32 %50, 1, !dbg !8765
  %52 = call i32 @getbits(i32 noundef %51), !dbg !8766
  %53 = add i32 %49, %52, !dbg !8767
  store i32 %53, i32* %1, align 4, !dbg !8768
  br label %54, !dbg !8769

54:                                               ; preds = %46, %38
  %55 = load i32, i32* %1, align 4, !dbg !8770
  ret i32 %55, !dbg !8771
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @fillbuf(i32 noundef %0) #0 !dbg !8772 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8773, metadata !DIExpression()), !dbg !8774
  %3 = load i32, i32* %2, align 4, !dbg !8775
  %4 = load i16, i16* @bitbuf.248, align 2, !dbg !8776
  %5 = zext i16 %4 to i32, !dbg !8776
  %6 = shl i32 %5, %3, !dbg !8776
  %7 = trunc i32 %6 to i16, !dbg !8776
  store i16 %7, i16* @bitbuf.248, align 2, !dbg !8776
  br label %8, !dbg !8777

8:                                                ; preds = %39, %1
  %9 = load i32, i32* %2, align 4, !dbg !8778
  %10 = load i32, i32* @bitcount, align 4, !dbg !8779
  %11 = icmp sgt i32 %9, %10, !dbg !8780
  br i1 %11, label %12, label %40, !dbg !8777

12:                                               ; preds = %8
  %13 = load i32, i32* @subbitbuf, align 4, !dbg !8781
  %14 = load i32, i32* @bitcount, align 4, !dbg !8783
  %15 = load i32, i32* %2, align 4, !dbg !8784
  %16 = sub nsw i32 %15, %14, !dbg !8784
  store i32 %16, i32* %2, align 4, !dbg !8784
  %17 = shl i32 %13, %16, !dbg !8785
  %18 = load i16, i16* @bitbuf.248, align 2, !dbg !8786
  %19 = zext i16 %18 to i32, !dbg !8786
  %20 = or i32 %19, %17, !dbg !8786
  %21 = trunc i32 %20 to i16, !dbg !8786
  store i16 %21, i16* @bitbuf.248, align 2, !dbg !8786
  %22 = load i32, i32* @inptr, align 4, !dbg !8787
  %23 = load i32, i32* @insize, align 4, !dbg !8787
  %24 = icmp ult i32 %22, %23, !dbg !8787
  br i1 %24, label %25, label %32, !dbg !8787

25:                                               ; preds = %12
  %26 = load i32, i32* @inptr, align 4, !dbg !8787
  %27 = add i32 %26, 1, !dbg !8787
  store i32 %27, i32* @inptr, align 4, !dbg !8787
  %28 = zext i32 %26 to i64, !dbg !8787
  %29 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i64 0, i64 %28, !dbg !8787
  %30 = load i8, i8* %29, align 1, !dbg !8787
  %31 = zext i8 %30 to i32, !dbg !8787
  br label %34, !dbg !8787

32:                                               ; preds = %12
  %33 = call i32 @fill_inbuf(i32 noundef 1), !dbg !8787
  br label %34, !dbg !8787

34:                                               ; preds = %32, %25
  %35 = phi i32 [ %31, %25 ], [ %33, %32 ], !dbg !8787
  store i32 %35, i32* @subbitbuf, align 4, !dbg !8788
  %36 = load i32, i32* @subbitbuf, align 4, !dbg !8789
  %37 = icmp eq i32 %36, -1, !dbg !8791
  br i1 %37, label %38, label %39, !dbg !8792

38:                                               ; preds = %34
  store i32 0, i32* @subbitbuf, align 4, !dbg !8793
  br label %39, !dbg !8794

39:                                               ; preds = %38, %34
  store i32 8, i32* @bitcount, align 4, !dbg !8795
  br label %8, !dbg !8777, !llvm.loop !8796

40:                                               ; preds = %8
  %41 = load i32, i32* @subbitbuf, align 4, !dbg !8798
  %42 = load i32, i32* %2, align 4, !dbg !8799
  %43 = load i32, i32* @bitcount, align 4, !dbg !8800
  %44 = sub nsw i32 %43, %42, !dbg !8800
  store i32 %44, i32* @bitcount, align 4, !dbg !8800
  %45 = lshr i32 %41, %44, !dbg !8801
  %46 = load i16, i16* @bitbuf.248, align 2, !dbg !8802
  %47 = zext i16 %46 to i32, !dbg !8802
  %48 = or i32 %47, %45, !dbg !8802
  %49 = trunc i32 %48 to i16, !dbg !8802
  store i16 %49, i16* @bitbuf.248, align 2, !dbg !8802
  ret void, !dbg !8803
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @getbits(i32 noundef %0) #0 !dbg !8804 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8807, metadata !DIExpression()), !dbg !8808
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8809, metadata !DIExpression()), !dbg !8810
  %4 = load i16, i16* @bitbuf.248, align 2, !dbg !8811
  %5 = zext i16 %4 to i32, !dbg !8811
  %6 = load i32, i32* %2, align 4, !dbg !8812
  %7 = sext i32 %6 to i64, !dbg !8812
  %8 = sub i64 16, %7, !dbg !8813
  %9 = trunc i64 %8 to i32, !dbg !8814
  %10 = ashr i32 %5, %9, !dbg !8814
  store i32 %10, i32* %3, align 4, !dbg !8815
  %11 = load i32, i32* %2, align 4, !dbg !8816
  call void @fillbuf(i32 noundef %11), !dbg !8817
  %12 = load i32, i32* %3, align 4, !dbg !8818
  ret i32 %12, !dbg !8819
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @read_pt_len(i32 noundef %0, i32 noundef %1, i32 noundef %2) #0 !dbg !8820 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !8821, metadata !DIExpression()), !dbg !8822
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !8823, metadata !DIExpression()), !dbg !8824
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8825, metadata !DIExpression()), !dbg !8826
  call void @llvm.dbg.declare(metadata i32* %7, metadata !8827, metadata !DIExpression()), !dbg !8828
  call void @llvm.dbg.declare(metadata i32* %8, metadata !8829, metadata !DIExpression()), !dbg !8830
  call void @llvm.dbg.declare(metadata i32* %9, metadata !8831, metadata !DIExpression()), !dbg !8832
  call void @llvm.dbg.declare(metadata i32* %10, metadata !8833, metadata !DIExpression()), !dbg !8834
  %11 = load i32, i32* %5, align 4, !dbg !8835
  %12 = call i32 @getbits(i32 noundef %11), !dbg !8836
  store i32 %12, i32* %9, align 4, !dbg !8837
  %13 = load i32, i32* %9, align 4, !dbg !8838
  %14 = icmp eq i32 %13, 0, !dbg !8840
  br i1 %14, label %15, label %43, !dbg !8841

15:                                               ; preds = %3
  %16 = load i32, i32* %5, align 4, !dbg !8842
  %17 = call i32 @getbits(i32 noundef %16), !dbg !8844
  store i32 %17, i32* %8, align 4, !dbg !8845
  store i32 0, i32* %7, align 4, !dbg !8846
  br label %18, !dbg !8848

18:                                               ; preds = %26, %15
  %19 = load i32, i32* %7, align 4, !dbg !8849
  %20 = load i32, i32* %4, align 4, !dbg !8851
  %21 = icmp slt i32 %19, %20, !dbg !8852
  br i1 %21, label %22, label %29, !dbg !8853

22:                                               ; preds = %18
  %23 = load i32, i32* %7, align 4, !dbg !8854
  %24 = sext i32 %23 to i64, !dbg !8855
  %25 = getelementptr inbounds [19 x i8], [19 x i8]* @pt_len, i64 0, i64 %24, !dbg !8855
  store i8 0, i8* %25, align 1, !dbg !8856
  br label %26, !dbg !8855

26:                                               ; preds = %22
  %27 = load i32, i32* %7, align 4, !dbg !8857
  %28 = add nsw i32 %27, 1, !dbg !8857
  store i32 %28, i32* %7, align 4, !dbg !8857
  br label %18, !dbg !8858, !llvm.loop !8859

29:                                               ; preds = %18
  store i32 0, i32* %7, align 4, !dbg !8861
  br label %30, !dbg !8863

30:                                               ; preds = %39, %29
  %31 = load i32, i32* %7, align 4, !dbg !8864
  %32 = icmp slt i32 %31, 256, !dbg !8866
  br i1 %32, label %33, label %42, !dbg !8867

33:                                               ; preds = %30
  %34 = load i32, i32* %8, align 4, !dbg !8868
  %35 = trunc i32 %34 to i16, !dbg !8868
  %36 = load i32, i32* %7, align 4, !dbg !8869
  %37 = sext i32 %36 to i64, !dbg !8870
  %38 = getelementptr inbounds [256 x i16], [256 x i16]* @pt_table, i64 0, i64 %37, !dbg !8870
  store i16 %35, i16* %38, align 2, !dbg !8871
  br label %39, !dbg !8870

39:                                               ; preds = %33
  %40 = load i32, i32* %7, align 4, !dbg !8872
  %41 = add nsw i32 %40, 1, !dbg !8872
  store i32 %41, i32* %7, align 4, !dbg !8872
  br label %30, !dbg !8873, !llvm.loop !8874

42:                                               ; preds = %30
  br label %110, !dbg !8876

43:                                               ; preds = %3
  store i32 0, i32* %7, align 4, !dbg !8877
  br label %44, !dbg !8879

44:                                               ; preds = %97, %43
  %45 = load i32, i32* %7, align 4, !dbg !8880
  %46 = load i32, i32* %9, align 4, !dbg !8881
  %47 = icmp slt i32 %45, %46, !dbg !8882
  br i1 %47, label %48, label %98, !dbg !8879

48:                                               ; preds = %44
  %49 = load i16, i16* @bitbuf.248, align 2, !dbg !8883
  %50 = zext i16 %49 to i32, !dbg !8883
  %51 = ashr i32 %50, 13, !dbg !8885
  store i32 %51, i32* %8, align 4, !dbg !8886
  %52 = load i32, i32* %8, align 4, !dbg !8887
  %53 = icmp eq i32 %52, 7, !dbg !8889
  br i1 %53, label %54, label %67, !dbg !8890

54:                                               ; preds = %48
  store i32 4096, i32* %10, align 4, !dbg !8891
  br label %55, !dbg !8893

55:                                               ; preds = %61, %54
  %56 = load i32, i32* %10, align 4, !dbg !8894
  %57 = load i16, i16* @bitbuf.248, align 2, !dbg !8895
  %58 = zext i16 %57 to i32, !dbg !8895
  %59 = and i32 %56, %58, !dbg !8896
  %60 = icmp ne i32 %59, 0, !dbg !8893
  br i1 %60, label %61, label %66, !dbg !8893

61:                                               ; preds = %55
  %62 = load i32, i32* %10, align 4, !dbg !8897
  %63 = lshr i32 %62, 1, !dbg !8897
  store i32 %63, i32* %10, align 4, !dbg !8897
  %64 = load i32, i32* %8, align 4, !dbg !8899
  %65 = add nsw i32 %64, 1, !dbg !8899
  store i32 %65, i32* %8, align 4, !dbg !8899
  br label %55, !dbg !8893, !llvm.loop !8900

66:                                               ; preds = %55
  br label %67, !dbg !8902

67:                                               ; preds = %66, %48
  %68 = load i32, i32* %8, align 4, !dbg !8903
  %69 = icmp slt i32 %68, 7, !dbg !8904
  br i1 %69, label %70, label %71, !dbg !8905

70:                                               ; preds = %67
  br label %74, !dbg !8905

71:                                               ; preds = %67
  %72 = load i32, i32* %8, align 4, !dbg !8906
  %73 = sub nsw i32 %72, 3, !dbg !8907
  br label %74, !dbg !8905

74:                                               ; preds = %71, %70
  %75 = phi i32 [ 3, %70 ], [ %73, %71 ], !dbg !8905
  call void @fillbuf(i32 noundef %75), !dbg !8908
  %76 = load i32, i32* %8, align 4, !dbg !8909
  %77 = trunc i32 %76 to i8, !dbg !8909
  %78 = load i32, i32* %7, align 4, !dbg !8910
  %79 = add nsw i32 %78, 1, !dbg !8910
  store i32 %79, i32* %7, align 4, !dbg !8910
  %80 = sext i32 %78 to i64, !dbg !8911
  %81 = getelementptr inbounds [19 x i8], [19 x i8]* @pt_len, i64 0, i64 %80, !dbg !8911
  store i8 %77, i8* %81, align 1, !dbg !8912
  %82 = load i32, i32* %7, align 4, !dbg !8913
  %83 = load i32, i32* %6, align 4, !dbg !8915
  %84 = icmp eq i32 %82, %83, !dbg !8916
  br i1 %84, label %85, label %97, !dbg !8917

85:                                               ; preds = %74
  %86 = call i32 @getbits(i32 noundef 2), !dbg !8918
  store i32 %86, i32* %8, align 4, !dbg !8920
  br label %87, !dbg !8921

87:                                               ; preds = %91, %85
  %88 = load i32, i32* %8, align 4, !dbg !8922
  %89 = add nsw i32 %88, -1, !dbg !8922
  store i32 %89, i32* %8, align 4, !dbg !8922
  %90 = icmp sge i32 %89, 0, !dbg !8923
  br i1 %90, label %91, label %96, !dbg !8921

91:                                               ; preds = %87
  %92 = load i32, i32* %7, align 4, !dbg !8924
  %93 = add nsw i32 %92, 1, !dbg !8924
  store i32 %93, i32* %7, align 4, !dbg !8924
  %94 = sext i32 %92 to i64, !dbg !8925
  %95 = getelementptr inbounds [19 x i8], [19 x i8]* @pt_len, i64 0, i64 %94, !dbg !8925
  store i8 0, i8* %95, align 1, !dbg !8926
  br label %87, !dbg !8921, !llvm.loop !8927

96:                                               ; preds = %87
  br label %97, !dbg !8929

97:                                               ; preds = %96, %74
  br label %44, !dbg !8879, !llvm.loop !8930

98:                                               ; preds = %44
  br label %99, !dbg !8932

99:                                               ; preds = %103, %98
  %100 = load i32, i32* %7, align 4, !dbg !8933
  %101 = load i32, i32* %4, align 4, !dbg !8934
  %102 = icmp slt i32 %100, %101, !dbg !8935
  br i1 %102, label %103, label %108, !dbg !8932

103:                                              ; preds = %99
  %104 = load i32, i32* %7, align 4, !dbg !8936
  %105 = add nsw i32 %104, 1, !dbg !8936
  store i32 %105, i32* %7, align 4, !dbg !8936
  %106 = sext i32 %104 to i64, !dbg !8937
  %107 = getelementptr inbounds [19 x i8], [19 x i8]* @pt_len, i64 0, i64 %106, !dbg !8937
  store i8 0, i8* %107, align 1, !dbg !8938
  br label %99, !dbg !8932, !llvm.loop !8939

108:                                              ; preds = %99
  %109 = load i32, i32* %4, align 4, !dbg !8941
  call void @make_table(i32 noundef %109, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @pt_len, i64 0, i64 0), i32 noundef 8, i16* noundef getelementptr inbounds ([256 x i16], [256 x i16]* @pt_table, i64 0, i64 0)), !dbg !8942
  br label %110

110:                                              ; preds = %108, %42
  ret void, !dbg !8943
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @read_c_len() #0 !dbg !8944 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8945, metadata !DIExpression()), !dbg !8946
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8947, metadata !DIExpression()), !dbg !8948
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8949, metadata !DIExpression()), !dbg !8950
  call void @llvm.dbg.declare(metadata i32* %4, metadata !8951, metadata !DIExpression()), !dbg !8952
  %5 = call i32 @getbits(i32 noundef 9), !dbg !8953
  store i32 %5, i32* %3, align 4, !dbg !8954
  %6 = load i32, i32* %3, align 4, !dbg !8955
  %7 = icmp eq i32 %6, 0, !dbg !8957
  br i1 %7, label %8, label %34, !dbg !8958

8:                                                ; preds = %0
  %9 = call i32 @getbits(i32 noundef 9), !dbg !8959
  store i32 %9, i32* %2, align 4, !dbg !8961
  store i32 0, i32* %1, align 4, !dbg !8962
  br label %10, !dbg !8964

10:                                               ; preds = %17, %8
  %11 = load i32, i32* %1, align 4, !dbg !8965
  %12 = icmp slt i32 %11, 510, !dbg !8967
  br i1 %12, label %13, label %20, !dbg !8968

13:                                               ; preds = %10
  %14 = load i32, i32* %1, align 4, !dbg !8969
  %15 = sext i32 %14 to i64, !dbg !8970
  %16 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %15, !dbg !8970
  store i8 0, i8* %16, align 1, !dbg !8971
  br label %17, !dbg !8970

17:                                               ; preds = %13
  %18 = load i32, i32* %1, align 4, !dbg !8972
  %19 = add nsw i32 %18, 1, !dbg !8972
  store i32 %19, i32* %1, align 4, !dbg !8972
  br label %10, !dbg !8973, !llvm.loop !8974

20:                                               ; preds = %10
  store i32 0, i32* %1, align 4, !dbg !8976
  br label %21, !dbg !8978

21:                                               ; preds = %30, %20
  %22 = load i32, i32* %1, align 4, !dbg !8979
  %23 = icmp slt i32 %22, 4096, !dbg !8981
  br i1 %23, label %24, label %33, !dbg !8982

24:                                               ; preds = %21
  %25 = load i32, i32* %2, align 4, !dbg !8983
  %26 = trunc i32 %25 to i16, !dbg !8983
  %27 = load i32, i32* %1, align 4, !dbg !8984
  %28 = sext i32 %27 to i64, !dbg !8985
  %29 = getelementptr inbounds [0 x i16], [0 x i16]* bitcast ([32768 x i16]* @d_buf to [0 x i16]*), i64 0, i64 %28, !dbg !8985
  store i16 %26, i16* %29, align 2, !dbg !8986
  br label %30, !dbg !8985

30:                                               ; preds = %24
  %31 = load i32, i32* %1, align 4, !dbg !8987
  %32 = add nsw i32 %31, 1, !dbg !8987
  store i32 %32, i32* %1, align 4, !dbg !8987
  br label %21, !dbg !8988, !llvm.loop !8989

33:                                               ; preds = %21
  br label %127, !dbg !8991

34:                                               ; preds = %0
  store i32 0, i32* %1, align 4, !dbg !8992
  br label %35, !dbg !8994

35:                                               ; preds = %116, %34
  %36 = load i32, i32* %1, align 4, !dbg !8995
  %37 = load i32, i32* %3, align 4, !dbg !8996
  %38 = icmp slt i32 %36, %37, !dbg !8997
  br i1 %38, label %39, label %117, !dbg !8994

39:                                               ; preds = %35
  %40 = load i16, i16* @bitbuf.248, align 2, !dbg !8998
  %41 = zext i16 %40 to i32, !dbg !8998
  %42 = ashr i32 %41, 8, !dbg !9000
  %43 = sext i32 %42 to i64, !dbg !9001
  %44 = getelementptr inbounds [256 x i16], [256 x i16]* @pt_table, i64 0, i64 %43, !dbg !9001
  %45 = load i16, i16* %44, align 2, !dbg !9001
  %46 = zext i16 %45 to i32, !dbg !9001
  store i32 %46, i32* %2, align 4, !dbg !9002
  %47 = load i32, i32* %2, align 4, !dbg !9003
  %48 = icmp sge i32 %47, 19, !dbg !9005
  br i1 %48, label %49, label %75, !dbg !9006

49:                                               ; preds = %39
  store i32 128, i32* %4, align 4, !dbg !9007
  br label %50, !dbg !9009

50:                                               ; preds = %71, %49
  %51 = load i16, i16* @bitbuf.248, align 2, !dbg !9010
  %52 = zext i16 %51 to i32, !dbg !9010
  %53 = load i32, i32* %4, align 4, !dbg !9013
  %54 = and i32 %52, %53, !dbg !9014
  %55 = icmp ne i32 %54, 0, !dbg !9014
  br i1 %55, label %56, label %62, !dbg !9015

56:                                               ; preds = %50
  %57 = load i32, i32* %2, align 4, !dbg !9016
  %58 = sext i32 %57 to i64, !dbg !9017
  %59 = getelementptr inbounds i16, i16* getelementptr inbounds ([65536 x i16], [65536 x i16]* @prev, i64 0, i64 32768), i64 %58, !dbg !9017
  %60 = load i16, i16* %59, align 2, !dbg !9017
  %61 = zext i16 %60 to i32, !dbg !9017
  store i32 %61, i32* %2, align 4, !dbg !9018
  br label %68, !dbg !9019

62:                                               ; preds = %50
  %63 = load i32, i32* %2, align 4, !dbg !9020
  %64 = sext i32 %63 to i64, !dbg !9021
  %65 = getelementptr inbounds [0 x i16], [0 x i16]* bitcast ([65536 x i16]* @prev to [0 x i16]*), i64 0, i64 %64, !dbg !9021
  %66 = load i16, i16* %65, align 2, !dbg !9021
  %67 = zext i16 %66 to i32, !dbg !9021
  store i32 %67, i32* %2, align 4, !dbg !9022
  br label %68

68:                                               ; preds = %62, %56
  %69 = load i32, i32* %4, align 4, !dbg !9023
  %70 = lshr i32 %69, 1, !dbg !9023
  store i32 %70, i32* %4, align 4, !dbg !9023
  br label %71, !dbg !9024

71:                                               ; preds = %68
  %72 = load i32, i32* %2, align 4, !dbg !9025
  %73 = icmp sge i32 %72, 19, !dbg !9026
  br i1 %73, label %50, label %74, !dbg !9024, !llvm.loop !9027

74:                                               ; preds = %71
  br label %75, !dbg !9029

75:                                               ; preds = %74, %39
  %76 = load i32, i32* %2, align 4, !dbg !9030
  %77 = sext i32 %76 to i64, !dbg !9031
  %78 = getelementptr inbounds [19 x i8], [19 x i8]* @pt_len, i64 0, i64 %77, !dbg !9031
  %79 = load i8, i8* %78, align 1, !dbg !9031
  %80 = zext i8 %79 to i32, !dbg !9032
  call void @fillbuf(i32 noundef %80), !dbg !9033
  %81 = load i32, i32* %2, align 4, !dbg !9034
  %82 = icmp sle i32 %81, 2, !dbg !9036
  br i1 %82, label %83, label %108, !dbg !9037

83:                                               ; preds = %75
  %84 = load i32, i32* %2, align 4, !dbg !9038
  %85 = icmp eq i32 %84, 0, !dbg !9041
  br i1 %85, label %86, label %87, !dbg !9042

86:                                               ; preds = %83
  store i32 1, i32* %2, align 4, !dbg !9043
  br label %97, !dbg !9044

87:                                               ; preds = %83
  %88 = load i32, i32* %2, align 4, !dbg !9045
  %89 = icmp eq i32 %88, 1, !dbg !9047
  br i1 %89, label %90, label %93, !dbg !9048

90:                                               ; preds = %87
  %91 = call i32 @getbits(i32 noundef 4), !dbg !9049
  %92 = add i32 %91, 3, !dbg !9050
  store i32 %92, i32* %2, align 4, !dbg !9051
  br label %96, !dbg !9052

93:                                               ; preds = %87
  %94 = call i32 @getbits(i32 noundef 9), !dbg !9053
  %95 = add i32 %94, 20, !dbg !9054
  store i32 %95, i32* %2, align 4, !dbg !9055
  br label %96

96:                                               ; preds = %93, %90
  br label %97

97:                                               ; preds = %96, %86
  br label %98, !dbg !9056

98:                                               ; preds = %102, %97
  %99 = load i32, i32* %2, align 4, !dbg !9057
  %100 = add nsw i32 %99, -1, !dbg !9057
  store i32 %100, i32* %2, align 4, !dbg !9057
  %101 = icmp sge i32 %100, 0, !dbg !9058
  br i1 %101, label %102, label %107, !dbg !9056

102:                                              ; preds = %98
  %103 = load i32, i32* %1, align 4, !dbg !9059
  %104 = add nsw i32 %103, 1, !dbg !9059
  store i32 %104, i32* %1, align 4, !dbg !9059
  %105 = sext i32 %103 to i64, !dbg !9060
  %106 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %105, !dbg !9060
  store i8 0, i8* %106, align 1, !dbg !9061
  br label %98, !dbg !9056, !llvm.loop !9062

107:                                              ; preds = %98
  br label %116, !dbg !9064

108:                                              ; preds = %75
  %109 = load i32, i32* %2, align 4, !dbg !9065
  %110 = sub nsw i32 %109, 2, !dbg !9066
  %111 = trunc i32 %110 to i8, !dbg !9065
  %112 = load i32, i32* %1, align 4, !dbg !9067
  %113 = add nsw i32 %112, 1, !dbg !9067
  store i32 %113, i32* %1, align 4, !dbg !9067
  %114 = sext i32 %112 to i64, !dbg !9068
  %115 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %114, !dbg !9068
  store i8 %111, i8* %115, align 1, !dbg !9069
  br label %116

116:                                              ; preds = %108, %107
  br label %35, !dbg !8994, !llvm.loop !9070

117:                                              ; preds = %35
  br label %118, !dbg !9072

118:                                              ; preds = %121, %117
  %119 = load i32, i32* %1, align 4, !dbg !9073
  %120 = icmp slt i32 %119, 510, !dbg !9074
  br i1 %120, label %121, label %126, !dbg !9072

121:                                              ; preds = %118
  %122 = load i32, i32* %1, align 4, !dbg !9075
  %123 = add nsw i32 %122, 1, !dbg !9075
  store i32 %123, i32* %1, align 4, !dbg !9075
  %124 = sext i32 %122 to i64, !dbg !9076
  %125 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i64 0, i64 %124, !dbg !9076
  store i8 0, i8* %125, align 1, !dbg !9077
  br label %118, !dbg !9072, !llvm.loop !9078

126:                                              ; preds = %118
  call void @make_table(i32 noundef 510, i8* noundef getelementptr inbounds ([18432 x i8], [18432 x i8]* @outbuf, i64 0, i64 0), i32 noundef 12, i16* noundef getelementptr inbounds ([32768 x i16], [32768 x i16]* @d_buf, i64 0, i64 0)), !dbg !9080
  br label %127

127:                                              ; preds = %126, %33
  ret void, !dbg !9081
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @make_table(i32 noundef %0, i8* noundef %1, i32 noundef %2, i16* noundef %3) #0 !dbg !9082 {
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i16*, align 8
  %9 = alloca [17 x i16], align 16
  %10 = alloca [17 x i16], align 16
  %11 = alloca [18 x i16], align 16
  %12 = alloca i16*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !9085, metadata !DIExpression()), !dbg !9086
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !9087, metadata !DIExpression()), !dbg !9088
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !9089, metadata !DIExpression()), !dbg !9090
  store i16* %3, i16** %8, align 8
  call void @llvm.dbg.declare(metadata i16** %8, metadata !9091, metadata !DIExpression()), !dbg !9092
  call void @llvm.dbg.declare(metadata [17 x i16]* %9, metadata !9093, metadata !DIExpression()), !dbg !9094
  call void @llvm.dbg.declare(metadata [17 x i16]* %10, metadata !9095, metadata !DIExpression()), !dbg !9096
  call void @llvm.dbg.declare(metadata [18 x i16]* %11, metadata !9097, metadata !DIExpression()), !dbg !9099
  call void @llvm.dbg.declare(metadata i16** %12, metadata !9100, metadata !DIExpression()), !dbg !9101
  call void @llvm.dbg.declare(metadata i32* %13, metadata !9102, metadata !DIExpression()), !dbg !9103
  call void @llvm.dbg.declare(metadata i32* %14, metadata !9104, metadata !DIExpression()), !dbg !9105
  call void @llvm.dbg.declare(metadata i32* %15, metadata !9106, metadata !DIExpression()), !dbg !9107
  call void @llvm.dbg.declare(metadata i32* %16, metadata !9108, metadata !DIExpression()), !dbg !9109
  call void @llvm.dbg.declare(metadata i32* %17, metadata !9110, metadata !DIExpression()), !dbg !9111
  call void @llvm.dbg.declare(metadata i32* %18, metadata !9112, metadata !DIExpression()), !dbg !9113
  call void @llvm.dbg.declare(metadata i32* %19, metadata !9114, metadata !DIExpression()), !dbg !9115
  call void @llvm.dbg.declare(metadata i32* %20, metadata !9116, metadata !DIExpression()), !dbg !9117
  store i32 1, i32* %13, align 4, !dbg !9118
  br label %21, !dbg !9120

21:                                               ; preds = %28, %4
  %22 = load i32, i32* %13, align 4, !dbg !9121
  %23 = icmp ule i32 %22, 16, !dbg !9123
  br i1 %23, label %24, label %31, !dbg !9124

24:                                               ; preds = %21
  %25 = load i32, i32* %13, align 4, !dbg !9125
  %26 = zext i32 %25 to i64, !dbg !9126
  %27 = getelementptr inbounds [17 x i16], [17 x i16]* %9, i64 0, i64 %26, !dbg !9126
  store i16 0, i16* %27, align 2, !dbg !9127
  br label %28, !dbg !9126

28:                                               ; preds = %24
  %29 = load i32, i32* %13, align 4, !dbg !9128
  %30 = add i32 %29, 1, !dbg !9128
  store i32 %30, i32* %13, align 4, !dbg !9128
  br label %21, !dbg !9129, !llvm.loop !9130

31:                                               ; preds = %21
  store i32 0, i32* %13, align 4, !dbg !9132
  br label %32, !dbg !9134

32:                                               ; preds = %46, %31
  %33 = load i32, i32* %13, align 4, !dbg !9135
  %34 = load i32, i32* %5, align 4, !dbg !9137
  %35 = icmp ult i32 %33, %34, !dbg !9138
  br i1 %35, label %36, label %49, !dbg !9139

36:                                               ; preds = %32
  %37 = load i8*, i8** %6, align 8, !dbg !9140
  %38 = load i32, i32* %13, align 4, !dbg !9141
  %39 = zext i32 %38 to i64, !dbg !9140
  %40 = getelementptr inbounds i8, i8* %37, i64 %39, !dbg !9140
  %41 = load i8, i8* %40, align 1, !dbg !9140
  %42 = zext i8 %41 to i64, !dbg !9142
  %43 = getelementptr inbounds [17 x i16], [17 x i16]* %9, i64 0, i64 %42, !dbg !9142
  %44 = load i16, i16* %43, align 2, !dbg !9143
  %45 = add i16 %44, 1, !dbg !9143
  store i16 %45, i16* %43, align 2, !dbg !9143
  br label %46, !dbg !9142

46:                                               ; preds = %36
  %47 = load i32, i32* %13, align 4, !dbg !9144
  %48 = add i32 %47, 1, !dbg !9144
  store i32 %48, i32* %13, align 4, !dbg !9144
  br label %32, !dbg !9145, !llvm.loop !9146

49:                                               ; preds = %32
  %50 = getelementptr inbounds [18 x i16], [18 x i16]* %11, i64 0, i64 1, !dbg !9148
  store i16 0, i16* %50, align 2, !dbg !9149
  store i32 1, i32* %13, align 4, !dbg !9150
  br label %51, !dbg !9152

51:                                               ; preds = %74, %49
  %52 = load i32, i32* %13, align 4, !dbg !9153
  %53 = icmp ule i32 %52, 16, !dbg !9155
  br i1 %53, label %54, label %77, !dbg !9156

54:                                               ; preds = %51
  %55 = load i32, i32* %13, align 4, !dbg !9157
  %56 = zext i32 %55 to i64, !dbg !9158
  %57 = getelementptr inbounds [18 x i16], [18 x i16]* %11, i64 0, i64 %56, !dbg !9158
  %58 = load i16, i16* %57, align 2, !dbg !9158
  %59 = zext i16 %58 to i32, !dbg !9158
  %60 = load i32, i32* %13, align 4, !dbg !9159
  %61 = zext i32 %60 to i64, !dbg !9160
  %62 = getelementptr inbounds [17 x i16], [17 x i16]* %9, i64 0, i64 %61, !dbg !9160
  %63 = load i16, i16* %62, align 2, !dbg !9160
  %64 = zext i16 %63 to i32, !dbg !9160
  %65 = load i32, i32* %13, align 4, !dbg !9161
  %66 = sub i32 16, %65, !dbg !9162
  %67 = shl i32 %64, %66, !dbg !9163
  %68 = add nsw i32 %59, %67, !dbg !9164
  %69 = trunc i32 %68 to i16, !dbg !9158
  %70 = load i32, i32* %13, align 4, !dbg !9165
  %71 = add i32 %70, 1, !dbg !9166
  %72 = zext i32 %71 to i64, !dbg !9167
  %73 = getelementptr inbounds [18 x i16], [18 x i16]* %11, i64 0, i64 %72, !dbg !9167
  store i16 %69, i16* %73, align 2, !dbg !9168
  br label %74, !dbg !9167

74:                                               ; preds = %54
  %75 = load i32, i32* %13, align 4, !dbg !9169
  %76 = add i32 %75, 1, !dbg !9169
  store i32 %76, i32* %13, align 4, !dbg !9169
  br label %51, !dbg !9170, !llvm.loop !9171

77:                                               ; preds = %51
  %78 = getelementptr inbounds [18 x i16], [18 x i16]* %11, i64 0, i64 17, !dbg !9173
  %79 = load i16, i16* %78, align 2, !dbg !9173
  %80 = zext i16 %79 to i32, !dbg !9173
  %81 = and i32 %80, 65535, !dbg !9175
  %82 = icmp ne i32 %81, 0, !dbg !9176
  br i1 %82, label %83, label %84, !dbg !9177

83:                                               ; preds = %77
  call void @error(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.249, i64 0, i64 0)), !dbg !9178
  br label %84, !dbg !9178

84:                                               ; preds = %83, %77
  %85 = load i32, i32* %7, align 4, !dbg !9179
  %86 = sub nsw i32 16, %85, !dbg !9180
  store i32 %86, i32* %17, align 4, !dbg !9181
  store i32 1, i32* %13, align 4, !dbg !9182
  br label %87, !dbg !9184

87:                                               ; preds = %108, %84
  %88 = load i32, i32* %13, align 4, !dbg !9185
  %89 = load i32, i32* %7, align 4, !dbg !9187
  %90 = icmp ule i32 %88, %89, !dbg !9188
  br i1 %90, label %91, label %111, !dbg !9189

91:                                               ; preds = %87
  %92 = load i32, i32* %17, align 4, !dbg !9190
  %93 = load i32, i32* %13, align 4, !dbg !9192
  %94 = zext i32 %93 to i64, !dbg !9193
  %95 = getelementptr inbounds [18 x i16], [18 x i16]* %11, i64 0, i64 %94, !dbg !9193
  %96 = load i16, i16* %95, align 2, !dbg !9194
  %97 = zext i16 %96 to i32, !dbg !9194
  %98 = ashr i32 %97, %92, !dbg !9194
  %99 = trunc i32 %98 to i16, !dbg !9194
  store i16 %99, i16* %95, align 2, !dbg !9194
  %100 = load i32, i32* %7, align 4, !dbg !9195
  %101 = load i32, i32* %13, align 4, !dbg !9196
  %102 = sub i32 %100, %101, !dbg !9197
  %103 = shl i32 1, %102, !dbg !9198
  %104 = trunc i32 %103 to i16, !dbg !9199
  %105 = load i32, i32* %13, align 4, !dbg !9200
  %106 = zext i32 %105 to i64, !dbg !9201
  %107 = getelementptr inbounds [17 x i16], [17 x i16]* %10, i64 0, i64 %106, !dbg !9201
  store i16 %104, i16* %107, align 2, !dbg !9202
  br label %108, !dbg !9203

108:                                              ; preds = %91
  %109 = load i32, i32* %13, align 4, !dbg !9204
  %110 = add i32 %109, 1, !dbg !9204
  store i32 %110, i32* %13, align 4, !dbg !9204
  br label %87, !dbg !9205, !llvm.loop !9206

111:                                              ; preds = %87
  br label %112, !dbg !9208

112:                                              ; preds = %115, %111
  %113 = load i32, i32* %13, align 4, !dbg !9209
  %114 = icmp ule i32 %113, 16, !dbg !9210
  br i1 %114, label %115, label %125, !dbg !9208

115:                                              ; preds = %112
  %116 = load i32, i32* %13, align 4, !dbg !9211
  %117 = sub i32 16, %116, !dbg !9213
  %118 = shl i32 1, %117, !dbg !9214
  %119 = trunc i32 %118 to i16, !dbg !9215
  %120 = load i32, i32* %13, align 4, !dbg !9216
  %121 = zext i32 %120 to i64, !dbg !9217
  %122 = getelementptr inbounds [17 x i16], [17 x i16]* %10, i64 0, i64 %121, !dbg !9217
  store i16 %119, i16* %122, align 2, !dbg !9218
  %123 = load i32, i32* %13, align 4, !dbg !9219
  %124 = add i32 %123, 1, !dbg !9219
  store i32 %124, i32* %13, align 4, !dbg !9219
  br label %112, !dbg !9208, !llvm.loop !9220

125:                                              ; preds = %112
  %126 = load i32, i32* %7, align 4, !dbg !9222
  %127 = add nsw i32 %126, 1, !dbg !9223
  %128 = sext i32 %127 to i64, !dbg !9224
  %129 = getelementptr inbounds [18 x i16], [18 x i16]* %11, i64 0, i64 %128, !dbg !9224
  %130 = load i16, i16* %129, align 2, !dbg !9224
  %131 = zext i16 %130 to i32, !dbg !9224
  %132 = load i32, i32* %17, align 4, !dbg !9225
  %133 = ashr i32 %131, %132, !dbg !9226
  store i32 %133, i32* %13, align 4, !dbg !9227
  %134 = load i32, i32* %13, align 4, !dbg !9228
  %135 = icmp ne i32 %134, 0, !dbg !9230
  br i1 %135, label %136, label %150, !dbg !9231

136:                                              ; preds = %125
  %137 = load i32, i32* %7, align 4, !dbg !9232
  %138 = shl i32 1, %137, !dbg !9234
  store i32 %138, i32* %14, align 4, !dbg !9235
  br label %139, !dbg !9236

139:                                              ; preds = %143, %136
  %140 = load i32, i32* %13, align 4, !dbg !9237
  %141 = load i32, i32* %14, align 4, !dbg !9238
  %142 = icmp ne i32 %140, %141, !dbg !9239
  br i1 %142, label %143, label %149, !dbg !9236

143:                                              ; preds = %139
  %144 = load i16*, i16** %8, align 8, !dbg !9240
  %145 = load i32, i32* %13, align 4, !dbg !9241
  %146 = add i32 %145, 1, !dbg !9241
  store i32 %146, i32* %13, align 4, !dbg !9241
  %147 = zext i32 %145 to i64, !dbg !9240
  %148 = getelementptr inbounds i16, i16* %144, i64 %147, !dbg !9240
  store i16 0, i16* %148, align 2, !dbg !9242
  br label %139, !dbg !9236, !llvm.loop !9243

149:                                              ; preds = %139
  br label %150, !dbg !9245

150:                                              ; preds = %149, %125
  %151 = load i32, i32* %5, align 4, !dbg !9246
  store i32 %151, i32* %18, align 4, !dbg !9247
  %152 = load i32, i32* %7, align 4, !dbg !9248
  %153 = sub nsw i32 15, %152, !dbg !9249
  %154 = shl i32 1, %153, !dbg !9250
  store i32 %154, i32* %20, align 4, !dbg !9251
  store i32 0, i32* %16, align 4, !dbg !9252
  br label %155, !dbg !9254

155:                                              ; preds = %268, %150
  %156 = load i32, i32* %16, align 4, !dbg !9255
  %157 = load i32, i32* %5, align 4, !dbg !9257
  %158 = icmp ult i32 %156, %157, !dbg !9258
  br i1 %158, label %159, label %271, !dbg !9259

159:                                              ; preds = %155
  %160 = load i8*, i8** %6, align 8, !dbg !9260
  %161 = load i32, i32* %16, align 4, !dbg !9263
  %162 = zext i32 %161 to i64, !dbg !9260
  %163 = getelementptr inbounds i8, i8* %160, i64 %162, !dbg !9260
  %164 = load i8, i8* %163, align 1, !dbg !9260
  %165 = zext i8 %164 to i32, !dbg !9260
  store i32 %165, i32* %15, align 4, !dbg !9264
  %166 = icmp eq i32 %165, 0, !dbg !9265
  br i1 %166, label %167, label %168, !dbg !9266

167:                                              ; preds = %159
  br label %268, !dbg !9267

168:                                              ; preds = %159
  %169 = load i32, i32* %15, align 4, !dbg !9268
  %170 = zext i32 %169 to i64, !dbg !9269
  %171 = getelementptr inbounds [18 x i16], [18 x i16]* %11, i64 0, i64 %170, !dbg !9269
  %172 = load i16, i16* %171, align 2, !dbg !9269
  %173 = zext i16 %172 to i32, !dbg !9269
  %174 = load i32, i32* %15, align 4, !dbg !9270
  %175 = zext i32 %174 to i64, !dbg !9271
  %176 = getelementptr inbounds [17 x i16], [17 x i16]* %10, i64 0, i64 %175, !dbg !9271
  %177 = load i16, i16* %176, align 2, !dbg !9271
  %178 = zext i16 %177 to i32, !dbg !9271
  %179 = add nsw i32 %173, %178, !dbg !9272
  store i32 %179, i32* %19, align 4, !dbg !9273
  %180 = load i32, i32* %15, align 4, !dbg !9274
  %181 = load i32, i32* %7, align 4, !dbg !9276
  %182 = icmp ule i32 %180, %181, !dbg !9277
  br i1 %182, label %183, label %204, !dbg !9278

183:                                              ; preds = %168
  %184 = load i32, i32* %15, align 4, !dbg !9279
  %185 = zext i32 %184 to i64, !dbg !9282
  %186 = getelementptr inbounds [18 x i16], [18 x i16]* %11, i64 0, i64 %185, !dbg !9282
  %187 = load i16, i16* %186, align 2, !dbg !9282
  %188 = zext i16 %187 to i32, !dbg !9282
  store i32 %188, i32* %13, align 4, !dbg !9283
  br label %189, !dbg !9284

189:                                              ; preds = %200, %183
  %190 = load i32, i32* %13, align 4, !dbg !9285
  %191 = load i32, i32* %19, align 4, !dbg !9287
  %192 = icmp ult i32 %190, %191, !dbg !9288
  br i1 %192, label %193, label %203, !dbg !9289

193:                                              ; preds = %189
  %194 = load i32, i32* %16, align 4, !dbg !9290
  %195 = trunc i32 %194 to i16, !dbg !9290
  %196 = load i16*, i16** %8, align 8, !dbg !9291
  %197 = load i32, i32* %13, align 4, !dbg !9292
  %198 = zext i32 %197 to i64, !dbg !9291
  %199 = getelementptr inbounds i16, i16* %196, i64 %198, !dbg !9291
  store i16 %195, i16* %199, align 2, !dbg !9293
  br label %200, !dbg !9291

200:                                              ; preds = %193
  %201 = load i32, i32* %13, align 4, !dbg !9294
  %202 = add i32 %201, 1, !dbg !9294
  store i32 %202, i32* %13, align 4, !dbg !9294
  br label %189, !dbg !9295, !llvm.loop !9296

203:                                              ; preds = %189
  br label %262, !dbg !9298

204:                                              ; preds = %168
  %205 = load i32, i32* %15, align 4, !dbg !9299
  %206 = zext i32 %205 to i64, !dbg !9301
  %207 = getelementptr inbounds [18 x i16], [18 x i16]* %11, i64 0, i64 %206, !dbg !9301
  %208 = load i16, i16* %207, align 2, !dbg !9301
  %209 = zext i16 %208 to i32, !dbg !9301
  store i32 %209, i32* %14, align 4, !dbg !9302
  %210 = load i16*, i16** %8, align 8, !dbg !9303
  %211 = load i32, i32* %14, align 4, !dbg !9304
  %212 = load i32, i32* %17, align 4, !dbg !9305
  %213 = lshr i32 %211, %212, !dbg !9306
  %214 = zext i32 %213 to i64, !dbg !9303
  %215 = getelementptr inbounds i16, i16* %210, i64 %214, !dbg !9303
  store i16* %215, i16** %12, align 8, !dbg !9307
  %216 = load i32, i32* %15, align 4, !dbg !9308
  %217 = load i32, i32* %7, align 4, !dbg !9309
  %218 = sub i32 %216, %217, !dbg !9310
  store i32 %218, i32* %13, align 4, !dbg !9311
  br label %219, !dbg !9312

219:                                              ; preds = %253, %204
  %220 = load i32, i32* %13, align 4, !dbg !9313
  %221 = icmp ne i32 %220, 0, !dbg !9314
  br i1 %221, label %222, label %258, !dbg !9312

222:                                              ; preds = %219
  %223 = load i16*, i16** %12, align 8, !dbg !9315
  %224 = load i16, i16* %223, align 2, !dbg !9318
  %225 = zext i16 %224 to i32, !dbg !9318
  %226 = icmp eq i32 %225, 0, !dbg !9319
  br i1 %226, label %227, label %238, !dbg !9320

227:                                              ; preds = %222
  %228 = load i32, i32* %18, align 4, !dbg !9321
  %229 = zext i32 %228 to i64, !dbg !9323
  %230 = getelementptr inbounds [0 x i16], [0 x i16]* bitcast ([65536 x i16]* @prev to [0 x i16]*), i64 0, i64 %229, !dbg !9323
  store i16 0, i16* %230, align 2, !dbg !9324
  %231 = load i32, i32* %18, align 4, !dbg !9325
  %232 = zext i32 %231 to i64, !dbg !9326
  %233 = getelementptr inbounds i16, i16* getelementptr inbounds ([65536 x i16], [65536 x i16]* @prev, i64 0, i64 32768), i64 %232, !dbg !9326
  store i16 0, i16* %233, align 2, !dbg !9327
  %234 = load i32, i32* %18, align 4, !dbg !9328
  %235 = add i32 %234, 1, !dbg !9328
  store i32 %235, i32* %18, align 4, !dbg !9328
  %236 = trunc i32 %234 to i16, !dbg !9329
  %237 = load i16*, i16** %12, align 8, !dbg !9330
  store i16 %236, i16* %237, align 2, !dbg !9331
  br label %238, !dbg !9332

238:                                              ; preds = %227, %222
  %239 = load i32, i32* %14, align 4, !dbg !9333
  %240 = load i32, i32* %20, align 4, !dbg !9335
  %241 = and i32 %239, %240, !dbg !9336
  %242 = icmp ne i32 %241, 0, !dbg !9336
  br i1 %242, label %243, label %248, !dbg !9337

243:                                              ; preds = %238
  %244 = load i16*, i16** %12, align 8, !dbg !9338
  %245 = load i16, i16* %244, align 2, !dbg !9339
  %246 = zext i16 %245 to i64, !dbg !9340
  %247 = getelementptr inbounds i16, i16* getelementptr inbounds ([65536 x i16], [65536 x i16]* @prev, i64 0, i64 32768), i64 %246, !dbg !9340
  store i16* %247, i16** %12, align 8, !dbg !9341
  br label %253, !dbg !9342

248:                                              ; preds = %238
  %249 = load i16*, i16** %12, align 8, !dbg !9343
  %250 = load i16, i16* %249, align 2, !dbg !9344
  %251 = zext i16 %250 to i64, !dbg !9345
  %252 = getelementptr inbounds [0 x i16], [0 x i16]* bitcast ([65536 x i16]* @prev to [0 x i16]*), i64 0, i64 %251, !dbg !9345
  store i16* %252, i16** %12, align 8, !dbg !9346
  br label %253

253:                                              ; preds = %248, %243
  %254 = load i32, i32* %14, align 4, !dbg !9347
  %255 = shl i32 %254, 1, !dbg !9347
  store i32 %255, i32* %14, align 4, !dbg !9347
  %256 = load i32, i32* %13, align 4, !dbg !9348
  %257 = add i32 %256, -1, !dbg !9348
  store i32 %257, i32* %13, align 4, !dbg !9348
  br label %219, !dbg !9312, !llvm.loop !9349

258:                                              ; preds = %219
  %259 = load i32, i32* %16, align 4, !dbg !9351
  %260 = trunc i32 %259 to i16, !dbg !9351
  %261 = load i16*, i16** %12, align 8, !dbg !9352
  store i16 %260, i16* %261, align 2, !dbg !9353
  br label %262

262:                                              ; preds = %258, %203
  %263 = load i32, i32* %19, align 4, !dbg !9354
  %264 = trunc i32 %263 to i16, !dbg !9354
  %265 = load i32, i32* %15, align 4, !dbg !9355
  %266 = zext i32 %265 to i64, !dbg !9356
  %267 = getelementptr inbounds [18 x i16], [18 x i16]* %11, i64 0, i64 %266, !dbg !9356
  store i16 %264, i16* %267, align 2, !dbg !9357
  br label %268, !dbg !9358

268:                                              ; preds = %262, %167
  %269 = load i32, i32* %16, align 4, !dbg !9359
  %270 = add i32 %269, 1, !dbg !9359
  store i32 %270, i32* %16, align 4, !dbg !9359
  br label %155, !dbg !9360, !llvm.loop !9361

271:                                              ; preds = %155
  ret void, !dbg !9363
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @huf_decode_start() #0 !dbg !9364 {
  call void @init_getbits(), !dbg !9365
  store i32 0, i32* @blocksize, align 4, !dbg !9366
  ret void, !dbg !9367
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @init_getbits() #0 !dbg !9368 {
  store i16 0, i16* @bitbuf.248, align 2, !dbg !9369
  store i32 0, i32* @subbitbuf, align 4, !dbg !9370
  store i32 0, i32* @bitcount, align 4, !dbg !9371
  call void @fillbuf(i32 noundef 16), !dbg !9372
  ret void, !dbg !9373
}

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { nounwind readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { argmemonly nofree nounwind willreturn }
attributes #6 = { nounwind readnone willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { noreturn nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { argmemonly nofree nounwind willreturn writeonly }
attributes #9 = { nounwind readonly willreturn }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { nounwind readnone willreturn }

!llvm.dbg.cu = !{!2, !309, !318, !363, !496, !512, !524, !570, !641, !578, !583, !592, !617, !643}
!llvm.ident = !{!645, !645, !645, !645, !645, !645, !645, !645, !645, !645, !645, !645, !645, !645}
!llvm.module.flags = !{!646, !647, !648, !649, !650}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "ascii", scope: !2, file: !3, line: 201, type: !28, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 14.0.5", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !21, globals: !103, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "gzip.c", directory: "/ws/gzip-1.2.4a/gzip-1.2.4a", checksumkind: CSK_MD5, checksum: "1845c1f06d436454906c47d838400822")
!4 = !{!5}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 46, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "/usr/include/ctype.h", directory: "", checksumkind: CSK_MD5, checksum: "36575f934ef4fe7e9d50a3cb17bd5c66")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20}
!9 = !DIEnumerator(name: "_ISupper", value: 256)
!10 = !DIEnumerator(name: "_ISlower", value: 512)
!11 = !DIEnumerator(name: "_ISalpha", value: 1024)
!12 = !DIEnumerator(name: "_ISdigit", value: 2048)
!13 = !DIEnumerator(name: "_ISxdigit", value: 4096)
!14 = !DIEnumerator(name: "_ISspace", value: 8192)
!15 = !DIEnumerator(name: "_ISprint", value: 16384)
!16 = !DIEnumerator(name: "_ISgraph", value: 32768)
!17 = !DIEnumerator(name: "_ISblank", value: 1)
!18 = !DIEnumerator(name: "_IScntrl", value: 2)
!19 = !DIEnumerator(name: "_ISpunct", value: 4)
!20 = !DIEnumerator(name: "_ISalnum", value: 8)
!21 = !{!22, !23, !29, !30, !31, !40, !28, !92, !95, !7, !39, !63, !61, !96, !98, !99}
!22 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!23 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !24, line: 72, baseType: !25)
!24 = !DIFile(filename: "/usr/include/signal.h", directory: "", checksumkind: CSK_MD5, checksum: "f0ccc98b488c777571beae1a47763d91")
!25 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !26, size: 64)
!26 = !DISubroutineType(types: !27)
!27 = !{null, !28}
!28 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!29 = !DIDerivedType(tag: DW_TAG_typedef, name: "sig_type", file: !3, line: 141, baseType: !25)
!30 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !28, size: 64)
!31 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !32, size: 64)
!32 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !33, line: 7, baseType: !34)
!33 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "", checksumkind: CSK_MD5, checksum: "571f9fb6223c42439075fdde11a0de5d")
!34 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !35, line: 49, size: 1728, elements: !36)
!35 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "", checksumkind: CSK_MD5, checksum: "f3c970561f3408448ce03a9676ead8f4")
!36 = !{!37, !38, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !54, !56, !57, !58, !62, !64, !66, !70, !73, !75, !78, !81, !82, !83, !87, !88}
!37 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !34, file: !35, line: 51, baseType: !28, size: 32)
!38 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !34, file: !35, line: 54, baseType: !39, size: 64, offset: 64)
!39 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !40, size: 64)
!40 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!41 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !34, file: !35, line: 55, baseType: !39, size: 64, offset: 128)
!42 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !34, file: !35, line: 56, baseType: !39, size: 64, offset: 192)
!43 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !34, file: !35, line: 57, baseType: !39, size: 64, offset: 256)
!44 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !34, file: !35, line: 58, baseType: !39, size: 64, offset: 320)
!45 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !34, file: !35, line: 59, baseType: !39, size: 64, offset: 384)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !34, file: !35, line: 60, baseType: !39, size: 64, offset: 448)
!47 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !34, file: !35, line: 61, baseType: !39, size: 64, offset: 512)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !34, file: !35, line: 64, baseType: !39, size: 64, offset: 576)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !34, file: !35, line: 65, baseType: !39, size: 64, offset: 640)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !34, file: !35, line: 66, baseType: !39, size: 64, offset: 704)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !34, file: !35, line: 68, baseType: !52, size: 64, offset: 768)
!52 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !53, size: 64)
!53 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !35, line: 36, flags: DIFlagFwdDecl)
!54 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !34, file: !35, line: 70, baseType: !55, size: 64, offset: 832)
!55 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !34, size: 64)
!56 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !34, file: !35, line: 72, baseType: !28, size: 32, offset: 896)
!57 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !34, file: !35, line: 73, baseType: !28, size: 32, offset: 928)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !34, file: !35, line: 74, baseType: !59, size: 64, offset: 960)
!59 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !60, line: 152, baseType: !61)
!60 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "", checksumkind: CSK_MD5, checksum: "f6304b1a6dcfc6bee76e9a51043b5090")
!61 = !DIBasicType(name: "long", size: 64, encoding: DW_ATE_signed)
!62 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !34, file: !35, line: 77, baseType: !63, size: 16, offset: 1024)
!63 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!64 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !34, file: !35, line: 78, baseType: !65, size: 8, offset: 1040)
!65 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !34, file: !35, line: 79, baseType: !67, size: 8, offset: 1048)
!67 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 8, elements: !68)
!68 = !{!69}
!69 = !DISubrange(count: 1)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !34, file: !35, line: 81, baseType: !71, size: 64, offset: 1088)
!71 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !72, size: 64)
!72 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !35, line: 43, baseType: null)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !34, file: !35, line: 89, baseType: !74, size: 64, offset: 1152)
!74 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !60, line: 153, baseType: !61)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !34, file: !35, line: 91, baseType: !76, size: 64, offset: 1216)
!76 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !77, size: 64)
!77 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !35, line: 37, flags: DIFlagFwdDecl)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !34, file: !35, line: 92, baseType: !79, size: 64, offset: 1280)
!79 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !80, size: 64)
!80 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !35, line: 38, flags: DIFlagFwdDecl)
!81 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !34, file: !35, line: 93, baseType: !55, size: 64, offset: 1344)
!82 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !34, file: !35, line: 94, baseType: !22, size: 64, offset: 1408)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !34, file: !35, line: 95, baseType: !84, size: 64, offset: 1472)
!84 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !85, line: 46, baseType: !86)
!85 = !DIFile(filename: "/opt/llvm-project/14.0.5/lib/clang/14.0.5/include/stddef.h", directory: "", checksumkind: CSK_MD5, checksum: "2499dd2361b915724b073282bea3a7bc")
!86 = !DIBasicType(name: "unsigned long", size: 64, encoding: DW_ATE_unsigned)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !34, file: !35, line: 96, baseType: !28, size: 32, offset: 1536)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !34, file: !35, line: 98, baseType: !89, size: 160, offset: 1568)
!89 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 160, elements: !90)
!90 = !{!91}
!91 = !DISubrange(count: 20)
!92 = !DIDerivedType(tag: DW_TAG_typedef, name: "uch", file: !93, line: 44, baseType: !94)
!93 = !DIFile(filename: "./gzip.h", directory: "/ws/gzip-1.2.4a/gzip-1.2.4a", checksumkind: CSK_MD5, checksum: "f363318f4c0c30f71839d99ac6b7945a")
!94 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!95 = !DIDerivedType(tag: DW_TAG_typedef, name: "ulg", file: !93, line: 46, baseType: !86)
!96 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !97, line: 85, baseType: !59)
!97 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "", checksumkind: CSK_MD5, checksum: "20e2108af45064f5c7b77fc9416f0cce")
!98 = !DIDerivedType(tag: DW_TAG_typedef, name: "ush", file: !93, line: 45, baseType: !63)
!99 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !100, size: 64)
!100 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !101, line: 7, baseType: !102)
!101 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/time_t.h", directory: "", checksumkind: CSK_MD5, checksum: "49b4e16ef1215de5afdbb283400ab90c")
!102 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !60, line: 160, baseType: !61)
!103 = !{!0, !104, !106, !108, !110, !112, !114, !116, !118, !120, !122, !124, !126, !128, !130, !132, !134, !137, !139, !141, !143, !157, !162, !167, !172, !177, !182, !185, !187, !189, !191, !193, !195, !197, !199, !201, !206, !208, !210, !212, !217, !219, !256, !258, !260, !262, !264, !266, !275, !280, !289, !297, !302, !304}
!104 = !DIGlobalVariableExpression(var: !105, expr: !DIExpression())
!105 = distinct !DIGlobalVariable(name: "to_stdout", scope: !2, file: !3, line: 202, type: !28, isLocal: false, isDefinition: true)
!106 = !DIGlobalVariableExpression(var: !107, expr: !DIExpression())
!107 = distinct !DIGlobalVariable(name: "decompress", scope: !2, file: !3, line: 203, type: !28, isLocal: false, isDefinition: true)
!108 = !DIGlobalVariableExpression(var: !109, expr: !DIExpression())
!109 = distinct !DIGlobalVariable(name: "force", scope: !2, file: !3, line: 204, type: !28, isLocal: false, isDefinition: true)
!110 = !DIGlobalVariableExpression(var: !111, expr: !DIExpression())
!111 = distinct !DIGlobalVariable(name: "no_name", scope: !2, file: !3, line: 205, type: !28, isLocal: false, isDefinition: true)
!112 = !DIGlobalVariableExpression(var: !113, expr: !DIExpression())
!113 = distinct !DIGlobalVariable(name: "no_time", scope: !2, file: !3, line: 206, type: !28, isLocal: false, isDefinition: true)
!114 = !DIGlobalVariableExpression(var: !115, expr: !DIExpression())
!115 = distinct !DIGlobalVariable(name: "recursive", scope: !2, file: !3, line: 207, type: !28, isLocal: false, isDefinition: true)
!116 = !DIGlobalVariableExpression(var: !117, expr: !DIExpression())
!117 = distinct !DIGlobalVariable(name: "list", scope: !2, file: !3, line: 208, type: !28, isLocal: false, isDefinition: true)
!118 = !DIGlobalVariableExpression(var: !119, expr: !DIExpression())
!119 = distinct !DIGlobalVariable(name: "verbose", scope: !2, file: !3, line: 209, type: !28, isLocal: false, isDefinition: true)
!120 = !DIGlobalVariableExpression(var: !121, expr: !DIExpression())
!121 = distinct !DIGlobalVariable(name: "quiet", scope: !2, file: !3, line: 210, type: !28, isLocal: false, isDefinition: true)
!122 = !DIGlobalVariableExpression(var: !123, expr: !DIExpression())
!123 = distinct !DIGlobalVariable(name: "do_lzw", scope: !2, file: !3, line: 211, type: !28, isLocal: false, isDefinition: true)
!124 = !DIGlobalVariableExpression(var: !125, expr: !DIExpression())
!125 = distinct !DIGlobalVariable(name: "test", scope: !2, file: !3, line: 212, type: !28, isLocal: false, isDefinition: true)
!126 = !DIGlobalVariableExpression(var: !127, expr: !DIExpression())
!127 = distinct !DIGlobalVariable(name: "maxbits", scope: !2, file: !3, line: 215, type: !28, isLocal: false, isDefinition: true)
!128 = !DIGlobalVariableExpression(var: !129, expr: !DIExpression())
!129 = distinct !DIGlobalVariable(name: "method", scope: !2, file: !3, line: 216, type: !28, isLocal: false, isDefinition: true)
!130 = !DIGlobalVariableExpression(var: !131, expr: !DIExpression())
!131 = distinct !DIGlobalVariable(name: "level", scope: !2, file: !3, line: 217, type: !28, isLocal: false, isDefinition: true)
!132 = !DIGlobalVariableExpression(var: !133, expr: !DIExpression())
!133 = distinct !DIGlobalVariable(name: "exit_code", scope: !2, file: !3, line: 218, type: !28, isLocal: false, isDefinition: true)
!134 = !DIGlobalVariableExpression(var: !135, expr: !DIExpression())
!135 = distinct !DIGlobalVariable(name: "args", scope: !2, file: !3, line: 225, type: !136, isLocal: false, isDefinition: true)
!136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !39, size: 64)
!137 = !DIGlobalVariableExpression(var: !138, expr: !DIExpression())
!138 = distinct !DIGlobalVariable(name: "total_in", scope: !2, file: !3, line: 231, type: !61, isLocal: false, isDefinition: true)
!139 = !DIGlobalVariableExpression(var: !140, expr: !DIExpression())
!140 = distinct !DIGlobalVariable(name: "total_out", scope: !2, file: !3, line: 232, type: !61, isLocal: false, isDefinition: true)
!141 = !DIGlobalVariableExpression(var: !142, expr: !DIExpression())
!142 = distinct !DIGlobalVariable(name: "remove_ofname", scope: !2, file: !3, line: 235, type: !28, isLocal: false, isDefinition: true)
!143 = !DIGlobalVariableExpression(var: !144, expr: !DIExpression())
!144 = distinct !DIGlobalVariable(name: "longopts", scope: !2, file: !3, line: 243, type: !145, isLocal: false, isDefinition: true)
!145 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 6144, elements: !155)
!146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !147, line: 77, size: 256, elements: !148)
!147 = !DIFile(filename: "./getopt.h", directory: "/ws/gzip-1.2.4a/gzip-1.2.4a", checksumkind: CSK_MD5, checksum: "5458e054f9c884c17bfc867ae61a38ba")
!148 = !{!149, !152, !153, !154}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !146, file: !147, line: 80, baseType: !150, size: 64)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 64)
!151 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !40)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !146, file: !147, line: 86, baseType: !28, size: 32, offset: 64)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !146, file: !147, line: 87, baseType: !30, size: 64, offset: 128)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !146, file: !147, line: 88, baseType: !28, size: 32, offset: 192)
!155 = !{!156}
!156 = !DISubrange(count: 24)
!157 = !DIGlobalVariableExpression(var: !158, expr: !DIExpression())
!158 = distinct !DIGlobalVariable(name: "work", scope: !2, file: !3, line: 296, type: !159, isLocal: false, isDefinition: true)
!159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !160, size: 64)
!160 = !DISubroutineType(types: !161)
!161 = !{!28, !28, !28}
!162 = !DIGlobalVariableExpression(var: !163, expr: !DIExpression())
!163 = distinct !DIGlobalVariable(name: "inbuf", scope: !2, file: !3, line: 188, type: !164, isLocal: false, isDefinition: true)
!164 = !DICompositeType(tag: DW_TAG_array_type, baseType: !92, size: 262656, elements: !165)
!165 = !{!166}
!166 = !DISubrange(count: 32832)
!167 = !DIGlobalVariableExpression(var: !168, expr: !DIExpression())
!168 = distinct !DIGlobalVariable(name: "outbuf", scope: !2, file: !3, line: 189, type: !169, isLocal: false, isDefinition: true)
!169 = !DICompositeType(tag: DW_TAG_array_type, baseType: !92, size: 147456, elements: !170)
!170 = !{!171}
!171 = !DISubrange(count: 18432)
!172 = !DIGlobalVariableExpression(var: !173, expr: !DIExpression())
!173 = distinct !DIGlobalVariable(name: "d_buf", scope: !2, file: !3, line: 190, type: !174, isLocal: false, isDefinition: true)
!174 = !DICompositeType(tag: DW_TAG_array_type, baseType: !98, size: 524288, elements: !175)
!175 = !{!176}
!176 = !DISubrange(count: 32768)
!177 = !DIGlobalVariableExpression(var: !178, expr: !DIExpression())
!178 = distinct !DIGlobalVariable(name: "window", scope: !2, file: !3, line: 191, type: !179, isLocal: false, isDefinition: true)
!179 = !DICompositeType(tag: DW_TAG_array_type, baseType: !92, size: 524288, elements: !180)
!180 = !{!181}
!181 = !DISubrange(count: 65536)
!182 = !DIGlobalVariableExpression(var: !183, expr: !DIExpression())
!183 = distinct !DIGlobalVariable(name: "prev", scope: !2, file: !3, line: 193, type: !184, isLocal: false, isDefinition: true)
!184 = !DICompositeType(tag: DW_TAG_array_type, baseType: !98, size: 1048576, elements: !180)
!185 = !DIGlobalVariableExpression(var: !186, expr: !DIExpression())
!186 = distinct !DIGlobalVariable(name: "foreground", scope: !2, file: !3, line: 213, type: !28, isLocal: false, isDefinition: true)
!187 = !DIGlobalVariableExpression(var: !188, expr: !DIExpression())
!188 = distinct !DIGlobalVariable(name: "progname", scope: !2, file: !3, line: 214, type: !39, isLocal: false, isDefinition: true)
!189 = !DIGlobalVariableExpression(var: !190, expr: !DIExpression())
!190 = distinct !DIGlobalVariable(name: "save_orig_name", scope: !2, file: !3, line: 219, type: !28, isLocal: false, isDefinition: true)
!191 = !DIGlobalVariableExpression(var: !192, expr: !DIExpression())
!192 = distinct !DIGlobalVariable(name: "last_member", scope: !2, file: !3, line: 220, type: !28, isLocal: false, isDefinition: true)
!193 = !DIGlobalVariableExpression(var: !194, expr: !DIExpression())
!194 = distinct !DIGlobalVariable(name: "part_nb", scope: !2, file: !3, line: 221, type: !28, isLocal: false, isDefinition: true)
!195 = !DIGlobalVariableExpression(var: !196, expr: !DIExpression())
!196 = distinct !DIGlobalVariable(name: "time_stamp", scope: !2, file: !3, line: 222, type: !61, isLocal: false, isDefinition: true)
!197 = !DIGlobalVariableExpression(var: !198, expr: !DIExpression())
!198 = distinct !DIGlobalVariable(name: "ifile_size", scope: !2, file: !3, line: 223, type: !61, isLocal: false, isDefinition: true)
!199 = !DIGlobalVariableExpression(var: !200, expr: !DIExpression())
!200 = distinct !DIGlobalVariable(name: "env", scope: !2, file: !3, line: 224, type: !39, isLocal: false, isDefinition: true)
!201 = !DIGlobalVariableExpression(var: !202, expr: !DIExpression())
!202 = distinct !DIGlobalVariable(name: "z_suffix", scope: !2, file: !3, line: 226, type: !203, isLocal: false, isDefinition: true)
!203 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 248, elements: !204)
!204 = !{!205}
!205 = !DISubrange(count: 31)
!206 = !DIGlobalVariableExpression(var: !207, expr: !DIExpression())
!207 = distinct !DIGlobalVariable(name: "z_len", scope: !2, file: !3, line: 227, type: !28, isLocal: false, isDefinition: true)
!208 = !DIGlobalVariableExpression(var: !209, expr: !DIExpression())
!209 = distinct !DIGlobalVariable(name: "bytes_in", scope: !2, file: !3, line: 229, type: !61, isLocal: false, isDefinition: true)
!210 = !DIGlobalVariableExpression(var: !211, expr: !DIExpression())
!211 = distinct !DIGlobalVariable(name: "bytes_out", scope: !2, file: !3, line: 230, type: !61, isLocal: false, isDefinition: true)
!212 = !DIGlobalVariableExpression(var: !213, expr: !DIExpression())
!213 = distinct !DIGlobalVariable(name: "ifname", scope: !2, file: !3, line: 233, type: !214, isLocal: false, isDefinition: true)
!214 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 8192, elements: !215)
!215 = !{!216}
!216 = !DISubrange(count: 1024)
!217 = !DIGlobalVariableExpression(var: !218, expr: !DIExpression())
!218 = distinct !DIGlobalVariable(name: "ofname", scope: !2, file: !3, line: 234, type: !214, isLocal: false, isDefinition: true)
!219 = !DIGlobalVariableExpression(var: !220, expr: !DIExpression())
!220 = distinct !DIGlobalVariable(name: "istat", scope: !2, file: !3, line: 236, type: !221, isLocal: false, isDefinition: true)
!221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !222, line: 46, size: 1152, elements: !223)
!222 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "", checksumkind: CSK_MD5, checksum: "f8d5b541c4f89219f8e8ff8c3e2940d9")
!223 = !{!224, !226, !228, !230, !232, !234, !236, !237, !238, !239, !241, !243, !250, !251, !252}
!224 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !221, file: !222, line: 48, baseType: !225, size: 64)
!225 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !60, line: 145, baseType: !86)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !221, file: !222, line: 53, baseType: !227, size: 64, offset: 64)
!227 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !60, line: 148, baseType: !86)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !221, file: !222, line: 61, baseType: !229, size: 64, offset: 128)
!229 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !60, line: 151, baseType: !86)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !221, file: !222, line: 62, baseType: !231, size: 32, offset: 192)
!231 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !60, line: 150, baseType: !7)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !221, file: !222, line: 64, baseType: !233, size: 32, offset: 224)
!233 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !60, line: 146, baseType: !7)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !221, file: !222, line: 65, baseType: !235, size: 32, offset: 256)
!235 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !60, line: 147, baseType: !7)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !221, file: !222, line: 67, baseType: !28, size: 32, offset: 288)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !221, file: !222, line: 69, baseType: !225, size: 64, offset: 320)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !221, file: !222, line: 74, baseType: !59, size: 64, offset: 384)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !221, file: !222, line: 78, baseType: !240, size: 64, offset: 448)
!240 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !60, line: 174, baseType: !61)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !221, file: !222, line: 80, baseType: !242, size: 64, offset: 512)
!242 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !60, line: 179, baseType: !61)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !221, file: !222, line: 91, baseType: !244, size: 128, offset: 576)
!244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !245, line: 10, size: 128, elements: !246)
!245 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "", checksumkind: CSK_MD5, checksum: "33f28095c70788baa6982a79b13f774b")
!246 = !{!247, !248}
!247 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !244, file: !245, line: 12, baseType: !102, size: 64)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !244, file: !245, line: 16, baseType: !249, size: 64, offset: 64)
!249 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !60, line: 196, baseType: !61)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !221, file: !222, line: 92, baseType: !244, size: 128, offset: 704)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !221, file: !222, line: 93, baseType: !244, size: 128, offset: 832)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !221, file: !222, line: 106, baseType: !253, size: 192, offset: 960)
!253 = !DICompositeType(tag: DW_TAG_array_type, baseType: !249, size: 192, elements: !254)
!254 = !{!255}
!255 = !DISubrange(count: 3)
!256 = !DIGlobalVariableExpression(var: !257, expr: !DIExpression())
!257 = distinct !DIGlobalVariable(name: "ifd", scope: !2, file: !3, line: 237, type: !28, isLocal: false, isDefinition: true)
!258 = !DIGlobalVariableExpression(var: !259, expr: !DIExpression())
!259 = distinct !DIGlobalVariable(name: "ofd", scope: !2, file: !3, line: 238, type: !28, isLocal: false, isDefinition: true)
!260 = !DIGlobalVariableExpression(var: !261, expr: !DIExpression())
!261 = distinct !DIGlobalVariable(name: "insize", scope: !2, file: !3, line: 239, type: !7, isLocal: false, isDefinition: true)
!262 = !DIGlobalVariableExpression(var: !263, expr: !DIExpression())
!263 = distinct !DIGlobalVariable(name: "inptr", scope: !2, file: !3, line: 240, type: !7, isLocal: false, isDefinition: true)
!264 = !DIGlobalVariableExpression(var: !265, expr: !DIExpression())
!265 = distinct !DIGlobalVariable(name: "outcnt", scope: !2, file: !3, line: 241, type: !7, isLocal: false, isDefinition: true)
!266 = !DIGlobalVariableExpression(var: !267, expr: !DIExpression())
!267 = distinct !DIGlobalVariable(name: "help_msg", scope: !268, file: !3, line: 328, type: !272, isLocal: true, isDefinition: true)
!268 = distinct !DISubprogram(name: "help", scope: !3, file: !3, line: 326, type: !269, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !271)
!269 = !DISubroutineType(types: !270)
!270 = !{null}
!271 = !{}
!272 = !DICompositeType(tag: DW_TAG_array_type, baseType: !39, size: 1152, elements: !273)
!273 = !{!274}
!274 = !DISubrange(count: 18)
!275 = !DIGlobalVariableExpression(var: !276, expr: !DIExpression())
!276 = distinct !DIGlobalVariable(name: "license_msg", scope: !2, file: !3, line: 12, type: !277, isLocal: true, isDefinition: true)
!277 = !DICompositeType(tag: DW_TAG_array_type, baseType: !39, size: 960, elements: !278)
!278 = !{!279}
!279 = !DISubrange(count: 15)
!280 = !DIGlobalVariableExpression(var: !281, expr: !DIExpression())
!281 = distinct !DIGlobalVariable(name: "suffixes", scope: !282, file: !3, line: 1002, type: !286, isLocal: true, isDefinition: true)
!282 = distinct !DISubprogram(name: "get_istat", scope: !3, file: !3, line: 997, type: !283, scopeLine: 1000, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !271)
!283 = !DISubroutineType(types: !284)
!284 = !{!28, !39, !285}
!285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !221, size: 64)
!286 = !DICompositeType(tag: DW_TAG_array_type, baseType: !39, size: 384, elements: !287)
!287 = !{!288}
!288 = !DISubrange(count: 6)
!289 = !DIGlobalVariableExpression(var: !290, expr: !DIExpression())
!290 = distinct !DIGlobalVariable(name: "known_suffixes", scope: !291, file: !3, line: 953, type: !294, isLocal: true, isDefinition: true)
!291 = distinct !DISubprogram(name: "get_suffix", scope: !3, file: !3, line: 948, type: !292, scopeLine: 950, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !271)
!292 = !DISubroutineType(types: !293)
!293 = !{!39, !39}
!294 = !DICompositeType(tag: DW_TAG_array_type, baseType: !39, size: 576, elements: !295)
!295 = !{!296}
!296 = !DISubrange(count: 9)
!297 = !DIGlobalVariableExpression(var: !298, expr: !DIExpression())
!298 = distinct !DIGlobalVariable(name: "first_time", scope: !299, file: !3, line: 1324, type: !28, isLocal: true, isDefinition: true)
!299 = distinct !DISubprogram(name: "do_list", scope: !3, file: !3, line: 1319, type: !300, scopeLine: 1322, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !271)
!300 = !DISubroutineType(types: !301)
!301 = !{null, !28, !28}
!302 = !DIGlobalVariableExpression(var: !303, expr: !DIExpression())
!303 = distinct !DIGlobalVariable(name: "methods", scope: !299, file: !3, line: 1325, type: !294, isLocal: true, isDefinition: true)
!304 = !DIGlobalVariableExpression(var: !305, expr: !DIExpression())
!305 = distinct !DIGlobalVariable(name: "in_exit", scope: !306, file: !3, line: 1715, type: !28, isLocal: true, isDefinition: true)
!306 = distinct !DISubprogram(name: "do_exit", scope: !3, file: !3, line: 1712, type: !26, scopeLine: 1714, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !271)
!307 = !DIGlobalVariableExpression(var: !308, expr: !DIExpression())
!308 = distinct !DIGlobalVariable(name: "crc", scope: !309, file: !310, line: 25, type: !95, isLocal: true, isDefinition: true)
!309 = distinct !DICompileUnit(language: DW_LANG_C99, file: !310, producer: "clang version 14.0.5", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !311, globals: !313, splitDebugInlining: false, nameTableKind: None)
!310 = !DIFile(filename: "zip.c", directory: "/ws/gzip-1.2.4a/gzip-1.2.4a", checksumkind: CSK_MD5, checksum: "af4738ce1f7b91f1fe445fb0137f0189")
!311 = !{!92, !98, !95, !61, !7, !28, !312}
!312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !92, size: 64)
!313 = !{!307, !314}
!314 = !DIGlobalVariableExpression(var: !315, expr: !DIExpression())
!315 = distinct !DIGlobalVariable(name: "header_bytes", scope: !309, file: !310, line: 26, type: !61, isLocal: false, isDefinition: true)
!316 = !DIGlobalVariableExpression(var: !317, expr: !DIExpression())
!317 = distinct !DIGlobalVariable(name: "window_size", scope: !318, file: !319, line: 154, type: !95, isLocal: false, isDefinition: true)
!318 = distinct !DICompileUnit(language: DW_LANG_C99, file: !319, producer: "clang version 14.0.5", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !320, globals: !324, splitDebugInlining: false, nameTableKind: None)
!319 = !DIFile(filename: "deflate.c", directory: "/ws/gzip-1.2.4a/gzip-1.2.4a", checksumkind: CSK_MD5, checksum: "9eb9f328f30edfee6f40366a63624cc9")
!320 = !{!321, !39, !7, !322, !28, !22, !61, !95, !323}
!321 = !DIDerivedType(tag: DW_TAG_typedef, name: "voidp", file: !93, line: 14, baseType: !22)
!322 = !DIDerivedType(tag: DW_TAG_typedef, name: "IPos", file: !319, line: 129, baseType: !7)
!323 = !DIDerivedType(tag: DW_TAG_typedef, name: "Pos", file: !319, line: 128, baseType: !98)
!324 = !{!316, !325, !327, !329, !331, !333, !335, !337, !339, !341, !343, !345, !347, !349}
!325 = !DIGlobalVariableExpression(var: !326, expr: !DIExpression())
!326 = distinct !DIGlobalVariable(name: "block_start", scope: !318, file: !319, line: 159, type: !61, isLocal: false, isDefinition: true)
!327 = !DIGlobalVariableExpression(var: !328, expr: !DIExpression())
!328 = distinct !DIGlobalVariable(name: "ins_h", scope: !318, file: !319, line: 164, type: !7, isLocal: true, isDefinition: true)
!329 = !DIGlobalVariableExpression(var: !330, expr: !DIExpression())
!330 = distinct !DIGlobalVariable(name: "prev_length", scope: !318, file: !319, line: 173, type: !7, isLocal: false, isDefinition: true)
!331 = !DIGlobalVariableExpression(var: !332, expr: !DIExpression())
!332 = distinct !DIGlobalVariable(name: "strstart", scope: !318, file: !319, line: 178, type: !7, isLocal: false, isDefinition: true)
!333 = !DIGlobalVariableExpression(var: !334, expr: !DIExpression())
!334 = distinct !DIGlobalVariable(name: "match_start", scope: !318, file: !319, line: 179, type: !7, isLocal: false, isDefinition: true)
!335 = !DIGlobalVariableExpression(var: !336, expr: !DIExpression())
!336 = distinct !DIGlobalVariable(name: "eofile", scope: !318, file: !319, line: 180, type: !28, isLocal: true, isDefinition: true)
!337 = !DIGlobalVariableExpression(var: !338, expr: !DIExpression())
!338 = distinct !DIGlobalVariable(name: "lookahead", scope: !318, file: !319, line: 181, type: !7, isLocal: true, isDefinition: true)
!339 = !DIGlobalVariableExpression(var: !340, expr: !DIExpression())
!340 = distinct !DIGlobalVariable(name: "max_chain_length", scope: !318, file: !319, line: 183, type: !7, isLocal: false, isDefinition: true)
!341 = !DIGlobalVariableExpression(var: !342, expr: !DIExpression())
!342 = distinct !DIGlobalVariable(name: "max_lazy_match", scope: !318, file: !319, line: 188, type: !7, isLocal: true, isDefinition: true)
!343 = !DIGlobalVariableExpression(var: !344, expr: !DIExpression())
!344 = distinct !DIGlobalVariable(name: "compr_level", scope: !318, file: !319, line: 199, type: !28, isLocal: true, isDefinition: true)
!345 = !DIGlobalVariableExpression(var: !346, expr: !DIExpression())
!346 = distinct !DIGlobalVariable(name: "good_match", scope: !318, file: !319, line: 202, type: !7, isLocal: false, isDefinition: true)
!347 = !DIGlobalVariableExpression(var: !348, expr: !DIExpression())
!348 = distinct !DIGlobalVariable(name: "nice_match", scope: !318, file: !319, line: 222, type: !28, isLocal: false, isDefinition: true)
!349 = !DIGlobalVariableExpression(var: !350, expr: !DIExpression())
!350 = distinct !DIGlobalVariable(name: "configuration_table", scope: !318, file: !319, line: 225, type: !351, isLocal: true, isDefinition: true)
!351 = !DICompositeType(tag: DW_TAG_array_type, baseType: !352, size: 640, elements: !359)
!352 = !DIDerivedType(tag: DW_TAG_typedef, name: "config", file: !319, line: 217, baseType: !353)
!353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "config", file: !319, line: 212, size: 64, elements: !354)
!354 = !{!355, !356, !357, !358}
!355 = !DIDerivedType(tag: DW_TAG_member, name: "good_length", scope: !353, file: !319, line: 213, baseType: !98, size: 16)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "max_lazy", scope: !353, file: !319, line: 214, baseType: !98, size: 16, offset: 16)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "nice_length", scope: !353, file: !319, line: 215, baseType: !98, size: 16, offset: 32)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "max_chain", scope: !353, file: !319, line: 216, baseType: !98, size: 16, offset: 48)
!359 = !{!360}
!360 = !DISubrange(count: 10)
!361 = !DIGlobalVariableExpression(var: !362, expr: !DIExpression())
!362 = distinct !DIGlobalVariable(name: "file_type", scope: !363, file: !364, line: 279, type: !493, isLocal: false, isDefinition: true)
!363 = distinct !DICompileUnit(language: DW_LANG_C99, file: !364, producer: "clang version 14.0.5", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !365, globals: !391, splitDebugInlining: false, nameTableKind: None)
!364 = !DIFile(filename: "trees.c", directory: "/ws/gzip-1.2.4a/gzip-1.2.4a", checksumkind: CSK_MD5, checksum: "0d254b4ea3ee2081b1ed926b151d106d")
!365 = !{!92, !366, !98, !380, !39, !7, !95, !61}
!366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !367, size: 64)
!367 = !DIDerivedType(tag: DW_TAG_typedef, name: "ct_data", file: !364, line: 169, baseType: !368)
!368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ct_data", file: !364, line: 160, size: 32, elements: !369)
!369 = !{!370, !375}
!370 = !DIDerivedType(tag: DW_TAG_member, name: "fc", scope: !368, file: !364, line: 164, baseType: !371, size: 16)
!371 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !368, file: !364, line: 161, size: 16, elements: !372)
!372 = !{!373, !374}
!373 = !DIDerivedType(tag: DW_TAG_member, name: "freq", scope: !371, file: !364, line: 162, baseType: !98, size: 16)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !371, file: !364, line: 163, baseType: !98, size: 16)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !368, file: !364, line: 168, baseType: !376, size: 16, offset: 16)
!376 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !368, file: !364, line: 165, size: 16, elements: !377)
!377 = !{!378, !379}
!378 = !DIDerivedType(tag: DW_TAG_member, name: "dad", scope: !376, file: !364, line: 166, baseType: !98, size: 16)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !376, file: !364, line: 167, baseType: !98, size: 16)
!380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !381, size: 64)
!381 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree_desc", file: !364, line: 205, baseType: !382)
!382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_desc", file: !364, line: 197, size: 320, elements: !383)
!383 = !{!384, !385, !386, !387, !388, !389, !390}
!384 = !DIDerivedType(tag: DW_TAG_member, name: "dyn_tree", scope: !382, file: !364, line: 198, baseType: !366, size: 64)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "static_tree", scope: !382, file: !364, line: 199, baseType: !366, size: 64, offset: 64)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "extra_bits", scope: !382, file: !364, line: 200, baseType: !30, size: 64, offset: 128)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "extra_base", scope: !382, file: !364, line: 201, baseType: !28, size: 32, offset: 192)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !382, file: !364, line: 202, baseType: !28, size: 32, offset: 224)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "max_length", scope: !382, file: !364, line: 203, baseType: !28, size: 32, offset: 256)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "max_code", scope: !382, file: !364, line: 204, baseType: !28, size: 32, offset: 288)
!391 = !{!392, !397, !402, !407, !412, !417, !422, !427, !432, !435, !440, !442, !444, !446, !448, !450, !452, !454, !456, !361, !458, !460, !462, !464, !469, !471, !473, !476, !479, !481, !483, !485, !490}
!392 = !DIGlobalVariableExpression(var: !393, expr: !DIExpression())
!393 = distinct !DIGlobalVariable(name: "dyn_ltree", scope: !363, file: !364, line: 179, type: !394, isLocal: true, isDefinition: true)
!394 = !DICompositeType(tag: DW_TAG_array_type, baseType: !367, size: 18336, elements: !395)
!395 = !{!396}
!396 = !DISubrange(count: 573)
!397 = !DIGlobalVariableExpression(var: !398, expr: !DIExpression())
!398 = distinct !DIGlobalVariable(name: "dyn_dtree", scope: !363, file: !364, line: 180, type: !399, isLocal: true, isDefinition: true)
!399 = !DICompositeType(tag: DW_TAG_array_type, baseType: !367, size: 1952, elements: !400)
!400 = !{!401}
!401 = !DISubrange(count: 61)
!402 = !DIGlobalVariableExpression(var: !403, expr: !DIExpression())
!403 = distinct !DIGlobalVariable(name: "static_ltree", scope: !363, file: !364, line: 182, type: !404, isLocal: true, isDefinition: true)
!404 = !DICompositeType(tag: DW_TAG_array_type, baseType: !367, size: 9216, elements: !405)
!405 = !{!406}
!406 = !DISubrange(count: 288)
!407 = !DIGlobalVariableExpression(var: !408, expr: !DIExpression())
!408 = distinct !DIGlobalVariable(name: "static_dtree", scope: !363, file: !364, line: 189, type: !409, isLocal: true, isDefinition: true)
!409 = !DICompositeType(tag: DW_TAG_array_type, baseType: !367, size: 960, elements: !410)
!410 = !{!411}
!411 = !DISubrange(count: 30)
!412 = !DIGlobalVariableExpression(var: !413, expr: !DIExpression())
!413 = distinct !DIGlobalVariable(name: "bl_count", scope: !363, file: !364, line: 217, type: !414, isLocal: true, isDefinition: true)
!414 = !DICompositeType(tag: DW_TAG_array_type, baseType: !98, size: 256, elements: !415)
!415 = !{!416}
!416 = !DISubrange(count: 16)
!417 = !DIGlobalVariableExpression(var: !418, expr: !DIExpression())
!418 = distinct !DIGlobalVariable(name: "length_code", scope: !363, file: !364, line: 236, type: !419, isLocal: true, isDefinition: true)
!419 = !DICompositeType(tag: DW_TAG_array_type, baseType: !92, size: 2048, elements: !420)
!420 = !{!421}
!421 = !DISubrange(count: 256)
!422 = !DIGlobalVariableExpression(var: !423, expr: !DIExpression())
!423 = distinct !DIGlobalVariable(name: "dist_code", scope: !363, file: !364, line: 239, type: !424, isLocal: true, isDefinition: true)
!424 = !DICompositeType(tag: DW_TAG_array_type, baseType: !92, size: 4096, elements: !425)
!425 = !{!426}
!426 = !DISubrange(count: 512)
!427 = !DIGlobalVariableExpression(var: !428, expr: !DIExpression())
!428 = distinct !DIGlobalVariable(name: "base_length", scope: !363, file: !364, line: 245, type: !429, isLocal: true, isDefinition: true)
!429 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 928, elements: !430)
!430 = !{!431}
!431 = !DISubrange(count: 29)
!432 = !DIGlobalVariableExpression(var: !433, expr: !DIExpression())
!433 = distinct !DIGlobalVariable(name: "base_dist", scope: !363, file: !364, line: 248, type: !434, isLocal: true, isDefinition: true)
!434 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 960, elements: !410)
!435 = !DIGlobalVariableExpression(var: !436, expr: !DIExpression())
!436 = distinct !DIGlobalVariable(name: "flag_buf", scope: !363, file: !364, line: 256, type: !437, isLocal: true, isDefinition: true)
!437 = !DICompositeType(tag: DW_TAG_array_type, baseType: !92, size: 32768, elements: !438)
!438 = !{!439}
!439 = !DISubrange(count: 4096)
!440 = !DIGlobalVariableExpression(var: !441, expr: !DIExpression())
!441 = distinct !DIGlobalVariable(name: "last_lit", scope: !363, file: !364, line: 261, type: !7, isLocal: true, isDefinition: true)
!442 = !DIGlobalVariableExpression(var: !443, expr: !DIExpression())
!443 = distinct !DIGlobalVariable(name: "last_dist", scope: !363, file: !364, line: 262, type: !7, isLocal: true, isDefinition: true)
!444 = !DIGlobalVariableExpression(var: !445, expr: !DIExpression())
!445 = distinct !DIGlobalVariable(name: "last_flags", scope: !363, file: !364, line: 263, type: !7, isLocal: true, isDefinition: true)
!446 = !DIGlobalVariableExpression(var: !447, expr: !DIExpression())
!447 = distinct !DIGlobalVariable(name: "flags", scope: !363, file: !364, line: 264, type: !92, isLocal: true, isDefinition: true)
!448 = !DIGlobalVariableExpression(var: !449, expr: !DIExpression())
!449 = distinct !DIGlobalVariable(name: "flag_bit", scope: !363, file: !364, line: 265, type: !92, isLocal: true, isDefinition: true)
!450 = !DIGlobalVariableExpression(var: !451, expr: !DIExpression())
!451 = distinct !DIGlobalVariable(name: "opt_len", scope: !363, file: !364, line: 271, type: !95, isLocal: true, isDefinition: true)
!452 = !DIGlobalVariableExpression(var: !453, expr: !DIExpression())
!453 = distinct !DIGlobalVariable(name: "static_len", scope: !363, file: !364, line: 272, type: !95, isLocal: true, isDefinition: true)
!454 = !DIGlobalVariableExpression(var: !455, expr: !DIExpression())
!455 = distinct !DIGlobalVariable(name: "compressed_len", scope: !363, file: !364, line: 274, type: !95, isLocal: true, isDefinition: true)
!456 = !DIGlobalVariableExpression(var: !457, expr: !DIExpression())
!457 = distinct !DIGlobalVariable(name: "input_len", scope: !363, file: !364, line: 276, type: !95, isLocal: true, isDefinition: true)
!458 = !DIGlobalVariableExpression(var: !459, expr: !DIExpression())
!459 = distinct !DIGlobalVariable(name: "file_method", scope: !363, file: !364, line: 280, type: !30, isLocal: false, isDefinition: true)
!460 = !DIGlobalVariableExpression(var: !461, expr: !DIExpression())
!461 = distinct !DIGlobalVariable(name: "extra_lbits", scope: !363, file: !364, line: 94, type: !429, isLocal: true, isDefinition: true)
!462 = !DIGlobalVariableExpression(var: !463, expr: !DIExpression())
!463 = distinct !DIGlobalVariable(name: "extra_dbits", scope: !363, file: !364, line: 97, type: !434, isLocal: true, isDefinition: true)
!464 = !DIGlobalVariableExpression(var: !465, expr: !DIExpression())
!465 = distinct !DIGlobalVariable(name: "bl_tree", scope: !363, file: !364, line: 194, type: !466, isLocal: true, isDefinition: true)
!466 = !DICompositeType(tag: DW_TAG_array_type, baseType: !367, size: 1248, elements: !467)
!467 = !{!468}
!468 = !DISubrange(count: 39)
!469 = !DIGlobalVariableExpression(var: !470, expr: !DIExpression())
!470 = distinct !DIGlobalVariable(name: "heap_len", scope: !363, file: !364, line: 227, type: !28, isLocal: true, isDefinition: true)
!471 = !DIGlobalVariableExpression(var: !472, expr: !DIExpression())
!472 = distinct !DIGlobalVariable(name: "heap_max", scope: !363, file: !364, line: 228, type: !28, isLocal: true, isDefinition: true)
!473 = !DIGlobalVariableExpression(var: !474, expr: !DIExpression())
!474 = distinct !DIGlobalVariable(name: "heap", scope: !363, file: !364, line: 226, type: !475, isLocal: true, isDefinition: true)
!475 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 18336, elements: !395)
!476 = !DIGlobalVariableExpression(var: !477, expr: !DIExpression())
!477 = distinct !DIGlobalVariable(name: "depth", scope: !363, file: !364, line: 233, type: !478, isLocal: true, isDefinition: true)
!478 = !DICompositeType(tag: DW_TAG_array_type, baseType: !92, size: 4584, elements: !395)
!479 = !DIGlobalVariableExpression(var: !480, expr: !DIExpression())
!480 = distinct !DIGlobalVariable(name: "l_desc", scope: !363, file: !364, line: 207, type: !381, isLocal: true, isDefinition: true)
!481 = !DIGlobalVariableExpression(var: !482, expr: !DIExpression())
!482 = distinct !DIGlobalVariable(name: "d_desc", scope: !363, file: !364, line: 210, type: !381, isLocal: true, isDefinition: true)
!483 = !DIGlobalVariableExpression(var: !484, expr: !DIExpression())
!484 = distinct !DIGlobalVariable(name: "bl_desc", scope: !363, file: !364, line: 213, type: !381, isLocal: true, isDefinition: true)
!485 = !DIGlobalVariableExpression(var: !486, expr: !DIExpression())
!486 = distinct !DIGlobalVariable(name: "extra_blbits", scope: !363, file: !364, line: 100, type: !487, isLocal: true, isDefinition: true)
!487 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 608, elements: !488)
!488 = !{!489}
!489 = !DISubrange(count: 19)
!490 = !DIGlobalVariableExpression(var: !491, expr: !DIExpression())
!491 = distinct !DIGlobalVariable(name: "bl_order", scope: !363, file: !364, line: 220, type: !492, isLocal: true, isDefinition: true)
!492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !92, size: 152, elements: !488)
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !98, size: 64)
!494 = !DIGlobalVariableExpression(var: !495, expr: !DIExpression())
!495 = distinct !DIGlobalVariable(name: "zfile", scope: !496, file: !497, line: 70, type: !509, isLocal: true, isDefinition: true)
!496 = distinct !DICompileUnit(language: DW_LANG_C99, file: !497, producer: "clang version 14.0.5", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !498, globals: !499, splitDebugInlining: false, nameTableKind: None)
!497 = !DIFile(filename: "bits.c", directory: "/ws/gzip-1.2.4a/gzip-1.2.4a", checksumkind: CSK_MD5, checksum: "1018120a8d253239c947393cdf2a82d6")
!498 = !{!28, !92, !98}
!499 = !{!494, !500, !502, !504}
!500 = !DIGlobalVariableExpression(var: !501, expr: !DIExpression())
!501 = distinct !DIGlobalVariable(name: "bi_buf", scope: !496, file: !497, line: 72, type: !63, isLocal: true, isDefinition: true)
!502 = !DIGlobalVariableExpression(var: !503, expr: !DIExpression())
!503 = distinct !DIGlobalVariable(name: "bi_valid", scope: !496, file: !497, line: 82, type: !28, isLocal: true, isDefinition: true)
!504 = !DIGlobalVariableExpression(var: !505, expr: !DIExpression())
!505 = distinct !DIGlobalVariable(name: "read_buf", scope: !496, file: !497, line: 87, type: !506, isLocal: false, isDefinition: true)
!506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !507, size: 64)
!507 = !DISubroutineType(types: !508)
!508 = !{!28, !39, !7}
!509 = !DIDerivedType(tag: DW_TAG_typedef, name: "file_t", file: !93, line: 151, baseType: !28)
!510 = !DIGlobalVariableExpression(var: !511, expr: !DIExpression())
!511 = distinct !DIGlobalVariable(name: "pkzip", scope: !512, file: !513, line: 44, type: !28, isLocal: false, isDefinition: true)
!512 = distinct !DICompileUnit(language: DW_LANG_C99, file: !513, producer: "clang version 14.0.5", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !514, globals: !515, splitDebugInlining: false, nameTableKind: None)
!513 = !DIFile(filename: "unzip.c", directory: "/ws/gzip-1.2.4a/gzip-1.2.4a", checksumkind: CSK_MD5, checksum: "ab513e2073f65c58046021b1f80476dc")
!514 = !{!98, !92, !95}
!515 = !{!510, !516, !518, !520}
!516 = !DIGlobalVariableExpression(var: !517, expr: !DIExpression())
!517 = distinct !DIGlobalVariable(name: "ext_header", scope: !512, file: !513, line: 45, type: !28, isLocal: false, isDefinition: true)
!518 = !DIGlobalVariableExpression(var: !519, expr: !DIExpression())
!519 = distinct !DIGlobalVariable(name: "decrypt", scope: !512, file: !513, line: 42, type: !28, isLocal: false, isDefinition: true)
!520 = !DIGlobalVariableExpression(var: !521, expr: !DIExpression())
!521 = distinct !DIGlobalVariable(name: "key", scope: !512, file: !513, line: 43, type: !39, isLocal: false, isDefinition: true)
!522 = !DIGlobalVariableExpression(var: !523, expr: !DIExpression())
!523 = distinct !DIGlobalVariable(name: "mask_bits", scope: !524, file: !525, line: 209, type: !561, isLocal: false, isDefinition: true)
!524 = distinct !DICompileUnit(language: DW_LANG_C99, file: !525, producer: "clang version 14.0.5", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !526, globals: !537, splitDebugInlining: false, nameTableKind: None)
!525 = !DIFile(filename: "inflate.c", directory: "/ws/gzip-1.2.4a/gzip-1.2.4a", checksumkind: CSK_MD5, checksum: "8c7fc564c33488a51e979b68838dd26a")
!526 = !{!321, !527, !22, !7, !92, !98, !39, !95, !28}
!527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !528, size: 64)
!528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "huft", file: !525, line: 121, size: 128, elements: !529)
!529 = !{!530, !531, !532}
!530 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !528, file: !525, line: 122, baseType: !92, size: 8)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !528, file: !525, line: 123, baseType: !92, size: 8, offset: 8)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !528, file: !525, line: 127, baseType: !533, size: 64, offset: 64)
!533 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !528, file: !525, line: 124, size: 64, elements: !534)
!534 = !{!535, !536}
!535 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !533, file: !525, line: 125, baseType: !98, size: 16)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "t", scope: !533, file: !525, line: 126, baseType: !527, size: 64)
!537 = !{!522, !538, !540, !542, !544, !546, !548, !551, !553, !556, !558}
!538 = !DIGlobalVariableExpression(var: !539, expr: !DIExpression())
!539 = distinct !DIGlobalVariable(name: "lbits", scope: !524, file: !525, line: 259, type: !28, isLocal: false, isDefinition: true)
!540 = !DIGlobalVariableExpression(var: !541, expr: !DIExpression())
!541 = distinct !DIGlobalVariable(name: "dbits", scope: !524, file: !525, line: 260, type: !28, isLocal: false, isDefinition: true)
!542 = !DIGlobalVariableExpression(var: !543, expr: !DIExpression())
!543 = distinct !DIGlobalVariable(name: "bb", scope: !524, file: !525, line: 206, type: !95, isLocal: false, isDefinition: true)
!544 = !DIGlobalVariableExpression(var: !545, expr: !DIExpression())
!545 = distinct !DIGlobalVariable(name: "bk", scope: !524, file: !525, line: 207, type: !7, isLocal: false, isDefinition: true)
!546 = !DIGlobalVariableExpression(var: !547, expr: !DIExpression())
!547 = distinct !DIGlobalVariable(name: "hufts", scope: !524, file: !525, line: 268, type: !7, isLocal: false, isDefinition: true)
!548 = !DIGlobalVariableExpression(var: !549, expr: !DIExpression())
!549 = distinct !DIGlobalVariable(name: "cplens", scope: !524, file: !525, line: 158, type: !550, isLocal: true, isDefinition: true)
!550 = !DICompositeType(tag: DW_TAG_array_type, baseType: !98, size: 496, elements: !204)
!551 = !DIGlobalVariableExpression(var: !552, expr: !DIExpression())
!552 = distinct !DIGlobalVariable(name: "cplext", scope: !524, file: !525, line: 162, type: !550, isLocal: true, isDefinition: true)
!553 = !DIGlobalVariableExpression(var: !554, expr: !DIExpression())
!554 = distinct !DIGlobalVariable(name: "cpdist", scope: !524, file: !525, line: 165, type: !555, isLocal: true, isDefinition: true)
!555 = !DICompositeType(tag: DW_TAG_array_type, baseType: !98, size: 480, elements: !410)
!556 = !DIGlobalVariableExpression(var: !557, expr: !DIExpression())
!557 = distinct !DIGlobalVariable(name: "cpdext", scope: !524, file: !525, line: 169, type: !555, isLocal: true, isDefinition: true)
!558 = !DIGlobalVariableExpression(var: !559, expr: !DIExpression())
!559 = distinct !DIGlobalVariable(name: "border", scope: !524, file: !525, line: 156, type: !560, isLocal: true, isDefinition: true)
!560 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 608, elements: !488)
!561 = !DICompositeType(tag: DW_TAG_array_type, baseType: !98, size: 272, elements: !562)
!562 = !{!563}
!563 = !DISubrange(count: 17)
!564 = !DIGlobalVariableExpression(var: !565, expr: !DIExpression())
!565 = distinct !DIGlobalVariable(name: "crc", scope: !566, file: !567, line: 66, type: !95, isLocal: true, isDefinition: true)
!566 = distinct !DISubprogram(name: "updcrc", scope: !567, file: !567, line: 60, type: !568, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !570, retainedNodes: !271)
!567 = !DIFile(filename: "util.c", directory: "/ws/gzip-1.2.4a/gzip-1.2.4a", checksumkind: CSK_MD5, checksum: "e6a35497083fbe3fb4a93334a5bb3ce4")
!568 = !DISubroutineType(types: !569)
!569 = !{!95, !312, !7}
!570 = distinct !DICompileUnit(language: DW_LANG_C99, file: !567, producer: "clang version 14.0.5", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !571, globals: !572, splitDebugInlining: false, nameTableKind: None)
!571 = !{!28, !39, !22, !95, !7, !321, !63, !136}
!572 = !{!564, !573}
!573 = !DIGlobalVariableExpression(var: !574, expr: !DIExpression())
!574 = distinct !DIGlobalVariable(name: "crc_32_tab", scope: !570, file: !567, line: 409, type: !575, isLocal: false, isDefinition: true)
!575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !95, size: 16384, elements: !420)
!576 = !DIGlobalVariableExpression(var: !577, expr: !DIExpression())
!577 = distinct !DIGlobalVariable(name: "msg_done", scope: !578, file: !579, line: 13, type: !28, isLocal: true, isDefinition: true)
!578 = distinct !DICompileUnit(language: DW_LANG_C99, file: !579, producer: "clang version 14.0.5", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, globals: !580, splitDebugInlining: false, nameTableKind: None)
!579 = !DIFile(filename: "lzw.c", directory: "/ws/gzip-1.2.4a/gzip-1.2.4a", checksumkind: CSK_MD5, checksum: "017dd48aa0dcd37158e13745cf23c79e")
!580 = !{!576}
!581 = !DIGlobalVariableExpression(var: !582, expr: !DIExpression())
!582 = distinct !DIGlobalVariable(name: "block_mode", scope: !583, file: !584, line: 181, type: !28, isLocal: false, isDefinition: true)
!583 = distinct !DICompileUnit(language: DW_LANG_C99, file: !584, producer: "clang version 14.0.5", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !585, globals: !589, splitDebugInlining: false, nameTableKind: None)
!584 = !DIFile(filename: "unlzw.c", directory: "/ws/gzip-1.2.4a/gzip-1.2.4a", checksumkind: CSK_MD5, checksum: "df49a5c8e5e2900f35976508812058cf")
!585 = !{!321, !586, !39, !95, !61, !28, !587, !588, !63}
!586 = !DIDerivedType(tag: DW_TAG_typedef, name: "char_type", file: !584, line: 28, baseType: !94)
!587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !586, size: 64)
!588 = !DIDerivedType(tag: DW_TAG_typedef, name: "cmp_code_int", file: !584, line: 32, baseType: !86)
!589 = !{!581}
!590 = !DIGlobalVariableExpression(var: !591, expr: !DIExpression())
!591 = distinct !DIGlobalVariable(name: "valid", scope: !592, file: !593, line: 67, type: !28, isLocal: true, isDefinition: true)
!592 = distinct !DICompileUnit(language: DW_LANG_C99, file: !593, producer: "clang version 14.0.5", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !594, globals: !595, splitDebugInlining: false, nameTableKind: None)
!593 = !DIFile(filename: "unpack.c", directory: "/ws/gzip-1.2.4a/gzip-1.2.4a", checksumkind: CSK_MD5, checksum: "9bd0f694827950086d1db1aa80162950")
!594 = !{!95, !7, !92, !28}
!595 = !{!596, !598, !600, !602, !607, !609, !611, !613, !590}
!596 = !DIGlobalVariableExpression(var: !597, expr: !DIExpression())
!597 = distinct !DIGlobalVariable(name: "orig_len", scope: !592, file: !593, line: 32, type: !95, isLocal: true, isDefinition: true)
!598 = !DIGlobalVariableExpression(var: !599, expr: !DIExpression())
!599 = distinct !DIGlobalVariable(name: "max_len", scope: !592, file: !593, line: 33, type: !28, isLocal: true, isDefinition: true)
!600 = !DIGlobalVariableExpression(var: !601, expr: !DIExpression())
!601 = distinct !DIGlobalVariable(name: "literal", scope: !592, file: !593, line: 35, type: !419, isLocal: true, isDefinition: true)
!602 = !DIGlobalVariableExpression(var: !603, expr: !DIExpression())
!603 = distinct !DIGlobalVariable(name: "lit_base", scope: !592, file: !593, line: 40, type: !604, isLocal: true, isDefinition: true)
!604 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 832, elements: !605)
!605 = !{!606}
!606 = !DISubrange(count: 26)
!607 = !DIGlobalVariableExpression(var: !608, expr: !DIExpression())
!608 = distinct !DIGlobalVariable(name: "leaves", scope: !592, file: !593, line: 46, type: !604, isLocal: true, isDefinition: true)
!609 = !DIGlobalVariableExpression(var: !610, expr: !DIExpression())
!610 = distinct !DIGlobalVariable(name: "parents", scope: !592, file: !593, line: 47, type: !604, isLocal: true, isDefinition: true)
!611 = !DIGlobalVariableExpression(var: !612, expr: !DIExpression())
!612 = distinct !DIGlobalVariable(name: "peek_bits", scope: !592, file: !593, line: 49, type: !28, isLocal: true, isDefinition: true)
!613 = !DIGlobalVariableExpression(var: !614, expr: !DIExpression())
!614 = distinct !DIGlobalVariable(name: "bitbuf", scope: !592, file: !593, line: 64, type: !95, isLocal: true, isDefinition: true)
!615 = !DIGlobalVariableExpression(var: !616, expr: !DIExpression())
!616 = distinct !DIGlobalVariable(name: "done", scope: !617, file: !618, line: 328, type: !28, isLocal: true, isDefinition: true)
!617 = distinct !DICompileUnit(language: DW_LANG_C99, file: !618, producer: "clang version 14.0.5", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !619, globals: !620, splitDebugInlining: false, nameTableKind: None)
!618 = !DIFile(filename: "unlzh.c", directory: "/ws/gzip-1.2.4a/gzip-1.2.4a", checksumkind: CSK_MD5, checksum: "13e141b4e677356e92ec225add1b94f7")
!619 = !{!7, !39, !28}
!620 = !{!615, !621, !623, !625, !627, !629, !631, !636, !638}
!621 = !DIGlobalVariableExpression(var: !622, expr: !DIExpression())
!622 = distinct !DIGlobalVariable(name: "bitbuf", scope: !617, file: !618, line: 105, type: !98, isLocal: true, isDefinition: true)
!623 = !DIGlobalVariableExpression(var: !624, expr: !DIExpression())
!624 = distinct !DIGlobalVariable(name: "subbitbuf", scope: !617, file: !618, line: 106, type: !7, isLocal: true, isDefinition: true)
!625 = !DIGlobalVariableExpression(var: !626, expr: !DIExpression())
!626 = distinct !DIGlobalVariable(name: "bitcount", scope: !617, file: !618, line: 107, type: !28, isLocal: true, isDefinition: true)
!627 = !DIGlobalVariableExpression(var: !628, expr: !DIExpression())
!628 = distinct !DIGlobalVariable(name: "blocksize", scope: !617, file: !618, line: 92, type: !7, isLocal: true, isDefinition: true)
!629 = !DIGlobalVariableExpression(var: !630, expr: !DIExpression())
!630 = distinct !DIGlobalVariable(name: "j", scope: !617, file: !618, line: 327, type: !28, isLocal: true, isDefinition: true)
!631 = !DIGlobalVariableExpression(var: !632, expr: !DIExpression())
!632 = distinct !DIGlobalVariable(name: "i", scope: !633, file: !618, line: 351, type: !7, isLocal: true, isDefinition: true)
!633 = distinct !DISubprogram(name: "decode", scope: !618, file: !618, line: 339, type: !634, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !617, retainedNodes: !271)
!634 = !DISubroutineType(types: !635)
!635 = !{!7, !7, !312}
!636 = !DIGlobalVariableExpression(var: !637, expr: !DIExpression())
!637 = distinct !DIGlobalVariable(name: "pt_len", scope: !617, file: !618, line: 91, type: !492, isLocal: true, isDefinition: true)
!638 = !DIGlobalVariableExpression(var: !639, expr: !DIExpression())
!639 = distinct !DIGlobalVariable(name: "pt_table", scope: !617, file: !618, line: 93, type: !640, isLocal: true, isDefinition: true)
!640 = !DICompositeType(tag: DW_TAG_array_type, baseType: !98, size: 4096, elements: !420)
!641 = distinct !DICompileUnit(language: DW_LANG_C99, file: !642, producer: "clang version 14.0.5", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!642 = !DIFile(filename: "crypt.c", directory: "/ws/gzip-1.2.4a/gzip-1.2.4a", checksumkind: CSK_MD5, checksum: "680c49536a22d9c495619de2d89d2a8f")
!643 = distinct !DICompileUnit(language: DW_LANG_C99, file: !644, producer: "clang version 14.0.5", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!644 = !DIFile(filename: "getopt.c", directory: "/ws/gzip-1.2.4a/gzip-1.2.4a", checksumkind: CSK_MD5, checksum: "83988a5608fbef9a7b7f6ed8d7e67125")
!645 = !{!"clang version 14.0.5"}
!646 = !{i32 7, !"Dwarf Version", i32 5}
!647 = !{i32 2, !"Debug Info Version", i32 3}
!648 = !{i32 1, !"wchar_size", i32 4}
!649 = !{i32 7, !"uwtable", i32 1}
!650 = !{i32 7, !"frame-pointer", i32 2}
!651 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 424, type: !652, scopeLine: 427, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !271)
!652 = !DISubroutineType(types: !653)
!653 = !{!28, !28, !136}
!654 = !DILocalVariable(name: "argc", arg: 1, scope: !651, file: !3, line: 425, type: !28)
!655 = !DILocation(line: 425, column: 9, scope: !651)
!656 = !DILocalVariable(name: "argv", arg: 2, scope: !651, file: !3, line: 426, type: !136)
!657 = !DILocation(line: 426, column: 12, scope: !651)
!658 = !DILocalVariable(name: "file_count", scope: !651, file: !3, line: 428, type: !28)
!659 = !DILocation(line: 428, column: 9, scope: !651)
!660 = !DILocalVariable(name: "proglen", scope: !651, file: !3, line: 429, type: !28)
!661 = !DILocation(line: 429, column: 9, scope: !651)
!662 = !DILocalVariable(name: "optc", scope: !651, file: !3, line: 430, type: !28)
!663 = !DILocation(line: 430, column: 9, scope: !651)
!664 = !DILocation(line: 434, column: 25, scope: !651)
!665 = !DILocation(line: 434, column: 16, scope: !651)
!666 = !DILocation(line: 434, column: 14, scope: !651)
!667 = !DILocation(line: 435, column: 22, scope: !651)
!668 = !DILocation(line: 435, column: 15, scope: !651)
!669 = !DILocation(line: 435, column: 13, scope: !651)
!670 = !DILocation(line: 438, column: 9, scope: !671)
!671 = distinct !DILexicalBlock(scope: !651, file: !3, line: 438, column: 9)
!672 = !DILocation(line: 438, column: 17, scope: !671)
!673 = !DILocation(line: 438, column: 21, scope: !671)
!674 = !DILocation(line: 438, column: 24, scope: !671)
!675 = !DILocation(line: 438, column: 9, scope: !651)
!676 = !DILocation(line: 439, column: 9, scope: !677)
!677 = distinct !DILexicalBlock(scope: !671, file: !3, line: 438, column: 60)
!678 = !DILocation(line: 439, column: 18, scope: !677)
!679 = !DILocation(line: 439, column: 25, scope: !677)
!680 = !DILocation(line: 439, column: 29, scope: !677)
!681 = !DILocation(line: 440, column: 5, scope: !677)
!682 = !DILocation(line: 443, column: 11, scope: !651)
!683 = !DILocation(line: 443, column: 9, scope: !651)
!684 = !DILocation(line: 444, column: 9, scope: !685)
!685 = distinct !DILexicalBlock(scope: !651, file: !3, line: 444, column: 9)
!686 = !DILocation(line: 444, column: 13, scope: !685)
!687 = !DILocation(line: 444, column: 9, scope: !651)
!688 = !DILocation(line: 444, column: 29, scope: !685)
!689 = !DILocation(line: 444, column: 27, scope: !685)
!690 = !DILocation(line: 444, column: 22, scope: !685)
!691 = !DILocation(line: 446, column: 18, scope: !651)
!692 = !DILocation(line: 446, column: 42, scope: !651)
!693 = !DILocation(line: 446, column: 16, scope: !651)
!694 = !DILocation(line: 447, column: 9, scope: !695)
!695 = distinct !DILexicalBlock(scope: !651, file: !3, line: 447, column: 9)
!696 = !DILocation(line: 447, column: 9, scope: !651)
!697 = !DILocation(line: 448, column: 9, scope: !698)
!698 = distinct !DILexicalBlock(scope: !695, file: !3, line: 447, column: 21)
!699 = !DILocation(line: 449, column: 5, scope: !698)
!700 = !DILocation(line: 451, column: 9, scope: !701)
!701 = distinct !DILexicalBlock(scope: !651, file: !3, line: 451, column: 9)
!702 = !DILocation(line: 451, column: 34, scope: !701)
!703 = !DILocation(line: 451, column: 9, scope: !651)
!704 = !DILocation(line: 452, column: 9, scope: !705)
!705 = distinct !DILexicalBlock(scope: !701, file: !3, line: 451, column: 46)
!706 = !DILocation(line: 453, column: 5, scope: !705)
!707 = !DILocation(line: 456, column: 9, scope: !708)
!708 = distinct !DILexicalBlock(scope: !651, file: !3, line: 456, column: 9)
!709 = !DILocation(line: 456, column: 33, scope: !708)
!710 = !DILocation(line: 456, column: 9, scope: !651)
!711 = !DILocation(line: 457, column: 9, scope: !712)
!712 = distinct !DILexicalBlock(scope: !708, file: !3, line: 456, column: 45)
!713 = !DILocation(line: 458, column: 5, scope: !712)
!714 = !DILocation(line: 469, column: 19, scope: !715)
!715 = distinct !DILexicalBlock(scope: !651, file: !3, line: 469, column: 11)
!716 = !DILocation(line: 469, column: 11, scope: !715)
!717 = !DILocation(line: 469, column: 39, scope: !715)
!718 = !DILocation(line: 470, column: 8, scope: !715)
!719 = !DILocation(line: 470, column: 19, scope: !715)
!720 = !DILocation(line: 470, column: 11, scope: !715)
!721 = !DILocation(line: 470, column: 39, scope: !715)
!722 = !DILocation(line: 469, column: 11, scope: !651)
!723 = !DILocation(line: 471, column: 13, scope: !724)
!724 = distinct !DILexicalBlock(scope: !715, file: !3, line: 470, column: 45)
!725 = !DILocation(line: 472, column: 5, scope: !724)
!726 = !DILocation(line: 472, column: 16, scope: !727)
!727 = distinct !DILexicalBlock(scope: !715, file: !3, line: 472, column: 16)
!728 = !DILocation(line: 473, column: 6, scope: !727)
!729 = !DILocation(line: 473, column: 9, scope: !727)
!730 = !DILocation(line: 472, column: 16, scope: !715)
!731 = !DILocation(line: 474, column: 25, scope: !732)
!732 = distinct !DILexicalBlock(scope: !727, file: !3, line: 473, column: 36)
!733 = !DILocation(line: 474, column: 13, scope: !732)
!734 = !DILocation(line: 475, column: 5, scope: !732)
!735 = !DILocation(line: 478, column: 5, scope: !651)
!736 = !DILocation(line: 479, column: 13, scope: !651)
!737 = !DILocation(line: 479, column: 11, scope: !651)
!738 = !DILocation(line: 481, column: 5, scope: !651)
!739 = !DILocation(line: 481, column: 33, scope: !651)
!740 = !DILocation(line: 481, column: 39, scope: !651)
!741 = !DILocation(line: 481, column: 20, scope: !651)
!742 = !DILocation(line: 481, column: 18, scope: !651)
!743 = !DILocation(line: 482, column: 26, scope: !651)
!744 = !DILocation(line: 483, column: 10, scope: !745)
!745 = distinct !DILexicalBlock(scope: !651, file: !3, line: 482, column: 34)
!746 = !DILocation(line: 483, column: 2, scope: !745)
!747 = !DILocation(line: 485, column: 19, scope: !748)
!748 = distinct !DILexicalBlock(scope: !745, file: !3, line: 483, column: 16)
!749 = !DILocation(line: 485, column: 24, scope: !748)
!750 = !DILocation(line: 487, column: 21, scope: !748)
!751 = !DILocation(line: 487, column: 16, scope: !748)
!752 = !DILocation(line: 487, column: 14, scope: !748)
!753 = !DILocation(line: 488, column: 6, scope: !748)
!754 = !DILocation(line: 490, column: 16, scope: !748)
!755 = !DILocation(line: 490, column: 21, scope: !748)
!756 = !DILocation(line: 492, column: 17, scope: !748)
!757 = !DILocation(line: 492, column: 22, scope: !748)
!758 = !DILocation(line: 494, column: 11, scope: !748)
!759 = !DILocation(line: 494, column: 15, scope: !748)
!760 = !DILocation(line: 496, column: 6, scope: !748)
!761 = !DILocation(line: 496, column: 14, scope: !748)
!762 = !DILocation(line: 496, column: 27, scope: !748)
!763 = !DILocation(line: 498, column: 36, scope: !748)
!764 = !DILocation(line: 498, column: 24, scope: !748)
!765 = !DILocation(line: 498, column: 11, scope: !748)
!766 = !DILocation(line: 498, column: 41, scope: !748)
!767 = !DILocation(line: 500, column: 6, scope: !748)
!768 = !DILocation(line: 500, column: 17, scope: !748)
!769 = !DILocation(line: 500, column: 30, scope: !748)
!770 = !DILocation(line: 502, column: 14, scope: !748)
!771 = !DILocation(line: 502, column: 19, scope: !748)
!772 = !DILocation(line: 504, column: 14, scope: !748)
!773 = !DILocation(line: 504, column: 19, scope: !748)
!774 = !DILocation(line: 506, column: 24, scope: !748)
!775 = !DILocation(line: 506, column: 14, scope: !748)
!776 = !DILocation(line: 506, column: 29, scope: !748)
!777 = !DILocation(line: 508, column: 24, scope: !748)
!778 = !DILocation(line: 508, column: 14, scope: !748)
!779 = !DILocation(line: 508, column: 29, scope: !748)
!780 = !DILocation(line: 510, column: 12, scope: !748)
!781 = !DILocation(line: 510, column: 25, scope: !748)
!782 = !DILocation(line: 510, column: 30, scope: !748)
!783 = !DILocation(line: 517, column: 16, scope: !748)
!784 = !DILocation(line: 517, column: 21, scope: !748)
!785 = !DILocation(line: 523, column: 28, scope: !748)
!786 = !DILocation(line: 523, column: 21, scope: !748)
!787 = !DILocation(line: 523, column: 19, scope: !748)
!788 = !DILocation(line: 524, column: 30, scope: !748)
!789 = !DILocation(line: 524, column: 13, scope: !748)
!790 = !DILocation(line: 525, column: 13, scope: !748)
!791 = !DILocation(line: 527, column: 36, scope: !748)
!792 = !DILocation(line: 527, column: 24, scope: !748)
!793 = !DILocation(line: 527, column: 11, scope: !748)
!794 = !DILocation(line: 528, column: 6, scope: !748)
!795 = !DILocation(line: 530, column: 13, scope: !748)
!796 = !DILocation(line: 530, column: 23, scope: !748)
!797 = !DILocation(line: 530, column: 28, scope: !748)
!798 = !DILocation(line: 532, column: 6, scope: !748)
!799 = !DILocation(line: 532, column: 17, scope: !748)
!800 = !DILocation(line: 532, column: 30, scope: !748)
!801 = !DILocation(line: 537, column: 14, scope: !748)
!802 = !DILocation(line: 538, column: 7, scope: !748)
!803 = !DILocation(line: 537, column: 6, scope: !748)
!804 = !DILocation(line: 539, column: 6, scope: !748)
!805 = !DILocation(line: 540, column: 6, scope: !748)
!806 = !DILocation(line: 540, column: 22, scope: !748)
!807 = !DILocation(line: 544, column: 14, scope: !748)
!808 = !DILocation(line: 544, column: 19, scope: !748)
!809 = !DILocation(line: 544, column: 12, scope: !748)
!810 = !DILocation(line: 545, column: 6, scope: !748)
!811 = !DILocation(line: 548, column: 6, scope: !748)
!812 = !DILocation(line: 549, column: 6, scope: !748)
!813 = !DILocation(line: 550, column: 2, scope: !748)
!814 = distinct !{!814, !738, !815, !816}
!815 = !DILocation(line: 551, column: 5, scope: !651)
!816 = !{!"llvm.loop.mustprogress"}
!817 = !DILocation(line: 556, column: 9, scope: !818)
!818 = distinct !DILexicalBlock(scope: !651, file: !3, line: 556, column: 9)
!819 = !DILocation(line: 556, column: 17, scope: !818)
!820 = !DILocation(line: 556, column: 9, scope: !651)
!821 = !DILocation(line: 556, column: 32, scope: !818)
!822 = !DILocation(line: 556, column: 30, scope: !818)
!823 = !DILocation(line: 556, column: 22, scope: !818)
!824 = !DILocation(line: 557, column: 9, scope: !825)
!825 = distinct !DILexicalBlock(scope: !651, file: !3, line: 557, column: 9)
!826 = !DILocation(line: 557, column: 17, scope: !825)
!827 = !DILocation(line: 557, column: 9, scope: !651)
!828 = !DILocation(line: 557, column: 32, scope: !825)
!829 = !DILocation(line: 557, column: 30, scope: !825)
!830 = !DILocation(line: 557, column: 22, scope: !825)
!831 = !DILocation(line: 559, column: 18, scope: !651)
!832 = !DILocation(line: 559, column: 25, scope: !651)
!833 = !DILocation(line: 559, column: 23, scope: !651)
!834 = !DILocation(line: 559, column: 16, scope: !651)
!835 = !DILocation(line: 563, column: 9, scope: !836)
!836 = distinct !DILexicalBlock(scope: !651, file: !3, line: 563, column: 9)
!837 = !DILocation(line: 563, column: 15, scope: !836)
!838 = !DILocation(line: 563, column: 19, scope: !836)
!839 = !DILocation(line: 563, column: 9, scope: !651)
!840 = !DILocation(line: 564, column: 10, scope: !841)
!841 = distinct !DILexicalBlock(scope: !836, file: !3, line: 563, column: 26)
!842 = !DILocation(line: 565, column: 3, scope: !841)
!843 = !DILocation(line: 564, column: 2, scope: !841)
!844 = !DILocation(line: 566, column: 5, scope: !841)
!845 = !DILocation(line: 568, column: 10, scope: !846)
!846 = distinct !DILexicalBlock(scope: !651, file: !3, line: 568, column: 9)
!847 = !DILocation(line: 568, column: 16, scope: !846)
!848 = !DILocation(line: 568, column: 21, scope: !846)
!849 = !DILocation(line: 568, column: 25, scope: !846)
!850 = !DILocation(line: 568, column: 37, scope: !846)
!851 = !DILocation(line: 568, column: 40, scope: !846)
!852 = !DILocation(line: 568, column: 46, scope: !846)
!853 = !DILocation(line: 568, column: 9, scope: !651)
!854 = !DILocation(line: 569, column: 17, scope: !855)
!855 = distinct !DILexicalBlock(scope: !846, file: !3, line: 568, column: 60)
!856 = !DILocation(line: 570, column: 17, scope: !855)
!857 = !DILocation(line: 570, column: 27, scope: !855)
!858 = !DILocation(line: 569, column: 9, scope: !855)
!859 = !DILocation(line: 571, column: 9, scope: !855)
!860 = !DILocation(line: 572, column: 5, scope: !855)
!861 = !DILocation(line: 573, column: 9, scope: !862)
!862 = distinct !DILexicalBlock(scope: !651, file: !3, line: 573, column: 9)
!863 = !DILocation(line: 573, column: 16, scope: !862)
!864 = !DILocation(line: 573, column: 20, scope: !862)
!865 = !DILocation(line: 573, column: 9, scope: !651)
!866 = !DILocation(line: 573, column: 37, scope: !862)
!867 = !DILocation(line: 573, column: 32, scope: !862)
!868 = !DILocation(line: 588, column: 9, scope: !869)
!869 = distinct !DILexicalBlock(scope: !651, file: !3, line: 588, column: 9)
!870 = !DILocation(line: 588, column: 20, scope: !869)
!871 = !DILocation(line: 588, column: 9, scope: !651)
!872 = !DILocation(line: 589, column: 6, scope: !873)
!873 = distinct !DILexicalBlock(scope: !874, file: !3, line: 589, column: 6)
!874 = distinct !DILexicalBlock(scope: !869, file: !3, line: 588, column: 26)
!875 = !DILocation(line: 589, column: 16, scope: !873)
!876 = !DILocation(line: 589, column: 20, scope: !873)
!877 = !DILocation(line: 589, column: 25, scope: !873)
!878 = !DILocation(line: 589, column: 29, scope: !873)
!879 = !DILocation(line: 589, column: 34, scope: !873)
!880 = !DILocation(line: 589, column: 39, scope: !873)
!881 = !DILocation(line: 589, column: 50, scope: !873)
!882 = !DILocation(line: 589, column: 54, scope: !873)
!883 = !DILocation(line: 589, column: 6, scope: !874)
!884 = !DILocation(line: 591, column: 2, scope: !885)
!885 = distinct !DILexicalBlock(scope: !873, file: !3, line: 589, column: 62)
!886 = !DILocation(line: 592, column: 9, scope: !874)
!887 = !DILocation(line: 592, column: 16, scope: !874)
!888 = !DILocation(line: 592, column: 25, scope: !874)
!889 = !DILocation(line: 592, column: 23, scope: !874)
!890 = !DILocation(line: 593, column: 17, scope: !891)
!891 = distinct !DILexicalBlock(scope: !874, file: !3, line: 592, column: 31)
!892 = !DILocation(line: 593, column: 28, scope: !891)
!893 = !DILocation(line: 593, column: 6, scope: !891)
!894 = distinct !{!894, !886, !895, !816}
!895 = !DILocation(line: 594, column: 2, scope: !874)
!896 = !DILocation(line: 595, column: 5, scope: !874)
!897 = !DILocation(line: 596, column: 2, scope: !898)
!898 = distinct !DILexicalBlock(scope: !869, file: !3, line: 595, column: 12)
!899 = !DILocation(line: 598, column: 9, scope: !900)
!900 = distinct !DILexicalBlock(scope: !651, file: !3, line: 598, column: 9)
!901 = !DILocation(line: 598, column: 14, scope: !900)
!902 = !DILocation(line: 598, column: 18, scope: !900)
!903 = !DILocation(line: 598, column: 24, scope: !900)
!904 = !DILocation(line: 598, column: 27, scope: !900)
!905 = !DILocation(line: 598, column: 38, scope: !900)
!906 = !DILocation(line: 598, column: 9, scope: !651)
!907 = !DILocation(line: 599, column: 2, scope: !908)
!908 = distinct !DILexicalBlock(scope: !900, file: !3, line: 598, column: 43)
!909 = !DILocation(line: 600, column: 5, scope: !908)
!910 = !DILocation(line: 601, column: 13, scope: !651)
!911 = !DILocation(line: 601, column: 5, scope: !651)
!912 = !DILocation(line: 602, column: 12, scope: !651)
!913 = !DILocation(line: 602, column: 5, scope: !651)
!914 = distinct !DISubprogram(name: "abort_gzip", scope: !3, file: !3, line: 1737, type: !269, scopeLine: 1738, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !271)
!915 = !DILocation(line: 1739, column: 8, scope: !916)
!916 = distinct !DILexicalBlock(scope: !914, file: !3, line: 1739, column: 8)
!917 = !DILocation(line: 1739, column: 8, scope: !914)
!918 = !DILocation(line: 1740, column: 14, scope: !919)
!919 = distinct !DILexicalBlock(scope: !916, file: !3, line: 1739, column: 23)
!920 = !DILocation(line: 1740, column: 8, scope: !919)
!921 = !DILocation(line: 1741, column: 8, scope: !919)
!922 = !DILocation(line: 1742, column: 4, scope: !919)
!923 = !DILocation(line: 1743, column: 4, scope: !914)
!924 = !DILocation(line: 1744, column: 1, scope: !914)
!925 = !DILocalVariable(name: "p", scope: !268, file: !3, line: 362, type: !136)
!926 = !DILocation(line: 362, column: 12, scope: !268)
!927 = !DILocation(line: 364, column: 13, scope: !268)
!928 = !DILocation(line: 364, column: 36, scope: !268)
!929 = !DILocation(line: 364, column: 5, scope: !268)
!930 = !DILocation(line: 365, column: 5, scope: !268)
!931 = !DILocation(line: 366, column: 5, scope: !268)
!932 = !DILocation(line: 366, column: 13, scope: !268)
!933 = !DILocation(line: 366, column: 12, scope: !268)
!934 = !DILocation(line: 366, column: 24, scope: !268)
!935 = !DILocation(line: 366, column: 42, scope: !268)
!936 = !DILocation(line: 366, column: 40, scope: !268)
!937 = !DILocation(line: 366, column: 16, scope: !268)
!938 = distinct !{!938, !931, !939, !816}
!939 = !DILocation(line: 366, column: 44, scope: !268)
!940 = !DILocation(line: 367, column: 1, scope: !268)
!941 = !DILocalVariable(name: "exitcode", arg: 1, scope: !306, file: !3, line: 1713, type: !28)
!942 = !DILocation(line: 1713, column: 9, scope: !306)
!943 = !DILocation(line: 1717, column: 9, scope: !944)
!944 = distinct !DILexicalBlock(scope: !306, file: !3, line: 1717, column: 9)
!945 = !DILocation(line: 1717, column: 9, scope: !306)
!946 = !DILocation(line: 1717, column: 23, scope: !944)
!947 = !DILocation(line: 1717, column: 18, scope: !944)
!948 = !DILocation(line: 1718, column: 13, scope: !306)
!949 = !DILocation(line: 1719, column: 9, scope: !950)
!950 = distinct !DILexicalBlock(scope: !306, file: !3, line: 1719, column: 9)
!951 = !DILocation(line: 1719, column: 13, scope: !950)
!952 = !DILocation(line: 1719, column: 9, scope: !306)
!953 = !DILocation(line: 1719, column: 28, scope: !950)
!954 = !DILocation(line: 1719, column: 23, scope: !950)
!955 = !DILocation(line: 1719, column: 40, scope: !950)
!956 = !DILocation(line: 1720, column: 9, scope: !957)
!957 = distinct !DILexicalBlock(scope: !306, file: !3, line: 1720, column: 9)
!958 = !DILocation(line: 1720, column: 14, scope: !957)
!959 = !DILocation(line: 1720, column: 9, scope: !306)
!960 = !DILocation(line: 1720, column: 35, scope: !957)
!961 = !DILocation(line: 1720, column: 28, scope: !957)
!962 = !DILocation(line: 1720, column: 23, scope: !957)
!963 = !DILocation(line: 1720, column: 47, scope: !957)
!964 = !DILocation(line: 1731, column: 10, scope: !306)
!965 = !DILocation(line: 1731, column: 5, scope: !306)
!966 = distinct !DISubprogram(name: "license", scope: !3, file: !3, line: 370, type: !269, scopeLine: 371, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !271)
!967 = !DILocalVariable(name: "p", scope: !966, file: !3, line: 372, type: !136)
!968 = !DILocation(line: 372, column: 12, scope: !966)
!969 = !DILocation(line: 374, column: 13, scope: !966)
!970 = !DILocation(line: 374, column: 36, scope: !966)
!971 = !DILocation(line: 374, column: 5, scope: !966)
!972 = !DILocation(line: 375, column: 5, scope: !966)
!973 = !DILocation(line: 375, column: 13, scope: !966)
!974 = !DILocation(line: 375, column: 12, scope: !966)
!975 = !DILocation(line: 375, column: 24, scope: !966)
!976 = !DILocation(line: 375, column: 42, scope: !966)
!977 = !DILocation(line: 375, column: 40, scope: !966)
!978 = !DILocation(line: 375, column: 16, scope: !966)
!979 = distinct !{!979, !972, !980, !816}
!980 = !DILocation(line: 375, column: 44, scope: !966)
!981 = !DILocation(line: 376, column: 1, scope: !966)
!982 = distinct !DISubprogram(name: "version", scope: !3, file: !3, line: 379, type: !269, scopeLine: 380, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !271)
!983 = !DILocation(line: 381, column: 13, scope: !982)
!984 = !DILocation(line: 381, column: 36, scope: !982)
!985 = !DILocation(line: 381, column: 5, scope: !982)
!986 = !DILocation(line: 383, column: 13, scope: !982)
!987 = !DILocation(line: 383, column: 5, scope: !982)
!988 = !DILocation(line: 385, column: 13, scope: !982)
!989 = !DILocation(line: 385, column: 5, scope: !982)
!990 = !DILocation(line: 388, column: 13, scope: !982)
!991 = !DILocation(line: 388, column: 5, scope: !982)
!992 = !DILocation(line: 420, column: 13, scope: !982)
!993 = !DILocation(line: 420, column: 5, scope: !982)
!994 = !DILocation(line: 421, column: 1, scope: !982)
!995 = distinct !DISubprogram(name: "usage", scope: !3, file: !3, line: 308, type: !269, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !271)
!996 = !DILocation(line: 310, column: 13, scope: !995)
!997 = !DILocation(line: 311, column: 6, scope: !995)
!998 = !DILocation(line: 310, column: 5, scope: !995)
!999 = !DILocation(line: 323, column: 1, scope: !995)
!1000 = distinct !DISubprogram(name: "treat_file", scope: !3, file: !3, line: 704, type: !1001, scopeLine: 706, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !271)
!1001 = !DISubroutineType(types: !1002)
!1002 = !{null, !39}
!1003 = !DILocalVariable(name: "iname", arg: 1, scope: !1000, file: !3, line: 705, type: !39)
!1004 = !DILocation(line: 705, column: 11, scope: !1000)
!1005 = !DILocation(line: 708, column: 9, scope: !1006)
!1006 = distinct !DILexicalBlock(scope: !1000, file: !3, line: 708, column: 9)
!1007 = !DILocation(line: 708, column: 9, scope: !1000)
!1008 = !DILocalVariable(name: "cflag", scope: !1009, file: !3, line: 709, type: !28)
!1009 = distinct !DILexicalBlock(scope: !1006, file: !3, line: 708, column: 29)
!1010 = !DILocation(line: 709, column: 6, scope: !1009)
!1011 = !DILocation(line: 709, column: 14, scope: !1009)
!1012 = !DILocation(line: 710, column: 2, scope: !1009)
!1013 = !DILocation(line: 711, column: 14, scope: !1009)
!1014 = !DILocation(line: 711, column: 12, scope: !1009)
!1015 = !DILocation(line: 712, column: 2, scope: !1009)
!1016 = !DILocation(line: 716, column: 19, scope: !1017)
!1017 = distinct !DILexicalBlock(scope: !1000, file: !3, line: 716, column: 9)
!1018 = !DILocation(line: 716, column: 9, scope: !1017)
!1019 = !DILocation(line: 716, column: 34, scope: !1017)
!1020 = !DILocation(line: 716, column: 9, scope: !1000)
!1021 = !DILocation(line: 716, column: 41, scope: !1017)
!1022 = !DILocation(line: 719, column: 9, scope: !1023)
!1023 = distinct !DILexicalBlock(scope: !1000, file: !3, line: 719, column: 9)
!1024 = !DILocation(line: 719, column: 9, scope: !1000)
!1025 = !DILocation(line: 721, column: 6, scope: !1026)
!1026 = distinct !DILexicalBlock(scope: !1027, file: !3, line: 721, column: 6)
!1027 = distinct !DILexicalBlock(scope: !1023, file: !3, line: 719, column: 33)
!1028 = !DILocation(line: 721, column: 6, scope: !1027)
!1029 = !DILocalVariable(name: "st", scope: !1030, file: !3, line: 722, type: !221)
!1030 = distinct !DILexicalBlock(scope: !1026, file: !3, line: 721, column: 17)
!1031 = !DILocation(line: 722, column: 18, scope: !1030)
!1032 = !DILocation(line: 723, column: 11, scope: !1030)
!1033 = !DILocation(line: 724, column: 16, scope: !1030)
!1034 = !DILocation(line: 724, column: 6, scope: !1030)
!1035 = !DILocation(line: 727, column: 19, scope: !1030)
!1036 = !DILocation(line: 727, column: 6, scope: !1030)
!1037 = !DILocation(line: 729, column: 2, scope: !1030)
!1038 = !DILocation(line: 731, column: 2, scope: !1039)
!1039 = distinct !DILexicalBlock(scope: !1040, file: !3, line: 731, column: 2)
!1040 = distinct !DILexicalBlock(scope: !1026, file: !3, line: 731, column: 2)
!1041 = !DILocation(line: 731, column: 2, scope: !1040)
!1042 = !DILocation(line: 731, column: 2, scope: !1043)
!1043 = distinct !DILexicalBlock(scope: !1040, file: !3, line: 731, column: 2)
!1044 = !DILocation(line: 732, column: 2, scope: !1027)
!1045 = !DILocation(line: 734, column: 10, scope: !1046)
!1046 = distinct !DILexicalBlock(scope: !1000, file: !3, line: 734, column: 9)
!1047 = !DILocation(line: 734, column: 9, scope: !1000)
!1048 = !DILocation(line: 735, column: 2, scope: !1049)
!1049 = distinct !DILexicalBlock(scope: !1050, file: !3, line: 735, column: 2)
!1050 = distinct !DILexicalBlock(scope: !1051, file: !3, line: 735, column: 2)
!1051 = distinct !DILexicalBlock(scope: !1046, file: !3, line: 734, column: 34)
!1052 = !DILocation(line: 735, column: 2, scope: !1050)
!1053 = !DILocation(line: 735, column: 2, scope: !1054)
!1054 = distinct !DILexicalBlock(scope: !1050, file: !3, line: 735, column: 2)
!1055 = !DILocation(line: 738, column: 2, scope: !1051)
!1056 = !DILocation(line: 740, column: 15, scope: !1057)
!1057 = distinct !DILexicalBlock(scope: !1000, file: !3, line: 740, column: 9)
!1058 = !DILocation(line: 740, column: 24, scope: !1057)
!1059 = !DILocation(line: 740, column: 28, scope: !1057)
!1060 = !DILocation(line: 740, column: 32, scope: !1057)
!1061 = !DILocation(line: 740, column: 42, scope: !1057)
!1062 = !DILocation(line: 740, column: 46, scope: !1057)
!1063 = !DILocation(line: 740, column: 9, scope: !1000)
!1064 = !DILocation(line: 741, column: 2, scope: !1065)
!1065 = distinct !DILexicalBlock(scope: !1066, file: !3, line: 741, column: 2)
!1066 = distinct !DILexicalBlock(scope: !1067, file: !3, line: 741, column: 2)
!1067 = distinct !DILexicalBlock(scope: !1057, file: !3, line: 740, column: 53)
!1068 = !DILocation(line: 741, column: 2, scope: !1066)
!1069 = !DILocation(line: 741, column: 2, scope: !1070)
!1070 = distinct !DILexicalBlock(scope: !1066, file: !3, line: 741, column: 2)
!1071 = !DILocation(line: 744, column: 2, scope: !1067)
!1072 = !DILocation(line: 747, column: 24, scope: !1000)
!1073 = !DILocation(line: 747, column: 16, scope: !1000)
!1074 = !DILocation(line: 748, column: 18, scope: !1000)
!1075 = !DILocation(line: 748, column: 26, scope: !1000)
!1076 = !DILocation(line: 748, column: 30, scope: !1000)
!1077 = !DILocation(line: 748, column: 47, scope: !1000)
!1078 = !DILocation(line: 748, column: 16, scope: !1000)
!1079 = !DILocation(line: 753, column: 9, scope: !1080)
!1080 = distinct !DILexicalBlock(scope: !1000, file: !3, line: 753, column: 9)
!1081 = !DILocation(line: 753, column: 19, scope: !1080)
!1082 = !DILocation(line: 753, column: 23, scope: !1080)
!1083 = !DILocation(line: 753, column: 28, scope: !1080)
!1084 = !DILocation(line: 753, column: 32, scope: !1080)
!1085 = !DILocation(line: 753, column: 9, scope: !1000)
!1086 = !DILocation(line: 754, column: 2, scope: !1087)
!1087 = distinct !DILexicalBlock(scope: !1080, file: !3, line: 753, column: 38)
!1088 = !DILocation(line: 756, column: 5, scope: !1087)
!1089 = !DILocation(line: 756, column: 16, scope: !1090)
!1090 = distinct !DILexicalBlock(scope: !1080, file: !3, line: 756, column: 16)
!1091 = !DILocation(line: 756, column: 30, scope: !1090)
!1092 = !DILocation(line: 756, column: 16, scope: !1080)
!1093 = !DILocation(line: 757, column: 2, scope: !1094)
!1094 = distinct !DILexicalBlock(scope: !1090, file: !3, line: 756, column: 37)
!1095 = !DILocation(line: 764, column: 11, scope: !1000)
!1096 = !DILocation(line: 0, scope: !1000)
!1097 = !DILocation(line: 764, column: 9, scope: !1000)
!1098 = !DILocation(line: 766, column: 9, scope: !1099)
!1099 = distinct !DILexicalBlock(scope: !1000, file: !3, line: 766, column: 9)
!1100 = !DILocation(line: 766, column: 13, scope: !1099)
!1101 = !DILocation(line: 766, column: 9, scope: !1000)
!1102 = !DILocation(line: 767, column: 10, scope: !1103)
!1103 = distinct !DILexicalBlock(scope: !1099, file: !3, line: 766, column: 20)
!1104 = !DILocation(line: 767, column: 26, scope: !1103)
!1105 = !DILocation(line: 767, column: 2, scope: !1103)
!1106 = !DILocation(line: 768, column: 2, scope: !1103)
!1107 = !DILocation(line: 769, column: 12, scope: !1103)
!1108 = !DILocation(line: 770, column: 2, scope: !1103)
!1109 = !DILocation(line: 772, column: 5, scope: !1000)
!1110 = !DILocation(line: 773, column: 13, scope: !1000)
!1111 = !DILocation(line: 775, column: 9, scope: !1112)
!1112 = distinct !DILexicalBlock(scope: !1000, file: !3, line: 775, column: 9)
!1113 = !DILocation(line: 775, column: 9, scope: !1000)
!1114 = !DILocation(line: 776, column: 22, scope: !1115)
!1115 = distinct !DILexicalBlock(scope: !1112, file: !3, line: 775, column: 21)
!1116 = !DILocation(line: 776, column: 11, scope: !1115)
!1117 = !DILocation(line: 776, column: 9, scope: !1115)
!1118 = !DILocation(line: 777, column: 6, scope: !1119)
!1119 = distinct !DILexicalBlock(scope: !1115, file: !3, line: 777, column: 6)
!1120 = !DILocation(line: 777, column: 13, scope: !1119)
!1121 = !DILocation(line: 777, column: 6, scope: !1115)
!1122 = !DILocation(line: 778, column: 12, scope: !1123)
!1123 = distinct !DILexicalBlock(scope: !1119, file: !3, line: 777, column: 18)
!1124 = !DILocation(line: 778, column: 6, scope: !1123)
!1125 = !DILocation(line: 779, column: 6, scope: !1123)
!1126 = !DILocation(line: 781, column: 5, scope: !1115)
!1127 = !DILocation(line: 782, column: 9, scope: !1128)
!1128 = distinct !DILexicalBlock(scope: !1000, file: !3, line: 782, column: 9)
!1129 = !DILocation(line: 782, column: 9, scope: !1000)
!1130 = !DILocation(line: 783, column: 17, scope: !1131)
!1131 = distinct !DILexicalBlock(scope: !1128, file: !3, line: 782, column: 15)
!1132 = !DILocation(line: 783, column: 22, scope: !1131)
!1133 = !DILocation(line: 783, column: 9, scope: !1131)
!1134 = !DILocation(line: 784, column: 15, scope: !1131)
!1135 = !DILocation(line: 784, column: 9, scope: !1131)
!1136 = !DILocation(line: 785, column: 9, scope: !1131)
!1137 = !DILocation(line: 792, column: 9, scope: !1138)
!1138 = distinct !DILexicalBlock(scope: !1000, file: !3, line: 792, column: 9)
!1139 = !DILocation(line: 792, column: 9, scope: !1000)
!1140 = !DILocation(line: 793, column: 15, scope: !1141)
!1141 = distinct !DILexicalBlock(scope: !1138, file: !3, line: 792, column: 20)
!1142 = !DILocation(line: 793, column: 8, scope: !1141)
!1143 = !DILocation(line: 793, column: 6, scope: !1141)
!1144 = !DILocation(line: 795, column: 5, scope: !1141)
!1145 = !DILocation(line: 796, column: 6, scope: !1146)
!1146 = distinct !DILexicalBlock(scope: !1147, file: !3, line: 796, column: 6)
!1147 = distinct !DILexicalBlock(scope: !1138, file: !3, line: 795, column: 12)
!1148 = !DILocation(line: 796, column: 23, scope: !1146)
!1149 = !DILocation(line: 796, column: 6, scope: !1147)
!1150 = !DILocation(line: 796, column: 30, scope: !1146)
!1151 = !DILocation(line: 798, column: 7, scope: !1152)
!1152 = distinct !DILexicalBlock(scope: !1147, file: !3, line: 798, column: 6)
!1153 = !DILocation(line: 798, column: 18, scope: !1152)
!1154 = !DILocation(line: 798, column: 21, scope: !1152)
!1155 = !DILocation(line: 798, column: 36, scope: !1152)
!1156 = !DILocation(line: 798, column: 40, scope: !1152)
!1157 = !DILocation(line: 798, column: 48, scope: !1152)
!1158 = !DILocation(line: 798, column: 52, scope: !1152)
!1159 = !DILocation(line: 798, column: 6, scope: !1147)
!1160 = !DILocation(line: 799, column: 14, scope: !1161)
!1161 = distinct !DILexicalBlock(scope: !1152, file: !3, line: 798, column: 59)
!1162 = !DILocation(line: 800, column: 7, scope: !1161)
!1163 = !DILocation(line: 799, column: 6, scope: !1161)
!1164 = !DILocation(line: 801, column: 2, scope: !1161)
!1165 = !DILocation(line: 804, column: 10, scope: !1166)
!1166 = distinct !DILexicalBlock(scope: !1000, file: !3, line: 804, column: 9)
!1167 = !DILocation(line: 804, column: 9, scope: !1000)
!1168 = !DILocation(line: 804, column: 44, scope: !1166)
!1169 = !DILocation(line: 804, column: 43, scope: !1166)
!1170 = !DILocation(line: 804, column: 41, scope: !1166)
!1171 = !DILocation(line: 804, column: 26, scope: !1166)
!1172 = !DILocation(line: 806, column: 9, scope: !1173)
!1173 = distinct !DILexicalBlock(scope: !1000, file: !3, line: 806, column: 9)
!1174 = !DILocation(line: 806, column: 9, scope: !1000)
!1175 = !DILocation(line: 807, column: 10, scope: !1176)
!1176 = distinct !DILexicalBlock(scope: !1173, file: !3, line: 806, column: 18)
!1177 = !DILocation(line: 807, column: 42, scope: !1176)
!1178 = !DILocation(line: 807, column: 37, scope: !1176)
!1179 = !DILocation(line: 807, column: 57, scope: !1176)
!1180 = !DILocation(line: 808, column: 14, scope: !1176)
!1181 = !DILocation(line: 808, column: 9, scope: !1176)
!1182 = !DILocation(line: 808, column: 29, scope: !1176)
!1183 = !DILocation(line: 807, column: 2, scope: !1176)
!1184 = !DILocation(line: 809, column: 5, scope: !1176)
!1185 = !DILocation(line: 813, column: 5, scope: !1000)
!1186 = !DILocation(line: 814, column: 8, scope: !1187)
!1187 = distinct !DILexicalBlock(scope: !1188, file: !3, line: 814, column: 6)
!1188 = distinct !DILexicalBlock(scope: !1189, file: !3, line: 813, column: 14)
!1189 = distinct !DILexicalBlock(scope: !1190, file: !3, line: 813, column: 5)
!1190 = distinct !DILexicalBlock(scope: !1000, file: !3, line: 813, column: 5)
!1191 = !DILocation(line: 814, column: 14, scope: !1187)
!1192 = !DILocation(line: 814, column: 19, scope: !1187)
!1193 = !DILocation(line: 814, column: 6, scope: !1187)
!1194 = !DILocation(line: 814, column: 24, scope: !1187)
!1195 = !DILocation(line: 814, column: 6, scope: !1188)
!1196 = !DILocation(line: 815, column: 13, scope: !1197)
!1197 = distinct !DILexicalBlock(scope: !1187, file: !3, line: 814, column: 31)
!1198 = !DILocation(line: 816, column: 6, scope: !1197)
!1199 = !DILocation(line: 818, column: 7, scope: !1200)
!1200 = distinct !DILexicalBlock(scope: !1188, file: !3, line: 818, column: 6)
!1201 = !DILocation(line: 818, column: 18, scope: !1200)
!1202 = !DILocation(line: 818, column: 21, scope: !1200)
!1203 = !DILocation(line: 818, column: 33, scope: !1200)
!1204 = !DILocation(line: 818, column: 36, scope: !1200)
!1205 = !DILocation(line: 818, column: 45, scope: !1200)
!1206 = !DILocation(line: 818, column: 42, scope: !1200)
!1207 = !DILocation(line: 818, column: 6, scope: !1188)
!1208 = !DILocation(line: 818, column: 53, scope: !1200)
!1209 = !DILocation(line: 821, column: 22, scope: !1188)
!1210 = !DILocation(line: 821, column: 11, scope: !1188)
!1211 = !DILocation(line: 821, column: 9, scope: !1188)
!1212 = !DILocation(line: 822, column: 6, scope: !1213)
!1213 = distinct !DILexicalBlock(scope: !1188, file: !3, line: 822, column: 6)
!1214 = !DILocation(line: 822, column: 13, scope: !1213)
!1215 = !DILocation(line: 822, column: 6, scope: !1188)
!1216 = !DILocation(line: 822, column: 18, scope: !1213)
!1217 = !DILocation(line: 823, column: 12, scope: !1188)
!1218 = !DILocation(line: 813, column: 5, scope: !1189)
!1219 = distinct !{!1219, !1220, !1221}
!1220 = !DILocation(line: 813, column: 5, scope: !1190)
!1221 = !DILocation(line: 824, column: 5, scope: !1190)
!1222 = !DILocation(line: 826, column: 11, scope: !1000)
!1223 = !DILocation(line: 826, column: 5, scope: !1000)
!1224 = !DILocation(line: 827, column: 10, scope: !1225)
!1225 = distinct !DILexicalBlock(scope: !1000, file: !3, line: 827, column: 9)
!1226 = !DILocation(line: 827, column: 20, scope: !1225)
!1227 = !DILocation(line: 827, column: 29, scope: !1225)
!1228 = !DILocation(line: 827, column: 23, scope: !1225)
!1229 = !DILocation(line: 827, column: 9, scope: !1000)
!1230 = !DILocation(line: 828, column: 2, scope: !1231)
!1231 = distinct !DILexicalBlock(scope: !1225, file: !3, line: 827, column: 35)
!1232 = !DILocation(line: 829, column: 5, scope: !1231)
!1233 = !DILocation(line: 830, column: 9, scope: !1234)
!1234 = distinct !DILexicalBlock(scope: !1000, file: !3, line: 830, column: 9)
!1235 = !DILocation(line: 830, column: 16, scope: !1234)
!1236 = !DILocation(line: 830, column: 9, scope: !1000)
!1237 = !DILocation(line: 831, column: 7, scope: !1238)
!1238 = distinct !DILexicalBlock(scope: !1239, file: !3, line: 831, column: 6)
!1239 = distinct !DILexicalBlock(scope: !1234, file: !3, line: 830, column: 23)
!1240 = !DILocation(line: 831, column: 6, scope: !1239)
!1241 = !DILocation(line: 831, column: 18, scope: !1238)
!1242 = !DILocation(line: 832, column: 2, scope: !1239)
!1243 = !DILocation(line: 835, column: 8, scope: !1244)
!1244 = distinct !DILexicalBlock(scope: !1000, file: !3, line: 835, column: 8)
!1245 = !DILocation(line: 835, column: 8, scope: !1000)
!1246 = !DILocation(line: 836, column: 6, scope: !1247)
!1247 = distinct !DILexicalBlock(scope: !1248, file: !3, line: 836, column: 6)
!1248 = distinct !DILexicalBlock(scope: !1244, file: !3, line: 835, column: 17)
!1249 = !DILocation(line: 836, column: 6, scope: !1248)
!1250 = !DILocation(line: 837, column: 14, scope: !1251)
!1251 = distinct !DILexicalBlock(scope: !1247, file: !3, line: 836, column: 12)
!1252 = !DILocation(line: 837, column: 6, scope: !1251)
!1253 = !DILocation(line: 838, column: 2, scope: !1251)
!1254 = !DILocation(line: 838, column: 13, scope: !1255)
!1255 = distinct !DILexicalBlock(scope: !1247, file: !3, line: 838, column: 13)
!1256 = !DILocation(line: 838, column: 13, scope: !1247)
!1257 = !DILocation(line: 839, column: 20, scope: !1258)
!1258 = distinct !DILexicalBlock(scope: !1255, file: !3, line: 838, column: 25)
!1259 = !DILocation(line: 839, column: 31, scope: !1258)
!1260 = !DILocation(line: 839, column: 40, scope: !1258)
!1261 = !DILocation(line: 839, column: 39, scope: !1258)
!1262 = !DILocation(line: 839, column: 29, scope: !1258)
!1263 = !DILocation(line: 839, column: 55, scope: !1258)
!1264 = !DILocation(line: 839, column: 65, scope: !1258)
!1265 = !DILocation(line: 839, column: 6, scope: !1258)
!1266 = !DILocation(line: 840, column: 2, scope: !1258)
!1267 = !DILocation(line: 841, column: 20, scope: !1268)
!1268 = distinct !DILexicalBlock(scope: !1255, file: !3, line: 840, column: 9)
!1269 = !DILocation(line: 841, column: 30, scope: !1268)
!1270 = !DILocation(line: 841, column: 40, scope: !1268)
!1271 = !DILocation(line: 841, column: 39, scope: !1268)
!1272 = !DILocation(line: 841, column: 28, scope: !1268)
!1273 = !DILocation(line: 841, column: 55, scope: !1268)
!1274 = !DILocation(line: 841, column: 65, scope: !1268)
!1275 = !DILocation(line: 841, column: 6, scope: !1268)
!1276 = !DILocation(line: 843, column: 7, scope: !1277)
!1277 = distinct !DILexicalBlock(scope: !1248, file: !3, line: 843, column: 6)
!1278 = !DILocation(line: 843, column: 12, scope: !1277)
!1279 = !DILocation(line: 843, column: 16, scope: !1277)
!1280 = !DILocation(line: 843, column: 6, scope: !1248)
!1281 = !DILocation(line: 844, column: 14, scope: !1282)
!1282 = distinct !DILexicalBlock(scope: !1277, file: !3, line: 843, column: 27)
!1283 = !DILocation(line: 844, column: 6, scope: !1282)
!1284 = !DILocation(line: 845, column: 2, scope: !1282)
!1285 = !DILocation(line: 846, column: 10, scope: !1248)
!1286 = !DILocation(line: 846, column: 2, scope: !1248)
!1287 = !DILocation(line: 847, column: 5, scope: !1248)
!1288 = !DILocation(line: 849, column: 10, scope: !1289)
!1289 = distinct !DILexicalBlock(scope: !1000, file: !3, line: 849, column: 9)
!1290 = !DILocation(line: 849, column: 9, scope: !1000)
!1291 = !DILocation(line: 850, column: 2, scope: !1292)
!1292 = distinct !DILexicalBlock(scope: !1289, file: !3, line: 849, column: 21)
!1293 = !DILocation(line: 851, column: 5, scope: !1292)
!1294 = !DILocation(line: 852, column: 1, scope: !1000)
!1295 = distinct !DISubprogram(name: "treat_stdin", scope: !3, file: !3, line: 608, type: !269, scopeLine: 609, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !271)
!1296 = !DILocation(line: 610, column: 10, scope: !1297)
!1297 = distinct !DILexicalBlock(scope: !1295, file: !3, line: 610, column: 9)
!1298 = !DILocation(line: 610, column: 16, scope: !1297)
!1299 = !DILocation(line: 610, column: 20, scope: !1297)
!1300 = !DILocation(line: 610, column: 25, scope: !1297)
!1301 = !DILocation(line: 611, column: 25, scope: !1297)
!1302 = !DILocation(line: 611, column: 38, scope: !1297)
!1303 = !DILocation(line: 611, column: 46, scope: !1297)
!1304 = !DILocation(line: 611, column: 9, scope: !1297)
!1305 = !DILocation(line: 611, column: 2, scope: !1297)
!1306 = !DILocation(line: 610, column: 9, scope: !1295)
!1307 = !DILocation(line: 624, column: 10, scope: !1308)
!1308 = distinct !DILexicalBlock(scope: !1297, file: !3, line: 611, column: 57)
!1309 = !DILocation(line: 626, column: 3, scope: !1308)
!1310 = !DILocation(line: 626, column: 13, scope: !1308)
!1311 = !DILocation(line: 627, column: 3, scope: !1308)
!1312 = !DILocation(line: 624, column: 2, scope: !1308)
!1313 = !DILocation(line: 628, column: 10, scope: !1308)
!1314 = !DILocation(line: 628, column: 44, scope: !1308)
!1315 = !DILocation(line: 628, column: 2, scope: !1308)
!1316 = !DILocation(line: 629, column: 2, scope: !1308)
!1317 = !DILocation(line: 630, column: 5, scope: !1308)
!1318 = !DILocation(line: 632, column: 9, scope: !1319)
!1319 = distinct !DILexicalBlock(scope: !1295, file: !3, line: 632, column: 9)
!1320 = !DILocation(line: 632, column: 20, scope: !1319)
!1321 = !DILocation(line: 632, column: 24, scope: !1319)
!1322 = !DILocation(line: 632, column: 9, scope: !1295)
!1323 = !DILocation(line: 634, column: 5, scope: !1324)
!1324 = distinct !DILexicalBlock(scope: !1319, file: !3, line: 632, column: 31)
!1325 = !DILocation(line: 635, column: 10, scope: !1326)
!1326 = distinct !DILexicalBlock(scope: !1295, file: !3, line: 635, column: 9)
!1327 = !DILocation(line: 635, column: 15, scope: !1326)
!1328 = !DILocation(line: 635, column: 19, scope: !1326)
!1329 = !DILocation(line: 635, column: 24, scope: !1326)
!1330 = !DILocation(line: 635, column: 29, scope: !1326)
!1331 = !DILocation(line: 635, column: 40, scope: !1326)
!1332 = !DILocation(line: 635, column: 44, scope: !1326)
!1333 = !DILocation(line: 635, column: 9, scope: !1295)
!1334 = !DILocation(line: 637, column: 5, scope: !1335)
!1335 = distinct !DILexicalBlock(scope: !1326, file: !3, line: 635, column: 52)
!1336 = !DILocation(line: 638, column: 5, scope: !1295)
!1337 = !DILocation(line: 639, column: 5, scope: !1295)
!1338 = !DILocation(line: 642, column: 16, scope: !1295)
!1339 = !DILocation(line: 645, column: 9, scope: !1340)
!1340 = distinct !DILexicalBlock(scope: !1295, file: !3, line: 645, column: 9)
!1341 = !DILocation(line: 645, column: 14, scope: !1340)
!1342 = !DILocation(line: 645, column: 18, scope: !1340)
!1343 = !DILocation(line: 645, column: 9, scope: !1295)
!1344 = !DILocation(line: 646, column: 19, scope: !1345)
!1345 = distinct !DILexicalBlock(scope: !1346, file: !3, line: 646, column: 6)
!1346 = distinct !DILexicalBlock(scope: !1340, file: !3, line: 645, column: 27)
!1347 = !DILocation(line: 646, column: 12, scope: !1345)
!1348 = !DILocation(line: 646, column: 6, scope: !1345)
!1349 = !DILocation(line: 646, column: 35, scope: !1345)
!1350 = !DILocation(line: 646, column: 6, scope: !1346)
!1351 = !DILocation(line: 647, column: 6, scope: !1352)
!1352 = distinct !DILexicalBlock(scope: !1345, file: !3, line: 646, column: 41)
!1353 = !DILocation(line: 648, column: 2, scope: !1352)
!1354 = !DILocation(line: 652, column: 25, scope: !1346)
!1355 = !DILocation(line: 652, column: 17, scope: !1346)
!1356 = !DILocation(line: 654, column: 5, scope: !1346)
!1357 = !DILocation(line: 655, column: 16, scope: !1295)
!1358 = !DILocation(line: 657, column: 5, scope: !1295)
!1359 = !DILocation(line: 658, column: 15, scope: !1295)
!1360 = !DILocation(line: 659, column: 13, scope: !1295)
!1361 = !DILocation(line: 661, column: 9, scope: !1362)
!1362 = distinct !DILexicalBlock(scope: !1295, file: !3, line: 661, column: 9)
!1363 = !DILocation(line: 661, column: 9, scope: !1295)
!1364 = !DILocation(line: 662, column: 22, scope: !1365)
!1365 = distinct !DILexicalBlock(scope: !1362, file: !3, line: 661, column: 21)
!1366 = !DILocation(line: 662, column: 11, scope: !1365)
!1367 = !DILocation(line: 662, column: 9, scope: !1365)
!1368 = !DILocation(line: 663, column: 6, scope: !1369)
!1369 = distinct !DILexicalBlock(scope: !1365, file: !3, line: 663, column: 6)
!1370 = !DILocation(line: 663, column: 13, scope: !1369)
!1371 = !DILocation(line: 663, column: 6, scope: !1365)
!1372 = !DILocation(line: 664, column: 14, scope: !1373)
!1373 = distinct !DILexicalBlock(scope: !1369, file: !3, line: 663, column: 18)
!1374 = !DILocation(line: 664, column: 6, scope: !1373)
!1375 = !DILocation(line: 665, column: 2, scope: !1373)
!1376 = !DILocation(line: 666, column: 5, scope: !1365)
!1377 = !DILocation(line: 667, column: 9, scope: !1378)
!1378 = distinct !DILexicalBlock(scope: !1295, file: !3, line: 667, column: 9)
!1379 = !DILocation(line: 667, column: 9, scope: !1295)
!1380 = !DILocation(line: 668, column: 17, scope: !1381)
!1381 = distinct !DILexicalBlock(scope: !1378, file: !3, line: 667, column: 15)
!1382 = !DILocation(line: 668, column: 22, scope: !1381)
!1383 = !DILocation(line: 668, column: 9, scope: !1381)
!1384 = !DILocation(line: 669, column: 9, scope: !1381)
!1385 = !DILocation(line: 674, column: 5, scope: !1295)
!1386 = !DILocation(line: 675, column: 8, scope: !1387)
!1387 = distinct !DILexicalBlock(scope: !1388, file: !3, line: 675, column: 6)
!1388 = distinct !DILexicalBlock(scope: !1389, file: !3, line: 674, column: 14)
!1389 = distinct !DILexicalBlock(scope: !1390, file: !3, line: 674, column: 5)
!1390 = distinct !DILexicalBlock(scope: !1295, file: !3, line: 674, column: 5)
!1391 = !DILocation(line: 675, column: 21, scope: !1387)
!1392 = !DILocation(line: 675, column: 14, scope: !1387)
!1393 = !DILocation(line: 675, column: 36, scope: !1387)
!1394 = !DILocation(line: 675, column: 29, scope: !1387)
!1395 = !DILocation(line: 675, column: 6, scope: !1387)
!1396 = !DILocation(line: 675, column: 45, scope: !1387)
!1397 = !DILocation(line: 675, column: 6, scope: !1388)
!1398 = !DILocation(line: 675, column: 52, scope: !1387)
!1399 = !DILocation(line: 677, column: 7, scope: !1400)
!1400 = distinct !DILexicalBlock(scope: !1388, file: !3, line: 677, column: 6)
!1401 = !DILocation(line: 677, column: 18, scope: !1400)
!1402 = !DILocation(line: 677, column: 21, scope: !1400)
!1403 = !DILocation(line: 677, column: 33, scope: !1400)
!1404 = !DILocation(line: 677, column: 36, scope: !1400)
!1405 = !DILocation(line: 677, column: 45, scope: !1400)
!1406 = !DILocation(line: 677, column: 42, scope: !1400)
!1407 = !DILocation(line: 677, column: 6, scope: !1388)
!1408 = !DILocation(line: 677, column: 53, scope: !1400)
!1409 = !DILocation(line: 680, column: 22, scope: !1388)
!1410 = !DILocation(line: 680, column: 11, scope: !1388)
!1411 = !DILocation(line: 680, column: 9, scope: !1388)
!1412 = !DILocation(line: 681, column: 6, scope: !1413)
!1413 = distinct !DILexicalBlock(scope: !1388, file: !3, line: 681, column: 6)
!1414 = !DILocation(line: 681, column: 13, scope: !1413)
!1415 = !DILocation(line: 681, column: 6, scope: !1388)
!1416 = !DILocation(line: 681, column: 18, scope: !1413)
!1417 = !DILocation(line: 682, column: 12, scope: !1388)
!1418 = !DILocation(line: 674, column: 5, scope: !1389)
!1419 = distinct !{!1419, !1420, !1421}
!1420 = !DILocation(line: 674, column: 5, scope: !1390)
!1421 = !DILocation(line: 683, column: 5, scope: !1390)
!1422 = !DILocation(line: 685, column: 9, scope: !1423)
!1423 = distinct !DILexicalBlock(scope: !1295, file: !3, line: 685, column: 9)
!1424 = !DILocation(line: 685, column: 9, scope: !1295)
!1425 = !DILocation(line: 686, column: 6, scope: !1426)
!1426 = distinct !DILexicalBlock(scope: !1427, file: !3, line: 686, column: 6)
!1427 = distinct !DILexicalBlock(scope: !1423, file: !3, line: 685, column: 18)
!1428 = !DILocation(line: 686, column: 6, scope: !1427)
!1429 = !DILocation(line: 687, column: 14, scope: !1430)
!1430 = distinct !DILexicalBlock(scope: !1426, file: !3, line: 686, column: 12)
!1431 = !DILocation(line: 687, column: 6, scope: !1430)
!1432 = !DILocation(line: 689, column: 2, scope: !1430)
!1433 = !DILocation(line: 689, column: 14, scope: !1434)
!1434 = distinct !DILexicalBlock(scope: !1426, file: !3, line: 689, column: 13)
!1435 = !DILocation(line: 689, column: 13, scope: !1426)
!1436 = !DILocation(line: 690, column: 20, scope: !1437)
!1437 = distinct !DILexicalBlock(scope: !1434, file: !3, line: 689, column: 26)
!1438 = !DILocation(line: 690, column: 30, scope: !1437)
!1439 = !DILocation(line: 690, column: 40, scope: !1437)
!1440 = !DILocation(line: 690, column: 39, scope: !1437)
!1441 = !DILocation(line: 690, column: 28, scope: !1437)
!1442 = !DILocation(line: 690, column: 55, scope: !1437)
!1443 = !DILocation(line: 690, column: 65, scope: !1437)
!1444 = !DILocation(line: 690, column: 6, scope: !1437)
!1445 = !DILocation(line: 691, column: 14, scope: !1437)
!1446 = !DILocation(line: 691, column: 6, scope: !1437)
!1447 = !DILocation(line: 697, column: 2, scope: !1437)
!1448 = !DILocation(line: 698, column: 5, scope: !1427)
!1449 = !DILocation(line: 699, column: 1, scope: !1295)
!1450 = !DILocalVariable(name: "ifd", arg: 1, scope: !299, file: !3, line: 1320, type: !28)
!1451 = !DILocation(line: 1320, column: 9, scope: !299)
!1452 = !DILocalVariable(name: "method", arg: 2, scope: !299, file: !3, line: 1321, type: !28)
!1453 = !DILocation(line: 1321, column: 9, scope: !299)
!1454 = !DILocalVariable(name: "crc", scope: !299, file: !3, line: 1323, type: !95)
!1455 = !DILocation(line: 1323, column: 9, scope: !299)
!1456 = !DILocalVariable(name: "date", scope: !299, file: !3, line: 1332, type: !39)
!1457 = !DILocation(line: 1332, column: 11, scope: !299)
!1458 = !DILocation(line: 1334, column: 9, scope: !1459)
!1459 = distinct !DILexicalBlock(scope: !299, file: !3, line: 1334, column: 9)
!1460 = !DILocation(line: 1334, column: 20, scope: !1459)
!1461 = !DILocation(line: 1334, column: 23, scope: !1459)
!1462 = !DILocation(line: 1334, column: 30, scope: !1459)
!1463 = !DILocation(line: 1334, column: 9, scope: !299)
!1464 = !DILocation(line: 1335, column: 13, scope: !1465)
!1465 = distinct !DILexicalBlock(scope: !1459, file: !3, line: 1334, column: 36)
!1466 = !DILocation(line: 1336, column: 6, scope: !1467)
!1467 = distinct !DILexicalBlock(scope: !1465, file: !3, line: 1336, column: 6)
!1468 = !DILocation(line: 1336, column: 6, scope: !1465)
!1469 = !DILocation(line: 1337, column: 6, scope: !1470)
!1470 = distinct !DILexicalBlock(scope: !1467, file: !3, line: 1336, column: 16)
!1471 = !DILocation(line: 1338, column: 2, scope: !1470)
!1472 = !DILocation(line: 1339, column: 7, scope: !1473)
!1473 = distinct !DILexicalBlock(scope: !1465, file: !3, line: 1339, column: 6)
!1474 = !DILocation(line: 1339, column: 6, scope: !1465)
!1475 = !DILocation(line: 1340, column: 6, scope: !1476)
!1476 = distinct !DILexicalBlock(scope: !1473, file: !3, line: 1339, column: 14)
!1477 = !DILocation(line: 1341, column: 2, scope: !1476)
!1478 = !DILocation(line: 1342, column: 5, scope: !1465)
!1479 = !DILocation(line: 1342, column: 16, scope: !1480)
!1480 = distinct !DILexicalBlock(scope: !1459, file: !3, line: 1342, column: 16)
!1481 = !DILocation(line: 1342, column: 23, scope: !1480)
!1482 = !DILocation(line: 1342, column: 16, scope: !1459)
!1483 = !DILocation(line: 1343, column: 6, scope: !1484)
!1484 = distinct !DILexicalBlock(scope: !1485, file: !3, line: 1343, column: 6)
!1485 = distinct !DILexicalBlock(scope: !1480, file: !3, line: 1342, column: 28)
!1486 = !DILocation(line: 1343, column: 15, scope: !1484)
!1487 = !DILocation(line: 1343, column: 20, scope: !1484)
!1488 = !DILocation(line: 1343, column: 23, scope: !1484)
!1489 = !DILocation(line: 1343, column: 33, scope: !1484)
!1490 = !DILocation(line: 1343, column: 6, scope: !1485)
!1491 = !DILocation(line: 1343, column: 39, scope: !1484)
!1492 = !DILocation(line: 1344, column: 6, scope: !1493)
!1493 = distinct !DILexicalBlock(scope: !1485, file: !3, line: 1344, column: 6)
!1494 = !DILocation(line: 1344, column: 6, scope: !1485)
!1495 = !DILocation(line: 1346, column: 6, scope: !1496)
!1496 = distinct !DILexicalBlock(scope: !1493, file: !3, line: 1344, column: 15)
!1497 = !DILocation(line: 1346, column: 16, scope: !1496)
!1498 = !DILocation(line: 1345, column: 6, scope: !1496)
!1499 = !DILocation(line: 1347, column: 2, scope: !1496)
!1500 = !DILocation(line: 1347, column: 14, scope: !1501)
!1501 = distinct !DILexicalBlock(scope: !1493, file: !3, line: 1347, column: 13)
!1502 = !DILocation(line: 1347, column: 13, scope: !1493)
!1503 = !DILocation(line: 1348, column: 27, scope: !1504)
!1504 = distinct !DILexicalBlock(scope: !1501, file: !3, line: 1347, column: 21)
!1505 = !DILocation(line: 1348, column: 37, scope: !1504)
!1506 = !DILocation(line: 1348, column: 6, scope: !1504)
!1507 = !DILocation(line: 1349, column: 2, scope: !1504)
!1508 = !DILocation(line: 1350, column: 16, scope: !1485)
!1509 = !DILocation(line: 1350, column: 27, scope: !1485)
!1510 = !DILocation(line: 1350, column: 36, scope: !1485)
!1511 = !DILocation(line: 1350, column: 35, scope: !1485)
!1512 = !DILocation(line: 1350, column: 25, scope: !1485)
!1513 = !DILocation(line: 1350, column: 51, scope: !1485)
!1514 = !DILocation(line: 1350, column: 62, scope: !1485)
!1515 = !DILocation(line: 1350, column: 2, scope: !1485)
!1516 = !DILocation(line: 1354, column: 2, scope: !1485)
!1517 = !DILocation(line: 1355, column: 2, scope: !1485)
!1518 = !DILocation(line: 1357, column: 9, scope: !299)
!1519 = !DILocation(line: 1358, column: 15, scope: !299)
!1520 = !DILocation(line: 1359, column: 16, scope: !299)
!1521 = !DILocation(line: 1359, column: 14, scope: !299)
!1522 = !DILocation(line: 1362, column: 9, scope: !1523)
!1523 = distinct !DILexicalBlock(scope: !299, file: !3, line: 1362, column: 9)
!1524 = !DILocation(line: 1362, column: 16, scope: !1523)
!1525 = !DILocation(line: 1362, column: 28, scope: !1523)
!1526 = !DILocation(line: 1362, column: 32, scope: !1523)
!1527 = !DILocation(line: 1362, column: 9, scope: !299)
!1528 = !DILocation(line: 1369, column: 32, scope: !1529)
!1529 = distinct !DILexicalBlock(scope: !1523, file: !3, line: 1362, column: 45)
!1530 = !DILocation(line: 1369, column: 26, scope: !1529)
!1531 = !DILocation(line: 1369, column: 18, scope: !1529)
!1532 = !DILocation(line: 1370, column: 13, scope: !1533)
!1533 = distinct !DILexicalBlock(scope: !1529, file: !3, line: 1370, column: 13)
!1534 = !DILocation(line: 1370, column: 22, scope: !1533)
!1535 = !DILocation(line: 1370, column: 13, scope: !1529)
!1536 = !DILocalVariable(name: "buf", scope: !1537, file: !3, line: 1371, type: !1538)
!1537 = distinct !DILexicalBlock(scope: !1533, file: !3, line: 1370, column: 30)
!1538 = !DICompositeType(tag: DW_TAG_array_type, baseType: !92, size: 64, elements: !1539)
!1539 = !{!1540}
!1540 = !DISubrange(count: 8)
!1541 = !DILocation(line: 1371, column: 17, scope: !1537)
!1542 = !DILocation(line: 1372, column: 22, scope: !1537)
!1543 = !DILocation(line: 1373, column: 22, scope: !1544)
!1544 = distinct !DILexicalBlock(scope: !1537, file: !3, line: 1373, column: 17)
!1545 = !DILocation(line: 1373, column: 34, scope: !1544)
!1546 = !DILocation(line: 1373, column: 17, scope: !1544)
!1547 = !DILocation(line: 1373, column: 52, scope: !1544)
!1548 = !DILocation(line: 1373, column: 17, scope: !1537)
!1549 = !DILocation(line: 1374, column: 17, scope: !1550)
!1550 = distinct !DILexicalBlock(scope: !1544, file: !3, line: 1373, column: 68)
!1551 = !DILocation(line: 1375, column: 13, scope: !1550)
!1552 = !DILocation(line: 1376, column: 25, scope: !1537)
!1553 = !DILocation(line: 1376, column: 23, scope: !1537)
!1554 = !DILocation(line: 1377, column: 18, scope: !1537)
!1555 = !DILocation(line: 1377, column: 16, scope: !1537)
!1556 = !DILocation(line: 1378, column: 2, scope: !1537)
!1557 = !DILocation(line: 1379, column: 5, scope: !1529)
!1558 = !DILocation(line: 1381, column: 12, scope: !299)
!1559 = !DILocation(line: 1381, column: 40, scope: !299)
!1560 = !DILocation(line: 1381, column: 10, scope: !299)
!1561 = !DILocation(line: 1382, column: 5, scope: !299)
!1562 = !DILocation(line: 1382, column: 14, scope: !299)
!1563 = !DILocation(line: 1383, column: 9, scope: !1564)
!1564 = distinct !DILexicalBlock(scope: !299, file: !3, line: 1383, column: 9)
!1565 = !DILocation(line: 1383, column: 9, scope: !299)
!1566 = !DILocation(line: 1384, column: 43, scope: !1567)
!1567 = distinct !DILexicalBlock(scope: !1564, file: !3, line: 1383, column: 18)
!1568 = !DILocation(line: 1384, column: 35, scope: !1567)
!1569 = !DILocation(line: 1384, column: 52, scope: !1567)
!1570 = !DILocation(line: 1384, column: 57, scope: !1567)
!1571 = !DILocation(line: 1384, column: 9, scope: !1567)
!1572 = !DILocation(line: 1385, column: 5, scope: !1567)
!1573 = !DILocation(line: 1386, column: 26, scope: !299)
!1574 = !DILocation(line: 1386, column: 36, scope: !299)
!1575 = !DILocation(line: 1386, column: 5, scope: !299)
!1576 = !DILocation(line: 1387, column: 9, scope: !1577)
!1577 = distinct !DILexicalBlock(scope: !299, file: !3, line: 1387, column: 9)
!1578 = !DILocation(line: 1387, column: 19, scope: !1577)
!1579 = !DILocation(line: 1387, column: 9, scope: !299)
!1580 = !DILocation(line: 1388, column: 11, scope: !1581)
!1581 = distinct !DILexicalBlock(scope: !1577, file: !3, line: 1387, column: 27)
!1582 = !DILocation(line: 1389, column: 38, scope: !1581)
!1583 = !DILocation(line: 1389, column: 23, scope: !1581)
!1584 = !DILocation(line: 1389, column: 11, scope: !1581)
!1585 = !DILocation(line: 1390, column: 5, scope: !1581)
!1586 = !DILocation(line: 1390, column: 16, scope: !1587)
!1587 = distinct !DILexicalBlock(scope: !1577, file: !3, line: 1390, column: 16)
!1588 = !DILocation(line: 1390, column: 25, scope: !1587)
!1589 = !DILocation(line: 1390, column: 16, scope: !1577)
!1590 = !DILocation(line: 1391, column: 15, scope: !1591)
!1591 = distinct !DILexicalBlock(scope: !1587, file: !3, line: 1390, column: 31)
!1592 = !DILocation(line: 1391, column: 12, scope: !1591)
!1593 = !DILocation(line: 1392, column: 5, scope: !1591)
!1594 = !DILocation(line: 1393, column: 9, scope: !1595)
!1595 = distinct !DILexicalBlock(scope: !299, file: !3, line: 1393, column: 9)
!1596 = !DILocation(line: 1393, column: 19, scope: !1595)
!1597 = !DILocation(line: 1393, column: 9, scope: !299)
!1598 = !DILocation(line: 1394, column: 12, scope: !1599)
!1599 = distinct !DILexicalBlock(scope: !1595, file: !3, line: 1393, column: 27)
!1600 = !DILocation(line: 1395, column: 38, scope: !1599)
!1601 = !DILocation(line: 1395, column: 23, scope: !1599)
!1602 = !DILocation(line: 1395, column: 11, scope: !1599)
!1603 = !DILocation(line: 1396, column: 5, scope: !1599)
!1604 = !DILocation(line: 1396, column: 16, scope: !1605)
!1605 = distinct !DILexicalBlock(scope: !1595, file: !3, line: 1396, column: 16)
!1606 = !DILocation(line: 1396, column: 26, scope: !1605)
!1607 = !DILocation(line: 1396, column: 16, scope: !1595)
!1608 = !DILocation(line: 1397, column: 15, scope: !1609)
!1609 = distinct !DILexicalBlock(scope: !1605, file: !3, line: 1396, column: 32)
!1610 = !DILocation(line: 1397, column: 12, scope: !1609)
!1611 = !DILocation(line: 1398, column: 5, scope: !1609)
!1612 = !DILocation(line: 1399, column: 19, scope: !299)
!1613 = !DILocation(line: 1399, column: 30, scope: !299)
!1614 = !DILocation(line: 1399, column: 39, scope: !299)
!1615 = !DILocation(line: 1399, column: 38, scope: !299)
!1616 = !DILocation(line: 1399, column: 28, scope: !299)
!1617 = !DILocation(line: 1399, column: 54, scope: !299)
!1618 = !DILocation(line: 1399, column: 65, scope: !299)
!1619 = !DILocation(line: 1399, column: 5, scope: !299)
!1620 = !DILocation(line: 1400, column: 5, scope: !299)
!1621 = !DILocation(line: 1401, column: 1, scope: !299)
!1622 = distinct !DISubprogram(name: "get_method", scope: !3, file: !3, line: 1151, type: !1623, scopeLine: 1153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !271)
!1623 = !DISubroutineType(types: !1624)
!1624 = !{!28, !28}
!1625 = !DILocalVariable(name: "in", arg: 1, scope: !1622, file: !3, line: 1152, type: !28)
!1626 = !DILocation(line: 1152, column: 9, scope: !1622)
!1627 = !DILocalVariable(name: "flags", scope: !1622, file: !3, line: 1154, type: !92)
!1628 = !DILocation(line: 1154, column: 9, scope: !1622)
!1629 = !DILocalVariable(name: "magic", scope: !1622, file: !3, line: 1155, type: !1630)
!1630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 16, elements: !1631)
!1631 = !{!1632}
!1632 = !DISubrange(count: 2)
!1633 = !DILocation(line: 1155, column: 10, scope: !1622)
!1634 = !DILocalVariable(name: "stamp", scope: !1622, file: !3, line: 1156, type: !95)
!1635 = !DILocation(line: 1156, column: 9, scope: !1622)
!1636 = !DILocation(line: 1161, column: 9, scope: !1637)
!1637 = distinct !DILexicalBlock(scope: !1622, file: !3, line: 1161, column: 9)
!1638 = !DILocation(line: 1161, column: 15, scope: !1637)
!1639 = !DILocation(line: 1161, column: 18, scope: !1637)
!1640 = !DILocation(line: 1161, column: 9, scope: !1622)
!1641 = !DILocation(line: 1162, column: 19, scope: !1642)
!1642 = distinct !DILexicalBlock(scope: !1637, file: !3, line: 1161, column: 29)
!1643 = !DILocation(line: 1162, column: 13, scope: !1642)
!1644 = !DILocation(line: 1162, column: 2, scope: !1642)
!1645 = !DILocation(line: 1162, column: 11, scope: !1642)
!1646 = !DILocation(line: 1163, column: 19, scope: !1642)
!1647 = !DILocation(line: 1163, column: 13, scope: !1642)
!1648 = !DILocation(line: 1163, column: 2, scope: !1642)
!1649 = !DILocation(line: 1163, column: 11, scope: !1642)
!1650 = !DILocation(line: 1165, column: 5, scope: !1642)
!1651 = !DILocation(line: 1166, column: 19, scope: !1652)
!1652 = distinct !DILexicalBlock(scope: !1637, file: !3, line: 1165, column: 12)
!1653 = !DILocation(line: 1166, column: 13, scope: !1652)
!1654 = !DILocation(line: 1166, column: 2, scope: !1652)
!1655 = !DILocation(line: 1166, column: 11, scope: !1652)
!1656 = !DILocation(line: 1167, column: 19, scope: !1652)
!1657 = !DILocation(line: 1167, column: 13, scope: !1652)
!1658 = !DILocation(line: 1167, column: 2, scope: !1652)
!1659 = !DILocation(line: 1167, column: 11, scope: !1652)
!1660 = !DILocation(line: 1169, column: 12, scope: !1622)
!1661 = !DILocation(line: 1170, column: 12, scope: !1622)
!1662 = !DILocation(line: 1171, column: 18, scope: !1622)
!1663 = !DILocation(line: 1172, column: 17, scope: !1622)
!1664 = !DILocation(line: 1175, column: 16, scope: !1665)
!1665 = distinct !DILexicalBlock(scope: !1622, file: !3, line: 1175, column: 9)
!1666 = !DILocation(line: 1175, column: 9, scope: !1665)
!1667 = !DILocation(line: 1175, column: 38, scope: !1665)
!1668 = !DILocation(line: 1176, column: 9, scope: !1665)
!1669 = !DILocation(line: 1176, column: 19, scope: !1665)
!1670 = !DILocation(line: 1176, column: 12, scope: !1665)
!1671 = !DILocation(line: 1176, column: 45, scope: !1665)
!1672 = !DILocation(line: 1175, column: 9, scope: !1622)
!1673 = !DILocation(line: 1178, column: 16, scope: !1674)
!1674 = distinct !DILexicalBlock(scope: !1665, file: !3, line: 1176, column: 51)
!1675 = !DILocation(line: 1178, column: 9, scope: !1674)
!1676 = !DILocation(line: 1179, column: 6, scope: !1677)
!1677 = distinct !DILexicalBlock(scope: !1674, file: !3, line: 1179, column: 6)
!1678 = !DILocation(line: 1179, column: 13, scope: !1677)
!1679 = !DILocation(line: 1179, column: 6, scope: !1674)
!1680 = !DILocation(line: 1180, column: 14, scope: !1681)
!1681 = distinct !DILexicalBlock(scope: !1677, file: !3, line: 1179, column: 26)
!1682 = !DILocation(line: 1182, column: 7, scope: !1681)
!1683 = !DILocation(line: 1182, column: 25, scope: !1681)
!1684 = !DILocation(line: 1180, column: 6, scope: !1681)
!1685 = !DILocation(line: 1183, column: 16, scope: !1681)
!1686 = !DILocation(line: 1184, column: 6, scope: !1681)
!1687 = !DILocation(line: 1186, column: 7, scope: !1674)
!1688 = !DILocation(line: 1187, column: 16, scope: !1674)
!1689 = !DILocation(line: 1187, column: 11, scope: !1674)
!1690 = !DILocation(line: 1187, column: 9, scope: !1674)
!1691 = !DILocation(line: 1189, column: 7, scope: !1692)
!1692 = distinct !DILexicalBlock(scope: !1674, file: !3, line: 1189, column: 6)
!1693 = !DILocation(line: 1189, column: 13, scope: !1692)
!1694 = !DILocation(line: 1189, column: 26, scope: !1692)
!1695 = !DILocation(line: 1189, column: 6, scope: !1674)
!1696 = !DILocation(line: 1190, column: 14, scope: !1697)
!1697 = distinct !DILexicalBlock(scope: !1692, file: !3, line: 1189, column: 32)
!1698 = !DILocation(line: 1192, column: 7, scope: !1697)
!1699 = !DILocation(line: 1190, column: 6, scope: !1697)
!1700 = !DILocation(line: 1193, column: 16, scope: !1697)
!1701 = !DILocation(line: 1194, column: 6, scope: !1697)
!1702 = !DILocation(line: 1196, column: 7, scope: !1703)
!1703 = distinct !DILexicalBlock(scope: !1674, file: !3, line: 1196, column: 6)
!1704 = !DILocation(line: 1196, column: 13, scope: !1703)
!1705 = !DILocation(line: 1196, column: 29, scope: !1703)
!1706 = !DILocation(line: 1196, column: 6, scope: !1674)
!1707 = !DILocation(line: 1197, column: 14, scope: !1708)
!1708 = distinct !DILexicalBlock(scope: !1703, file: !3, line: 1196, column: 35)
!1709 = !DILocation(line: 1199, column: 7, scope: !1708)
!1710 = !DILocation(line: 1197, column: 6, scope: !1708)
!1711 = !DILocation(line: 1200, column: 16, scope: !1708)
!1712 = !DILocation(line: 1201, column: 10, scope: !1713)
!1713 = distinct !DILexicalBlock(scope: !1708, file: !3, line: 1201, column: 10)
!1714 = !DILocation(line: 1201, column: 16, scope: !1713)
!1715 = !DILocation(line: 1201, column: 10, scope: !1708)
!1716 = !DILocation(line: 1201, column: 22, scope: !1713)
!1717 = !DILocation(line: 1202, column: 2, scope: !1708)
!1718 = !DILocation(line: 1203, column: 7, scope: !1719)
!1719 = distinct !DILexicalBlock(scope: !1674, file: !3, line: 1203, column: 6)
!1720 = !DILocation(line: 1203, column: 13, scope: !1719)
!1721 = !DILocation(line: 1203, column: 25, scope: !1719)
!1722 = !DILocation(line: 1203, column: 6, scope: !1674)
!1723 = !DILocation(line: 1204, column: 14, scope: !1724)
!1724 = distinct !DILexicalBlock(scope: !1719, file: !3, line: 1203, column: 31)
!1725 = !DILocation(line: 1206, column: 7, scope: !1724)
!1726 = !DILocation(line: 1206, column: 25, scope: !1724)
!1727 = !DILocation(line: 1204, column: 6, scope: !1724)
!1728 = !DILocation(line: 1207, column: 16, scope: !1724)
!1729 = !DILocation(line: 1208, column: 10, scope: !1730)
!1730 = distinct !DILexicalBlock(scope: !1724, file: !3, line: 1208, column: 10)
!1731 = !DILocation(line: 1208, column: 16, scope: !1730)
!1732 = !DILocation(line: 1208, column: 10, scope: !1724)
!1733 = !DILocation(line: 1208, column: 22, scope: !1730)
!1734 = !DILocation(line: 1209, column: 2, scope: !1724)
!1735 = !DILocation(line: 1210, column: 16, scope: !1674)
!1736 = !DILocation(line: 1210, column: 11, scope: !1674)
!1737 = !DILocation(line: 1210, column: 9, scope: !1674)
!1738 = !DILocation(line: 1211, column: 17, scope: !1674)
!1739 = !DILocation(line: 1211, column: 12, scope: !1674)
!1740 = !DILocation(line: 1211, column: 29, scope: !1674)
!1741 = !DILocation(line: 1211, column: 8, scope: !1674)
!1742 = !DILocation(line: 1212, column: 17, scope: !1674)
!1743 = !DILocation(line: 1212, column: 12, scope: !1674)
!1744 = !DILocation(line: 1212, column: 29, scope: !1674)
!1745 = !DILocation(line: 1212, column: 8, scope: !1674)
!1746 = !DILocation(line: 1213, column: 17, scope: !1674)
!1747 = !DILocation(line: 1213, column: 12, scope: !1674)
!1748 = !DILocation(line: 1213, column: 29, scope: !1674)
!1749 = !DILocation(line: 1213, column: 8, scope: !1674)
!1750 = !DILocation(line: 1214, column: 6, scope: !1751)
!1751 = distinct !DILexicalBlock(scope: !1674, file: !3, line: 1214, column: 6)
!1752 = !DILocation(line: 1214, column: 12, scope: !1751)
!1753 = !DILocation(line: 1214, column: 17, scope: !1751)
!1754 = !DILocation(line: 1214, column: 21, scope: !1751)
!1755 = !DILocation(line: 1214, column: 6, scope: !1674)
!1756 = !DILocation(line: 1214, column: 43, scope: !1751)
!1757 = !DILocation(line: 1214, column: 41, scope: !1751)
!1758 = !DILocation(line: 1214, column: 30, scope: !1751)
!1759 = !DILocation(line: 1216, column: 8, scope: !1674)
!1760 = !DILocation(line: 1217, column: 8, scope: !1674)
!1761 = !DILocation(line: 1219, column: 7, scope: !1762)
!1762 = distinct !DILexicalBlock(scope: !1674, file: !3, line: 1219, column: 6)
!1763 = !DILocation(line: 1219, column: 13, scope: !1762)
!1764 = !DILocation(line: 1219, column: 29, scope: !1762)
!1765 = !DILocation(line: 1219, column: 6, scope: !1674)
!1766 = !DILocalVariable(name: "part", scope: !1767, file: !3, line: 1220, type: !7)
!1767 = distinct !DILexicalBlock(scope: !1762, file: !3, line: 1219, column: 35)
!1768 = !DILocation(line: 1220, column: 15, scope: !1767)
!1769 = !DILocation(line: 1220, column: 32, scope: !1767)
!1770 = !DILocation(line: 1221, column: 25, scope: !1767)
!1771 = !DILocation(line: 1221, column: 36, scope: !1767)
!1772 = !DILocation(line: 1221, column: 11, scope: !1767)
!1773 = !DILocation(line: 1222, column: 10, scope: !1774)
!1774 = distinct !DILexicalBlock(scope: !1767, file: !3, line: 1222, column: 10)
!1775 = !DILocation(line: 1222, column: 10, scope: !1767)
!1776 = !DILocation(line: 1223, column: 11, scope: !1777)
!1777 = distinct !DILexicalBlock(scope: !1774, file: !3, line: 1222, column: 19)
!1778 = !DILocation(line: 1224, column: 4, scope: !1777)
!1779 = !DILocation(line: 1224, column: 22, scope: !1777)
!1780 = !DILocation(line: 1223, column: 3, scope: !1777)
!1781 = !DILocation(line: 1225, column: 6, scope: !1777)
!1782 = !DILocation(line: 1226, column: 2, scope: !1767)
!1783 = !DILocation(line: 1227, column: 7, scope: !1784)
!1784 = distinct !DILexicalBlock(scope: !1674, file: !3, line: 1227, column: 6)
!1785 = !DILocation(line: 1227, column: 13, scope: !1784)
!1786 = !DILocation(line: 1227, column: 28, scope: !1784)
!1787 = !DILocation(line: 1227, column: 6, scope: !1674)
!1788 = !DILocalVariable(name: "len", scope: !1789, file: !3, line: 1228, type: !7)
!1789 = distinct !DILexicalBlock(scope: !1784, file: !3, line: 1227, column: 34)
!1790 = !DILocation(line: 1228, column: 15, scope: !1789)
!1791 = !DILocation(line: 1228, column: 31, scope: !1789)
!1792 = !DILocation(line: 1229, column: 24, scope: !1789)
!1793 = !DILocation(line: 1229, column: 35, scope: !1789)
!1794 = !DILocation(line: 1229, column: 10, scope: !1789)
!1795 = !DILocation(line: 1230, column: 10, scope: !1796)
!1796 = distinct !DILexicalBlock(scope: !1789, file: !3, line: 1230, column: 10)
!1797 = !DILocation(line: 1230, column: 10, scope: !1789)
!1798 = !DILocation(line: 1231, column: 11, scope: !1799)
!1799 = distinct !DILexicalBlock(scope: !1796, file: !3, line: 1230, column: 19)
!1800 = !DILocation(line: 1232, column: 4, scope: !1799)
!1801 = !DILocation(line: 1232, column: 22, scope: !1799)
!1802 = !DILocation(line: 1231, column: 3, scope: !1799)
!1803 = !DILocation(line: 1233, column: 6, scope: !1799)
!1804 = !DILocation(line: 1234, column: 6, scope: !1789)
!1805 = !DILocation(line: 1234, column: 16, scope: !1789)
!1806 = !DILocation(line: 1234, column: 26, scope: !1789)
!1807 = distinct !{!1807, !1804, !1806, !816}
!1808 = !DILocation(line: 1235, column: 2, scope: !1789)
!1809 = !DILocation(line: 1238, column: 7, scope: !1810)
!1810 = distinct !DILexicalBlock(scope: !1674, file: !3, line: 1238, column: 6)
!1811 = !DILocation(line: 1238, column: 13, scope: !1810)
!1812 = !DILocation(line: 1238, column: 26, scope: !1810)
!1813 = !DILocation(line: 1238, column: 6, scope: !1674)
!1814 = !DILocation(line: 1239, column: 10, scope: !1815)
!1815 = distinct !DILexicalBlock(scope: !1816, file: !3, line: 1239, column: 10)
!1816 = distinct !DILexicalBlock(scope: !1810, file: !3, line: 1238, column: 32)
!1817 = !DILocation(line: 1239, column: 18, scope: !1815)
!1818 = !DILocation(line: 1239, column: 22, scope: !1815)
!1819 = !DILocation(line: 1239, column: 32, scope: !1815)
!1820 = !DILocation(line: 1239, column: 36, scope: !1815)
!1821 = !DILocation(line: 1239, column: 42, scope: !1815)
!1822 = !DILocation(line: 1239, column: 45, scope: !1815)
!1823 = !DILocation(line: 1239, column: 53, scope: !1815)
!1824 = !DILocation(line: 1239, column: 10, scope: !1816)
!1825 = !DILocalVariable(name: "c", scope: !1826, file: !3, line: 1241, type: !40)
!1826 = distinct !DILexicalBlock(scope: !1815, file: !3, line: 1239, column: 58)
!1827 = !DILocation(line: 1241, column: 8, scope: !1826)
!1828 = !DILocation(line: 1242, column: 3, scope: !1826)
!1829 = !DILocation(line: 1242, column: 9, scope: !1830)
!1830 = distinct !DILexicalBlock(scope: !1826, file: !3, line: 1242, column: 6)
!1831 = !DILocation(line: 1242, column: 8, scope: !1830)
!1832 = !DILocation(line: 1242, column: 20, scope: !1830)
!1833 = !DILocation(line: 1242, column: 29, scope: !1826)
!1834 = !DILocation(line: 1242, column: 31, scope: !1826)
!1835 = distinct !{!1835, !1828, !1836, !816}
!1836 = !DILocation(line: 1242, column: 35, scope: !1826)
!1837 = !DILocation(line: 1243, column: 6, scope: !1826)
!1838 = !DILocalVariable(name: "p", scope: !1839, file: !3, line: 1245, type: !39)
!1839 = distinct !DILexicalBlock(scope: !1815, file: !3, line: 1243, column: 13)
!1840 = !DILocation(line: 1245, column: 23, scope: !1839)
!1841 = !DILocation(line: 1245, column: 27, scope: !1839)
!1842 = !DILocalVariable(name: "base", scope: !1839, file: !3, line: 1246, type: !39)
!1843 = !DILocation(line: 1246, column: 23, scope: !1839)
!1844 = !DILocation(line: 1246, column: 30, scope: !1839)
!1845 = !DILocation(line: 1247, column: 3, scope: !1839)
!1846 = !DILocation(line: 1248, column: 18, scope: !1847)
!1847 = distinct !DILexicalBlock(scope: !1848, file: !3, line: 1247, column: 12)
!1848 = distinct !DILexicalBlock(scope: !1849, file: !3, line: 1247, column: 3)
!1849 = distinct !DILexicalBlock(scope: !1839, file: !3, line: 1247, column: 3)
!1850 = !DILocation(line: 1248, column: 12, scope: !1847)
!1851 = !DILocation(line: 1248, column: 8, scope: !1847)
!1852 = !DILocation(line: 1248, column: 10, scope: !1847)
!1853 = !DILocation(line: 1249, column: 13, scope: !1854)
!1854 = distinct !DILexicalBlock(scope: !1847, file: !3, line: 1249, column: 11)
!1855 = !DILocation(line: 1249, column: 11, scope: !1854)
!1856 = !DILocation(line: 1249, column: 16, scope: !1854)
!1857 = !DILocation(line: 1249, column: 11, scope: !1847)
!1858 = !DILocation(line: 1249, column: 25, scope: !1854)
!1859 = !DILocation(line: 1250, column: 11, scope: !1860)
!1860 = distinct !DILexicalBlock(scope: !1847, file: !3, line: 1250, column: 11)
!1861 = !DILocation(line: 1250, column: 13, scope: !1860)
!1862 = !DILocation(line: 1250, column: 11, scope: !1847)
!1863 = !DILocation(line: 1251, column: 4, scope: !1864)
!1864 = distinct !DILexicalBlock(scope: !1860, file: !3, line: 1250, column: 39)
!1865 = !DILocation(line: 1252, column: 7, scope: !1864)
!1866 = !DILocation(line: 1247, column: 3, scope: !1848)
!1867 = distinct !{!1867, !1868, !1869}
!1868 = !DILocation(line: 1247, column: 3, scope: !1849)
!1869 = !DILocation(line: 1253, column: 3, scope: !1849)
!1870 = !DILocation(line: 1255, column: 22, scope: !1871)
!1871 = distinct !DILexicalBlock(scope: !1839, file: !3, line: 1255, column: 21)
!1872 = !DILocation(line: 1255, column: 21, scope: !1839)
!1873 = !DILocation(line: 1257, column: 10, scope: !1874)
!1874 = distinct !DILexicalBlock(scope: !1875, file: !3, line: 1257, column: 10)
!1875 = distinct !DILexicalBlock(scope: !1871, file: !3, line: 1255, column: 28)
!1876 = !DILocation(line: 1257, column: 10, scope: !1875)
!1877 = !DILocation(line: 1257, column: 20, scope: !1874)
!1878 = !DILocation(line: 1257, column: 16, scope: !1874)
!1879 = !DILocation(line: 1258, column: 17, scope: !1875)
!1880 = !DILocation(line: 1260, column: 2, scope: !1816)
!1881 = !DILocation(line: 1263, column: 7, scope: !1882)
!1882 = distinct !DILexicalBlock(scope: !1674, file: !3, line: 1263, column: 6)
!1883 = !DILocation(line: 1263, column: 13, scope: !1882)
!1884 = !DILocation(line: 1263, column: 24, scope: !1882)
!1885 = !DILocation(line: 1263, column: 6, scope: !1674)
!1886 = !DILocation(line: 1264, column: 6, scope: !1887)
!1887 = distinct !DILexicalBlock(scope: !1882, file: !3, line: 1263, column: 30)
!1888 = !DILocation(line: 1264, column: 13, scope: !1887)
!1889 = !DILocation(line: 1264, column: 24, scope: !1887)
!1890 = distinct !{!1890, !1886, !1891, !816}
!1891 = !DILocation(line: 1264, column: 41, scope: !1887)
!1892 = !DILocation(line: 1265, column: 2, scope: !1887)
!1893 = !DILocation(line: 1266, column: 6, scope: !1894)
!1894 = distinct !DILexicalBlock(scope: !1674, file: !3, line: 1266, column: 6)
!1895 = !DILocation(line: 1266, column: 14, scope: !1894)
!1896 = !DILocation(line: 1266, column: 6, scope: !1674)
!1897 = !DILocation(line: 1267, column: 21, scope: !1898)
!1898 = distinct !DILexicalBlock(scope: !1894, file: !3, line: 1266, column: 20)
!1899 = !DILocation(line: 1267, column: 27, scope: !1898)
!1900 = !DILocation(line: 1267, column: 19, scope: !1898)
!1901 = !DILocation(line: 1268, column: 2, scope: !1898)
!1902 = !DILocation(line: 1270, column: 5, scope: !1674)
!1903 = !DILocation(line: 1270, column: 23, scope: !1904)
!1904 = distinct !DILexicalBlock(scope: !1665, file: !3, line: 1270, column: 16)
!1905 = !DILocation(line: 1270, column: 16, scope: !1904)
!1906 = !DILocation(line: 1270, column: 46, scope: !1904)
!1907 = !DILocation(line: 1270, column: 51, scope: !1904)
!1908 = !DILocation(line: 1270, column: 54, scope: !1904)
!1909 = !DILocation(line: 1270, column: 60, scope: !1904)
!1910 = !DILocation(line: 1271, column: 6, scope: !1904)
!1911 = !DILocation(line: 1271, column: 9, scope: !1904)
!1912 = !DILocation(line: 1271, column: 46, scope: !1904)
!1913 = !DILocation(line: 1270, column: 16, scope: !1665)
!1914 = !DILocation(line: 1275, column: 15, scope: !1915)
!1915 = distinct !DILexicalBlock(scope: !1904, file: !3, line: 1271, column: 52)
!1916 = !DILocation(line: 1276, column: 7, scope: !1915)
!1917 = !DILocation(line: 1277, column: 20, scope: !1918)
!1918 = distinct !DILexicalBlock(scope: !1915, file: !3, line: 1277, column: 6)
!1919 = !DILocation(line: 1277, column: 6, scope: !1918)
!1920 = !DILocation(line: 1277, column: 24, scope: !1918)
!1921 = !DILocation(line: 1277, column: 6, scope: !1915)
!1922 = !DILocation(line: 1277, column: 31, scope: !1918)
!1923 = !DILocation(line: 1279, column: 14, scope: !1915)
!1924 = !DILocation(line: 1281, column: 5, scope: !1915)
!1925 = !DILocation(line: 1281, column: 23, scope: !1926)
!1926 = distinct !DILexicalBlock(scope: !1904, file: !3, line: 1281, column: 16)
!1927 = !DILocation(line: 1281, column: 16, scope: !1926)
!1928 = !DILocation(line: 1281, column: 45, scope: !1926)
!1929 = !DILocation(line: 1281, column: 16, scope: !1904)
!1930 = !DILocation(line: 1282, column: 7, scope: !1931)
!1931 = distinct !DILexicalBlock(scope: !1926, file: !3, line: 1281, column: 51)
!1932 = !DILocation(line: 1283, column: 9, scope: !1931)
!1933 = !DILocation(line: 1285, column: 5, scope: !1931)
!1934 = !DILocation(line: 1285, column: 23, scope: !1935)
!1935 = distinct !DILexicalBlock(scope: !1926, file: !3, line: 1285, column: 16)
!1936 = !DILocation(line: 1285, column: 16, scope: !1935)
!1937 = !DILocation(line: 1285, column: 44, scope: !1935)
!1938 = !DILocation(line: 1285, column: 16, scope: !1926)
!1939 = !DILocation(line: 1286, column: 7, scope: !1940)
!1940 = distinct !DILexicalBlock(scope: !1935, file: !3, line: 1285, column: 50)
!1941 = !DILocation(line: 1287, column: 9, scope: !1940)
!1942 = !DILocation(line: 1288, column: 14, scope: !1940)
!1943 = !DILocation(line: 1290, column: 5, scope: !1940)
!1944 = !DILocation(line: 1290, column: 23, scope: !1945)
!1945 = distinct !DILexicalBlock(scope: !1935, file: !3, line: 1290, column: 16)
!1946 = !DILocation(line: 1290, column: 16, scope: !1945)
!1947 = !DILocation(line: 1290, column: 44, scope: !1945)
!1948 = !DILocation(line: 1290, column: 16, scope: !1935)
!1949 = !DILocation(line: 1291, column: 7, scope: !1950)
!1950 = distinct !DILexicalBlock(scope: !1945, file: !3, line: 1290, column: 50)
!1951 = !DILocation(line: 1292, column: 9, scope: !1950)
!1952 = !DILocation(line: 1293, column: 14, scope: !1950)
!1953 = !DILocation(line: 1295, column: 5, scope: !1950)
!1954 = !DILocation(line: 1295, column: 16, scope: !1955)
!1955 = distinct !DILexicalBlock(scope: !1945, file: !3, line: 1295, column: 16)
!1956 = !DILocation(line: 1295, column: 22, scope: !1955)
!1957 = !DILocation(line: 1295, column: 25, scope: !1955)
!1958 = !DILocation(line: 1295, column: 35, scope: !1955)
!1959 = !DILocation(line: 1295, column: 39, scope: !1955)
!1960 = !DILocation(line: 1295, column: 16, scope: !1945)
!1961 = !DILocation(line: 1296, column: 9, scope: !1962)
!1962 = distinct !DILexicalBlock(scope: !1955, file: !3, line: 1295, column: 45)
!1963 = !DILocation(line: 1297, column: 7, scope: !1962)
!1964 = !DILocation(line: 1298, column: 15, scope: !1962)
!1965 = !DILocation(line: 1299, column: 14, scope: !1962)
!1966 = !DILocation(line: 1300, column: 5, scope: !1962)
!1967 = !DILocation(line: 1301, column: 9, scope: !1968)
!1968 = distinct !DILexicalBlock(scope: !1622, file: !3, line: 1301, column: 9)
!1969 = !DILocation(line: 1301, column: 16, scope: !1968)
!1970 = !DILocation(line: 1301, column: 9, scope: !1622)
!1971 = !DILocation(line: 1301, column: 29, scope: !1968)
!1972 = !DILocation(line: 1301, column: 22, scope: !1968)
!1973 = !DILocation(line: 1303, column: 9, scope: !1974)
!1974 = distinct !DILexicalBlock(scope: !1622, file: !3, line: 1303, column: 9)
!1975 = !DILocation(line: 1303, column: 17, scope: !1974)
!1976 = !DILocation(line: 1303, column: 9, scope: !1622)
!1977 = !DILocation(line: 1304, column: 10, scope: !1978)
!1978 = distinct !DILexicalBlock(scope: !1974, file: !3, line: 1303, column: 23)
!1979 = !DILocation(line: 1304, column: 52, scope: !1978)
!1980 = !DILocation(line: 1304, column: 2, scope: !1978)
!1981 = !DILocation(line: 1305, column: 12, scope: !1978)
!1982 = !DILocation(line: 1306, column: 2, scope: !1978)
!1983 = !DILocation(line: 1308, column: 2, scope: !1984)
!1984 = distinct !DILexicalBlock(scope: !1985, file: !3, line: 1308, column: 2)
!1985 = distinct !DILexicalBlock(scope: !1986, file: !3, line: 1308, column: 2)
!1986 = distinct !DILexicalBlock(scope: !1974, file: !3, line: 1307, column: 12)
!1987 = !DILocation(line: 1308, column: 2, scope: !1985)
!1988 = !DILocation(line: 1308, column: 2, scope: !1989)
!1989 = distinct !DILexicalBlock(scope: !1985, file: !3, line: 1308, column: 2)
!1990 = !DILocation(line: 1310, column: 2, scope: !1986)
!1991 = !DILocation(line: 1312, column: 1, scope: !1622)
!1992 = !DILocalVariable(name: "iname", arg: 1, scope: !282, file: !3, line: 998, type: !39)
!1993 = !DILocation(line: 998, column: 11, scope: !282)
!1994 = !DILocalVariable(name: "sbuf", arg: 2, scope: !282, file: !3, line: 999, type: !285)
!1995 = !DILocation(line: 999, column: 18, scope: !282)
!1996 = !DILocalVariable(name: "ilen", scope: !282, file: !3, line: 1001, type: !28)
!1997 = !DILocation(line: 1001, column: 9, scope: !282)
!1998 = !DILocalVariable(name: "suf", scope: !282, file: !3, line: 1003, type: !136)
!1999 = !DILocation(line: 1003, column: 12, scope: !282)
!2000 = !DILocalVariable(name: "s", scope: !282, file: !3, line: 1004, type: !39)
!2001 = !DILocation(line: 1004, column: 11, scope: !282)
!2002 = !DILocation(line: 1009, column: 20, scope: !282)
!2003 = !DILocation(line: 1009, column: 5, scope: !282)
!2004 = !DILocation(line: 1012, column: 25, scope: !2005)
!2005 = distinct !DILexicalBlock(scope: !282, file: !3, line: 1012, column: 9)
!2006 = !DILocation(line: 1012, column: 9, scope: !2005)
!2007 = !DILocation(line: 1012, column: 31, scope: !2005)
!2008 = !DILocation(line: 1012, column: 9, scope: !282)
!2009 = !DILocation(line: 1012, column: 37, scope: !2005)
!2010 = !DILocation(line: 1014, column: 10, scope: !2011)
!2011 = distinct !DILexicalBlock(scope: !282, file: !3, line: 1014, column: 9)
!2012 = !DILocation(line: 1014, column: 21, scope: !2011)
!2013 = !DILocation(line: 1014, column: 24, scope: !2011)
!2014 = !DILocation(line: 1014, column: 30, scope: !2011)
!2015 = !DILocation(line: 1014, column: 9, scope: !282)
!2016 = !DILocation(line: 1015, column: 2, scope: !2017)
!2017 = distinct !DILexicalBlock(scope: !2011, file: !3, line: 1014, column: 41)
!2018 = !DILocation(line: 1016, column: 12, scope: !2017)
!2019 = !DILocation(line: 1017, column: 2, scope: !2017)
!2020 = !DILocation(line: 1022, column: 9, scope: !282)
!2021 = !DILocation(line: 1022, column: 7, scope: !282)
!2022 = !DILocation(line: 1023, column: 9, scope: !2023)
!2023 = distinct !DILexicalBlock(scope: !282, file: !3, line: 1023, column: 9)
!2024 = !DILocation(line: 1023, column: 11, scope: !2023)
!2025 = !DILocation(line: 1023, column: 9, scope: !282)
!2026 = !DILocation(line: 1024, column: 2, scope: !2027)
!2027 = distinct !DILexicalBlock(scope: !2023, file: !3, line: 1023, column: 20)
!2028 = !DILocation(line: 1025, column: 12, scope: !2027)
!2029 = !DILocation(line: 1026, column: 2, scope: !2027)
!2030 = !DILocation(line: 1035, column: 12, scope: !282)
!2031 = !DILocation(line: 1035, column: 10, scope: !282)
!2032 = !DILocation(line: 1036, column: 9, scope: !2033)
!2033 = distinct !DILexicalBlock(scope: !282, file: !3, line: 1036, column: 9)
!2034 = !DILocation(line: 1036, column: 9, scope: !282)
!2035 = !DILocation(line: 1036, column: 37, scope: !2033)
!2036 = !DILocation(line: 1036, column: 34, scope: !2033)
!2037 = !DILocation(line: 1039, column: 5, scope: !282)
!2038 = !DILocation(line: 1040, column: 14, scope: !2039)
!2039 = distinct !DILexicalBlock(scope: !282, file: !3, line: 1039, column: 8)
!2040 = !DILocation(line: 1040, column: 13, scope: !2039)
!2041 = !DILocation(line: 1040, column: 11, scope: !2039)
!2042 = !DILocation(line: 1051, column: 24, scope: !2039)
!2043 = !DILocation(line: 1051, column: 9, scope: !2039)
!2044 = !DILocation(line: 1052, column: 29, scope: !2045)
!2045 = distinct !DILexicalBlock(scope: !2039, file: !3, line: 1052, column: 13)
!2046 = !DILocation(line: 1052, column: 13, scope: !2045)
!2047 = !DILocation(line: 1052, column: 35, scope: !2045)
!2048 = !DILocation(line: 1052, column: 13, scope: !2039)
!2049 = !DILocation(line: 1052, column: 41, scope: !2045)
!2050 = !DILocation(line: 1053, column: 9, scope: !2039)
!2051 = !DILocation(line: 1053, column: 2, scope: !2039)
!2052 = !DILocation(line: 1053, column: 15, scope: !2039)
!2053 = !DILocation(line: 1054, column: 5, scope: !2039)
!2054 = !DILocation(line: 1054, column: 15, scope: !282)
!2055 = !DILocation(line: 1054, column: 14, scope: !282)
!2056 = !DILocation(line: 1054, column: 21, scope: !282)
!2057 = distinct !{!2057, !2037, !2058, !816}
!2058 = !DILocation(line: 1054, column: 28, scope: !282)
!2059 = !DILocation(line: 1062, column: 5, scope: !282)
!2060 = !DILocation(line: 1063, column: 5, scope: !282)
!2061 = !DILocation(line: 1064, column: 15, scope: !282)
!2062 = !DILocation(line: 1065, column: 5, scope: !282)
!2063 = !DILocation(line: 1066, column: 1, scope: !282)
!2064 = distinct !DISubprogram(name: "treat_dir", scope: !3, file: !3, line: 1648, type: !1001, scopeLine: 1650, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !271)
!2065 = !DILocalVariable(name: "dir", arg: 1, scope: !2064, file: !3, line: 1649, type: !39)
!2066 = !DILocation(line: 1649, column: 11, scope: !2064)
!2067 = !DILocalVariable(name: "dp", scope: !2064, file: !3, line: 1651, type: !2068)
!2068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2069, size: 64)
!2069 = !DIDerivedType(tag: DW_TAG_typedef, name: "dir_type", file: !3, line: 87, baseType: !2070)
!2070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !2071, line: 22, size: 2240, elements: !2072)
!2071 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/dirent.h", directory: "", checksumkind: CSK_MD5, checksum: "c0e4297146be1c537f6e8a6489ebed32")
!2072 = !{!2073, !2074, !2075, !2076, !2077}
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !2070, file: !2071, line: 25, baseType: !227, size: 64)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !2070, file: !2071, line: 26, baseType: !59, size: 64, offset: 64)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !2070, file: !2071, line: 31, baseType: !63, size: 16, offset: 128)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !2070, file: !2071, line: 32, baseType: !94, size: 8, offset: 144)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !2070, file: !2071, line: 33, baseType: !2078, size: 2048, offset: 152)
!2078 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 2048, elements: !420)
!2079 = !DILocation(line: 1651, column: 15, scope: !2064)
!2080 = !DILocalVariable(name: "dirp", scope: !2064, file: !3, line: 1652, type: !2081)
!2081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2082, size: 64)
!2082 = !DIDerivedType(tag: DW_TAG_typedef, name: "DIR", file: !2083, line: 127, baseType: !2084)
!2083 = !DIFile(filename: "/usr/include/dirent.h", directory: "", checksumkind: CSK_MD5, checksum: "33c45a2c20a17fc93667c8d9aa922ab0")
!2084 = !DICompositeType(tag: DW_TAG_structure_type, name: "__dirstream", file: !2083, line: 127, flags: DIFlagFwdDecl)
!2085 = !DILocation(line: 1652, column: 15, scope: !2064)
!2086 = !DILocalVariable(name: "nbuf", scope: !2064, file: !3, line: 1653, type: !214)
!2087 = !DILocation(line: 1653, column: 14, scope: !2064)
!2088 = !DILocalVariable(name: "len", scope: !2064, file: !3, line: 1654, type: !28)
!2089 = !DILocation(line: 1654, column: 14, scope: !2064)
!2090 = !DILocation(line: 1656, column: 20, scope: !2064)
!2091 = !DILocation(line: 1656, column: 12, scope: !2064)
!2092 = !DILocation(line: 1656, column: 10, scope: !2064)
!2093 = !DILocation(line: 1658, column: 9, scope: !2094)
!2094 = distinct !DILexicalBlock(scope: !2064, file: !3, line: 1658, column: 9)
!2095 = !DILocation(line: 1658, column: 14, scope: !2094)
!2096 = !DILocation(line: 1658, column: 9, scope: !2064)
!2097 = !DILocation(line: 1659, column: 10, scope: !2098)
!2098 = distinct !DILexicalBlock(scope: !2094, file: !3, line: 1658, column: 23)
!2099 = !DILocation(line: 1659, column: 41, scope: !2098)
!2100 = !DILocation(line: 1659, column: 51, scope: !2098)
!2101 = !DILocation(line: 1659, column: 2, scope: !2098)
!2102 = !DILocation(line: 1660, column: 12, scope: !2098)
!2103 = !DILocation(line: 1661, column: 2, scope: !2098)
!2104 = !DILocation(line: 1679, column: 5, scope: !2064)
!2105 = !DILocation(line: 1679, column: 26, scope: !2064)
!2106 = !DILocation(line: 1679, column: 18, scope: !2064)
!2107 = !DILocation(line: 1679, column: 16, scope: !2064)
!2108 = !DILocation(line: 1679, column: 33, scope: !2064)
!2109 = !DILocation(line: 1681, column: 6, scope: !2110)
!2110 = distinct !DILexicalBlock(scope: !2111, file: !3, line: 1681, column: 6)
!2111 = distinct !DILexicalBlock(scope: !2064, file: !3, line: 1679, column: 42)
!2112 = !DILocation(line: 1681, column: 29, scope: !2110)
!2113 = !DILocation(line: 1681, column: 32, scope: !2110)
!2114 = !DILocation(line: 1681, column: 6, scope: !2111)
!2115 = !DILocation(line: 1682, column: 6, scope: !2116)
!2116 = distinct !DILexicalBlock(scope: !2110, file: !3, line: 1681, column: 57)
!2117 = distinct !{!2117, !2104, !2118, !816}
!2118 = !DILocation(line: 1704, column: 5, scope: !2064)
!2119 = !DILocation(line: 1684, column: 15, scope: !2111)
!2120 = !DILocation(line: 1684, column: 8, scope: !2111)
!2121 = !DILocation(line: 1684, column: 6, scope: !2111)
!2122 = !DILocation(line: 1685, column: 6, scope: !2123)
!2123 = distinct !DILexicalBlock(scope: !2111, file: !3, line: 1685, column: 6)
!2124 = !DILocation(line: 1685, column: 12, scope: !2123)
!2125 = !DILocation(line: 1685, column: 10, scope: !2123)
!2126 = !DILocation(line: 1685, column: 24, scope: !2123)
!2127 = !DILocation(line: 1685, column: 28, scope: !2123)
!2128 = !DILocation(line: 1685, column: 6, scope: !2111)
!2129 = !DILocation(line: 1686, column: 13, scope: !2130)
!2130 = distinct !DILexicalBlock(scope: !2123, file: !3, line: 1685, column: 48)
!2131 = !DILocation(line: 1686, column: 18, scope: !2130)
!2132 = !DILocation(line: 1686, column: 6, scope: !2130)
!2133 = !DILocation(line: 1687, column: 10, scope: !2134)
!2134 = distinct !DILexicalBlock(scope: !2130, file: !3, line: 1687, column: 10)
!2135 = !DILocation(line: 1687, column: 14, scope: !2134)
!2136 = !DILocation(line: 1687, column: 10, scope: !2130)
!2137 = !DILocation(line: 1695, column: 11, scope: !2138)
!2138 = distinct !DILexicalBlock(scope: !2134, file: !3, line: 1694, column: 8)
!2139 = !DILocation(line: 1695, column: 3, scope: !2138)
!2140 = !DILocation(line: 1695, column: 15, scope: !2138)
!2141 = !DILocation(line: 1696, column: 6, scope: !2138)
!2142 = !DILocation(line: 1697, column: 13, scope: !2130)
!2143 = !DILocation(line: 1697, column: 18, scope: !2130)
!2144 = !DILocation(line: 1697, column: 17, scope: !2130)
!2145 = !DILocation(line: 1697, column: 23, scope: !2130)
!2146 = !DILocation(line: 1697, column: 27, scope: !2130)
!2147 = !DILocation(line: 1697, column: 6, scope: !2130)
!2148 = !DILocation(line: 1698, column: 17, scope: !2130)
!2149 = !DILocation(line: 1698, column: 6, scope: !2130)
!2150 = !DILocation(line: 1699, column: 2, scope: !2130)
!2151 = !DILocation(line: 1700, column: 14, scope: !2152)
!2152 = distinct !DILexicalBlock(scope: !2123, file: !3, line: 1699, column: 9)
!2153 = !DILocation(line: 1701, column: 7, scope: !2152)
!2154 = !DILocation(line: 1701, column: 17, scope: !2152)
!2155 = !DILocation(line: 1701, column: 22, scope: !2152)
!2156 = !DILocation(line: 1701, column: 26, scope: !2152)
!2157 = !DILocation(line: 1700, column: 6, scope: !2152)
!2158 = !DILocation(line: 1702, column: 16, scope: !2152)
!2159 = !DILocation(line: 1705, column: 14, scope: !2064)
!2160 = !DILocation(line: 1705, column: 5, scope: !2064)
!2161 = !DILocation(line: 1706, column: 1, scope: !2064)
!2162 = distinct !DISubprogram(name: "reset_times", scope: !3, file: !3, line: 1591, type: !2163, scopeLine: 1594, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !271)
!2163 = !DISubroutineType(types: !2164)
!2164 = !{null, !39, !285}
!2165 = !DILocalVariable(name: "name", arg: 1, scope: !2162, file: !3, line: 1592, type: !39)
!2166 = !DILocation(line: 1592, column: 11, scope: !2162)
!2167 = !DILocalVariable(name: "statb", arg: 2, scope: !2162, file: !3, line: 1593, type: !285)
!2168 = !DILocation(line: 1593, column: 18, scope: !2162)
!2169 = !DILocalVariable(name: "timep", scope: !2162, file: !3, line: 1595, type: !2170)
!2170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utimbuf", file: !2171, line: 36, size: 128, elements: !2172)
!2171 = !DIFile(filename: "/usr/include/utime.h", directory: "", checksumkind: CSK_MD5, checksum: "b4571b160f9e4db0a1907d6d717576a6")
!2172 = !{!2173, !2174}
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "actime", scope: !2170, file: !2171, line: 38, baseType: !102, size: 64)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "modtime", scope: !2170, file: !2171, line: 39, baseType: !102, size: 64, offset: 64)
!2175 = !DILocation(line: 1595, column: 20, scope: !2162)
!2176 = !DILocation(line: 1598, column: 21, scope: !2162)
!2177 = !DILocation(line: 1598, column: 28, scope: !2162)
!2178 = !DILocation(line: 1598, column: 11, scope: !2162)
!2179 = !DILocation(line: 1598, column: 19, scope: !2162)
!2180 = !DILocation(line: 1599, column: 21, scope: !2162)
!2181 = !DILocation(line: 1599, column: 28, scope: !2162)
!2182 = !DILocation(line: 1599, column: 11, scope: !2162)
!2183 = !DILocation(line: 1599, column: 19, scope: !2162)
!2184 = !DILocation(line: 1602, column: 15, scope: !2185)
!2185 = distinct !DILexicalBlock(scope: !2162, file: !3, line: 1602, column: 9)
!2186 = !DILocation(line: 1602, column: 9, scope: !2185)
!2187 = !DILocation(line: 1602, column: 29, scope: !2185)
!2188 = !DILocation(line: 1602, column: 33, scope: !2185)
!2189 = !DILocation(line: 1602, column: 9, scope: !2162)
!2190 = !DILocation(line: 1603, column: 2, scope: !2191)
!2191 = distinct !DILexicalBlock(scope: !2192, file: !3, line: 1603, column: 2)
!2192 = distinct !DILexicalBlock(scope: !2193, file: !3, line: 1603, column: 2)
!2193 = distinct !DILexicalBlock(scope: !2185, file: !3, line: 1602, column: 58)
!2194 = !DILocation(line: 1603, column: 2, scope: !2192)
!2195 = !DILocation(line: 1603, column: 2, scope: !2196)
!2196 = distinct !DILexicalBlock(scope: !2192, file: !3, line: 1603, column: 2)
!2197 = !DILocation(line: 1604, column: 7, scope: !2198)
!2198 = distinct !DILexicalBlock(scope: !2193, file: !3, line: 1604, column: 6)
!2199 = !DILocation(line: 1604, column: 6, scope: !2193)
!2200 = !DILocation(line: 1604, column: 14, scope: !2198)
!2201 = !DILocation(line: 1605, column: 5, scope: !2193)
!2202 = !DILocation(line: 1606, column: 1, scope: !2162)
!2203 = distinct !DISubprogram(name: "make_ofname", scope: !3, file: !3, line: 1072, type: !2204, scopeLine: 1073, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !271)
!2204 = !DISubroutineType(types: !2205)
!2205 = !{!28}
!2206 = !DILocalVariable(name: "suff", scope: !2203, file: !3, line: 1074, type: !39)
!2207 = !DILocation(line: 1074, column: 11, scope: !2203)
!2208 = !DILocation(line: 1076, column: 5, scope: !2203)
!2209 = !DILocation(line: 1078, column: 12, scope: !2203)
!2210 = !DILocation(line: 1078, column: 10, scope: !2203)
!2211 = !DILocation(line: 1080, column: 9, scope: !2212)
!2212 = distinct !DILexicalBlock(scope: !2203, file: !3, line: 1080, column: 9)
!2213 = !DILocation(line: 1080, column: 9, scope: !2203)
!2214 = !DILocation(line: 1081, column: 6, scope: !2215)
!2215 = distinct !DILexicalBlock(scope: !2216, file: !3, line: 1081, column: 6)
!2216 = distinct !DILexicalBlock(scope: !2212, file: !3, line: 1080, column: 21)
!2217 = !DILocation(line: 1081, column: 11, scope: !2215)
!2218 = !DILocation(line: 1081, column: 6, scope: !2216)
!2219 = !DILocation(line: 1085, column: 18, scope: !2220)
!2220 = distinct !DILexicalBlock(scope: !2221, file: !3, line: 1085, column: 17)
!2221 = distinct !DILexicalBlock(scope: !2215, file: !3, line: 1081, column: 20)
!2222 = !DILocation(line: 1085, column: 28, scope: !2220)
!2223 = !DILocation(line: 1085, column: 32, scope: !2220)
!2224 = !DILocation(line: 1085, column: 37, scope: !2220)
!2225 = !DILocation(line: 1085, column: 40, scope: !2220)
!2226 = !DILocation(line: 1085, column: 17, scope: !2221)
!2227 = !DILocation(line: 1085, column: 47, scope: !2220)
!2228 = !DILocation(line: 1088, column: 10, scope: !2229)
!2229 = distinct !DILexicalBlock(scope: !2221, file: !3, line: 1088, column: 10)
!2230 = !DILocation(line: 1088, column: 18, scope: !2229)
!2231 = !DILocation(line: 1088, column: 23, scope: !2229)
!2232 = !DILocation(line: 1088, column: 33, scope: !2229)
!2233 = !DILocation(line: 1088, column: 37, scope: !2229)
!2234 = !DILocation(line: 1088, column: 10, scope: !2221)
!2235 = !DILocation(line: 1089, column: 3, scope: !2236)
!2236 = distinct !DILexicalBlock(scope: !2237, file: !3, line: 1089, column: 3)
!2237 = distinct !DILexicalBlock(scope: !2238, file: !3, line: 1089, column: 3)
!2238 = distinct !DILexicalBlock(scope: !2229, file: !3, line: 1088, column: 45)
!2239 = !DILocation(line: 1089, column: 3, scope: !2237)
!2240 = !DILocation(line: 1089, column: 3, scope: !2241)
!2241 = distinct !DILexicalBlock(scope: !2237, file: !3, line: 1089, column: 3)
!2242 = !DILocation(line: 1091, column: 6, scope: !2238)
!2243 = !DILocation(line: 1092, column: 6, scope: !2221)
!2244 = !DILocation(line: 1095, column: 9, scope: !2216)
!2245 = !DILocation(line: 1095, column: 2, scope: !2216)
!2246 = !DILocation(line: 1096, column: 6, scope: !2247)
!2247 = distinct !DILexicalBlock(scope: !2216, file: !3, line: 1096, column: 6)
!2248 = !DILocation(line: 1096, column: 27, scope: !2247)
!2249 = !DILocation(line: 1096, column: 30, scope: !2247)
!2250 = !DILocation(line: 1096, column: 6, scope: !2216)
!2251 = !DILocation(line: 1097, column: 13, scope: !2252)
!2252 = distinct !DILexicalBlock(scope: !2247, file: !3, line: 1096, column: 52)
!2253 = !DILocation(line: 1097, column: 6, scope: !2252)
!2254 = !DILocation(line: 1098, column: 2, scope: !2252)
!2255 = !DILocation(line: 1099, column: 7, scope: !2256)
!2256 = distinct !DILexicalBlock(scope: !2247, file: !3, line: 1098, column: 9)
!2257 = !DILocation(line: 1099, column: 12, scope: !2256)
!2258 = !DILocation(line: 1103, column: 5, scope: !2216)
!2259 = !DILocation(line: 1103, column: 16, scope: !2260)
!2260 = distinct !DILexicalBlock(scope: !2212, file: !3, line: 1103, column: 16)
!2261 = !DILocation(line: 1103, column: 21, scope: !2260)
!2262 = !DILocation(line: 1103, column: 16, scope: !2212)
!2263 = !DILocation(line: 1105, column: 6, scope: !2264)
!2264 = distinct !DILexicalBlock(scope: !2265, file: !3, line: 1105, column: 6)
!2265 = distinct !DILexicalBlock(scope: !2260, file: !3, line: 1103, column: 30)
!2266 = !DILocation(line: 1105, column: 14, scope: !2264)
!2267 = !DILocation(line: 1105, column: 19, scope: !2264)
!2268 = !DILocation(line: 1105, column: 29, scope: !2264)
!2269 = !DILocation(line: 1105, column: 33, scope: !2264)
!2270 = !DILocation(line: 1105, column: 6, scope: !2265)
!2271 = !DILocation(line: 1106, column: 14, scope: !2272)
!2272 = distinct !DILexicalBlock(scope: !2264, file: !3, line: 1105, column: 41)
!2273 = !DILocation(line: 1107, column: 7, scope: !2272)
!2274 = !DILocation(line: 1107, column: 25, scope: !2272)
!2275 = !DILocation(line: 1106, column: 6, scope: !2272)
!2276 = !DILocation(line: 1108, column: 2, scope: !2272)
!2277 = !DILocation(line: 1109, column: 6, scope: !2278)
!2278 = distinct !DILexicalBlock(scope: !2265, file: !3, line: 1109, column: 6)
!2279 = !DILocation(line: 1109, column: 16, scope: !2278)
!2280 = !DILocation(line: 1109, column: 6, scope: !2265)
!2281 = !DILocation(line: 1109, column: 33, scope: !2278)
!2282 = !DILocation(line: 1109, column: 23, scope: !2278)
!2283 = !DILocation(line: 1110, column: 2, scope: !2265)
!2284 = !DILocation(line: 1112, column: 24, scope: !2285)
!2285 = distinct !DILexicalBlock(scope: !2260, file: !3, line: 1111, column: 12)
!2286 = !DILocation(line: 1133, column: 2, scope: !2285)
!2287 = !DILocation(line: 1136, column: 5, scope: !2203)
!2288 = !DILocation(line: 1137, column: 1, scope: !2203)
!2289 = distinct !DISubprogram(name: "create_outfile", scope: !3, file: !3, line: 863, type: !2204, scopeLine: 864, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !271)
!2290 = !DILocalVariable(name: "ostat", scope: !2289, file: !3, line: 865, type: !221)
!2291 = !DILocation(line: 865, column: 17, scope: !2289)
!2292 = !DILocalVariable(name: "flags", scope: !2289, file: !3, line: 866, type: !28)
!2293 = !DILocation(line: 866, column: 9, scope: !2289)
!2294 = !DILocation(line: 868, column: 9, scope: !2295)
!2295 = distinct !DILexicalBlock(scope: !2289, file: !3, line: 868, column: 9)
!2296 = !DILocation(line: 868, column: 15, scope: !2295)
!2297 = !DILocation(line: 868, column: 18, scope: !2295)
!2298 = !DILocation(line: 868, column: 9, scope: !2289)
!2299 = !DILocation(line: 869, column: 8, scope: !2300)
!2300 = distinct !DILexicalBlock(scope: !2295, file: !3, line: 868, column: 30)
!2301 = !DILocation(line: 870, column: 5, scope: !2300)
!2302 = !DILocation(line: 871, column: 5, scope: !2289)
!2303 = !DILocation(line: 873, column: 6, scope: !2304)
!2304 = distinct !DILexicalBlock(scope: !2305, file: !3, line: 873, column: 6)
!2305 = distinct !DILexicalBlock(scope: !2306, file: !3, line: 871, column: 14)
!2306 = distinct !DILexicalBlock(scope: !2307, file: !3, line: 871, column: 5)
!2307 = distinct !DILexicalBlock(scope: !2289, file: !3, line: 871, column: 5)
!2308 = !DILocation(line: 873, column: 21, scope: !2304)
!2309 = !DILocation(line: 873, column: 6, scope: !2305)
!2310 = !DILocation(line: 874, column: 12, scope: !2311)
!2311 = distinct !DILexicalBlock(scope: !2304, file: !3, line: 873, column: 28)
!2312 = !DILocation(line: 874, column: 6, scope: !2311)
!2313 = !DILocation(line: 875, column: 6, scope: !2311)
!2314 = !DILocation(line: 878, column: 16, scope: !2305)
!2315 = !DILocation(line: 879, column: 8, scope: !2305)
!2316 = !DILocation(line: 879, column: 6, scope: !2305)
!2317 = !DILocation(line: 880, column: 6, scope: !2318)
!2318 = distinct !DILexicalBlock(scope: !2305, file: !3, line: 880, column: 6)
!2319 = !DILocation(line: 880, column: 10, scope: !2318)
!2320 = !DILocation(line: 880, column: 6, scope: !2305)
!2321 = !DILocation(line: 881, column: 6, scope: !2322)
!2322 = distinct !DILexicalBlock(scope: !2318, file: !3, line: 880, column: 17)
!2323 = !DILocation(line: 882, column: 12, scope: !2322)
!2324 = !DILocation(line: 882, column: 6, scope: !2322)
!2325 = !DILocation(line: 883, column: 16, scope: !2322)
!2326 = !DILocation(line: 884, column: 6, scope: !2322)
!2327 = !DILocation(line: 891, column: 12, scope: !2328)
!2328 = distinct !DILexicalBlock(scope: !2305, file: !3, line: 891, column: 6)
!2329 = !DILocation(line: 891, column: 6, scope: !2328)
!2330 = !DILocation(line: 891, column: 25, scope: !2328)
!2331 = !DILocation(line: 891, column: 6, scope: !2305)
!2332 = !DILocation(line: 893, column: 14, scope: !2333)
!2333 = distinct !DILexicalBlock(scope: !2328, file: !3, line: 891, column: 31)
!2334 = !DILocation(line: 893, column: 30, scope: !2333)
!2335 = !DILocation(line: 893, column: 6, scope: !2333)
!2336 = !DILocation(line: 894, column: 6, scope: !2333)
!2337 = !DILocation(line: 895, column: 12, scope: !2333)
!2338 = !DILocation(line: 895, column: 6, scope: !2333)
!2339 = !DILocation(line: 895, column: 24, scope: !2333)
!2340 = !DILocation(line: 895, column: 18, scope: !2333)
!2341 = !DILocation(line: 896, column: 6, scope: !2333)
!2342 = !DILocation(line: 897, column: 16, scope: !2333)
!2343 = !DILocation(line: 898, column: 6, scope: !2333)
!2344 = !DILocation(line: 900, column: 7, scope: !2345)
!2345 = distinct !DILexicalBlock(scope: !2305, file: !3, line: 900, column: 6)
!2346 = !DILocation(line: 900, column: 6, scope: !2305)
!2347 = !DILocation(line: 900, column: 38, scope: !2345)
!2348 = !DILocation(line: 902, column: 6, scope: !2349)
!2349 = distinct !DILexicalBlock(scope: !2305, file: !3, line: 902, column: 6)
!2350 = !DILocation(line: 902, column: 6, scope: !2305)
!2351 = !DILocation(line: 904, column: 6, scope: !2352)
!2352 = distinct !DILexicalBlock(scope: !2353, file: !3, line: 904, column: 6)
!2353 = distinct !DILexicalBlock(scope: !2354, file: !3, line: 904, column: 6)
!2354 = distinct !DILexicalBlock(scope: !2349, file: !3, line: 902, column: 18)
!2355 = !DILocation(line: 904, column: 6, scope: !2353)
!2356 = !DILocation(line: 904, column: 6, scope: !2357)
!2357 = distinct !DILexicalBlock(scope: !2353, file: !3, line: 904, column: 6)
!2358 = !DILocation(line: 906, column: 6, scope: !2354)
!2359 = !DILocation(line: 908, column: 8, scope: !2305)
!2360 = !DILocation(line: 908, column: 2, scope: !2305)
!2361 = !DILocation(line: 909, column: 2, scope: !2305)
!2362 = !DILocation(line: 915, column: 2, scope: !2305)
!2363 = !DILocation(line: 871, column: 5, scope: !2306)
!2364 = distinct !{!2364, !2365, !2366}
!2365 = !DILocation(line: 871, column: 5, scope: !2307)
!2366 = !DILocation(line: 916, column: 5, scope: !2307)
!2367 = !DILocation(line: 917, column: 1, scope: !2289)
!2368 = distinct !DISubprogram(name: "copy_stat", scope: !3, file: !3, line: 1614, type: !2369, scopeLine: 1616, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !271)
!2369 = !DISubroutineType(types: !2370)
!2370 = !{null, !285}
!2371 = !DILocalVariable(name: "ifstat", arg: 1, scope: !2368, file: !3, line: 1615, type: !285)
!2372 = !DILocation(line: 1615, column: 18, scope: !2368)
!2373 = !DILocation(line: 1618, column: 9, scope: !2374)
!2374 = distinct !DILexicalBlock(scope: !2368, file: !3, line: 1618, column: 9)
!2375 = !DILocation(line: 1618, column: 20, scope: !2374)
!2376 = !DILocation(line: 1618, column: 23, scope: !2374)
!2377 = !DILocation(line: 1618, column: 34, scope: !2374)
!2378 = !DILocation(line: 1618, column: 39, scope: !2374)
!2379 = !DILocation(line: 1618, column: 42, scope: !2374)
!2380 = !DILocation(line: 1618, column: 50, scope: !2374)
!2381 = !DILocation(line: 1618, column: 62, scope: !2374)
!2382 = !DILocation(line: 1618, column: 59, scope: !2374)
!2383 = !DILocation(line: 1618, column: 9, scope: !2368)
!2384 = !DILocation(line: 1619, column: 21, scope: !2385)
!2385 = distinct !DILexicalBlock(scope: !2374, file: !3, line: 1618, column: 74)
!2386 = !DILocation(line: 1619, column: 2, scope: !2385)
!2387 = !DILocation(line: 1619, column: 10, scope: !2385)
!2388 = !DILocation(line: 1619, column: 19, scope: !2385)
!2389 = !DILocation(line: 1620, column: 6, scope: !2390)
!2390 = distinct !DILexicalBlock(scope: !2385, file: !3, line: 1620, column: 6)
!2391 = !DILocation(line: 1620, column: 14, scope: !2390)
!2392 = !DILocation(line: 1620, column: 6, scope: !2385)
!2393 = !DILocation(line: 1621, column: 14, scope: !2394)
!2394 = distinct !DILexicalBlock(scope: !2390, file: !3, line: 1620, column: 19)
!2395 = !DILocation(line: 1621, column: 6, scope: !2394)
!2396 = !DILocation(line: 1622, column: 2, scope: !2394)
!2397 = !DILocation(line: 1623, column: 5, scope: !2385)
!2398 = !DILocation(line: 1624, column: 25, scope: !2368)
!2399 = !DILocation(line: 1624, column: 5, scope: !2368)
!2400 = !DILocation(line: 1627, column: 23, scope: !2401)
!2401 = distinct !DILexicalBlock(scope: !2368, file: !3, line: 1627, column: 9)
!2402 = !DILocation(line: 1627, column: 31, scope: !2401)
!2403 = !DILocation(line: 1627, column: 39, scope: !2401)
!2404 = !DILocation(line: 1627, column: 9, scope: !2401)
!2405 = !DILocation(line: 1627, column: 9, scope: !2368)
!2406 = !DILocation(line: 1628, column: 2, scope: !2407)
!2407 = distinct !DILexicalBlock(scope: !2408, file: !3, line: 1628, column: 2)
!2408 = distinct !DILexicalBlock(scope: !2409, file: !3, line: 1628, column: 2)
!2409 = distinct !DILexicalBlock(scope: !2401, file: !3, line: 1627, column: 49)
!2410 = !DILocation(line: 1628, column: 2, scope: !2408)
!2411 = !DILocation(line: 1628, column: 2, scope: !2412)
!2412 = distinct !DILexicalBlock(scope: !2408, file: !3, line: 1628, column: 2)
!2413 = !DILocation(line: 1629, column: 7, scope: !2414)
!2414 = distinct !DILexicalBlock(scope: !2409, file: !3, line: 1629, column: 6)
!2415 = !DILocation(line: 1629, column: 6, scope: !2409)
!2416 = !DILocation(line: 1629, column: 14, scope: !2414)
!2417 = !DILocation(line: 1630, column: 5, scope: !2409)
!2418 = !DILocation(line: 1632, column: 19, scope: !2368)
!2419 = !DILocation(line: 1632, column: 27, scope: !2368)
!2420 = !DILocation(line: 1632, column: 35, scope: !2368)
!2421 = !DILocation(line: 1632, column: 43, scope: !2368)
!2422 = !DILocation(line: 1632, column: 5, scope: !2368)
!2423 = !DILocation(line: 1634, column: 19, scope: !2368)
!2424 = !DILocation(line: 1636, column: 12, scope: !2368)
!2425 = !DILocation(line: 1637, column: 9, scope: !2426)
!2426 = distinct !DILexicalBlock(scope: !2368, file: !3, line: 1637, column: 9)
!2427 = !DILocation(line: 1637, column: 9, scope: !2368)
!2428 = !DILocation(line: 1638, column: 2, scope: !2429)
!2429 = distinct !DILexicalBlock(scope: !2430, file: !3, line: 1638, column: 2)
!2430 = distinct !DILexicalBlock(scope: !2431, file: !3, line: 1638, column: 2)
!2431 = distinct !DILexicalBlock(scope: !2426, file: !3, line: 1637, column: 25)
!2432 = !DILocation(line: 1638, column: 2, scope: !2430)
!2433 = !DILocation(line: 1638, column: 2, scope: !2434)
!2434 = distinct !DILexicalBlock(scope: !2430, file: !3, line: 1638, column: 2)
!2435 = !DILocation(line: 1639, column: 7, scope: !2436)
!2436 = distinct !DILexicalBlock(scope: !2431, file: !3, line: 1639, column: 6)
!2437 = !DILocation(line: 1639, column: 6, scope: !2431)
!2438 = !DILocation(line: 1639, column: 14, scope: !2436)
!2439 = !DILocation(line: 1640, column: 5, scope: !2431)
!2440 = !DILocation(line: 1641, column: 1, scope: !2368)
!2441 = distinct !DISubprogram(name: "check_ofname", scope: !3, file: !3, line: 1521, type: !2204, scopeLine: 1522, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !271)
!2442 = !DILocalVariable(name: "ostat", scope: !2441, file: !3, line: 1523, type: !221)
!2443 = !DILocation(line: 1523, column: 17, scope: !2441)
!2444 = !DILocation(line: 1529, column: 5, scope: !2441)
!2445 = !DILocation(line: 1529, column: 11, scope: !2441)
!2446 = !DILocation(line: 1530, column: 5, scope: !2441)
!2447 = !DILocation(line: 1530, column: 12, scope: !2441)
!2448 = !DILocation(line: 1530, column: 33, scope: !2441)
!2449 = !DILocation(line: 1531, column: 13, scope: !2450)
!2450 = distinct !DILexicalBlock(scope: !2451, file: !3, line: 1531, column: 13)
!2451 = distinct !DILexicalBlock(scope: !2441, file: !3, line: 1530, column: 39)
!2452 = !DILocation(line: 1531, column: 19, scope: !2450)
!2453 = !DILocation(line: 1531, column: 13, scope: !2451)
!2454 = !DILocation(line: 1531, column: 36, scope: !2450)
!2455 = !DILocation(line: 1532, column: 2, scope: !2451)
!2456 = distinct !{!2456, !2446, !2457, !816}
!2457 = !DILocation(line: 1533, column: 5, scope: !2441)
!2458 = !DILocation(line: 1541, column: 10, scope: !2459)
!2459 = distinct !DILexicalBlock(scope: !2441, file: !3, line: 1541, column: 9)
!2460 = !DILocation(line: 1541, column: 21, scope: !2459)
!2461 = !DILocation(line: 1541, column: 24, scope: !2459)
!2462 = !DILocation(line: 1541, column: 9, scope: !2441)
!2463 = !DILocation(line: 1542, column: 2, scope: !2464)
!2464 = distinct !DILexicalBlock(scope: !2459, file: !3, line: 1541, column: 55)
!2465 = !DILocation(line: 1543, column: 6, scope: !2466)
!2466 = distinct !DILexicalBlock(scope: !2464, file: !3, line: 1543, column: 6)
!2467 = !DILocation(line: 1543, column: 27, scope: !2466)
!2468 = !DILocation(line: 1543, column: 6, scope: !2464)
!2469 = !DILocation(line: 1543, column: 33, scope: !2466)
!2470 = !DILocation(line: 1544, column: 5, scope: !2464)
!2471 = !DILocation(line: 1549, column: 9, scope: !2472)
!2472 = distinct !DILexicalBlock(scope: !2441, file: !3, line: 1549, column: 9)
!2473 = !DILocation(line: 1549, column: 9, scope: !2441)
!2474 = !DILocation(line: 1550, column: 6, scope: !2475)
!2475 = distinct !DILexicalBlock(scope: !2476, file: !3, line: 1550, column: 6)
!2476 = distinct !DILexicalBlock(scope: !2472, file: !3, line: 1549, column: 36)
!2477 = !DILocation(line: 1550, column: 6, scope: !2476)
!2478 = !DILocation(line: 1551, column: 14, scope: !2479)
!2479 = distinct !DILexicalBlock(scope: !2475, file: !3, line: 1550, column: 30)
!2480 = !DILocation(line: 1552, column: 7, scope: !2479)
!2481 = !DILocation(line: 1552, column: 25, scope: !2479)
!2482 = !DILocation(line: 1551, column: 6, scope: !2479)
!2483 = !DILocation(line: 1553, column: 2, scope: !2479)
!2484 = !DILocation(line: 1554, column: 14, scope: !2485)
!2485 = distinct !DILexicalBlock(scope: !2475, file: !3, line: 1553, column: 9)
!2486 = !DILocation(line: 1555, column: 7, scope: !2485)
!2487 = !DILocation(line: 1554, column: 6, scope: !2485)
!2488 = !DILocation(line: 1557, column: 12, scope: !2476)
!2489 = !DILocation(line: 1558, column: 2, scope: !2476)
!2490 = !DILocation(line: 1561, column: 10, scope: !2491)
!2491 = distinct !DILexicalBlock(scope: !2441, file: !3, line: 1561, column: 9)
!2492 = !DILocation(line: 1561, column: 9, scope: !2441)
!2493 = !DILocalVariable(name: "response", scope: !2494, file: !3, line: 1562, type: !2495)
!2494 = distinct !DILexicalBlock(scope: !2491, file: !3, line: 1561, column: 17)
!2495 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 640, elements: !2496)
!2496 = !{!2497}
!2497 = !DISubrange(count: 80)
!2498 = !DILocation(line: 1562, column: 7, scope: !2494)
!2499 = !DILocation(line: 1563, column: 9, scope: !2494)
!2500 = !DILocation(line: 1563, column: 2, scope: !2494)
!2501 = !DILocation(line: 1564, column: 10, scope: !2494)
!2502 = !DILocation(line: 1564, column: 44, scope: !2494)
!2503 = !DILocation(line: 1564, column: 2, scope: !2494)
!2504 = !DILocation(line: 1565, column: 6, scope: !2505)
!2505 = distinct !DILexicalBlock(scope: !2494, file: !3, line: 1565, column: 6)
!2506 = !DILocation(line: 1565, column: 17, scope: !2505)
!2507 = !DILocation(line: 1565, column: 34, scope: !2505)
!2508 = !DILocation(line: 1565, column: 27, scope: !2505)
!2509 = !DILocation(line: 1565, column: 20, scope: !2505)
!2510 = !DILocation(line: 1565, column: 6, scope: !2494)
!2511 = !DILocation(line: 1566, column: 14, scope: !2512)
!2512 = distinct !DILexicalBlock(scope: !2505, file: !3, line: 1565, column: 43)
!2513 = !DILocation(line: 1566, column: 6, scope: !2512)
!2514 = !DILocation(line: 1567, column: 13, scope: !2512)
!2515 = !DILocation(line: 1567, column: 6, scope: !2512)
!2516 = !DILocation(line: 1568, column: 18, scope: !2512)
!2517 = !DILocation(line: 1568, column: 48, scope: !2512)
!2518 = !DILocation(line: 1568, column: 12, scope: !2512)
!2519 = !DILocation(line: 1569, column: 2, scope: !2512)
!2520 = !DILocation(line: 1570, column: 6, scope: !2521)
!2521 = distinct !DILexicalBlock(scope: !2494, file: !3, line: 1570, column: 6)
!2522 = !DILocation(line: 1570, column: 23, scope: !2521)
!2523 = !DILocation(line: 1570, column: 6, scope: !2494)
!2524 = !DILocation(line: 1571, column: 14, scope: !2525)
!2525 = distinct !DILexicalBlock(scope: !2521, file: !3, line: 1570, column: 31)
!2526 = !DILocation(line: 1571, column: 6, scope: !2525)
!2527 = !DILocation(line: 1572, column: 10, scope: !2528)
!2528 = distinct !DILexicalBlock(scope: !2525, file: !3, line: 1572, column: 10)
!2529 = !DILocation(line: 1572, column: 20, scope: !2528)
!2530 = !DILocation(line: 1572, column: 10, scope: !2525)
!2531 = !DILocation(line: 1572, column: 37, scope: !2528)
!2532 = !DILocation(line: 1572, column: 27, scope: !2528)
!2533 = !DILocation(line: 1573, column: 6, scope: !2525)
!2534 = !DILocation(line: 1575, column: 5, scope: !2494)
!2535 = !DILocation(line: 1576, column: 12, scope: !2441)
!2536 = !DILocation(line: 1577, column: 9, scope: !2537)
!2537 = distinct !DILexicalBlock(scope: !2441, file: !3, line: 1577, column: 9)
!2538 = !DILocation(line: 1577, column: 9, scope: !2441)
!2539 = !DILocation(line: 1578, column: 10, scope: !2540)
!2540 = distinct !DILexicalBlock(scope: !2537, file: !3, line: 1577, column: 25)
!2541 = !DILocation(line: 1578, column: 26, scope: !2540)
!2542 = !DILocation(line: 1578, column: 2, scope: !2540)
!2543 = !DILocation(line: 1579, column: 2, scope: !2540)
!2544 = !DILocation(line: 1580, column: 12, scope: !2540)
!2545 = !DILocation(line: 1581, column: 2, scope: !2540)
!2546 = !DILocation(line: 1583, column: 5, scope: !2441)
!2547 = !DILocation(line: 1584, column: 1, scope: !2441)
!2548 = distinct !DISubprogram(name: "name_too_long", scope: !3, file: !3, line: 1429, type: !283, scopeLine: 1432, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !271)
!2549 = !DILocalVariable(name: "name", arg: 1, scope: !2548, file: !3, line: 1430, type: !39)
!2550 = !DILocation(line: 1430, column: 11, scope: !2548)
!2551 = !DILocalVariable(name: "statb", arg: 2, scope: !2548, file: !3, line: 1431, type: !285)
!2552 = !DILocation(line: 1431, column: 18, scope: !2548)
!2553 = !DILocalVariable(name: "s", scope: !2548, file: !3, line: 1433, type: !28)
!2554 = !DILocation(line: 1433, column: 9, scope: !2548)
!2555 = !DILocation(line: 1433, column: 20, scope: !2548)
!2556 = !DILocation(line: 1433, column: 13, scope: !2548)
!2557 = !DILocalVariable(name: "c", scope: !2548, file: !3, line: 1434, type: !40)
!2558 = !DILocation(line: 1434, column: 10, scope: !2548)
!2559 = !DILocation(line: 1434, column: 14, scope: !2548)
!2560 = !DILocation(line: 1434, column: 19, scope: !2548)
!2561 = !DILocation(line: 1434, column: 20, scope: !2548)
!2562 = !DILocalVariable(name: "tstat", scope: !2548, file: !3, line: 1435, type: !221)
!2563 = !DILocation(line: 1435, column: 17, scope: !2548)
!2564 = !DILocalVariable(name: "res", scope: !2548, file: !3, line: 1436, type: !28)
!2565 = !DILocation(line: 1436, column: 9, scope: !2548)
!2566 = !DILocation(line: 1438, column: 14, scope: !2548)
!2567 = !DILocation(line: 1438, column: 13, scope: !2548)
!2568 = !DILocation(line: 1439, column: 5, scope: !2548)
!2569 = !DILocation(line: 1439, column: 10, scope: !2548)
!2570 = !DILocation(line: 1439, column: 11, scope: !2548)
!2571 = !DILocation(line: 1439, column: 15, scope: !2548)
!2572 = !DILocation(line: 1440, column: 16, scope: !2548)
!2573 = !DILocation(line: 1440, column: 11, scope: !2548)
!2574 = !DILocation(line: 1440, column: 30, scope: !2548)
!2575 = !DILocation(line: 1440, column: 35, scope: !2548)
!2576 = !DILocation(line: 1440, column: 48, scope: !2548)
!2577 = !DILocation(line: 1440, column: 38, scope: !2548)
!2578 = !DILocation(line: 0, scope: !2548)
!2579 = !DILocation(line: 1440, column: 9, scope: !2548)
!2580 = !DILocation(line: 1441, column: 17, scope: !2548)
!2581 = !DILocation(line: 1441, column: 5, scope: !2548)
!2582 = !DILocation(line: 1441, column: 10, scope: !2548)
!2583 = !DILocation(line: 1441, column: 11, scope: !2548)
!2584 = !DILocation(line: 1441, column: 15, scope: !2548)
!2585 = !DILocation(line: 1443, column: 12, scope: !2548)
!2586 = !DILocation(line: 1443, column: 5, scope: !2548)
!2587 = distinct !DISubprogram(name: "shorten_name", scope: !3, file: !3, line: 1455, type: !1001, scopeLine: 1457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !271)
!2588 = !DILocalVariable(name: "name", arg: 1, scope: !2587, file: !3, line: 1456, type: !39)
!2589 = !DILocation(line: 1456, column: 11, scope: !2587)
!2590 = !DILocalVariable(name: "len", scope: !2587, file: !3, line: 1458, type: !28)
!2591 = !DILocation(line: 1458, column: 9, scope: !2587)
!2592 = !DILocalVariable(name: "trunc", scope: !2587, file: !3, line: 1459, type: !39)
!2593 = !DILocation(line: 1459, column: 11, scope: !2587)
!2594 = !DILocalVariable(name: "plen", scope: !2587, file: !3, line: 1460, type: !28)
!2595 = !DILocation(line: 1460, column: 9, scope: !2587)
!2596 = !DILocalVariable(name: "min_part", scope: !2587, file: !3, line: 1461, type: !28)
!2597 = !DILocation(line: 1461, column: 9, scope: !2587)
!2598 = !DILocalVariable(name: "p", scope: !2587, file: !3, line: 1462, type: !39)
!2599 = !DILocation(line: 1462, column: 11, scope: !2587)
!2600 = !DILocation(line: 1464, column: 18, scope: !2587)
!2601 = !DILocation(line: 1464, column: 11, scope: !2587)
!2602 = !DILocation(line: 1464, column: 9, scope: !2587)
!2603 = !DILocation(line: 1465, column: 9, scope: !2604)
!2604 = distinct !DILexicalBlock(scope: !2587, file: !3, line: 1465, column: 9)
!2605 = !DILocation(line: 1465, column: 9, scope: !2587)
!2606 = !DILocation(line: 1466, column: 6, scope: !2607)
!2607 = distinct !DILexicalBlock(scope: !2608, file: !3, line: 1466, column: 6)
!2608 = distinct !DILexicalBlock(scope: !2604, file: !3, line: 1465, column: 21)
!2609 = !DILocation(line: 1466, column: 10, scope: !2607)
!2610 = !DILocation(line: 1466, column: 6, scope: !2608)
!2611 = !DILocation(line: 1466, column: 16, scope: !2607)
!2612 = !DILocation(line: 1467, column: 2, scope: !2608)
!2613 = !DILocation(line: 1467, column: 7, scope: !2608)
!2614 = !DILocation(line: 1467, column: 10, scope: !2608)
!2615 = !DILocation(line: 1467, column: 14, scope: !2608)
!2616 = !DILocation(line: 1468, column: 2, scope: !2608)
!2617 = !DILocation(line: 1470, column: 20, scope: !2587)
!2618 = !DILocation(line: 1470, column: 9, scope: !2587)
!2619 = !DILocation(line: 1470, column: 7, scope: !2587)
!2620 = !DILocation(line: 1471, column: 9, scope: !2621)
!2621 = distinct !DILexicalBlock(scope: !2587, file: !3, line: 1471, column: 9)
!2622 = !DILocation(line: 1471, column: 11, scope: !2621)
!2623 = !DILocation(line: 1471, column: 9, scope: !2587)
!2624 = !DILocation(line: 1471, column: 20, scope: !2621)
!2625 = !DILocation(line: 1472, column: 6, scope: !2587)
!2626 = !DILocation(line: 1472, column: 8, scope: !2587)
!2627 = !DILocation(line: 1473, column: 20, scope: !2587)
!2628 = !DILocation(line: 1476, column: 9, scope: !2629)
!2629 = distinct !DILexicalBlock(scope: !2587, file: !3, line: 1476, column: 9)
!2630 = !DILocation(line: 1476, column: 13, scope: !2629)
!2631 = !DILocation(line: 1476, column: 17, scope: !2629)
!2632 = !DILocation(line: 1476, column: 20, scope: !2629)
!2633 = !DILocation(line: 1476, column: 9, scope: !2587)
!2634 = !DILocation(line: 1477, column: 9, scope: !2635)
!2635 = distinct !DILexicalBlock(scope: !2629, file: !3, line: 1476, column: 41)
!2636 = !DILocation(line: 1477, column: 10, scope: !2635)
!2637 = !DILocation(line: 1477, column: 2, scope: !2635)
!2638 = !DILocation(line: 1478, column: 2, scope: !2635)
!2639 = !DILocation(line: 1483, column: 5, scope: !2587)
!2640 = !DILocation(line: 1484, column: 14, scope: !2641)
!2641 = distinct !DILexicalBlock(scope: !2587, file: !3, line: 1483, column: 8)
!2642 = !DILocation(line: 1484, column: 6, scope: !2641)
!2643 = !DILocation(line: 1484, column: 4, scope: !2641)
!2644 = !DILocation(line: 1485, column: 6, scope: !2641)
!2645 = !DILocation(line: 1485, column: 10, scope: !2641)
!2646 = !DILocation(line: 1485, column: 11, scope: !2641)
!2647 = !DILocation(line: 1485, column: 16, scope: !2641)
!2648 = !DILocation(line: 1485, column: 4, scope: !2641)
!2649 = !DILocation(line: 1486, column: 2, scope: !2641)
!2650 = !DILocation(line: 1486, column: 10, scope: !2641)
!2651 = !DILocation(line: 1486, column: 9, scope: !2641)
!2652 = !DILocation(line: 1487, column: 21, scope: !2653)
!2653 = distinct !DILexicalBlock(scope: !2641, file: !3, line: 1486, column: 13)
!2654 = !DILocation(line: 1487, column: 13, scope: !2653)
!2655 = !DILocation(line: 1487, column: 11, scope: !2653)
!2656 = !DILocation(line: 1488, column: 11, scope: !2653)
!2657 = !DILocation(line: 1488, column: 8, scope: !2653)
!2658 = !DILocation(line: 1489, column: 10, scope: !2659)
!2659 = distinct !DILexicalBlock(scope: !2653, file: !3, line: 1489, column: 10)
!2660 = !DILocation(line: 1489, column: 17, scope: !2659)
!2661 = !DILocation(line: 1489, column: 15, scope: !2659)
!2662 = !DILocation(line: 1489, column: 10, scope: !2653)
!2663 = !DILocation(line: 1489, column: 35, scope: !2659)
!2664 = !DILocation(line: 1489, column: 36, scope: !2659)
!2665 = !DILocation(line: 1489, column: 33, scope: !2659)
!2666 = !DILocation(line: 1489, column: 27, scope: !2659)
!2667 = !DILocation(line: 1490, column: 11, scope: !2668)
!2668 = distinct !DILexicalBlock(scope: !2653, file: !3, line: 1490, column: 10)
!2669 = !DILocation(line: 1490, column: 10, scope: !2668)
!2670 = !DILocation(line: 1490, column: 10, scope: !2653)
!2671 = !DILocation(line: 1490, column: 15, scope: !2668)
!2672 = !DILocation(line: 1490, column: 14, scope: !2668)
!2673 = distinct !{!2673, !2649, !2674, !816}
!2674 = !DILocation(line: 1491, column: 2, scope: !2641)
!2675 = !DILocation(line: 1492, column: 5, scope: !2641)
!2676 = !DILocation(line: 1492, column: 14, scope: !2587)
!2677 = !DILocation(line: 1492, column: 20, scope: !2587)
!2678 = !DILocation(line: 1492, column: 28, scope: !2587)
!2679 = !DILocation(line: 1492, column: 31, scope: !2587)
!2680 = !DILocation(line: 1492, column: 42, scope: !2587)
!2681 = !DILocation(line: 0, scope: !2587)
!2682 = distinct !{!2682, !2639, !2683, !816}
!2683 = !DILocation(line: 1492, column: 46, scope: !2587)
!2684 = !DILocation(line: 1494, column: 9, scope: !2685)
!2685 = distinct !DILexicalBlock(scope: !2587, file: !3, line: 1494, column: 9)
!2686 = !DILocation(line: 1494, column: 15, scope: !2685)
!2687 = !DILocation(line: 1494, column: 9, scope: !2587)
!2688 = !DILocation(line: 1495, column: 2, scope: !2689)
!2689 = distinct !DILexicalBlock(scope: !2685, file: !3, line: 1494, column: 24)
!2690 = !DILocation(line: 1496, column: 17, scope: !2691)
!2691 = distinct !DILexicalBlock(scope: !2689, file: !3, line: 1495, column: 5)
!2692 = !DILocation(line: 1496, column: 6, scope: !2691)
!2693 = !DILocation(line: 1496, column: 15, scope: !2691)
!2694 = !DILocation(line: 1497, column: 2, scope: !2691)
!2695 = !DILocation(line: 1497, column: 17, scope: !2689)
!2696 = !DILocation(line: 1497, column: 11, scope: !2689)
!2697 = distinct !{!2697, !2688, !2698, !816}
!2698 = !DILocation(line: 1497, column: 19, scope: !2689)
!2699 = !DILocation(line: 1498, column: 7, scope: !2689)
!2700 = !DILocation(line: 1499, column: 5, scope: !2689)
!2701 = !DILocation(line: 1500, column: 18, scope: !2702)
!2702 = distinct !DILexicalBlock(scope: !2685, file: !3, line: 1499, column: 12)
!2703 = !DILocation(line: 1500, column: 24, scope: !2702)
!2704 = !DILocation(line: 1500, column: 10, scope: !2702)
!2705 = !DILocation(line: 1500, column: 8, scope: !2702)
!2706 = !DILocation(line: 1501, column: 6, scope: !2707)
!2707 = distinct !DILexicalBlock(scope: !2702, file: !3, line: 1501, column: 6)
!2708 = !DILocation(line: 1501, column: 12, scope: !2707)
!2709 = !DILocation(line: 1501, column: 6, scope: !2702)
!2710 = !DILocation(line: 1501, column: 21, scope: !2707)
!2711 = !DILocation(line: 1502, column: 6, scope: !2712)
!2712 = distinct !DILexicalBlock(scope: !2702, file: !3, line: 1502, column: 6)
!2713 = !DILocation(line: 1502, column: 15, scope: !2712)
!2714 = !DILocation(line: 1502, column: 6, scope: !2702)
!2715 = !DILocation(line: 1502, column: 29, scope: !2712)
!2716 = !DILocation(line: 1502, column: 24, scope: !2712)
!2717 = !DILocation(line: 1504, column: 12, scope: !2587)
!2718 = !DILocation(line: 1504, column: 5, scope: !2587)
!2719 = !DILocation(line: 1505, column: 1, scope: !2587)
!2720 = !DILocalVariable(name: "name", arg: 1, scope: !291, file: !3, line: 949, type: !39)
!2721 = !DILocation(line: 949, column: 11, scope: !291)
!2722 = !DILocalVariable(name: "nlen", scope: !291, file: !3, line: 951, type: !28)
!2723 = !DILocation(line: 951, column: 9, scope: !291)
!2724 = !DILocalVariable(name: "slen", scope: !291, file: !3, line: 951, type: !28)
!2725 = !DILocation(line: 951, column: 15, scope: !291)
!2726 = !DILocalVariable(name: "suffix", scope: !291, file: !3, line: 952, type: !2727)
!2727 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 264, elements: !2728)
!2728 = !{!2729}
!2729 = !DISubrange(count: 33)
!2730 = !DILocation(line: 952, column: 10, scope: !291)
!2731 = !DILocalVariable(name: "suf", scope: !291, file: !3, line: 959, type: !136)
!2732 = !DILocation(line: 959, column: 12, scope: !291)
!2733 = !DILocation(line: 961, column: 9, scope: !2734)
!2734 = distinct !DILexicalBlock(scope: !291, file: !3, line: 961, column: 9)
!2735 = !DILocation(line: 961, column: 9, scope: !291)
!2736 = !DILocation(line: 961, column: 35, scope: !2734)
!2737 = !DILocation(line: 961, column: 32, scope: !2734)
!2738 = !DILocation(line: 970, column: 19, scope: !291)
!2739 = !DILocation(line: 970, column: 12, scope: !291)
!2740 = !DILocation(line: 970, column: 10, scope: !291)
!2741 = !DILocation(line: 971, column: 9, scope: !2742)
!2742 = distinct !DILexicalBlock(scope: !291, file: !3, line: 971, column: 9)
!2743 = !DILocation(line: 971, column: 14, scope: !2742)
!2744 = !DILocation(line: 971, column: 9, scope: !291)
!2745 = !DILocation(line: 972, column: 16, scope: !2746)
!2746 = distinct !DILexicalBlock(scope: !2742, file: !3, line: 971, column: 31)
!2747 = !DILocation(line: 972, column: 24, scope: !2746)
!2748 = !DILocation(line: 972, column: 9, scope: !2746)
!2749 = !DILocation(line: 973, column: 5, scope: !2746)
!2750 = !DILocation(line: 974, column: 16, scope: !2751)
!2751 = distinct !DILexicalBlock(scope: !2742, file: !3, line: 973, column: 12)
!2752 = !DILocation(line: 974, column: 24, scope: !2751)
!2753 = !DILocation(line: 974, column: 29, scope: !2751)
!2754 = !DILocation(line: 974, column: 28, scope: !2751)
!2755 = !DILocation(line: 974, column: 33, scope: !2751)
!2756 = !DILocation(line: 974, column: 44, scope: !2751)
!2757 = !DILocation(line: 974, column: 9, scope: !2751)
!2758 = !DILocation(line: 976, column: 12, scope: !291)
!2759 = !DILocation(line: 976, column: 5, scope: !291)
!2760 = !DILocation(line: 977, column: 19, scope: !291)
!2761 = !DILocation(line: 977, column: 12, scope: !291)
!2762 = !DILocation(line: 977, column: 10, scope: !291)
!2763 = !DILocation(line: 978, column: 5, scope: !291)
!2764 = !DILocalVariable(name: "s", scope: !2765, file: !3, line: 979, type: !28)
!2765 = distinct !DILexicalBlock(scope: !291, file: !3, line: 978, column: 8)
!2766 = !DILocation(line: 979, column: 12, scope: !2765)
!2767 = !DILocation(line: 979, column: 24, scope: !2765)
!2768 = !DILocation(line: 979, column: 23, scope: !2765)
!2769 = !DILocation(line: 979, column: 16, scope: !2765)
!2770 = !DILocation(line: 980, column: 12, scope: !2771)
!2771 = distinct !DILexicalBlock(scope: !2765, file: !3, line: 980, column: 12)
!2772 = !DILocation(line: 980, column: 19, scope: !2771)
!2773 = !DILocation(line: 980, column: 17, scope: !2771)
!2774 = !DILocation(line: 980, column: 21, scope: !2771)
!2775 = !DILocation(line: 980, column: 31, scope: !2771)
!2776 = !DILocation(line: 980, column: 36, scope: !2771)
!2777 = !DILocation(line: 980, column: 35, scope: !2771)
!2778 = !DILocation(line: 980, column: 37, scope: !2771)
!2779 = !DILocation(line: 980, column: 24, scope: !2771)
!2780 = !DILocation(line: 980, column: 41, scope: !2771)
!2781 = !DILocation(line: 981, column: 12, scope: !2771)
!2782 = !DILocation(line: 981, column: 15, scope: !2771)
!2783 = !DILocation(line: 980, column: 12, scope: !2765)
!2784 = !DILocation(line: 982, column: 19, scope: !2785)
!2785 = distinct !DILexicalBlock(scope: !2771, file: !3, line: 981, column: 48)
!2786 = !DILocation(line: 982, column: 24, scope: !2785)
!2787 = !DILocation(line: 982, column: 23, scope: !2785)
!2788 = !DILocation(line: 982, column: 29, scope: !2785)
!2789 = !DILocation(line: 982, column: 28, scope: !2785)
!2790 = !DILocation(line: 982, column: 12, scope: !2785)
!2791 = !DILocation(line: 984, column: 5, scope: !2765)
!2792 = !DILocation(line: 984, column: 15, scope: !291)
!2793 = !DILocation(line: 984, column: 14, scope: !291)
!2794 = !DILocation(line: 984, column: 21, scope: !291)
!2795 = distinct !{!2795, !2763, !2796, !816}
!2796 = !DILocation(line: 984, column: 28, scope: !291)
!2797 = !DILocation(line: 986, column: 5, scope: !291)
!2798 = !DILocation(line: 987, column: 1, scope: !291)
!2799 = distinct !DISubprogram(name: "same_file", scope: !3, file: !3, line: 1406, type: !2800, scopeLine: 1409, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !271)
!2800 = !DISubroutineType(types: !2801)
!2801 = !{!28, !285, !285}
!2802 = !DILocalVariable(name: "stat1", arg: 1, scope: !2799, file: !3, line: 1407, type: !285)
!2803 = !DILocation(line: 1407, column: 18, scope: !2799)
!2804 = !DILocalVariable(name: "stat2", arg: 2, scope: !2799, file: !3, line: 1408, type: !285)
!2805 = !DILocation(line: 1408, column: 18, scope: !2799)
!2806 = !DILocation(line: 1410, column: 12, scope: !2799)
!2807 = !DILocation(line: 1410, column: 19, scope: !2799)
!2808 = !DILocation(line: 1410, column: 31, scope: !2799)
!2809 = !DILocation(line: 1410, column: 38, scope: !2799)
!2810 = !DILocation(line: 1410, column: 28, scope: !2799)
!2811 = !DILocation(line: 1411, column: 2, scope: !2799)
!2812 = !DILocation(line: 1411, column: 5, scope: !2799)
!2813 = !DILocation(line: 1411, column: 12, scope: !2799)
!2814 = !DILocation(line: 1411, column: 24, scope: !2799)
!2815 = !DILocation(line: 1411, column: 31, scope: !2799)
!2816 = !DILocation(line: 1411, column: 21, scope: !2799)
!2817 = !DILocation(line: 0, scope: !2799)
!2818 = !DILocation(line: 1410, column: 5, scope: !2799)
!2819 = distinct !DISubprogram(name: "do_stat", scope: !3, file: !3, line: 923, type: !283, scopeLine: 926, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !271)
!2820 = !DILocalVariable(name: "name", arg: 1, scope: !2819, file: !3, line: 924, type: !39)
!2821 = !DILocation(line: 924, column: 11, scope: !2819)
!2822 = !DILocalVariable(name: "sbuf", arg: 2, scope: !2819, file: !3, line: 925, type: !285)
!2823 = !DILocation(line: 925, column: 18, scope: !2819)
!2824 = !DILocation(line: 927, column: 5, scope: !2819)
!2825 = !DILocation(line: 927, column: 11, scope: !2819)
!2826 = !DILocation(line: 929, column: 10, scope: !2827)
!2827 = distinct !DILexicalBlock(scope: !2819, file: !3, line: 929, column: 9)
!2828 = !DILocation(line: 929, column: 20, scope: !2827)
!2829 = !DILocation(line: 929, column: 24, scope: !2827)
!2830 = !DILocation(line: 929, column: 9, scope: !2819)
!2831 = !DILocation(line: 930, column: 15, scope: !2832)
!2832 = distinct !DILexicalBlock(scope: !2827, file: !3, line: 929, column: 31)
!2833 = !DILocation(line: 930, column: 21, scope: !2832)
!2834 = !DILocation(line: 930, column: 9, scope: !2832)
!2835 = !DILocation(line: 930, column: 2, scope: !2832)
!2836 = !DILocation(line: 933, column: 17, scope: !2819)
!2837 = !DILocation(line: 933, column: 23, scope: !2819)
!2838 = !DILocation(line: 933, column: 12, scope: !2819)
!2839 = !DILocation(line: 933, column: 5, scope: !2819)
!2840 = !DILocation(line: 934, column: 1, scope: !2819)
!2841 = distinct !DISubprogram(name: "zip", scope: !310, file: !310, line: 33, type: !160, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !309, retainedNodes: !271)
!2842 = !DILocalVariable(name: "in", arg: 1, scope: !2841, file: !310, line: 34, type: !28)
!2843 = !DILocation(line: 34, column: 9, scope: !2841)
!2844 = !DILocalVariable(name: "out", arg: 2, scope: !2841, file: !310, line: 34, type: !28)
!2845 = !DILocation(line: 34, column: 13, scope: !2841)
!2846 = !DILocalVariable(name: "flags", scope: !2841, file: !310, line: 36, type: !92)
!2847 = !DILocation(line: 36, column: 10, scope: !2841)
!2848 = !DILocalVariable(name: "attr", scope: !2841, file: !310, line: 37, type: !98)
!2849 = !DILocation(line: 37, column: 10, scope: !2841)
!2850 = !DILocalVariable(name: "deflate_flags", scope: !2841, file: !310, line: 38, type: !98)
!2851 = !DILocation(line: 38, column: 10, scope: !2841)
!2852 = !DILocation(line: 40, column: 11, scope: !2841)
!2853 = !DILocation(line: 40, column: 9, scope: !2841)
!2854 = !DILocation(line: 41, column: 11, scope: !2841)
!2855 = !DILocation(line: 41, column: 9, scope: !2841)
!2856 = !DILocation(line: 42, column: 12, scope: !2841)
!2857 = !DILocation(line: 46, column: 12, scope: !2841)
!2858 = !DILocation(line: 47, column: 5, scope: !2859)
!2859 = distinct !DILexicalBlock(scope: !2841, file: !310, line: 47, column: 5)
!2860 = !DILocation(line: 47, column: 5, scope: !2861)
!2861 = distinct !DILexicalBlock(scope: !2859, file: !310, line: 47, column: 5)
!2862 = !DILocation(line: 48, column: 5, scope: !2863)
!2863 = distinct !DILexicalBlock(scope: !2841, file: !310, line: 48, column: 5)
!2864 = !DILocation(line: 48, column: 5, scope: !2865)
!2865 = distinct !DILexicalBlock(scope: !2863, file: !310, line: 48, column: 5)
!2866 = !DILocation(line: 49, column: 5, scope: !2867)
!2867 = distinct !DILexicalBlock(scope: !2841, file: !310, line: 49, column: 5)
!2868 = !DILocation(line: 49, column: 5, scope: !2869)
!2869 = distinct !DILexicalBlock(scope: !2867, file: !310, line: 49, column: 5)
!2870 = !DILocation(line: 51, column: 9, scope: !2871)
!2871 = distinct !DILexicalBlock(scope: !2841, file: !310, line: 51, column: 9)
!2872 = !DILocation(line: 51, column: 9, scope: !2841)
!2873 = !DILocation(line: 52, column: 8, scope: !2874)
!2874 = distinct !DILexicalBlock(scope: !2871, file: !310, line: 51, column: 25)
!2875 = !DILocation(line: 53, column: 5, scope: !2874)
!2876 = !DILocation(line: 54, column: 5, scope: !2877)
!2877 = distinct !DILexicalBlock(scope: !2841, file: !310, line: 54, column: 5)
!2878 = !DILocation(line: 54, column: 5, scope: !2879)
!2879 = distinct !DILexicalBlock(scope: !2877, file: !310, line: 54, column: 5)
!2880 = !DILocation(line: 55, column: 5, scope: !2881)
!2881 = distinct !DILexicalBlock(scope: !2882, file: !310, line: 55, column: 5)
!2882 = distinct !DILexicalBlock(scope: !2883, file: !310, line: 55, column: 5)
!2883 = distinct !DILexicalBlock(scope: !2841, file: !310, line: 55, column: 5)
!2884 = !DILocation(line: 55, column: 5, scope: !2882)
!2885 = !DILocation(line: 55, column: 5, scope: !2886)
!2886 = distinct !DILexicalBlock(scope: !2881, file: !310, line: 55, column: 5)
!2887 = !DILocation(line: 55, column: 5, scope: !2888)
!2888 = distinct !DILexicalBlock(scope: !2889, file: !310, line: 55, column: 5)
!2889 = distinct !DILexicalBlock(scope: !2881, file: !310, line: 55, column: 5)
!2890 = !DILocation(line: 55, column: 5, scope: !2891)
!2891 = distinct !DILexicalBlock(scope: !2888, file: !310, line: 55, column: 5)
!2892 = !DILocation(line: 55, column: 5, scope: !2893)
!2893 = distinct !DILexicalBlock(scope: !2889, file: !310, line: 55, column: 5)
!2894 = !DILocation(line: 55, column: 5, scope: !2895)
!2895 = distinct !DILexicalBlock(scope: !2893, file: !310, line: 55, column: 5)
!2896 = !DILocation(line: 55, column: 5, scope: !2897)
!2897 = distinct !DILexicalBlock(scope: !2898, file: !310, line: 55, column: 5)
!2898 = distinct !DILexicalBlock(scope: !2883, file: !310, line: 55, column: 5)
!2899 = !DILocation(line: 55, column: 5, scope: !2898)
!2900 = !DILocation(line: 55, column: 5, scope: !2901)
!2901 = distinct !DILexicalBlock(scope: !2897, file: !310, line: 55, column: 5)
!2902 = !DILocation(line: 55, column: 5, scope: !2903)
!2903 = distinct !DILexicalBlock(scope: !2904, file: !310, line: 55, column: 5)
!2904 = distinct !DILexicalBlock(scope: !2897, file: !310, line: 55, column: 5)
!2905 = !DILocation(line: 55, column: 5, scope: !2906)
!2906 = distinct !DILexicalBlock(scope: !2903, file: !310, line: 55, column: 5)
!2907 = !DILocation(line: 55, column: 5, scope: !2908)
!2908 = distinct !DILexicalBlock(scope: !2904, file: !310, line: 55, column: 5)
!2909 = !DILocation(line: 55, column: 5, scope: !2910)
!2910 = distinct !DILexicalBlock(scope: !2908, file: !310, line: 55, column: 5)
!2911 = !DILocation(line: 58, column: 11, scope: !2841)
!2912 = !DILocation(line: 58, column: 9, scope: !2841)
!2913 = !DILocation(line: 60, column: 13, scope: !2841)
!2914 = !DILocation(line: 60, column: 5, scope: !2841)
!2915 = !DILocation(line: 61, column: 5, scope: !2841)
!2916 = !DILocation(line: 62, column: 13, scope: !2841)
!2917 = !DILocation(line: 62, column: 5, scope: !2841)
!2918 = !DILocation(line: 64, column: 5, scope: !2919)
!2919 = distinct !DILexicalBlock(scope: !2841, file: !310, line: 64, column: 5)
!2920 = !DILocation(line: 64, column: 5, scope: !2921)
!2921 = distinct !DILexicalBlock(scope: !2919, file: !310, line: 64, column: 5)
!2922 = !DILocation(line: 65, column: 5, scope: !2923)
!2923 = distinct !DILexicalBlock(scope: !2841, file: !310, line: 65, column: 5)
!2924 = !DILocation(line: 65, column: 5, scope: !2925)
!2925 = distinct !DILexicalBlock(scope: !2923, file: !310, line: 65, column: 5)
!2926 = !DILocation(line: 67, column: 9, scope: !2927)
!2927 = distinct !DILexicalBlock(scope: !2841, file: !310, line: 67, column: 9)
!2928 = !DILocation(line: 67, column: 9, scope: !2841)
!2929 = !DILocalVariable(name: "p", scope: !2930, file: !310, line: 68, type: !39)
!2930 = distinct !DILexicalBlock(scope: !2927, file: !310, line: 67, column: 25)
!2931 = !DILocation(line: 68, column: 8, scope: !2930)
!2932 = !DILocation(line: 68, column: 12, scope: !2930)
!2933 = !DILocation(line: 69, column: 2, scope: !2930)
!2934 = !DILocation(line: 70, column: 6, scope: !2935)
!2935 = distinct !DILexicalBlock(scope: !2936, file: !310, line: 70, column: 6)
!2936 = distinct !DILexicalBlock(scope: !2930, file: !310, line: 69, column: 5)
!2937 = !DILocation(line: 70, column: 6, scope: !2938)
!2938 = distinct !DILexicalBlock(scope: !2935, file: !310, line: 70, column: 6)
!2939 = !DILocation(line: 71, column: 2, scope: !2936)
!2940 = !DILocation(line: 71, column: 13, scope: !2930)
!2941 = !DILocation(line: 71, column: 11, scope: !2930)
!2942 = distinct !{!2942, !2933, !2943, !816}
!2943 = !DILocation(line: 71, column: 15, scope: !2930)
!2944 = !DILocation(line: 72, column: 5, scope: !2930)
!2945 = !DILocation(line: 73, column: 26, scope: !2841)
!2946 = !DILocation(line: 73, column: 20, scope: !2841)
!2947 = !DILocation(line: 73, column: 18, scope: !2841)
!2948 = !DILocation(line: 75, column: 11, scope: !2841)
!2949 = !DILocation(line: 89, column: 5, scope: !2950)
!2950 = distinct !DILexicalBlock(scope: !2951, file: !310, line: 89, column: 5)
!2951 = distinct !DILexicalBlock(scope: !2952, file: !310, line: 89, column: 5)
!2952 = distinct !DILexicalBlock(scope: !2841, file: !310, line: 89, column: 5)
!2953 = !DILocation(line: 89, column: 5, scope: !2951)
!2954 = !DILocation(line: 89, column: 5, scope: !2955)
!2955 = distinct !DILexicalBlock(scope: !2950, file: !310, line: 89, column: 5)
!2956 = !DILocation(line: 89, column: 5, scope: !2957)
!2957 = distinct !DILexicalBlock(scope: !2958, file: !310, line: 89, column: 5)
!2958 = distinct !DILexicalBlock(scope: !2950, file: !310, line: 89, column: 5)
!2959 = !DILocation(line: 89, column: 5, scope: !2960)
!2960 = distinct !DILexicalBlock(scope: !2957, file: !310, line: 89, column: 5)
!2961 = !DILocation(line: 89, column: 5, scope: !2962)
!2962 = distinct !DILexicalBlock(scope: !2958, file: !310, line: 89, column: 5)
!2963 = !DILocation(line: 89, column: 5, scope: !2964)
!2964 = distinct !DILexicalBlock(scope: !2962, file: !310, line: 89, column: 5)
!2965 = !DILocation(line: 89, column: 5, scope: !2966)
!2966 = distinct !DILexicalBlock(scope: !2967, file: !310, line: 89, column: 5)
!2967 = distinct !DILexicalBlock(scope: !2952, file: !310, line: 89, column: 5)
!2968 = !DILocation(line: 89, column: 5, scope: !2967)
!2969 = !DILocation(line: 89, column: 5, scope: !2970)
!2970 = distinct !DILexicalBlock(scope: !2966, file: !310, line: 89, column: 5)
!2971 = !DILocation(line: 89, column: 5, scope: !2972)
!2972 = distinct !DILexicalBlock(scope: !2973, file: !310, line: 89, column: 5)
!2973 = distinct !DILexicalBlock(scope: !2966, file: !310, line: 89, column: 5)
!2974 = !DILocation(line: 89, column: 5, scope: !2975)
!2975 = distinct !DILexicalBlock(scope: !2972, file: !310, line: 89, column: 5)
!2976 = !DILocation(line: 89, column: 5, scope: !2977)
!2977 = distinct !DILexicalBlock(scope: !2973, file: !310, line: 89, column: 5)
!2978 = !DILocation(line: 89, column: 5, scope: !2979)
!2979 = distinct !DILexicalBlock(scope: !2977, file: !310, line: 89, column: 5)
!2980 = !DILocation(line: 90, column: 5, scope: !2981)
!2981 = distinct !DILexicalBlock(scope: !2982, file: !310, line: 90, column: 5)
!2982 = distinct !DILexicalBlock(scope: !2983, file: !310, line: 90, column: 5)
!2983 = distinct !DILexicalBlock(scope: !2841, file: !310, line: 90, column: 5)
!2984 = !DILocation(line: 90, column: 5, scope: !2982)
!2985 = !DILocation(line: 90, column: 5, scope: !2986)
!2986 = distinct !DILexicalBlock(scope: !2981, file: !310, line: 90, column: 5)
!2987 = !DILocation(line: 90, column: 5, scope: !2988)
!2988 = distinct !DILexicalBlock(scope: !2989, file: !310, line: 90, column: 5)
!2989 = distinct !DILexicalBlock(scope: !2981, file: !310, line: 90, column: 5)
!2990 = !DILocation(line: 90, column: 5, scope: !2991)
!2991 = distinct !DILexicalBlock(scope: !2988, file: !310, line: 90, column: 5)
!2992 = !DILocation(line: 90, column: 5, scope: !2993)
!2993 = distinct !DILexicalBlock(scope: !2989, file: !310, line: 90, column: 5)
!2994 = !DILocation(line: 90, column: 5, scope: !2995)
!2995 = distinct !DILexicalBlock(scope: !2993, file: !310, line: 90, column: 5)
!2996 = !DILocation(line: 90, column: 5, scope: !2997)
!2997 = distinct !DILexicalBlock(scope: !2998, file: !310, line: 90, column: 5)
!2998 = distinct !DILexicalBlock(scope: !2983, file: !310, line: 90, column: 5)
!2999 = !DILocation(line: 90, column: 5, scope: !2998)
!3000 = !DILocation(line: 90, column: 5, scope: !3001)
!3001 = distinct !DILexicalBlock(scope: !2997, file: !310, line: 90, column: 5)
!3002 = !DILocation(line: 90, column: 5, scope: !3003)
!3003 = distinct !DILexicalBlock(scope: !3004, file: !310, line: 90, column: 5)
!3004 = distinct !DILexicalBlock(scope: !2997, file: !310, line: 90, column: 5)
!3005 = !DILocation(line: 90, column: 5, scope: !3006)
!3006 = distinct !DILexicalBlock(scope: !3003, file: !310, line: 90, column: 5)
!3007 = !DILocation(line: 90, column: 5, scope: !3008)
!3008 = distinct !DILexicalBlock(scope: !3004, file: !310, line: 90, column: 5)
!3009 = !DILocation(line: 90, column: 5, scope: !3010)
!3010 = distinct !DILexicalBlock(scope: !3008, file: !310, line: 90, column: 5)
!3011 = !DILocation(line: 91, column: 18, scope: !2841)
!3012 = !DILocation(line: 93, column: 5, scope: !2841)
!3013 = !DILocation(line: 94, column: 5, scope: !2841)
!3014 = distinct !DISubprogram(name: "file_read", scope: !310, file: !310, line: 103, type: !507, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !309, retainedNodes: !271)
!3015 = !DILocalVariable(name: "buf", arg: 1, scope: !3014, file: !310, line: 104, type: !39)
!3016 = !DILocation(line: 104, column: 11, scope: !3014)
!3017 = !DILocalVariable(name: "size", arg: 2, scope: !3014, file: !310, line: 105, type: !7)
!3018 = !DILocation(line: 105, column: 14, scope: !3014)
!3019 = !DILocalVariable(name: "len", scope: !3014, file: !310, line: 107, type: !7)
!3020 = !DILocation(line: 107, column: 14, scope: !3014)
!3021 = !DILocation(line: 111, column: 16, scope: !3014)
!3022 = !DILocation(line: 111, column: 21, scope: !3014)
!3023 = !DILocation(line: 111, column: 26, scope: !3014)
!3024 = !DILocation(line: 111, column: 11, scope: !3014)
!3025 = !DILocation(line: 111, column: 9, scope: !3014)
!3026 = !DILocation(line: 112, column: 9, scope: !3027)
!3027 = distinct !DILexicalBlock(scope: !3014, file: !310, line: 112, column: 9)
!3028 = !DILocation(line: 112, column: 13, scope: !3027)
!3029 = !DILocation(line: 112, column: 31, scope: !3027)
!3030 = !DILocation(line: 112, column: 34, scope: !3027)
!3031 = !DILocation(line: 112, column: 38, scope: !3027)
!3032 = !DILocation(line: 112, column: 9, scope: !3014)
!3033 = !DILocation(line: 112, column: 56, scope: !3027)
!3034 = !DILocation(line: 112, column: 44, scope: !3027)
!3035 = !DILocation(line: 114, column: 24, scope: !3014)
!3036 = !DILocation(line: 114, column: 29, scope: !3014)
!3037 = !DILocation(line: 114, column: 11, scope: !3014)
!3038 = !DILocation(line: 114, column: 9, scope: !3014)
!3039 = !DILocation(line: 115, column: 19, scope: !3014)
!3040 = !DILocation(line: 115, column: 14, scope: !3014)
!3041 = !DILocation(line: 115, column: 11, scope: !3014)
!3042 = !DILocation(line: 116, column: 17, scope: !3014)
!3043 = !DILocation(line: 116, column: 5, scope: !3014)
!3044 = !DILocation(line: 117, column: 1, scope: !3014)
!3045 = distinct !DISubprogram(name: "lm_init", scope: !319, file: !319, line: 286, type: !3046, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !318, retainedNodes: !271)
!3046 = !DISubroutineType(types: !3047)
!3047 = !{null, !28, !493}
!3048 = !DILocalVariable(name: "pack_level", arg: 1, scope: !3045, file: !319, line: 287, type: !28)
!3049 = !DILocation(line: 287, column: 9, scope: !3045)
!3050 = !DILocalVariable(name: "flags", arg: 2, scope: !3045, file: !319, line: 288, type: !493)
!3051 = !DILocation(line: 288, column: 10, scope: !3045)
!3052 = !DILocalVariable(name: "j", scope: !3045, file: !319, line: 290, type: !7)
!3053 = !DILocation(line: 290, column: 23, scope: !3045)
!3054 = !DILocation(line: 292, column: 9, scope: !3055)
!3055 = distinct !DILexicalBlock(scope: !3045, file: !319, line: 292, column: 9)
!3056 = !DILocation(line: 292, column: 20, scope: !3055)
!3057 = !DILocation(line: 292, column: 24, scope: !3055)
!3058 = !DILocation(line: 292, column: 27, scope: !3055)
!3059 = !DILocation(line: 292, column: 38, scope: !3055)
!3060 = !DILocation(line: 292, column: 9, scope: !3045)
!3061 = !DILocation(line: 292, column: 43, scope: !3055)
!3062 = !DILocation(line: 293, column: 19, scope: !3045)
!3063 = !DILocation(line: 293, column: 17, scope: !3045)
!3064 = !DILocation(line: 299, column: 5, scope: !3045)
!3065 = !DILocation(line: 305, column: 44, scope: !3045)
!3066 = !DILocation(line: 305, column: 24, scope: !3045)
!3067 = !DILocation(line: 305, column: 56, scope: !3045)
!3068 = !DILocation(line: 305, column: 22, scope: !3045)
!3069 = !DILocation(line: 306, column: 44, scope: !3045)
!3070 = !DILocation(line: 306, column: 24, scope: !3045)
!3071 = !DILocation(line: 306, column: 56, scope: !3045)
!3072 = !DILocation(line: 306, column: 22, scope: !3045)
!3073 = !DILocation(line: 308, column: 44, scope: !3045)
!3074 = !DILocation(line: 308, column: 24, scope: !3045)
!3075 = !DILocation(line: 308, column: 56, scope: !3045)
!3076 = !DILocation(line: 308, column: 22, scope: !3045)
!3077 = !DILocation(line: 310, column: 44, scope: !3045)
!3078 = !DILocation(line: 310, column: 24, scope: !3045)
!3079 = !DILocation(line: 310, column: 56, scope: !3045)
!3080 = !DILocation(line: 310, column: 22, scope: !3045)
!3081 = !DILocation(line: 311, column: 9, scope: !3082)
!3082 = distinct !DILexicalBlock(scope: !3045, file: !319, line: 311, column: 9)
!3083 = !DILocation(line: 311, column: 20, scope: !3082)
!3084 = !DILocation(line: 311, column: 9, scope: !3045)
!3085 = !DILocation(line: 312, column: 9, scope: !3086)
!3086 = distinct !DILexicalBlock(scope: !3082, file: !319, line: 311, column: 26)
!3087 = !DILocation(line: 312, column: 15, scope: !3086)
!3088 = !DILocation(line: 313, column: 5, scope: !3086)
!3089 = !DILocation(line: 313, column: 16, scope: !3090)
!3090 = distinct !DILexicalBlock(scope: !3082, file: !319, line: 313, column: 16)
!3091 = !DILocation(line: 313, column: 27, scope: !3090)
!3092 = !DILocation(line: 313, column: 16, scope: !3082)
!3093 = !DILocation(line: 314, column: 9, scope: !3094)
!3094 = distinct !DILexicalBlock(scope: !3090, file: !319, line: 313, column: 33)
!3095 = !DILocation(line: 314, column: 15, scope: !3094)
!3096 = !DILocation(line: 315, column: 5, scope: !3094)
!3097 = !DILocation(line: 318, column: 14, scope: !3045)
!3098 = !DILocation(line: 319, column: 17, scope: !3045)
!3099 = !DILocation(line: 324, column: 17, scope: !3045)
!3100 = !DILocation(line: 324, column: 15, scope: !3045)
!3101 = !DILocation(line: 327, column: 9, scope: !3102)
!3102 = distinct !DILexicalBlock(scope: !3045, file: !319, line: 327, column: 9)
!3103 = !DILocation(line: 327, column: 19, scope: !3102)
!3104 = !DILocation(line: 327, column: 24, scope: !3102)
!3105 = !DILocation(line: 327, column: 27, scope: !3102)
!3106 = !DILocation(line: 327, column: 37, scope: !3102)
!3107 = !DILocation(line: 327, column: 9, scope: !3045)
!3108 = !DILocation(line: 328, column: 15, scope: !3109)
!3109 = distinct !DILexicalBlock(scope: !3102, file: !319, line: 327, column: 55)
!3110 = !DILocation(line: 328, column: 30, scope: !3109)
!3111 = !DILocation(line: 329, column: 8, scope: !3109)
!3112 = !DILocation(line: 331, column: 12, scope: !3045)
!3113 = !DILocation(line: 335, column: 5, scope: !3045)
!3114 = !DILocation(line: 335, column: 12, scope: !3045)
!3115 = !DILocation(line: 335, column: 22, scope: !3045)
!3116 = !DILocation(line: 335, column: 38, scope: !3045)
!3117 = !DILocation(line: 335, column: 42, scope: !3045)
!3118 = !DILocation(line: 335, column: 41, scope: !3045)
!3119 = !DILocation(line: 0, scope: !3045)
!3120 = !DILocation(line: 335, column: 50, scope: !3045)
!3121 = distinct !{!3121, !3113, !3122, !816}
!3122 = !DILocation(line: 335, column: 62, scope: !3045)
!3123 = !DILocation(line: 337, column: 11, scope: !3045)
!3124 = !DILocation(line: 338, column: 11, scope: !3125)
!3125 = distinct !DILexicalBlock(scope: !3045, file: !319, line: 338, column: 5)
!3126 = !DILocation(line: 338, column: 10, scope: !3125)
!3127 = !DILocation(line: 338, column: 15, scope: !3128)
!3128 = distinct !DILexicalBlock(scope: !3125, file: !319, line: 338, column: 5)
!3129 = !DILocation(line: 338, column: 16, scope: !3128)
!3130 = !DILocation(line: 338, column: 5, scope: !3125)
!3131 = !DILocation(line: 338, column: 35, scope: !3128)
!3132 = !DILocation(line: 338, column: 31, scope: !3128)
!3133 = !DILocation(line: 338, column: 5, scope: !3128)
!3134 = distinct !{!3134, !3130, !3135, !816}
!3135 = !DILocation(line: 338, column: 35, scope: !3125)
!3136 = !DILocation(line: 342, column: 1, scope: !3045)
!3137 = distinct !DISubprogram(name: "fill_window", scope: !319, file: !319, line: 516, type: !269, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !318, retainedNodes: !271)
!3138 = !DILocalVariable(name: "n", scope: !3137, file: !319, line: 518, type: !7)
!3139 = !DILocation(line: 518, column: 23, scope: !3137)
!3140 = !DILocalVariable(name: "m", scope: !3137, file: !319, line: 518, type: !7)
!3141 = !DILocation(line: 518, column: 26, scope: !3137)
!3142 = !DILocalVariable(name: "more", scope: !3137, file: !319, line: 519, type: !7)
!3143 = !DILocation(line: 519, column: 14, scope: !3137)
!3144 = !DILocation(line: 519, column: 32, scope: !3137)
!3145 = !DILocation(line: 519, column: 51, scope: !3137)
!3146 = !DILocation(line: 519, column: 46, scope: !3137)
!3147 = !DILocation(line: 519, column: 44, scope: !3137)
!3148 = !DILocation(line: 519, column: 68, scope: !3137)
!3149 = !DILocation(line: 519, column: 63, scope: !3137)
!3150 = !DILocation(line: 519, column: 61, scope: !3137)
!3151 = !DILocation(line: 519, column: 21, scope: !3137)
!3152 = !DILocation(line: 525, column: 9, scope: !3153)
!3153 = distinct !DILexicalBlock(scope: !3137, file: !319, line: 525, column: 9)
!3154 = !DILocation(line: 525, column: 14, scope: !3153)
!3155 = !DILocation(line: 525, column: 9, scope: !3137)
!3156 = !DILocation(line: 529, column: 13, scope: !3157)
!3157 = distinct !DILexicalBlock(scope: !3153, file: !319, line: 525, column: 32)
!3158 = !DILocation(line: 530, column: 5, scope: !3157)
!3159 = !DILocation(line: 530, column: 16, scope: !3160)
!3160 = distinct !DILexicalBlock(scope: !3153, file: !319, line: 530, column: 16)
!3161 = !DILocation(line: 530, column: 25, scope: !3160)
!3162 = !DILocation(line: 530, column: 16, scope: !3153)
!3163 = !DILocation(line: 536, column: 9, scope: !3164)
!3164 = distinct !DILexicalBlock(scope: !3160, file: !319, line: 530, column: 44)
!3165 = !DILocation(line: 537, column: 21, scope: !3164)
!3166 = !DILocation(line: 538, column: 21, scope: !3164)
!3167 = !DILocation(line: 540, column: 21, scope: !3164)
!3168 = !DILocation(line: 542, column: 16, scope: !3169)
!3169 = distinct !DILexicalBlock(scope: !3164, file: !319, line: 542, column: 9)
!3170 = !DILocation(line: 542, column: 14, scope: !3169)
!3171 = !DILocation(line: 542, column: 21, scope: !3172)
!3172 = distinct !DILexicalBlock(scope: !3169, file: !319, line: 542, column: 9)
!3173 = !DILocation(line: 542, column: 23, scope: !3172)
!3174 = !DILocation(line: 542, column: 9, scope: !3169)
!3175 = !DILocation(line: 543, column: 22, scope: !3176)
!3176 = distinct !DILexicalBlock(scope: !3172, file: !319, line: 542, column: 41)
!3177 = !DILocation(line: 543, column: 17, scope: !3176)
!3178 = !DILocation(line: 543, column: 15, scope: !3176)
!3179 = !DILocation(line: 544, column: 29, scope: !3176)
!3180 = !DILocation(line: 544, column: 31, scope: !3176)
!3181 = !DILocation(line: 544, column: 42, scope: !3176)
!3182 = !DILocation(line: 544, column: 43, scope: !3176)
!3183 = !DILocation(line: 544, column: 23, scope: !3176)
!3184 = !DILocation(line: 544, column: 18, scope: !3176)
!3185 = !DILocation(line: 544, column: 13, scope: !3176)
!3186 = !DILocation(line: 544, column: 21, scope: !3176)
!3187 = !DILocation(line: 545, column: 9, scope: !3176)
!3188 = !DILocation(line: 542, column: 37, scope: !3172)
!3189 = !DILocation(line: 542, column: 9, scope: !3172)
!3190 = distinct !{!3190, !3174, !3191, !816}
!3191 = !DILocation(line: 545, column: 9, scope: !3169)
!3192 = !DILocation(line: 546, column: 16, scope: !3193)
!3193 = distinct !DILexicalBlock(scope: !3164, file: !319, line: 546, column: 9)
!3194 = !DILocation(line: 546, column: 14, scope: !3193)
!3195 = !DILocation(line: 546, column: 21, scope: !3196)
!3196 = distinct !DILexicalBlock(scope: !3193, file: !319, line: 546, column: 9)
!3197 = !DILocation(line: 546, column: 23, scope: !3196)
!3198 = !DILocation(line: 546, column: 9, scope: !3193)
!3199 = !DILocation(line: 547, column: 22, scope: !3200)
!3200 = distinct !DILexicalBlock(scope: !3196, file: !319, line: 546, column: 37)
!3201 = !DILocation(line: 547, column: 17, scope: !3200)
!3202 = !DILocation(line: 547, column: 15, scope: !3200)
!3203 = !DILocation(line: 548, column: 29, scope: !3200)
!3204 = !DILocation(line: 548, column: 31, scope: !3200)
!3205 = !DILocation(line: 548, column: 42, scope: !3200)
!3206 = !DILocation(line: 548, column: 43, scope: !3200)
!3207 = !DILocation(line: 548, column: 23, scope: !3200)
!3208 = !DILocation(line: 548, column: 18, scope: !3200)
!3209 = !DILocation(line: 548, column: 13, scope: !3200)
!3210 = !DILocation(line: 548, column: 21, scope: !3200)
!3211 = !DILocation(line: 552, column: 9, scope: !3200)
!3212 = !DILocation(line: 546, column: 33, scope: !3196)
!3213 = !DILocation(line: 546, column: 9, scope: !3196)
!3214 = distinct !{!3214, !3198, !3215, !816}
!3215 = !DILocation(line: 552, column: 9, scope: !3193)
!3216 = !DILocation(line: 553, column: 14, scope: !3164)
!3217 = !DILocation(line: 554, column: 5, scope: !3164)
!3218 = !DILocation(line: 556, column: 10, scope: !3219)
!3219 = distinct !DILexicalBlock(scope: !3137, file: !319, line: 556, column: 9)
!3220 = !DILocation(line: 556, column: 9, scope: !3137)
!3221 = !DILocation(line: 557, column: 13, scope: !3222)
!3222 = distinct !DILexicalBlock(scope: !3219, file: !319, line: 556, column: 18)
!3223 = !DILocation(line: 557, column: 36, scope: !3222)
!3224 = !DILocation(line: 557, column: 35, scope: !3222)
!3225 = !DILocation(line: 557, column: 45, scope: !3222)
!3226 = !DILocation(line: 557, column: 44, scope: !3222)
!3227 = !DILocation(line: 557, column: 56, scope: !3222)
!3228 = !DILocation(line: 557, column: 11, scope: !3222)
!3229 = !DILocation(line: 558, column: 13, scope: !3230)
!3230 = distinct !DILexicalBlock(scope: !3222, file: !319, line: 558, column: 13)
!3231 = !DILocation(line: 558, column: 15, scope: !3230)
!3232 = !DILocation(line: 558, column: 20, scope: !3230)
!3233 = !DILocation(line: 558, column: 23, scope: !3230)
!3234 = !DILocation(line: 558, column: 25, scope: !3230)
!3235 = !DILocation(line: 558, column: 13, scope: !3222)
!3236 = !DILocation(line: 559, column: 20, scope: !3237)
!3237 = distinct !DILexicalBlock(scope: !3230, file: !319, line: 558, column: 43)
!3238 = !DILocation(line: 560, column: 9, scope: !3237)
!3239 = !DILocation(line: 561, column: 26, scope: !3240)
!3240 = distinct !DILexicalBlock(scope: !3230, file: !319, line: 560, column: 16)
!3241 = !DILocation(line: 561, column: 23, scope: !3240)
!3242 = !DILocation(line: 563, column: 5, scope: !3222)
!3243 = !DILocation(line: 564, column: 1, scope: !3137)
!3244 = distinct !DISubprogram(name: "longest_match", scope: !319, file: !319, line: 357, type: !3245, scopeLine: 359, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !318, retainedNodes: !271)
!3245 = !DISubroutineType(types: !3246)
!3246 = !{!28, !322}
!3247 = !DILocalVariable(name: "cur_match", arg: 1, scope: !3244, file: !319, line: 358, type: !322)
!3248 = !DILocation(line: 358, column: 10, scope: !3244)
!3249 = !DILocalVariable(name: "chain_length", scope: !3244, file: !319, line: 360, type: !7)
!3250 = !DILocation(line: 360, column: 14, scope: !3244)
!3251 = !DILocation(line: 360, column: 29, scope: !3244)
!3252 = !DILocalVariable(name: "scan", scope: !3244, file: !319, line: 361, type: !312)
!3253 = !DILocation(line: 361, column: 19, scope: !3244)
!3254 = !DILocation(line: 361, column: 35, scope: !3244)
!3255 = !DILocation(line: 361, column: 33, scope: !3244)
!3256 = !DILocalVariable(name: "match", scope: !3244, file: !319, line: 362, type: !312)
!3257 = !DILocation(line: 362, column: 19, scope: !3244)
!3258 = !DILocalVariable(name: "len", scope: !3244, file: !319, line: 363, type: !28)
!3259 = !DILocation(line: 363, column: 18, scope: !3244)
!3260 = !DILocalVariable(name: "best_len", scope: !3244, file: !319, line: 364, type: !28)
!3261 = !DILocation(line: 364, column: 9, scope: !3244)
!3262 = !DILocation(line: 364, column: 20, scope: !3244)
!3263 = !DILocalVariable(name: "limit", scope: !3244, file: !319, line: 365, type: !322)
!3264 = !DILocation(line: 365, column: 10, scope: !3244)
!3265 = !DILocation(line: 365, column: 18, scope: !3244)
!3266 = !DILocation(line: 365, column: 27, scope: !3244)
!3267 = !DILocation(line: 365, column: 46, scope: !3244)
!3268 = !DILocation(line: 365, column: 55, scope: !3244)
!3269 = !DILocalVariable(name: "strend", scope: !3244, file: !319, line: 385, type: !312)
!3270 = !DILocation(line: 385, column: 19, scope: !3244)
!3271 = !DILocation(line: 385, column: 37, scope: !3244)
!3272 = !DILocation(line: 385, column: 35, scope: !3244)
!3273 = !DILocation(line: 385, column: 46, scope: !3244)
!3274 = !DILocalVariable(name: "scan_end1", scope: !3244, file: !319, line: 386, type: !92)
!3275 = !DILocation(line: 386, column: 18, scope: !3244)
!3276 = !DILocation(line: 386, column: 31, scope: !3244)
!3277 = !DILocation(line: 386, column: 36, scope: !3244)
!3278 = !DILocation(line: 386, column: 44, scope: !3244)
!3279 = !DILocalVariable(name: "scan_end", scope: !3244, file: !319, line: 387, type: !92)
!3280 = !DILocation(line: 387, column: 18, scope: !3244)
!3281 = !DILocation(line: 387, column: 31, scope: !3244)
!3282 = !DILocation(line: 387, column: 36, scope: !3244)
!3283 = !DILocation(line: 391, column: 9, scope: !3284)
!3284 = distinct !DILexicalBlock(scope: !3244, file: !319, line: 391, column: 9)
!3285 = !DILocation(line: 391, column: 24, scope: !3284)
!3286 = !DILocation(line: 391, column: 21, scope: !3284)
!3287 = !DILocation(line: 391, column: 9, scope: !3244)
!3288 = !DILocation(line: 392, column: 22, scope: !3289)
!3289 = distinct !DILexicalBlock(scope: !3284, file: !319, line: 391, column: 36)
!3290 = !DILocation(line: 393, column: 5, scope: !3289)
!3291 = !DILocation(line: 396, column: 5, scope: !3244)
!3292 = !DILocation(line: 398, column: 26, scope: !3293)
!3293 = distinct !DILexicalBlock(scope: !3244, file: !319, line: 396, column: 8)
!3294 = !DILocation(line: 398, column: 24, scope: !3293)
!3295 = !DILocation(line: 398, column: 15, scope: !3293)
!3296 = !DILocation(line: 437, column: 13, scope: !3297)
!3297 = distinct !DILexicalBlock(scope: !3293, file: !319, line: 437, column: 13)
!3298 = !DILocation(line: 437, column: 19, scope: !3297)
!3299 = !DILocation(line: 437, column: 34, scope: !3297)
!3300 = !DILocation(line: 437, column: 31, scope: !3297)
!3301 = !DILocation(line: 437, column: 44, scope: !3297)
!3302 = !DILocation(line: 438, column: 13, scope: !3297)
!3303 = !DILocation(line: 438, column: 19, scope: !3297)
!3304 = !DILocation(line: 438, column: 27, scope: !3297)
!3305 = !DILocation(line: 438, column: 34, scope: !3297)
!3306 = !DILocation(line: 438, column: 31, scope: !3297)
!3307 = !DILocation(line: 438, column: 44, scope: !3297)
!3308 = !DILocation(line: 439, column: 14, scope: !3297)
!3309 = !DILocation(line: 439, column: 13, scope: !3297)
!3310 = !DILocation(line: 439, column: 35, scope: !3297)
!3311 = !DILocation(line: 439, column: 34, scope: !3297)
!3312 = !DILocation(line: 439, column: 31, scope: !3297)
!3313 = !DILocation(line: 439, column: 44, scope: !3297)
!3314 = !DILocation(line: 440, column: 14, scope: !3297)
!3315 = !DILocation(line: 440, column: 13, scope: !3297)
!3316 = !DILocation(line: 440, column: 34, scope: !3297)
!3317 = !DILocation(line: 440, column: 31, scope: !3297)
!3318 = !DILocation(line: 437, column: 13, scope: !3293)
!3319 = !DILocation(line: 440, column: 48, scope: !3297)
!3320 = !DILocation(line: 448, column: 14, scope: !3293)
!3321 = !DILocation(line: 448, column: 25, scope: !3293)
!3322 = !DILocation(line: 453, column: 9, scope: !3293)
!3323 = !DILocation(line: 454, column: 9, scope: !3324)
!3324 = distinct !DILexicalBlock(scope: !3293, file: !319, line: 453, column: 12)
!3325 = !DILocation(line: 454, column: 19, scope: !3293)
!3326 = !DILocation(line: 454, column: 18, scope: !3293)
!3327 = !DILocation(line: 454, column: 30, scope: !3293)
!3328 = !DILocation(line: 454, column: 29, scope: !3293)
!3329 = !DILocation(line: 454, column: 26, scope: !3293)
!3330 = !DILocation(line: 454, column: 38, scope: !3293)
!3331 = !DILocation(line: 454, column: 42, scope: !3293)
!3332 = !DILocation(line: 454, column: 41, scope: !3293)
!3333 = !DILocation(line: 454, column: 53, scope: !3293)
!3334 = !DILocation(line: 454, column: 52, scope: !3293)
!3335 = !DILocation(line: 454, column: 49, scope: !3293)
!3336 = !DILocation(line: 454, column: 61, scope: !3293)
!3337 = !DILocation(line: 455, column: 19, scope: !3293)
!3338 = !DILocation(line: 455, column: 18, scope: !3293)
!3339 = !DILocation(line: 455, column: 30, scope: !3293)
!3340 = !DILocation(line: 455, column: 29, scope: !3293)
!3341 = !DILocation(line: 455, column: 26, scope: !3293)
!3342 = !DILocation(line: 455, column: 38, scope: !3293)
!3343 = !DILocation(line: 455, column: 42, scope: !3293)
!3344 = !DILocation(line: 455, column: 41, scope: !3293)
!3345 = !DILocation(line: 455, column: 53, scope: !3293)
!3346 = !DILocation(line: 455, column: 52, scope: !3293)
!3347 = !DILocation(line: 455, column: 49, scope: !3293)
!3348 = !DILocation(line: 455, column: 61, scope: !3293)
!3349 = !DILocation(line: 456, column: 19, scope: !3293)
!3350 = !DILocation(line: 456, column: 18, scope: !3293)
!3351 = !DILocation(line: 456, column: 30, scope: !3293)
!3352 = !DILocation(line: 456, column: 29, scope: !3293)
!3353 = !DILocation(line: 456, column: 26, scope: !3293)
!3354 = !DILocation(line: 456, column: 38, scope: !3293)
!3355 = !DILocation(line: 456, column: 42, scope: !3293)
!3356 = !DILocation(line: 456, column: 41, scope: !3293)
!3357 = !DILocation(line: 456, column: 53, scope: !3293)
!3358 = !DILocation(line: 456, column: 52, scope: !3293)
!3359 = !DILocation(line: 456, column: 49, scope: !3293)
!3360 = !DILocation(line: 456, column: 61, scope: !3293)
!3361 = !DILocation(line: 457, column: 19, scope: !3293)
!3362 = !DILocation(line: 457, column: 18, scope: !3293)
!3363 = !DILocation(line: 457, column: 30, scope: !3293)
!3364 = !DILocation(line: 457, column: 29, scope: !3293)
!3365 = !DILocation(line: 457, column: 26, scope: !3293)
!3366 = !DILocation(line: 457, column: 38, scope: !3293)
!3367 = !DILocation(line: 457, column: 42, scope: !3293)
!3368 = !DILocation(line: 457, column: 41, scope: !3293)
!3369 = !DILocation(line: 457, column: 53, scope: !3293)
!3370 = !DILocation(line: 457, column: 52, scope: !3293)
!3371 = !DILocation(line: 457, column: 49, scope: !3293)
!3372 = !DILocation(line: 457, column: 61, scope: !3293)
!3373 = !DILocation(line: 458, column: 18, scope: !3293)
!3374 = !DILocation(line: 458, column: 25, scope: !3293)
!3375 = !DILocation(line: 458, column: 23, scope: !3293)
!3376 = !DILocation(line: 0, scope: !3293)
!3377 = distinct !{!3377, !3322, !3378, !816}
!3378 = !DILocation(line: 458, column: 31, scope: !3293)
!3379 = !DILocation(line: 460, column: 33, scope: !3293)
!3380 = !DILocation(line: 460, column: 42, scope: !3293)
!3381 = !DILocation(line: 460, column: 40, scope: !3293)
!3382 = !DILocation(line: 460, column: 27, scope: !3293)
!3383 = !DILocation(line: 460, column: 25, scope: !3293)
!3384 = !DILocation(line: 460, column: 13, scope: !3293)
!3385 = !DILocation(line: 461, column: 16, scope: !3293)
!3386 = !DILocation(line: 461, column: 23, scope: !3293)
!3387 = !DILocation(line: 461, column: 14, scope: !3293)
!3388 = !DILocation(line: 465, column: 13, scope: !3389)
!3389 = distinct !DILexicalBlock(scope: !3293, file: !319, line: 465, column: 13)
!3390 = !DILocation(line: 465, column: 19, scope: !3389)
!3391 = !DILocation(line: 465, column: 17, scope: !3389)
!3392 = !DILocation(line: 465, column: 13, scope: !3293)
!3393 = !DILocation(line: 466, column: 27, scope: !3394)
!3394 = distinct !DILexicalBlock(scope: !3389, file: !319, line: 465, column: 29)
!3395 = !DILocation(line: 466, column: 25, scope: !3394)
!3396 = !DILocation(line: 467, column: 24, scope: !3394)
!3397 = !DILocation(line: 467, column: 22, scope: !3394)
!3398 = !DILocation(line: 468, column: 17, scope: !3399)
!3399 = distinct !DILexicalBlock(scope: !3394, file: !319, line: 468, column: 17)
!3400 = !DILocation(line: 468, column: 24, scope: !3399)
!3401 = !DILocation(line: 468, column: 21, scope: !3399)
!3402 = !DILocation(line: 468, column: 17, scope: !3394)
!3403 = !DILocation(line: 468, column: 36, scope: !3399)
!3404 = !DILocation(line: 472, column: 26, scope: !3394)
!3405 = !DILocation(line: 472, column: 31, scope: !3394)
!3406 = !DILocation(line: 472, column: 39, scope: !3394)
!3407 = !DILocation(line: 472, column: 24, scope: !3394)
!3408 = !DILocation(line: 473, column: 26, scope: !3394)
!3409 = !DILocation(line: 473, column: 31, scope: !3394)
!3410 = !DILocation(line: 473, column: 24, scope: !3394)
!3411 = !DILocation(line: 475, column: 9, scope: !3394)
!3412 = !DILocation(line: 476, column: 5, scope: !3293)
!3413 = !DILocation(line: 476, column: 32, scope: !3244)
!3414 = !DILocation(line: 476, column: 42, scope: !3244)
!3415 = !DILocation(line: 476, column: 27, scope: !3244)
!3416 = !DILocation(line: 476, column: 25, scope: !3244)
!3417 = !DILocation(line: 476, column: 54, scope: !3244)
!3418 = !DILocation(line: 476, column: 52, scope: !3244)
!3419 = !DILocation(line: 477, column: 7, scope: !3244)
!3420 = !DILocation(line: 477, column: 10, scope: !3244)
!3421 = !DILocation(line: 477, column: 25, scope: !3244)
!3422 = !DILocation(line: 0, scope: !3244)
!3423 = distinct !{!3423, !3291, !3424, !816}
!3424 = !DILocation(line: 477, column: 29, scope: !3244)
!3425 = !DILocation(line: 479, column: 12, scope: !3244)
!3426 = !DILocation(line: 479, column: 5, scope: !3244)
!3427 = distinct !DISubprogram(name: "deflate", scope: !319, file: !319, line: 661, type: !3428, scopeLine: 662, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !318, retainedNodes: !271)
!3428 = !DISubroutineType(types: !3429)
!3429 = !{!95}
!3430 = !DILocalVariable(name: "hash_head", scope: !3427, file: !319, line: 663, type: !322)
!3431 = !DILocation(line: 663, column: 10, scope: !3427)
!3432 = !DILocalVariable(name: "prev_match", scope: !3427, file: !319, line: 664, type: !322)
!3433 = !DILocation(line: 664, column: 10, scope: !3427)
!3434 = !DILocalVariable(name: "flush", scope: !3427, file: !319, line: 665, type: !28)
!3435 = !DILocation(line: 665, column: 9, scope: !3427)
!3436 = !DILocalVariable(name: "match_available", scope: !3427, file: !319, line: 666, type: !28)
!3437 = !DILocation(line: 666, column: 9, scope: !3427)
!3438 = !DILocalVariable(name: "match_length", scope: !3427, file: !319, line: 667, type: !7)
!3439 = !DILocation(line: 667, column: 23, scope: !3427)
!3440 = !DILocation(line: 672, column: 9, scope: !3441)
!3441 = distinct !DILexicalBlock(scope: !3427, file: !319, line: 672, column: 9)
!3442 = !DILocation(line: 672, column: 21, scope: !3441)
!3443 = !DILocation(line: 672, column: 9, scope: !3427)
!3444 = !DILocation(line: 672, column: 34, scope: !3441)
!3445 = !DILocation(line: 672, column: 27, scope: !3441)
!3446 = !DILocation(line: 675, column: 5, scope: !3427)
!3447 = !DILocation(line: 675, column: 12, scope: !3427)
!3448 = !DILocation(line: 675, column: 22, scope: !3427)
!3449 = !DILocation(line: 679, column: 9, scope: !3450)
!3450 = distinct !DILexicalBlock(scope: !3427, file: !319, line: 675, column: 28)
!3451 = !DILocation(line: 683, column: 23, scope: !3450)
!3452 = !DILocation(line: 683, column: 21, scope: !3450)
!3453 = !DILocation(line: 683, column: 50, scope: !3450)
!3454 = !DILocation(line: 683, column: 48, scope: !3450)
!3455 = !DILocation(line: 684, column: 22, scope: !3450)
!3456 = !DILocation(line: 686, column: 13, scope: !3457)
!3457 = distinct !DILexicalBlock(scope: !3450, file: !319, line: 686, column: 13)
!3458 = !DILocation(line: 686, column: 23, scope: !3457)
!3459 = !DILocation(line: 686, column: 30, scope: !3457)
!3460 = !DILocation(line: 686, column: 33, scope: !3457)
!3461 = !DILocation(line: 686, column: 47, scope: !3457)
!3462 = !DILocation(line: 686, column: 45, scope: !3457)
!3463 = !DILocation(line: 686, column: 62, scope: !3457)
!3464 = !DILocation(line: 687, column: 13, scope: !3457)
!3465 = !DILocation(line: 687, column: 24, scope: !3457)
!3466 = !DILocation(line: 687, column: 22, scope: !3457)
!3467 = !DILocation(line: 687, column: 34, scope: !3457)
!3468 = !DILocation(line: 686, column: 13, scope: !3450)
!3469 = !DILocation(line: 692, column: 43, scope: !3470)
!3470 = distinct !DILexicalBlock(scope: !3457, file: !319, line: 687, column: 47)
!3471 = !DILocation(line: 692, column: 28, scope: !3470)
!3472 = !DILocation(line: 692, column: 26, scope: !3470)
!3473 = !DILocation(line: 694, column: 17, scope: !3474)
!3474 = distinct !DILexicalBlock(scope: !3470, file: !319, line: 694, column: 17)
!3475 = !DILocation(line: 694, column: 32, scope: !3474)
!3476 = !DILocation(line: 694, column: 30, scope: !3474)
!3477 = !DILocation(line: 694, column: 17, scope: !3470)
!3478 = !DILocation(line: 694, column: 58, scope: !3474)
!3479 = !DILocation(line: 694, column: 56, scope: !3474)
!3480 = !DILocation(line: 694, column: 43, scope: !3474)
!3481 = !DILocation(line: 697, column: 17, scope: !3482)
!3482 = distinct !DILexicalBlock(scope: !3470, file: !319, line: 697, column: 17)
!3483 = !DILocation(line: 697, column: 30, scope: !3482)
!3484 = !DILocation(line: 697, column: 43, scope: !3482)
!3485 = !DILocation(line: 697, column: 46, scope: !3482)
!3486 = !DILocation(line: 697, column: 55, scope: !3482)
!3487 = !DILocation(line: 697, column: 54, scope: !3482)
!3488 = !DILocation(line: 697, column: 67, scope: !3482)
!3489 = !DILocation(line: 697, column: 17, scope: !3470)
!3490 = !DILocation(line: 701, column: 29, scope: !3491)
!3491 = distinct !DILexicalBlock(scope: !3482, file: !319, line: 697, column: 77)
!3492 = !DILocation(line: 702, column: 13, scope: !3491)
!3493 = !DILocation(line: 703, column: 9, scope: !3470)
!3494 = !DILocation(line: 707, column: 13, scope: !3495)
!3495 = distinct !DILexicalBlock(scope: !3450, file: !319, line: 707, column: 13)
!3496 = !DILocation(line: 707, column: 25, scope: !3495)
!3497 = !DILocation(line: 707, column: 38, scope: !3495)
!3498 = !DILocation(line: 707, column: 41, scope: !3495)
!3499 = !DILocation(line: 707, column: 57, scope: !3495)
!3500 = !DILocation(line: 707, column: 54, scope: !3495)
!3501 = !DILocation(line: 707, column: 13, scope: !3450)
!3502 = !DILocation(line: 711, column: 30, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3495, file: !319, line: 707, column: 70)
!3504 = !DILocation(line: 711, column: 38, scope: !3503)
!3505 = !DILocation(line: 711, column: 41, scope: !3503)
!3506 = !DILocation(line: 711, column: 40, scope: !3503)
!3507 = !DILocation(line: 711, column: 53, scope: !3503)
!3508 = !DILocation(line: 711, column: 65, scope: !3503)
!3509 = !DILocation(line: 711, column: 21, scope: !3503)
!3510 = !DILocation(line: 711, column: 19, scope: !3503)
!3511 = !DILocation(line: 716, column: 26, scope: !3503)
!3512 = !DILocation(line: 716, column: 37, scope: !3503)
!3513 = !DILocation(line: 716, column: 23, scope: !3503)
!3514 = !DILocation(line: 717, column: 25, scope: !3503)
!3515 = !DILocation(line: 718, column: 13, scope: !3503)
!3516 = !DILocation(line: 719, column: 25, scope: !3517)
!3517 = distinct !DILexicalBlock(scope: !3503, file: !319, line: 718, column: 16)
!3518 = !DILocation(line: 720, column: 17, scope: !3517)
!3519 = !DILocation(line: 726, column: 13, scope: !3517)
!3520 = !DILocation(line: 726, column: 22, scope: !3503)
!3521 = !DILocation(line: 726, column: 36, scope: !3503)
!3522 = distinct !{!3522, !3515, !3523, !816}
!3523 = !DILocation(line: 726, column: 40, scope: !3503)
!3524 = !DILocation(line: 727, column: 29, scope: !3503)
!3525 = !DILocation(line: 728, column: 26, scope: !3503)
!3526 = !DILocation(line: 729, column: 21, scope: !3503)
!3527 = !DILocation(line: 730, column: 17, scope: !3528)
!3528 = distinct !DILexicalBlock(scope: !3503, file: !319, line: 730, column: 17)
!3529 = !DILocation(line: 730, column: 17, scope: !3503)
!3530 = !DILocation(line: 730, column: 24, scope: !3528)
!3531 = !DILocation(line: 730, column: 54, scope: !3528)
!3532 = !DILocation(line: 730, column: 52, scope: !3528)
!3533 = !DILocation(line: 732, column: 9, scope: !3503)
!3534 = !DILocation(line: 732, column: 20, scope: !3535)
!3535 = distinct !DILexicalBlock(scope: !3495, file: !319, line: 732, column: 20)
!3536 = !DILocation(line: 732, column: 20, scope: !3495)
!3537 = !DILocation(line: 738, column: 37, scope: !3538)
!3538 = distinct !DILexicalBlock(scope: !3539, file: !319, line: 738, column: 17)
!3539 = distinct !DILexicalBlock(scope: !3535, file: !319, line: 732, column: 37)
!3540 = !DILocation(line: 738, column: 45, scope: !3538)
!3541 = !DILocation(line: 738, column: 30, scope: !3538)
!3542 = !DILocation(line: 738, column: 17, scope: !3538)
!3543 = !DILocation(line: 738, column: 17, scope: !3539)
!3544 = !DILocation(line: 739, column: 17, scope: !3545)
!3545 = distinct !DILexicalBlock(scope: !3538, file: !319, line: 738, column: 51)
!3546 = !DILocation(line: 739, column: 47, scope: !3545)
!3547 = !DILocation(line: 739, column: 45, scope: !3545)
!3548 = !DILocation(line: 740, column: 13, scope: !3545)
!3549 = !DILocation(line: 741, column: 21, scope: !3539)
!3550 = !DILocation(line: 742, column: 22, scope: !3539)
!3551 = !DILocation(line: 743, column: 9, scope: !3539)
!3552 = !DILocation(line: 747, column: 29, scope: !3553)
!3553 = distinct !DILexicalBlock(scope: !3535, file: !319, line: 743, column: 16)
!3554 = !DILocation(line: 748, column: 21, scope: !3553)
!3555 = !DILocation(line: 749, column: 22, scope: !3553)
!3556 = !DILocation(line: 758, column: 9, scope: !3450)
!3557 = !DILocation(line: 758, column: 16, scope: !3450)
!3558 = !DILocation(line: 758, column: 26, scope: !3450)
!3559 = !DILocation(line: 758, column: 42, scope: !3450)
!3560 = !DILocation(line: 758, column: 46, scope: !3450)
!3561 = !DILocation(line: 758, column: 45, scope: !3450)
!3562 = !DILocation(line: 0, scope: !3450)
!3563 = !DILocation(line: 758, column: 54, scope: !3450)
!3564 = distinct !{!3564, !3556, !3565, !816}
!3565 = !DILocation(line: 758, column: 66, scope: !3450)
!3566 = distinct !{!3566, !3446, !3567, !816}
!3567 = !DILocation(line: 759, column: 5, scope: !3427)
!3568 = !DILocation(line: 760, column: 9, scope: !3569)
!3569 = distinct !DILexicalBlock(scope: !3427, file: !319, line: 760, column: 9)
!3570 = !DILocation(line: 760, column: 9, scope: !3427)
!3571 = !DILocation(line: 760, column: 46, scope: !3569)
!3572 = !DILocation(line: 760, column: 54, scope: !3569)
!3573 = !DILocation(line: 760, column: 39, scope: !3569)
!3574 = !DILocation(line: 760, column: 26, scope: !3569)
!3575 = !DILocation(line: 762, column: 12, scope: !3427)
!3576 = !DILocation(line: 762, column: 5, scope: !3427)
!3577 = !DILocation(line: 763, column: 1, scope: !3427)
!3578 = distinct !DISubprogram(name: "deflate_fast", scope: !319, file: !319, line: 580, type: !3428, scopeLine: 581, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !318, retainedNodes: !271)
!3579 = !DILocalVariable(name: "hash_head", scope: !3578, file: !319, line: 582, type: !322)
!3580 = !DILocation(line: 582, column: 10, scope: !3578)
!3581 = !DILocalVariable(name: "flush", scope: !3578, file: !319, line: 583, type: !28)
!3582 = !DILocation(line: 583, column: 9, scope: !3578)
!3583 = !DILocalVariable(name: "match_length", scope: !3578, file: !319, line: 584, type: !7)
!3584 = !DILocation(line: 584, column: 14, scope: !3578)
!3585 = !DILocation(line: 586, column: 17, scope: !3578)
!3586 = !DILocation(line: 587, column: 5, scope: !3578)
!3587 = !DILocation(line: 587, column: 12, scope: !3578)
!3588 = !DILocation(line: 587, column: 22, scope: !3578)
!3589 = !DILocation(line: 591, column: 9, scope: !3590)
!3590 = distinct !DILexicalBlock(scope: !3578, file: !319, line: 587, column: 28)
!3591 = !DILocation(line: 596, column: 13, scope: !3592)
!3592 = distinct !DILexicalBlock(scope: !3590, file: !319, line: 596, column: 13)
!3593 = !DILocation(line: 596, column: 23, scope: !3592)
!3594 = !DILocation(line: 596, column: 30, scope: !3592)
!3595 = !DILocation(line: 596, column: 33, scope: !3592)
!3596 = !DILocation(line: 596, column: 44, scope: !3592)
!3597 = !DILocation(line: 596, column: 42, scope: !3592)
!3598 = !DILocation(line: 596, column: 54, scope: !3592)
!3599 = !DILocation(line: 596, column: 13, scope: !3590)
!3600 = !DILocation(line: 601, column: 43, scope: !3601)
!3601 = distinct !DILexicalBlock(scope: !3592, file: !319, line: 596, column: 67)
!3602 = !DILocation(line: 601, column: 28, scope: !3601)
!3603 = !DILocation(line: 601, column: 26, scope: !3601)
!3604 = !DILocation(line: 603, column: 17, scope: !3605)
!3605 = distinct !DILexicalBlock(scope: !3601, file: !319, line: 603, column: 17)
!3606 = !DILocation(line: 603, column: 32, scope: !3605)
!3607 = !DILocation(line: 603, column: 30, scope: !3605)
!3608 = !DILocation(line: 603, column: 17, scope: !3601)
!3609 = !DILocation(line: 603, column: 58, scope: !3605)
!3610 = !DILocation(line: 603, column: 56, scope: !3605)
!3611 = !DILocation(line: 603, column: 43, scope: !3605)
!3612 = !DILocation(line: 604, column: 9, scope: !3601)
!3613 = !DILocation(line: 605, column: 13, scope: !3614)
!3614 = distinct !DILexicalBlock(scope: !3590, file: !319, line: 605, column: 13)
!3615 = !DILocation(line: 605, column: 26, scope: !3614)
!3616 = !DILocation(line: 605, column: 13, scope: !3590)
!3617 = !DILocation(line: 608, column: 30, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3614, file: !319, line: 605, column: 40)
!3619 = !DILocation(line: 608, column: 39, scope: !3618)
!3620 = !DILocation(line: 608, column: 38, scope: !3618)
!3621 = !DILocation(line: 608, column: 52, scope: !3618)
!3622 = !DILocation(line: 608, column: 65, scope: !3618)
!3623 = !DILocation(line: 608, column: 21, scope: !3618)
!3624 = !DILocation(line: 608, column: 19, scope: !3618)
!3625 = !DILocation(line: 610, column: 26, scope: !3618)
!3626 = !DILocation(line: 610, column: 23, scope: !3618)
!3627 = !DILocation(line: 615, column: 17, scope: !3628)
!3628 = distinct !DILexicalBlock(scope: !3618, file: !319, line: 615, column: 17)
!3629 = !DILocation(line: 615, column: 33, scope: !3628)
!3630 = !DILocation(line: 615, column: 30, scope: !3628)
!3631 = !DILocation(line: 615, column: 17, scope: !3618)
!3632 = !DILocation(line: 616, column: 29, scope: !3633)
!3633 = distinct !DILexicalBlock(scope: !3628, file: !319, line: 615, column: 52)
!3634 = !DILocation(line: 617, column: 17, scope: !3633)
!3635 = !DILocation(line: 618, column: 29, scope: !3636)
!3636 = distinct !DILexicalBlock(scope: !3633, file: !319, line: 617, column: 20)
!3637 = !DILocation(line: 619, column: 21, scope: !3636)
!3638 = !DILocation(line: 625, column: 17, scope: !3636)
!3639 = !DILocation(line: 625, column: 26, scope: !3633)
!3640 = !DILocation(line: 625, column: 41, scope: !3633)
!3641 = distinct !{!3641, !3634, !3642, !816}
!3642 = !DILocation(line: 625, column: 45, scope: !3633)
!3643 = !DILocation(line: 626, column: 18, scope: !3633)
!3644 = !DILocation(line: 627, column: 13, scope: !3633)
!3645 = !DILocation(line: 628, column: 22, scope: !3646)
!3646 = distinct !DILexicalBlock(scope: !3628, file: !319, line: 627, column: 20)
!3647 = !DILocation(line: 628, column: 19, scope: !3646)
!3648 = !DILocation(line: 629, column: 23, scope: !3646)
!3649 = !DILocation(line: 630, column: 25, scope: !3646)
!3650 = !DILocation(line: 630, column: 18, scope: !3646)
!3651 = !DILocation(line: 630, column: 16, scope: !3646)
!3652 = !DILocation(line: 631, column: 10, scope: !3646)
!3653 = !DILocation(line: 636, column: 9, scope: !3618)
!3654 = !DILocation(line: 639, column: 41, scope: !3655)
!3655 = distinct !DILexicalBlock(scope: !3614, file: !319, line: 636, column: 16)
!3656 = !DILocation(line: 639, column: 34, scope: !3655)
!3657 = !DILocation(line: 639, column: 21, scope: !3655)
!3658 = !DILocation(line: 639, column: 19, scope: !3655)
!3659 = !DILocation(line: 640, column: 22, scope: !3655)
!3660 = !DILocation(line: 641, column: 14, scope: !3655)
!3661 = !DILocation(line: 643, column: 13, scope: !3662)
!3662 = distinct !DILexicalBlock(scope: !3590, file: !319, line: 643, column: 13)
!3663 = !DILocation(line: 643, column: 13, scope: !3590)
!3664 = !DILocation(line: 643, column: 20, scope: !3662)
!3665 = !DILocation(line: 643, column: 50, scope: !3662)
!3666 = !DILocation(line: 643, column: 48, scope: !3662)
!3667 = !DILocation(line: 650, column: 9, scope: !3590)
!3668 = !DILocation(line: 650, column: 16, scope: !3590)
!3669 = !DILocation(line: 650, column: 26, scope: !3590)
!3670 = !DILocation(line: 650, column: 42, scope: !3590)
!3671 = !DILocation(line: 650, column: 46, scope: !3590)
!3672 = !DILocation(line: 650, column: 45, scope: !3590)
!3673 = !DILocation(line: 0, scope: !3590)
!3674 = !DILocation(line: 650, column: 54, scope: !3590)
!3675 = distinct !{!3675, !3667, !3676, !816}
!3676 = !DILocation(line: 650, column: 66, scope: !3590)
!3677 = distinct !{!3677, !3586, !3678, !816}
!3678 = !DILocation(line: 652, column: 5, scope: !3578)
!3679 = !DILocation(line: 653, column: 12, scope: !3578)
!3680 = !DILocation(line: 653, column: 5, scope: !3578)
!3681 = distinct !DISubprogram(name: "ct_init", scope: !364, file: !364, line: 332, type: !3682, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !363, retainedNodes: !271)
!3682 = !DISubroutineType(types: !3683)
!3683 = !{null, !493, !30}
!3684 = !DILocalVariable(name: "attr", arg: 1, scope: !3681, file: !364, line: 333, type: !493)
!3685 = !DILocation(line: 333, column: 11, scope: !3681)
!3686 = !DILocalVariable(name: "methodp", arg: 2, scope: !3681, file: !364, line: 334, type: !30)
!3687 = !DILocation(line: 334, column: 11, scope: !3681)
!3688 = !DILocalVariable(name: "n", scope: !3681, file: !364, line: 336, type: !28)
!3689 = !DILocation(line: 336, column: 9, scope: !3681)
!3690 = !DILocalVariable(name: "bits", scope: !3681, file: !364, line: 337, type: !28)
!3691 = !DILocation(line: 337, column: 9, scope: !3681)
!3692 = !DILocalVariable(name: "length", scope: !3681, file: !364, line: 338, type: !28)
!3693 = !DILocation(line: 338, column: 9, scope: !3681)
!3694 = !DILocalVariable(name: "code", scope: !3681, file: !364, line: 339, type: !28)
!3695 = !DILocation(line: 339, column: 9, scope: !3681)
!3696 = !DILocalVariable(name: "dist", scope: !3681, file: !364, line: 340, type: !28)
!3697 = !DILocation(line: 340, column: 9, scope: !3681)
!3698 = !DILocation(line: 342, column: 17, scope: !3681)
!3699 = !DILocation(line: 342, column: 15, scope: !3681)
!3700 = !DILocation(line: 343, column: 19, scope: !3681)
!3701 = !DILocation(line: 343, column: 17, scope: !3681)
!3702 = !DILocation(line: 344, column: 32, scope: !3681)
!3703 = !DILocation(line: 344, column: 20, scope: !3681)
!3704 = !DILocation(line: 346, column: 25, scope: !3705)
!3705 = distinct !DILexicalBlock(scope: !3681, file: !364, line: 346, column: 9)
!3706 = !DILocation(line: 346, column: 9, scope: !3705)
!3707 = !DILocation(line: 346, column: 29, scope: !3705)
!3708 = !DILocation(line: 346, column: 9, scope: !3681)
!3709 = !DILocation(line: 346, column: 35, scope: !3705)
!3710 = !DILocation(line: 349, column: 12, scope: !3681)
!3711 = !DILocation(line: 350, column: 15, scope: !3712)
!3712 = distinct !DILexicalBlock(scope: !3681, file: !364, line: 350, column: 5)
!3713 = !DILocation(line: 350, column: 10, scope: !3712)
!3714 = !DILocation(line: 350, column: 20, scope: !3715)
!3715 = distinct !DILexicalBlock(scope: !3712, file: !364, line: 350, column: 5)
!3716 = !DILocation(line: 350, column: 25, scope: !3715)
!3717 = !DILocation(line: 350, column: 5, scope: !3712)
!3718 = !DILocation(line: 351, column: 29, scope: !3719)
!3719 = distinct !DILexicalBlock(scope: !3715, file: !364, line: 350, column: 51)
!3720 = !DILocation(line: 351, column: 21, scope: !3719)
!3721 = !DILocation(line: 351, column: 9, scope: !3719)
!3722 = !DILocation(line: 351, column: 27, scope: !3719)
!3723 = !DILocation(line: 352, column: 16, scope: !3724)
!3724 = distinct !DILexicalBlock(scope: !3719, file: !364, line: 352, column: 9)
!3725 = !DILocation(line: 352, column: 14, scope: !3724)
!3726 = !DILocation(line: 352, column: 21, scope: !3727)
!3727 = distinct !DILexicalBlock(scope: !3724, file: !364, line: 352, column: 9)
!3728 = !DILocation(line: 352, column: 41, scope: !3727)
!3729 = !DILocation(line: 352, column: 29, scope: !3727)
!3730 = !DILocation(line: 352, column: 27, scope: !3727)
!3731 = !DILocation(line: 352, column: 23, scope: !3727)
!3732 = !DILocation(line: 352, column: 9, scope: !3724)
!3733 = !DILocation(line: 353, column: 42, scope: !3734)
!3734 = distinct !DILexicalBlock(scope: !3727, file: !364, line: 352, column: 54)
!3735 = !DILocation(line: 353, column: 37, scope: !3734)
!3736 = !DILocation(line: 353, column: 31, scope: !3734)
!3737 = !DILocation(line: 353, column: 13, scope: !3734)
!3738 = !DILocation(line: 353, column: 35, scope: !3734)
!3739 = !DILocation(line: 354, column: 9, scope: !3734)
!3740 = !DILocation(line: 352, column: 50, scope: !3727)
!3741 = !DILocation(line: 352, column: 9, scope: !3727)
!3742 = distinct !{!3742, !3732, !3743, !816}
!3743 = !DILocation(line: 354, column: 9, scope: !3724)
!3744 = !DILocation(line: 355, column: 5, scope: !3719)
!3745 = !DILocation(line: 350, column: 47, scope: !3715)
!3746 = !DILocation(line: 350, column: 5, scope: !3715)
!3747 = distinct !{!3747, !3717, !3748, !816}
!3748 = !DILocation(line: 355, column: 5, scope: !3712)
!3749 = !DILocation(line: 361, column: 34, scope: !3681)
!3750 = !DILocation(line: 361, column: 29, scope: !3681)
!3751 = !DILocation(line: 361, column: 17, scope: !3681)
!3752 = !DILocation(line: 361, column: 23, scope: !3681)
!3753 = !DILocation(line: 361, column: 5, scope: !3681)
!3754 = !DILocation(line: 361, column: 27, scope: !3681)
!3755 = !DILocation(line: 364, column: 10, scope: !3681)
!3756 = !DILocation(line: 365, column: 15, scope: !3757)
!3757 = distinct !DILexicalBlock(scope: !3681, file: !364, line: 365, column: 5)
!3758 = !DILocation(line: 365, column: 10, scope: !3757)
!3759 = !DILocation(line: 365, column: 21, scope: !3760)
!3760 = distinct !DILexicalBlock(scope: !3757, file: !364, line: 365, column: 5)
!3761 = !DILocation(line: 365, column: 26, scope: !3760)
!3762 = !DILocation(line: 365, column: 5, scope: !3757)
!3763 = !DILocation(line: 366, column: 27, scope: !3764)
!3764 = distinct !DILexicalBlock(scope: !3760, file: !364, line: 365, column: 40)
!3765 = !DILocation(line: 366, column: 19, scope: !3764)
!3766 = !DILocation(line: 366, column: 9, scope: !3764)
!3767 = !DILocation(line: 366, column: 25, scope: !3764)
!3768 = !DILocation(line: 367, column: 16, scope: !3769)
!3769 = distinct !DILexicalBlock(scope: !3764, file: !364, line: 367, column: 9)
!3770 = !DILocation(line: 367, column: 14, scope: !3769)
!3771 = !DILocation(line: 367, column: 21, scope: !3772)
!3772 = distinct !DILexicalBlock(scope: !3769, file: !364, line: 367, column: 9)
!3773 = !DILocation(line: 367, column: 41, scope: !3772)
!3774 = !DILocation(line: 367, column: 29, scope: !3772)
!3775 = !DILocation(line: 367, column: 27, scope: !3772)
!3776 = !DILocation(line: 367, column: 23, scope: !3772)
!3777 = !DILocation(line: 367, column: 9, scope: !3769)
!3778 = !DILocation(line: 368, column: 38, scope: !3779)
!3779 = distinct !DILexicalBlock(scope: !3772, file: !364, line: 367, column: 54)
!3780 = !DILocation(line: 368, column: 33, scope: !3779)
!3781 = !DILocation(line: 368, column: 27, scope: !3779)
!3782 = !DILocation(line: 368, column: 13, scope: !3779)
!3783 = !DILocation(line: 368, column: 31, scope: !3779)
!3784 = !DILocation(line: 369, column: 9, scope: !3779)
!3785 = !DILocation(line: 367, column: 50, scope: !3772)
!3786 = !DILocation(line: 367, column: 9, scope: !3772)
!3787 = distinct !{!3787, !3777, !3788, !816}
!3788 = !DILocation(line: 369, column: 9, scope: !3769)
!3789 = !DILocation(line: 370, column: 5, scope: !3764)
!3790 = !DILocation(line: 365, column: 36, scope: !3760)
!3791 = !DILocation(line: 365, column: 5, scope: !3760)
!3792 = distinct !{!3792, !3762, !3793, !816}
!3793 = !DILocation(line: 370, column: 5, scope: !3757)
!3794 = !DILocation(line: 372, column: 10, scope: !3681)
!3795 = !DILocation(line: 373, column: 5, scope: !3681)
!3796 = !DILocation(line: 373, column: 13, scope: !3797)
!3797 = distinct !DILexicalBlock(scope: !3798, file: !364, line: 373, column: 5)
!3798 = distinct !DILexicalBlock(scope: !3681, file: !364, line: 373, column: 5)
!3799 = !DILocation(line: 373, column: 18, scope: !3797)
!3800 = !DILocation(line: 373, column: 5, scope: !3798)
!3801 = !DILocation(line: 374, column: 27, scope: !3802)
!3802 = distinct !DILexicalBlock(scope: !3797, file: !364, line: 373, column: 37)
!3803 = !DILocation(line: 374, column: 32, scope: !3802)
!3804 = !DILocation(line: 374, column: 19, scope: !3802)
!3805 = !DILocation(line: 374, column: 9, scope: !3802)
!3806 = !DILocation(line: 374, column: 25, scope: !3802)
!3807 = !DILocation(line: 375, column: 16, scope: !3808)
!3808 = distinct !DILexicalBlock(scope: !3802, file: !364, line: 375, column: 9)
!3809 = !DILocation(line: 375, column: 14, scope: !3808)
!3810 = !DILocation(line: 375, column: 21, scope: !3811)
!3811 = distinct !DILexicalBlock(scope: !3808, file: !364, line: 375, column: 9)
!3812 = !DILocation(line: 375, column: 42, scope: !3811)
!3813 = !DILocation(line: 375, column: 30, scope: !3811)
!3814 = !DILocation(line: 375, column: 47, scope: !3811)
!3815 = !DILocation(line: 375, column: 27, scope: !3811)
!3816 = !DILocation(line: 375, column: 23, scope: !3811)
!3817 = !DILocation(line: 375, column: 9, scope: !3808)
!3818 = !DILocation(line: 376, column: 44, scope: !3819)
!3819 = distinct !DILexicalBlock(scope: !3811, file: !364, line: 375, column: 58)
!3820 = !DILocation(line: 376, column: 39, scope: !3819)
!3821 = !DILocation(line: 376, column: 33, scope: !3819)
!3822 = !DILocation(line: 376, column: 27, scope: !3819)
!3823 = !DILocation(line: 376, column: 13, scope: !3819)
!3824 = !DILocation(line: 376, column: 37, scope: !3819)
!3825 = !DILocation(line: 377, column: 9, scope: !3819)
!3826 = !DILocation(line: 375, column: 54, scope: !3811)
!3827 = !DILocation(line: 375, column: 9, scope: !3811)
!3828 = distinct !{!3828, !3817, !3829, !816}
!3829 = !DILocation(line: 377, column: 9, scope: !3808)
!3830 = !DILocation(line: 378, column: 5, scope: !3802)
!3831 = !DILocation(line: 373, column: 33, scope: !3797)
!3832 = !DILocation(line: 373, column: 5, scope: !3797)
!3833 = distinct !{!3833, !3800, !3834, !816}
!3834 = !DILocation(line: 378, column: 5, scope: !3798)
!3835 = !DILocation(line: 382, column: 15, scope: !3836)
!3836 = distinct !DILexicalBlock(scope: !3681, file: !364, line: 382, column: 5)
!3837 = !DILocation(line: 382, column: 10, scope: !3836)
!3838 = !DILocation(line: 382, column: 20, scope: !3839)
!3839 = distinct !DILexicalBlock(scope: !3836, file: !364, line: 382, column: 5)
!3840 = !DILocation(line: 382, column: 25, scope: !3839)
!3841 = !DILocation(line: 382, column: 5, scope: !3836)
!3842 = !DILocation(line: 382, column: 55, scope: !3839)
!3843 = !DILocation(line: 382, column: 46, scope: !3839)
!3844 = !DILocation(line: 382, column: 61, scope: !3839)
!3845 = !DILocation(line: 382, column: 42, scope: !3839)
!3846 = !DILocation(line: 382, column: 5, scope: !3839)
!3847 = distinct !{!3847, !3841, !3848, !816}
!3848 = !DILocation(line: 382, column: 63, scope: !3836)
!3849 = !DILocation(line: 383, column: 7, scope: !3681)
!3850 = !DILocation(line: 384, column: 5, scope: !3681)
!3851 = !DILocation(line: 384, column: 12, scope: !3681)
!3852 = !DILocation(line: 384, column: 14, scope: !3681)
!3853 = !DILocation(line: 384, column: 36, scope: !3681)
!3854 = !DILocation(line: 384, column: 22, scope: !3681)
!3855 = !DILocation(line: 384, column: 40, scope: !3681)
!3856 = !DILocation(line: 384, column: 44, scope: !3681)
!3857 = !DILocation(line: 384, column: 60, scope: !3681)
!3858 = distinct !{!3858, !3850, !3857, !816}
!3859 = !DILocation(line: 385, column: 5, scope: !3681)
!3860 = !DILocation(line: 385, column: 12, scope: !3681)
!3861 = !DILocation(line: 385, column: 14, scope: !3681)
!3862 = !DILocation(line: 385, column: 36, scope: !3681)
!3863 = !DILocation(line: 385, column: 22, scope: !3681)
!3864 = !DILocation(line: 385, column: 40, scope: !3681)
!3865 = !DILocation(line: 385, column: 44, scope: !3681)
!3866 = !DILocation(line: 385, column: 60, scope: !3681)
!3867 = distinct !{!3867, !3859, !3866, !816}
!3868 = !DILocation(line: 386, column: 5, scope: !3681)
!3869 = !DILocation(line: 386, column: 12, scope: !3681)
!3870 = !DILocation(line: 386, column: 14, scope: !3681)
!3871 = !DILocation(line: 386, column: 36, scope: !3681)
!3872 = !DILocation(line: 386, column: 22, scope: !3681)
!3873 = !DILocation(line: 386, column: 40, scope: !3681)
!3874 = !DILocation(line: 386, column: 44, scope: !3681)
!3875 = !DILocation(line: 386, column: 60, scope: !3681)
!3876 = distinct !{!3876, !3868, !3875, !816}
!3877 = !DILocation(line: 387, column: 5, scope: !3681)
!3878 = !DILocation(line: 387, column: 12, scope: !3681)
!3879 = !DILocation(line: 387, column: 14, scope: !3681)
!3880 = !DILocation(line: 387, column: 36, scope: !3681)
!3881 = !DILocation(line: 387, column: 22, scope: !3681)
!3882 = !DILocation(line: 387, column: 40, scope: !3681)
!3883 = !DILocation(line: 387, column: 44, scope: !3681)
!3884 = !DILocation(line: 387, column: 60, scope: !3681)
!3885 = distinct !{!3885, !3877, !3884, !816}
!3886 = !DILocation(line: 392, column: 5, scope: !3681)
!3887 = !DILocation(line: 395, column: 12, scope: !3888)
!3888 = distinct !DILexicalBlock(scope: !3681, file: !364, line: 395, column: 5)
!3889 = !DILocation(line: 395, column: 10, scope: !3888)
!3890 = !DILocation(line: 395, column: 17, scope: !3891)
!3891 = distinct !DILexicalBlock(scope: !3888, file: !364, line: 395, column: 5)
!3892 = !DILocation(line: 395, column: 19, scope: !3891)
!3893 = !DILocation(line: 395, column: 5, scope: !3888)
!3894 = !DILocation(line: 396, column: 22, scope: !3895)
!3895 = distinct !DILexicalBlock(scope: !3891, file: !364, line: 395, column: 35)
!3896 = !DILocation(line: 396, column: 9, scope: !3895)
!3897 = !DILocation(line: 396, column: 25, scope: !3895)
!3898 = !DILocation(line: 396, column: 29, scope: !3895)
!3899 = !DILocation(line: 397, column: 43, scope: !3895)
!3900 = !DILocation(line: 397, column: 32, scope: !3895)
!3901 = !DILocation(line: 397, column: 22, scope: !3895)
!3902 = !DILocation(line: 397, column: 9, scope: !3895)
!3903 = !DILocation(line: 397, column: 25, scope: !3895)
!3904 = !DILocation(line: 397, column: 30, scope: !3895)
!3905 = !DILocation(line: 398, column: 5, scope: !3895)
!3906 = !DILocation(line: 395, column: 31, scope: !3891)
!3907 = !DILocation(line: 395, column: 5, scope: !3891)
!3908 = distinct !{!3908, !3893, !3909, !816}
!3909 = !DILocation(line: 398, column: 5, scope: !3888)
!3910 = !DILocation(line: 401, column: 5, scope: !3681)
!3911 = !DILocation(line: 402, column: 1, scope: !3681)
!3912 = distinct !DISubprogram(name: "gen_codes", scope: !364, file: !364, line: 568, type: !3913, scopeLine: 571, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !363, retainedNodes: !271)
!3913 = !DISubroutineType(types: !3914)
!3914 = !{null, !366, !28}
!3915 = !DILocalVariable(name: "tree", arg: 1, scope: !3912, file: !364, line: 569, type: !366)
!3916 = !DILocation(line: 569, column: 19, scope: !3912)
!3917 = !DILocalVariable(name: "max_code", arg: 2, scope: !3912, file: !364, line: 570, type: !28)
!3918 = !DILocation(line: 570, column: 9, scope: !3912)
!3919 = !DILocalVariable(name: "next_code", scope: !3912, file: !364, line: 572, type: !414)
!3920 = !DILocation(line: 572, column: 9, scope: !3912)
!3921 = !DILocalVariable(name: "code", scope: !3912, file: !364, line: 573, type: !98)
!3922 = !DILocation(line: 573, column: 9, scope: !3912)
!3923 = !DILocalVariable(name: "bits", scope: !3912, file: !364, line: 574, type: !28)
!3924 = !DILocation(line: 574, column: 9, scope: !3912)
!3925 = !DILocalVariable(name: "n", scope: !3912, file: !364, line: 575, type: !28)
!3926 = !DILocation(line: 575, column: 9, scope: !3912)
!3927 = !DILocation(line: 580, column: 15, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !3912, file: !364, line: 580, column: 5)
!3929 = !DILocation(line: 580, column: 10, scope: !3928)
!3930 = !DILocation(line: 580, column: 20, scope: !3931)
!3931 = distinct !DILexicalBlock(scope: !3928, file: !364, line: 580, column: 5)
!3932 = !DILocation(line: 580, column: 25, scope: !3931)
!3933 = !DILocation(line: 580, column: 5, scope: !3928)
!3934 = !DILocation(line: 581, column: 35, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !3931, file: !364, line: 580, column: 46)
!3936 = !DILocation(line: 581, column: 51, scope: !3935)
!3937 = !DILocation(line: 581, column: 55, scope: !3935)
!3938 = !DILocation(line: 581, column: 42, scope: !3935)
!3939 = !DILocation(line: 581, column: 40, scope: !3935)
!3940 = !DILocation(line: 581, column: 60, scope: !3935)
!3941 = !DILocation(line: 581, column: 34, scope: !3935)
!3942 = !DILocation(line: 581, column: 32, scope: !3935)
!3943 = !DILocation(line: 581, column: 19, scope: !3935)
!3944 = !DILocation(line: 581, column: 9, scope: !3935)
!3945 = !DILocation(line: 581, column: 25, scope: !3935)
!3946 = !DILocation(line: 582, column: 5, scope: !3935)
!3947 = !DILocation(line: 580, column: 42, scope: !3931)
!3948 = !DILocation(line: 580, column: 5, scope: !3931)
!3949 = distinct !{!3949, !3933, !3950, !816}
!3950 = !DILocation(line: 582, column: 5, scope: !3928)
!3951 = !DILocation(line: 590, column: 12, scope: !3952)
!3952 = distinct !DILexicalBlock(scope: !3912, file: !364, line: 590, column: 5)
!3953 = !DILocation(line: 590, column: 10, scope: !3952)
!3954 = !DILocation(line: 590, column: 18, scope: !3955)
!3955 = distinct !DILexicalBlock(scope: !3952, file: !364, line: 590, column: 5)
!3956 = !DILocation(line: 590, column: 23, scope: !3955)
!3957 = !DILocation(line: 590, column: 20, scope: !3955)
!3958 = !DILocation(line: 590, column: 5, scope: !3952)
!3959 = !DILocalVariable(name: "len", scope: !3960, file: !364, line: 591, type: !28)
!3960 = distinct !DILexicalBlock(scope: !3955, file: !364, line: 590, column: 38)
!3961 = !DILocation(line: 591, column: 13, scope: !3960)
!3962 = !DILocation(line: 591, column: 19, scope: !3960)
!3963 = !DILocation(line: 591, column: 24, scope: !3960)
!3964 = !DILocation(line: 591, column: 27, scope: !3960)
!3965 = !DILocation(line: 592, column: 13, scope: !3966)
!3966 = distinct !DILexicalBlock(scope: !3960, file: !364, line: 592, column: 13)
!3967 = !DILocation(line: 592, column: 17, scope: !3966)
!3968 = !DILocation(line: 592, column: 13, scope: !3960)
!3969 = !DILocation(line: 592, column: 23, scope: !3966)
!3970 = !DILocation(line: 594, column: 45, scope: !3960)
!3971 = !DILocation(line: 594, column: 35, scope: !3960)
!3972 = !DILocation(line: 594, column: 49, scope: !3960)
!3973 = !DILocation(line: 594, column: 53, scope: !3960)
!3974 = !DILocation(line: 594, column: 24, scope: !3960)
!3975 = !DILocation(line: 594, column: 9, scope: !3960)
!3976 = !DILocation(line: 594, column: 14, scope: !3960)
!3977 = !DILocation(line: 594, column: 17, scope: !3960)
!3978 = !DILocation(line: 594, column: 22, scope: !3960)
!3979 = !DILocation(line: 598, column: 5, scope: !3960)
!3980 = !DILocation(line: 590, column: 34, scope: !3955)
!3981 = !DILocation(line: 590, column: 5, scope: !3955)
!3982 = distinct !{!3982, !3958, !3983, !816}
!3983 = !DILocation(line: 598, column: 5, scope: !3952)
!3984 = !DILocation(line: 599, column: 1, scope: !3912)
!3985 = distinct !DISubprogram(name: "init_block", scope: !364, file: !364, line: 407, type: !269, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !363, retainedNodes: !271)
!3986 = !DILocalVariable(name: "n", scope: !3985, file: !364, line: 409, type: !28)
!3987 = !DILocation(line: 409, column: 9, scope: !3985)
!3988 = !DILocation(line: 412, column: 12, scope: !3989)
!3989 = distinct !DILexicalBlock(scope: !3985, file: !364, line: 412, column: 5)
!3990 = !DILocation(line: 412, column: 10, scope: !3989)
!3991 = !DILocation(line: 412, column: 17, scope: !3992)
!3992 = distinct !DILexicalBlock(scope: !3989, file: !364, line: 412, column: 5)
!3993 = !DILocation(line: 412, column: 19, scope: !3992)
!3994 = !DILocation(line: 412, column: 5, scope: !3989)
!3995 = !DILocation(line: 412, column: 46, scope: !3992)
!3996 = !DILocation(line: 412, column: 36, scope: !3992)
!3997 = !DILocation(line: 412, column: 49, scope: !3992)
!3998 = !DILocation(line: 412, column: 54, scope: !3992)
!3999 = !DILocation(line: 412, column: 32, scope: !3992)
!4000 = !DILocation(line: 412, column: 5, scope: !3992)
!4001 = distinct !{!4001, !3994, !4002, !816}
!4002 = !DILocation(line: 412, column: 56, scope: !3989)
!4003 = !DILocation(line: 413, column: 12, scope: !4004)
!4004 = distinct !DILexicalBlock(scope: !3985, file: !364, line: 413, column: 5)
!4005 = !DILocation(line: 413, column: 10, scope: !4004)
!4006 = !DILocation(line: 413, column: 17, scope: !4007)
!4007 = distinct !DILexicalBlock(scope: !4004, file: !364, line: 413, column: 5)
!4008 = !DILocation(line: 413, column: 19, scope: !4007)
!4009 = !DILocation(line: 413, column: 5, scope: !4004)
!4010 = !DILocation(line: 413, column: 46, scope: !4007)
!4011 = !DILocation(line: 413, column: 36, scope: !4007)
!4012 = !DILocation(line: 413, column: 49, scope: !4007)
!4013 = !DILocation(line: 413, column: 54, scope: !4007)
!4014 = !DILocation(line: 413, column: 32, scope: !4007)
!4015 = !DILocation(line: 413, column: 5, scope: !4007)
!4016 = distinct !{!4016, !4009, !4017, !816}
!4017 = !DILocation(line: 413, column: 56, scope: !4004)
!4018 = !DILocation(line: 414, column: 12, scope: !4019)
!4019 = distinct !DILexicalBlock(scope: !3985, file: !364, line: 414, column: 5)
!4020 = !DILocation(line: 414, column: 10, scope: !4019)
!4021 = !DILocation(line: 414, column: 17, scope: !4022)
!4022 = distinct !DILexicalBlock(scope: !4019, file: !364, line: 414, column: 5)
!4023 = !DILocation(line: 414, column: 19, scope: !4022)
!4024 = !DILocation(line: 414, column: 5, scope: !4019)
!4025 = !DILocation(line: 414, column: 44, scope: !4022)
!4026 = !DILocation(line: 414, column: 36, scope: !4022)
!4027 = !DILocation(line: 414, column: 47, scope: !4022)
!4028 = !DILocation(line: 414, column: 52, scope: !4022)
!4029 = !DILocation(line: 414, column: 32, scope: !4022)
!4030 = !DILocation(line: 414, column: 5, scope: !4022)
!4031 = distinct !{!4031, !4024, !4032, !816}
!4032 = !DILocation(line: 414, column: 54, scope: !4019)
!4033 = !DILocation(line: 416, column: 31, scope: !3985)
!4034 = !DILocation(line: 417, column: 26, scope: !3985)
!4035 = !DILocation(line: 417, column: 13, scope: !3985)
!4036 = !DILocation(line: 418, column: 39, scope: !3985)
!4037 = !DILocation(line: 418, column: 26, scope: !3985)
!4038 = !DILocation(line: 418, column: 14, scope: !3985)
!4039 = !DILocation(line: 419, column: 11, scope: !3985)
!4040 = !DILocation(line: 419, column: 25, scope: !3985)
!4041 = !DILocation(line: 420, column: 1, scope: !3985)
!4042 = distinct !DISubprogram(name: "flush_block", scope: !364, file: !364, line: 853, type: !4043, scopeLine: 857, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !363, retainedNodes: !271)
!4043 = !DISubroutineType(types: !4044)
!4044 = !{!95, !39, !95, !28}
!4045 = !DILocalVariable(name: "buf", arg: 1, scope: !4042, file: !364, line: 854, type: !39)
!4046 = !DILocation(line: 854, column: 11, scope: !4042)
!4047 = !DILocalVariable(name: "stored_len", arg: 2, scope: !4042, file: !364, line: 855, type: !95)
!4048 = !DILocation(line: 855, column: 9, scope: !4042)
!4049 = !DILocalVariable(name: "eof", arg: 3, scope: !4042, file: !364, line: 856, type: !28)
!4050 = !DILocation(line: 856, column: 9, scope: !4042)
!4051 = !DILocalVariable(name: "opt_lenb", scope: !4042, file: !364, line: 858, type: !95)
!4052 = !DILocation(line: 858, column: 9, scope: !4042)
!4053 = !DILocalVariable(name: "static_lenb", scope: !4042, file: !364, line: 858, type: !95)
!4054 = !DILocation(line: 858, column: 19, scope: !4042)
!4055 = !DILocalVariable(name: "max_blindex", scope: !4042, file: !364, line: 859, type: !28)
!4056 = !DILocation(line: 859, column: 9, scope: !4042)
!4057 = !DILocation(line: 861, column: 28, scope: !4042)
!4058 = !DILocation(line: 861, column: 14, scope: !4042)
!4059 = !DILocation(line: 861, column: 5, scope: !4042)
!4060 = !DILocation(line: 861, column: 26, scope: !4042)
!4061 = !DILocation(line: 864, column: 10, scope: !4062)
!4062 = distinct !DILexicalBlock(scope: !4042, file: !364, line: 864, column: 9)
!4063 = !DILocation(line: 864, column: 9, scope: !4062)
!4064 = !DILocation(line: 864, column: 20, scope: !4062)
!4065 = !DILocation(line: 864, column: 9, scope: !4042)
!4066 = !DILocation(line: 864, column: 37, scope: !4062)
!4067 = !DILocation(line: 867, column: 5, scope: !4042)
!4068 = !DILocation(line: 870, column: 5, scope: !4042)
!4069 = !DILocation(line: 879, column: 19, scope: !4042)
!4070 = !DILocation(line: 879, column: 17, scope: !4042)
!4071 = !DILocation(line: 882, column: 17, scope: !4042)
!4072 = !DILocation(line: 882, column: 24, scope: !4042)
!4073 = !DILocation(line: 882, column: 26, scope: !4042)
!4074 = !DILocation(line: 882, column: 29, scope: !4042)
!4075 = !DILocation(line: 882, column: 14, scope: !4042)
!4076 = !DILocation(line: 883, column: 20, scope: !4042)
!4077 = !DILocation(line: 883, column: 30, scope: !4042)
!4078 = !DILocation(line: 883, column: 32, scope: !4042)
!4079 = !DILocation(line: 883, column: 35, scope: !4042)
!4080 = !DILocation(line: 883, column: 17, scope: !4042)
!4081 = !DILocation(line: 884, column: 18, scope: !4042)
!4082 = !DILocation(line: 884, column: 15, scope: !4042)
!4083 = !DILocation(line: 890, column: 9, scope: !4084)
!4084 = distinct !DILexicalBlock(scope: !4042, file: !364, line: 890, column: 9)
!4085 = !DILocation(line: 890, column: 24, scope: !4084)
!4086 = !DILocation(line: 890, column: 21, scope: !4084)
!4087 = !DILocation(line: 890, column: 9, scope: !4042)
!4088 = !DILocation(line: 890, column: 45, scope: !4084)
!4089 = !DILocation(line: 890, column: 43, scope: !4084)
!4090 = !DILocation(line: 890, column: 34, scope: !4084)
!4091 = !DILocation(line: 899, column: 9, scope: !4092)
!4092 = distinct !DILexicalBlock(scope: !4042, file: !364, line: 899, column: 9)
!4093 = !DILocation(line: 899, column: 23, scope: !4092)
!4094 = !DILocation(line: 899, column: 20, scope: !4092)
!4095 = !DILocation(line: 899, column: 32, scope: !4092)
!4096 = !DILocation(line: 899, column: 35, scope: !4092)
!4097 = !DILocation(line: 899, column: 39, scope: !4092)
!4098 = !DILocation(line: 899, column: 42, scope: !4092)
!4099 = !DILocation(line: 899, column: 57, scope: !4092)
!4100 = !DILocation(line: 899, column: 63, scope: !4092)
!4101 = !DILocation(line: 899, column: 9, scope: !4042)
!4102 = !DILocation(line: 902, column: 13, scope: !4103)
!4103 = distinct !DILexicalBlock(scope: !4104, file: !364, line: 902, column: 13)
!4104 = distinct !DILexicalBlock(scope: !4092, file: !364, line: 899, column: 78)
!4105 = !DILocation(line: 902, column: 17, scope: !4103)
!4106 = !DILocation(line: 902, column: 13, scope: !4104)
!4107 = !DILocation(line: 902, column: 30, scope: !4103)
!4108 = !DILocation(line: 904, column: 20, scope: !4104)
!4109 = !DILocation(line: 904, column: 35, scope: !4104)
!4110 = !DILocation(line: 904, column: 25, scope: !4104)
!4111 = !DILocation(line: 904, column: 9, scope: !4104)
!4112 = !DILocation(line: 905, column: 26, scope: !4104)
!4113 = !DILocation(line: 905, column: 37, scope: !4104)
!4114 = !DILocation(line: 905, column: 24, scope: !4104)
!4115 = !DILocation(line: 906, column: 10, scope: !4104)
!4116 = !DILocation(line: 906, column: 22, scope: !4104)
!4117 = !DILocation(line: 911, column: 5, scope: !4104)
!4118 = !DILocation(line: 911, column: 16, scope: !4119)
!4119 = distinct !DILexicalBlock(scope: !4092, file: !364, line: 911, column: 16)
!4120 = !DILocation(line: 911, column: 26, scope: !4119)
!4121 = !DILocation(line: 911, column: 32, scope: !4119)
!4122 = !DILocation(line: 911, column: 29, scope: !4119)
!4123 = !DILocation(line: 911, column: 41, scope: !4119)
!4124 = !DILocation(line: 911, column: 44, scope: !4119)
!4125 = !DILocation(line: 911, column: 48, scope: !4119)
!4126 = !DILocation(line: 911, column: 16, scope: !4092)
!4127 = !DILocation(line: 920, column: 37, scope: !4128)
!4128 = distinct !DILexicalBlock(scope: !4119, file: !364, line: 911, column: 61)
!4129 = !DILocation(line: 920, column: 36, scope: !4128)
!4130 = !DILocation(line: 920, column: 9, scope: !4128)
!4131 = !DILocation(line: 921, column: 27, scope: !4128)
!4132 = !DILocation(line: 921, column: 42, scope: !4128)
!4133 = !DILocation(line: 921, column: 46, scope: !4128)
!4134 = !DILocation(line: 921, column: 51, scope: !4128)
!4135 = !DILocation(line: 921, column: 24, scope: !4128)
!4136 = !DILocation(line: 922, column: 28, scope: !4128)
!4137 = !DILocation(line: 922, column: 39, scope: !4128)
!4138 = !DILocation(line: 922, column: 44, scope: !4128)
!4139 = !DILocation(line: 922, column: 24, scope: !4128)
!4140 = !DILocation(line: 924, column: 20, scope: !4128)
!4141 = !DILocation(line: 924, column: 35, scope: !4128)
!4142 = !DILocation(line: 924, column: 25, scope: !4128)
!4143 = !DILocation(line: 924, column: 9, scope: !4128)
!4144 = !DILocation(line: 929, column: 5, scope: !4128)
!4145 = !DILocation(line: 929, column: 16, scope: !4146)
!4146 = distinct !DILexicalBlock(scope: !4119, file: !364, line: 929, column: 16)
!4147 = !DILocation(line: 929, column: 31, scope: !4146)
!4148 = !DILocation(line: 929, column: 28, scope: !4146)
!4149 = !DILocation(line: 929, column: 16, scope: !4119)
!4150 = !DILocation(line: 931, column: 37, scope: !4151)
!4151 = distinct !DILexicalBlock(scope: !4146, file: !364, line: 929, column: 41)
!4152 = !DILocation(line: 931, column: 36, scope: !4151)
!4153 = !DILocation(line: 931, column: 9, scope: !4151)
!4154 = !DILocation(line: 932, column: 9, scope: !4151)
!4155 = !DILocation(line: 933, column: 31, scope: !4151)
!4156 = !DILocation(line: 933, column: 29, scope: !4151)
!4157 = !DILocation(line: 933, column: 24, scope: !4151)
!4158 = !DILocation(line: 934, column: 5, scope: !4151)
!4159 = !DILocation(line: 935, column: 34, scope: !4160)
!4160 = distinct !DILexicalBlock(scope: !4146, file: !364, line: 934, column: 12)
!4161 = !DILocation(line: 935, column: 33, scope: !4160)
!4162 = !DILocation(line: 935, column: 9, scope: !4160)
!4163 = !DILocation(line: 936, column: 31, scope: !4160)
!4164 = !DILocation(line: 936, column: 39, scope: !4160)
!4165 = !DILocation(line: 936, column: 50, scope: !4160)
!4166 = !DILocation(line: 936, column: 58, scope: !4160)
!4167 = !DILocation(line: 936, column: 62, scope: !4160)
!4168 = !DILocation(line: 936, column: 73, scope: !4160)
!4169 = !DILocation(line: 936, column: 9, scope: !4160)
!4170 = !DILocation(line: 937, column: 9, scope: !4160)
!4171 = !DILocation(line: 938, column: 31, scope: !4160)
!4172 = !DILocation(line: 938, column: 29, scope: !4160)
!4173 = !DILocation(line: 938, column: 24, scope: !4160)
!4174 = !DILocation(line: 941, column: 5, scope: !4042)
!4175 = !DILocation(line: 943, column: 9, scope: !4176)
!4176 = distinct !DILexicalBlock(scope: !4042, file: !364, line: 943, column: 9)
!4177 = !DILocation(line: 943, column: 9, scope: !4042)
!4178 = !DILocation(line: 945, column: 9, scope: !4179)
!4179 = distinct !DILexicalBlock(scope: !4176, file: !364, line: 943, column: 14)
!4180 = !DILocation(line: 946, column: 24, scope: !4179)
!4181 = !DILocation(line: 947, column: 5, scope: !4179)
!4182 = !DILocation(line: 951, column: 12, scope: !4042)
!4183 = !DILocation(line: 951, column: 27, scope: !4042)
!4184 = !DILocation(line: 951, column: 5, scope: !4042)
!4185 = distinct !DISubprogram(name: "set_file_type", scope: !364, file: !364, line: 1063, type: !269, scopeLine: 1064, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !363, retainedNodes: !271)
!4186 = !DILocalVariable(name: "n", scope: !4185, file: !364, line: 1065, type: !28)
!4187 = !DILocation(line: 1065, column: 9, scope: !4185)
!4188 = !DILocalVariable(name: "ascii_freq", scope: !4185, file: !364, line: 1066, type: !7)
!4189 = !DILocation(line: 1066, column: 14, scope: !4185)
!4190 = !DILocalVariable(name: "bin_freq", scope: !4185, file: !364, line: 1067, type: !7)
!4191 = !DILocation(line: 1067, column: 14, scope: !4185)
!4192 = !DILocation(line: 1068, column: 5, scope: !4185)
!4193 = !DILocation(line: 1068, column: 12, scope: !4185)
!4194 = !DILocation(line: 1068, column: 14, scope: !4185)
!4195 = !DILocation(line: 1068, column: 49, scope: !4185)
!4196 = !DILocation(line: 1068, column: 38, scope: !4185)
!4197 = !DILocation(line: 1068, column: 53, scope: !4185)
!4198 = !DILocation(line: 1068, column: 35, scope: !4185)
!4199 = distinct !{!4199, !4192, !4197, !816}
!4200 = !DILocation(line: 1069, column: 5, scope: !4185)
!4201 = !DILocation(line: 1069, column: 12, scope: !4185)
!4202 = !DILocation(line: 1069, column: 14, scope: !4185)
!4203 = !DILocation(line: 1069, column: 49, scope: !4185)
!4204 = !DILocation(line: 1069, column: 38, scope: !4185)
!4205 = !DILocation(line: 1069, column: 53, scope: !4185)
!4206 = !DILocation(line: 1069, column: 35, scope: !4185)
!4207 = distinct !{!4207, !4200, !4205, !816}
!4208 = !DILocation(line: 1070, column: 5, scope: !4185)
!4209 = !DILocation(line: 1070, column: 12, scope: !4185)
!4210 = !DILocation(line: 1070, column: 14, scope: !4185)
!4211 = !DILocation(line: 1070, column: 49, scope: !4185)
!4212 = !DILocation(line: 1070, column: 38, scope: !4185)
!4213 = !DILocation(line: 1070, column: 53, scope: !4185)
!4214 = !DILocation(line: 1070, column: 35, scope: !4185)
!4215 = distinct !{!4215, !4208, !4213, !816}
!4216 = !DILocation(line: 1071, column: 18, scope: !4185)
!4217 = !DILocation(line: 1071, column: 30, scope: !4185)
!4218 = !DILocation(line: 1071, column: 41, scope: !4185)
!4219 = !DILocation(line: 1071, column: 27, scope: !4185)
!4220 = !DILocation(line: 1071, column: 6, scope: !4185)
!4221 = !DILocation(line: 1071, column: 16, scope: !4185)
!4222 = !DILocation(line: 1072, column: 10, scope: !4223)
!4223 = distinct !DILexicalBlock(scope: !4185, file: !364, line: 1072, column: 9)
!4224 = !DILocation(line: 1072, column: 9, scope: !4223)
!4225 = !DILocation(line: 1072, column: 20, scope: !4223)
!4226 = !DILocation(line: 1072, column: 30, scope: !4223)
!4227 = !DILocation(line: 1072, column: 9, scope: !4185)
!4228 = !DILocation(line: 1073, column: 9, scope: !4229)
!4229 = distinct !DILexicalBlock(scope: !4223, file: !364, line: 1072, column: 48)
!4230 = !DILocation(line: 1074, column: 5, scope: !4229)
!4231 = !DILocation(line: 1075, column: 1, scope: !4185)
!4232 = distinct !DISubprogram(name: "build_tree", scope: !364, file: !364, line: 609, type: !4233, scopeLine: 611, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !363, retainedNodes: !271)
!4233 = !DISubroutineType(types: !4234)
!4234 = !{null, !380}
!4235 = !DILocalVariable(name: "desc", arg: 1, scope: !4232, file: !364, line: 610, type: !380)
!4236 = !DILocation(line: 610, column: 21, scope: !4232)
!4237 = !DILocalVariable(name: "tree", scope: !4232, file: !364, line: 612, type: !366)
!4238 = !DILocation(line: 612, column: 19, scope: !4232)
!4239 = !DILocation(line: 612, column: 28, scope: !4232)
!4240 = !DILocation(line: 612, column: 34, scope: !4232)
!4241 = !DILocalVariable(name: "stree", scope: !4232, file: !364, line: 613, type: !366)
!4242 = !DILocation(line: 613, column: 19, scope: !4232)
!4243 = !DILocation(line: 613, column: 28, scope: !4232)
!4244 = !DILocation(line: 613, column: 34, scope: !4232)
!4245 = !DILocalVariable(name: "elems", scope: !4232, file: !364, line: 614, type: !28)
!4246 = !DILocation(line: 614, column: 9, scope: !4232)
!4247 = !DILocation(line: 614, column: 28, scope: !4232)
!4248 = !DILocation(line: 614, column: 34, scope: !4232)
!4249 = !DILocalVariable(name: "n", scope: !4232, file: !364, line: 615, type: !28)
!4250 = !DILocation(line: 615, column: 9, scope: !4232)
!4251 = !DILocalVariable(name: "m", scope: !4232, file: !364, line: 615, type: !28)
!4252 = !DILocation(line: 615, column: 12, scope: !4232)
!4253 = !DILocalVariable(name: "max_code", scope: !4232, file: !364, line: 616, type: !28)
!4254 = !DILocation(line: 616, column: 9, scope: !4232)
!4255 = !DILocalVariable(name: "node", scope: !4232, file: !364, line: 617, type: !28)
!4256 = !DILocation(line: 617, column: 9, scope: !4232)
!4257 = !DILocation(line: 617, column: 16, scope: !4232)
!4258 = !DILocation(line: 623, column: 14, scope: !4232)
!4259 = !DILocation(line: 623, column: 28, scope: !4232)
!4260 = !DILocation(line: 625, column: 12, scope: !4261)
!4261 = distinct !DILexicalBlock(scope: !4232, file: !364, line: 625, column: 5)
!4262 = !DILocation(line: 625, column: 10, scope: !4261)
!4263 = !DILocation(line: 625, column: 17, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !4261, file: !364, line: 625, column: 5)
!4265 = !DILocation(line: 625, column: 21, scope: !4264)
!4266 = !DILocation(line: 625, column: 19, scope: !4264)
!4267 = !DILocation(line: 625, column: 5, scope: !4261)
!4268 = !DILocation(line: 626, column: 13, scope: !4269)
!4269 = distinct !DILexicalBlock(scope: !4270, file: !364, line: 626, column: 13)
!4270 = distinct !DILexicalBlock(scope: !4264, file: !364, line: 625, column: 33)
!4271 = !DILocation(line: 626, column: 18, scope: !4269)
!4272 = !DILocation(line: 626, column: 21, scope: !4269)
!4273 = !DILocation(line: 626, column: 26, scope: !4269)
!4274 = !DILocation(line: 626, column: 13, scope: !4270)
!4275 = !DILocation(line: 627, column: 43, scope: !4276)
!4276 = distinct !DILexicalBlock(scope: !4269, file: !364, line: 626, column: 32)
!4277 = !DILocation(line: 627, column: 41, scope: !4276)
!4278 = !DILocation(line: 627, column: 18, scope: !4276)
!4279 = !DILocation(line: 627, column: 13, scope: !4276)
!4280 = !DILocation(line: 627, column: 30, scope: !4276)
!4281 = !DILocation(line: 628, column: 19, scope: !4276)
!4282 = !DILocation(line: 628, column: 13, scope: !4276)
!4283 = !DILocation(line: 628, column: 22, scope: !4276)
!4284 = !DILocation(line: 629, column: 9, scope: !4276)
!4285 = !DILocation(line: 630, column: 13, scope: !4286)
!4286 = distinct !DILexicalBlock(scope: !4269, file: !364, line: 629, column: 16)
!4287 = !DILocation(line: 630, column: 18, scope: !4286)
!4288 = !DILocation(line: 630, column: 21, scope: !4286)
!4289 = !DILocation(line: 630, column: 25, scope: !4286)
!4290 = !DILocation(line: 632, column: 5, scope: !4270)
!4291 = !DILocation(line: 625, column: 29, scope: !4264)
!4292 = !DILocation(line: 625, column: 5, scope: !4264)
!4293 = distinct !{!4293, !4267, !4294, !816}
!4294 = !DILocation(line: 632, column: 5, scope: !4261)
!4295 = !DILocation(line: 639, column: 5, scope: !4232)
!4296 = !DILocation(line: 639, column: 12, scope: !4232)
!4297 = !DILocation(line: 639, column: 21, scope: !4232)
!4298 = !DILocalVariable(name: "new", scope: !4299, file: !364, line: 640, type: !28)
!4299 = distinct !DILexicalBlock(scope: !4232, file: !364, line: 639, column: 26)
!4300 = !DILocation(line: 640, column: 13, scope: !4299)
!4301 = !DILocation(line: 640, column: 39, scope: !4299)
!4302 = !DILocation(line: 640, column: 48, scope: !4299)
!4303 = !DILocation(line: 640, column: 54, scope: !4299)
!4304 = !DILocation(line: 640, column: 24, scope: !4299)
!4305 = !DILocation(line: 640, column: 19, scope: !4299)
!4306 = !DILocation(line: 640, column: 36, scope: !4299)
!4307 = !DILocation(line: 641, column: 9, scope: !4299)
!4308 = !DILocation(line: 641, column: 14, scope: !4299)
!4309 = !DILocation(line: 641, column: 19, scope: !4299)
!4310 = !DILocation(line: 641, column: 24, scope: !4299)
!4311 = !DILocation(line: 642, column: 15, scope: !4299)
!4312 = !DILocation(line: 642, column: 9, scope: !4299)
!4313 = !DILocation(line: 642, column: 20, scope: !4299)
!4314 = !DILocation(line: 643, column: 16, scope: !4299)
!4315 = !DILocation(line: 643, column: 24, scope: !4316)
!4316 = distinct !DILexicalBlock(scope: !4299, file: !364, line: 643, column: 24)
!4317 = !DILocation(line: 643, column: 24, scope: !4299)
!4318 = !DILocation(line: 643, column: 45, scope: !4316)
!4319 = !DILocation(line: 643, column: 51, scope: !4316)
!4320 = !DILocation(line: 643, column: 56, scope: !4316)
!4321 = !DILocation(line: 643, column: 42, scope: !4316)
!4322 = !DILocation(line: 643, column: 31, scope: !4316)
!4323 = distinct !{!4323, !4295, !4324, !816}
!4324 = !DILocation(line: 645, column: 5, scope: !4232)
!4325 = !DILocation(line: 646, column: 22, scope: !4232)
!4326 = !DILocation(line: 646, column: 5, scope: !4232)
!4327 = !DILocation(line: 646, column: 11, scope: !4232)
!4328 = !DILocation(line: 646, column: 20, scope: !4232)
!4329 = !DILocation(line: 651, column: 14, scope: !4330)
!4330 = distinct !DILexicalBlock(scope: !4232, file: !364, line: 651, column: 5)
!4331 = !DILocation(line: 651, column: 22, scope: !4330)
!4332 = !DILocation(line: 651, column: 12, scope: !4330)
!4333 = !DILocation(line: 651, column: 10, scope: !4330)
!4334 = !DILocation(line: 651, column: 26, scope: !4335)
!4335 = distinct !DILexicalBlock(scope: !4330, file: !364, line: 651, column: 5)
!4336 = !DILocation(line: 651, column: 28, scope: !4335)
!4337 = !DILocation(line: 651, column: 5, scope: !4330)
!4338 = !DILocation(line: 651, column: 50, scope: !4335)
!4339 = !DILocation(line: 651, column: 56, scope: !4335)
!4340 = !DILocation(line: 651, column: 39, scope: !4335)
!4341 = !DILocation(line: 651, column: 35, scope: !4335)
!4342 = !DILocation(line: 651, column: 5, scope: !4335)
!4343 = distinct !{!4343, !4337, !4344, !816}
!4344 = !DILocation(line: 651, column: 57, scope: !4330)
!4345 = !DILocation(line: 656, column: 5, scope: !4232)
!4346 = !DILocation(line: 657, column: 9, scope: !4347)
!4347 = distinct !DILexicalBlock(scope: !4348, file: !364, line: 657, column: 9)
!4348 = distinct !DILexicalBlock(scope: !4232, file: !364, line: 656, column: 8)
!4349 = !DILocation(line: 658, column: 13, scope: !4348)
!4350 = !DILocation(line: 658, column: 11, scope: !4348)
!4351 = !DILocation(line: 660, column: 28, scope: !4348)
!4352 = !DILocation(line: 660, column: 14, scope: !4348)
!4353 = !DILocation(line: 660, column: 9, scope: !4348)
!4354 = !DILocation(line: 660, column: 26, scope: !4348)
!4355 = !DILocation(line: 661, column: 28, scope: !4348)
!4356 = !DILocation(line: 661, column: 14, scope: !4348)
!4357 = !DILocation(line: 661, column: 9, scope: !4348)
!4358 = !DILocation(line: 661, column: 26, scope: !4348)
!4359 = !DILocation(line: 664, column: 27, scope: !4348)
!4360 = !DILocation(line: 664, column: 32, scope: !4348)
!4361 = !DILocation(line: 664, column: 35, scope: !4348)
!4362 = !DILocation(line: 664, column: 42, scope: !4348)
!4363 = !DILocation(line: 664, column: 47, scope: !4348)
!4364 = !DILocation(line: 664, column: 50, scope: !4348)
!4365 = !DILocation(line: 664, column: 40, scope: !4348)
!4366 = !DILocation(line: 664, column: 9, scope: !4348)
!4367 = !DILocation(line: 664, column: 14, scope: !4348)
!4368 = !DILocation(line: 664, column: 20, scope: !4348)
!4369 = !DILocation(line: 664, column: 25, scope: !4348)
!4370 = !DILocation(line: 665, column: 30, scope: !4348)
!4371 = !DILocation(line: 665, column: 54, scope: !4348)
!4372 = !DILocation(line: 665, column: 23, scope: !4348)
!4373 = !DILocation(line: 665, column: 15, scope: !4348)
!4374 = !DILocation(line: 665, column: 9, scope: !4348)
!4375 = !DILocation(line: 665, column: 21, scope: !4348)
!4376 = !DILocation(line: 666, column: 42, scope: !4348)
!4377 = !DILocation(line: 666, column: 37, scope: !4348)
!4378 = !DILocation(line: 666, column: 23, scope: !4348)
!4379 = !DILocation(line: 666, column: 28, scope: !4348)
!4380 = !DILocation(line: 666, column: 31, scope: !4348)
!4381 = !DILocation(line: 666, column: 35, scope: !4348)
!4382 = !DILocation(line: 666, column: 9, scope: !4348)
!4383 = !DILocation(line: 666, column: 14, scope: !4348)
!4384 = !DILocation(line: 666, column: 17, scope: !4348)
!4385 = !DILocation(line: 666, column: 21, scope: !4348)
!4386 = !DILocation(line: 674, column: 30, scope: !4348)
!4387 = !DILocation(line: 674, column: 24, scope: !4348)
!4388 = !DILocation(line: 675, column: 20, scope: !4348)
!4389 = !DILocation(line: 675, column: 9, scope: !4348)
!4390 = !DILocation(line: 677, column: 5, scope: !4348)
!4391 = !DILocation(line: 677, column: 14, scope: !4232)
!4392 = !DILocation(line: 677, column: 23, scope: !4232)
!4393 = distinct !{!4393, !4345, !4394, !816}
!4394 = !DILocation(line: 677, column: 27, scope: !4232)
!4395 = !DILocation(line: 679, column: 24, scope: !4232)
!4396 = !DILocation(line: 679, column: 10, scope: !4232)
!4397 = !DILocation(line: 679, column: 5, scope: !4232)
!4398 = !DILocation(line: 679, column: 22, scope: !4232)
!4399 = !DILocation(line: 684, column: 34, scope: !4232)
!4400 = !DILocation(line: 684, column: 5, scope: !4232)
!4401 = !DILocation(line: 687, column: 32, scope: !4232)
!4402 = !DILocation(line: 687, column: 38, scope: !4232)
!4403 = !DILocation(line: 687, column: 5, scope: !4232)
!4404 = !DILocation(line: 688, column: 1, scope: !4232)
!4405 = distinct !DISubprogram(name: "build_bl_tree", scope: !364, file: !364, line: 790, type: !2204, scopeLine: 791, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !363, retainedNodes: !271)
!4406 = !DILocalVariable(name: "max_blindex", scope: !4405, file: !364, line: 792, type: !28)
!4407 = !DILocation(line: 792, column: 9, scope: !4405)
!4408 = !DILocation(line: 795, column: 49, scope: !4405)
!4409 = !DILocation(line: 795, column: 5, scope: !4405)
!4410 = !DILocation(line: 796, column: 49, scope: !4405)
!4411 = !DILocation(line: 796, column: 5, scope: !4405)
!4412 = !DILocation(line: 799, column: 5, scope: !4405)
!4413 = !DILocation(line: 808, column: 22, scope: !4414)
!4414 = distinct !DILexicalBlock(scope: !4405, file: !364, line: 808, column: 5)
!4415 = !DILocation(line: 808, column: 10, scope: !4414)
!4416 = !DILocation(line: 808, column: 36, scope: !4417)
!4417 = distinct !DILexicalBlock(scope: !4414, file: !364, line: 808, column: 5)
!4418 = !DILocation(line: 808, column: 48, scope: !4417)
!4419 = !DILocation(line: 808, column: 5, scope: !4414)
!4420 = !DILocation(line: 809, column: 30, scope: !4421)
!4421 = distinct !DILexicalBlock(scope: !4422, file: !364, line: 809, column: 13)
!4422 = distinct !DILexicalBlock(scope: !4417, file: !364, line: 808, column: 69)
!4423 = !DILocation(line: 809, column: 21, scope: !4421)
!4424 = !DILocation(line: 809, column: 13, scope: !4421)
!4425 = !DILocation(line: 809, column: 44, scope: !4421)
!4426 = !DILocation(line: 809, column: 48, scope: !4421)
!4427 = !DILocation(line: 809, column: 13, scope: !4422)
!4428 = !DILocation(line: 809, column: 54, scope: !4421)
!4429 = !DILocation(line: 810, column: 5, scope: !4422)
!4430 = !DILocation(line: 808, column: 65, scope: !4417)
!4431 = !DILocation(line: 808, column: 5, scope: !4417)
!4432 = distinct !{!4432, !4419, !4433, !816}
!4433 = !DILocation(line: 810, column: 5, scope: !4414)
!4434 = !DILocation(line: 812, column: 19, scope: !4405)
!4435 = !DILocation(line: 812, column: 30, scope: !4405)
!4436 = !DILocation(line: 812, column: 17, scope: !4405)
!4437 = !DILocation(line: 812, column: 34, scope: !4405)
!4438 = !DILocation(line: 812, column: 37, scope: !4405)
!4439 = !DILocation(line: 812, column: 39, scope: !4405)
!4440 = !DILocation(line: 812, column: 16, scope: !4405)
!4441 = !DILocation(line: 812, column: 13, scope: !4405)
!4442 = !DILocation(line: 815, column: 12, scope: !4405)
!4443 = !DILocation(line: 815, column: 5, scope: !4405)
!4444 = distinct !DISubprogram(name: "compress_block", scope: !364, file: !364, line: 1011, type: !4445, scopeLine: 1014, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !363, retainedNodes: !271)
!4445 = !DISubroutineType(types: !4446)
!4446 = !{null, !366, !366}
!4447 = !DILocalVariable(name: "ltree", arg: 1, scope: !4444, file: !364, line: 1012, type: !366)
!4448 = !DILocation(line: 1012, column: 19, scope: !4444)
!4449 = !DILocalVariable(name: "dtree", arg: 2, scope: !4444, file: !364, line: 1013, type: !366)
!4450 = !DILocation(line: 1013, column: 19, scope: !4444)
!4451 = !DILocalVariable(name: "dist", scope: !4444, file: !364, line: 1015, type: !7)
!4452 = !DILocation(line: 1015, column: 14, scope: !4444)
!4453 = !DILocalVariable(name: "lc", scope: !4444, file: !364, line: 1016, type: !28)
!4454 = !DILocation(line: 1016, column: 9, scope: !4444)
!4455 = !DILocalVariable(name: "lx", scope: !4444, file: !364, line: 1017, type: !7)
!4456 = !DILocation(line: 1017, column: 14, scope: !4444)
!4457 = !DILocalVariable(name: "dx", scope: !4444, file: !364, line: 1018, type: !7)
!4458 = !DILocation(line: 1018, column: 14, scope: !4444)
!4459 = !DILocalVariable(name: "fx", scope: !4444, file: !364, line: 1019, type: !7)
!4460 = !DILocation(line: 1019, column: 14, scope: !4444)
!4461 = !DILocalVariable(name: "flag", scope: !4444, file: !364, line: 1020, type: !92)
!4462 = !DILocation(line: 1020, column: 9, scope: !4444)
!4463 = !DILocalVariable(name: "code", scope: !4444, file: !364, line: 1021, type: !7)
!4464 = !DILocation(line: 1021, column: 14, scope: !4444)
!4465 = !DILocalVariable(name: "extra", scope: !4444, file: !364, line: 1022, type: !28)
!4466 = !DILocation(line: 1022, column: 9, scope: !4444)
!4467 = !DILocation(line: 1024, column: 9, scope: !4468)
!4468 = distinct !DILexicalBlock(scope: !4444, file: !364, line: 1024, column: 9)
!4469 = !DILocation(line: 1024, column: 18, scope: !4468)
!4470 = !DILocation(line: 1024, column: 9, scope: !4444)
!4471 = !DILocation(line: 1024, column: 24, scope: !4468)
!4472 = !DILocation(line: 1025, column: 14, scope: !4473)
!4473 = distinct !DILexicalBlock(scope: !4474, file: !364, line: 1025, column: 13)
!4474 = distinct !DILexicalBlock(scope: !4468, file: !364, line: 1024, column: 27)
!4475 = !DILocation(line: 1025, column: 17, scope: !4473)
!4476 = !DILocation(line: 1025, column: 22, scope: !4473)
!4477 = !DILocation(line: 1025, column: 13, scope: !4474)
!4478 = !DILocation(line: 1025, column: 46, scope: !4473)
!4479 = !DILocation(line: 1025, column: 35, scope: !4473)
!4480 = !DILocation(line: 1025, column: 33, scope: !4473)
!4481 = !DILocation(line: 1025, column: 28, scope: !4473)
!4482 = !DILocation(line: 1026, column: 22, scope: !4474)
!4483 = !DILocation(line: 1026, column: 14, scope: !4474)
!4484 = !DILocation(line: 1026, column: 12, scope: !4474)
!4485 = !DILocation(line: 1027, column: 14, scope: !4486)
!4486 = distinct !DILexicalBlock(scope: !4474, file: !364, line: 1027, column: 13)
!4487 = !DILocation(line: 1027, column: 19, scope: !4486)
!4488 = !DILocation(line: 1027, column: 24, scope: !4486)
!4489 = !DILocation(line: 1027, column: 13, scope: !4474)
!4490 = !DILocation(line: 1028, column: 13, scope: !4491)
!4491 = distinct !DILexicalBlock(scope: !4486, file: !364, line: 1027, column: 30)
!4492 = !DILocation(line: 1030, column: 9, scope: !4491)
!4493 = !DILocation(line: 1032, column: 32, scope: !4494)
!4494 = distinct !DILexicalBlock(scope: !4486, file: !364, line: 1030, column: 16)
!4495 = !DILocation(line: 1032, column: 20, scope: !4494)
!4496 = !DILocation(line: 1032, column: 18, scope: !4494)
!4497 = !DILocation(line: 1033, column: 13, scope: !4494)
!4498 = !DILocation(line: 1034, column: 33, scope: !4494)
!4499 = !DILocation(line: 1034, column: 21, scope: !4494)
!4500 = !DILocation(line: 1034, column: 19, scope: !4494)
!4501 = !DILocation(line: 1035, column: 17, scope: !4502)
!4502 = distinct !DILexicalBlock(scope: !4494, file: !364, line: 1035, column: 17)
!4503 = !DILocation(line: 1035, column: 23, scope: !4502)
!4504 = !DILocation(line: 1035, column: 17, scope: !4494)
!4505 = !DILocation(line: 1036, column: 35, scope: !4506)
!4506 = distinct !DILexicalBlock(scope: !4502, file: !364, line: 1035, column: 29)
!4507 = !DILocation(line: 1036, column: 23, scope: !4506)
!4508 = !DILocation(line: 1036, column: 20, scope: !4506)
!4509 = !DILocation(line: 1037, column: 27, scope: !4506)
!4510 = !DILocation(line: 1037, column: 31, scope: !4506)
!4511 = !DILocation(line: 1037, column: 17, scope: !4506)
!4512 = !DILocation(line: 1038, column: 13, scope: !4506)
!4513 = !DILocation(line: 1039, column: 28, scope: !4494)
!4514 = !DILocation(line: 1039, column: 20, scope: !4494)
!4515 = !DILocation(line: 1039, column: 18, scope: !4494)
!4516 = !DILocation(line: 1041, column: 20, scope: !4494)
!4517 = !DILocation(line: 1041, column: 18, scope: !4494)
!4518 = !DILocation(line: 1044, column: 13, scope: !4494)
!4519 = !DILocation(line: 1045, column: 33, scope: !4494)
!4520 = !DILocation(line: 1045, column: 21, scope: !4494)
!4521 = !DILocation(line: 1045, column: 19, scope: !4494)
!4522 = !DILocation(line: 1046, column: 17, scope: !4523)
!4523 = distinct !DILexicalBlock(scope: !4494, file: !364, line: 1046, column: 17)
!4524 = !DILocation(line: 1046, column: 23, scope: !4523)
!4525 = !DILocation(line: 1046, column: 17, scope: !4494)
!4526 = !DILocation(line: 1047, column: 35, scope: !4527)
!4527 = distinct !DILexicalBlock(scope: !4523, file: !364, line: 1046, column: 29)
!4528 = !DILocation(line: 1047, column: 25, scope: !4527)
!4529 = !DILocation(line: 1047, column: 22, scope: !4527)
!4530 = !DILocation(line: 1048, column: 27, scope: !4527)
!4531 = !DILocation(line: 1048, column: 33, scope: !4527)
!4532 = !DILocation(line: 1048, column: 17, scope: !4527)
!4533 = !DILocation(line: 1049, column: 13, scope: !4527)
!4534 = !DILocation(line: 1051, column: 14, scope: !4474)
!4535 = !DILocation(line: 1052, column: 5, scope: !4474)
!4536 = !DILocation(line: 1052, column: 14, scope: !4468)
!4537 = !DILocation(line: 1052, column: 19, scope: !4468)
!4538 = !DILocation(line: 1052, column: 17, scope: !4468)
!4539 = distinct !{!4539, !4471, !4540, !816}
!4540 = !DILocation(line: 1052, column: 27, scope: !4468)
!4541 = !DILocation(line: 1054, column: 5, scope: !4444)
!4542 = !DILocation(line: 1055, column: 1, scope: !4444)
!4543 = distinct !DISubprogram(name: "send_all_trees", scope: !364, file: !364, line: 823, type: !4544, scopeLine: 825, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !363, retainedNodes: !271)
!4544 = !DISubroutineType(types: !4545)
!4545 = !{null, !28, !28, !28}
!4546 = !DILocalVariable(name: "lcodes", arg: 1, scope: !4543, file: !364, line: 824, type: !28)
!4547 = !DILocation(line: 824, column: 9, scope: !4543)
!4548 = !DILocalVariable(name: "dcodes", arg: 2, scope: !4543, file: !364, line: 824, type: !28)
!4549 = !DILocation(line: 824, column: 17, scope: !4543)
!4550 = !DILocalVariable(name: "blcodes", arg: 3, scope: !4543, file: !364, line: 824, type: !28)
!4551 = !DILocation(line: 824, column: 25, scope: !4543)
!4552 = !DILocalVariable(name: "rank", scope: !4543, file: !364, line: 826, type: !28)
!4553 = !DILocation(line: 826, column: 9, scope: !4543)
!4554 = !DILocation(line: 832, column: 15, scope: !4543)
!4555 = !DILocation(line: 832, column: 21, scope: !4543)
!4556 = !DILocation(line: 832, column: 5, scope: !4543)
!4557 = !DILocation(line: 833, column: 15, scope: !4543)
!4558 = !DILocation(line: 833, column: 21, scope: !4543)
!4559 = !DILocation(line: 833, column: 5, scope: !4543)
!4560 = !DILocation(line: 834, column: 15, scope: !4543)
!4561 = !DILocation(line: 834, column: 22, scope: !4543)
!4562 = !DILocation(line: 834, column: 5, scope: !4543)
!4563 = !DILocation(line: 835, column: 15, scope: !4564)
!4564 = distinct !DILexicalBlock(scope: !4543, file: !364, line: 835, column: 5)
!4565 = !DILocation(line: 835, column: 10, scope: !4564)
!4566 = !DILocation(line: 835, column: 20, scope: !4567)
!4567 = distinct !DILexicalBlock(scope: !4564, file: !364, line: 835, column: 5)
!4568 = !DILocation(line: 835, column: 27, scope: !4567)
!4569 = !DILocation(line: 835, column: 25, scope: !4567)
!4570 = !DILocation(line: 835, column: 5, scope: !4564)
!4571 = !DILocation(line: 837, column: 36, scope: !4572)
!4572 = distinct !DILexicalBlock(scope: !4567, file: !364, line: 835, column: 44)
!4573 = !DILocation(line: 837, column: 27, scope: !4572)
!4574 = !DILocation(line: 837, column: 19, scope: !4572)
!4575 = !DILocation(line: 837, column: 43, scope: !4572)
!4576 = !DILocation(line: 837, column: 9, scope: !4572)
!4577 = !DILocation(line: 838, column: 5, scope: !4572)
!4578 = !DILocation(line: 835, column: 40, scope: !4567)
!4579 = !DILocation(line: 835, column: 5, scope: !4567)
!4580 = distinct !{!4580, !4570, !4581, !816}
!4581 = !DILocation(line: 838, column: 5, scope: !4564)
!4582 = !DILocation(line: 841, column: 42, scope: !4543)
!4583 = !DILocation(line: 841, column: 48, scope: !4543)
!4584 = !DILocation(line: 841, column: 5, scope: !4543)
!4585 = !DILocation(line: 844, column: 42, scope: !4543)
!4586 = !DILocation(line: 844, column: 48, scope: !4543)
!4587 = !DILocation(line: 844, column: 5, scope: !4543)
!4588 = !DILocation(line: 846, column: 1, scope: !4543)
!4589 = distinct !DISubprogram(name: "send_tree", scope: !364, file: !364, line: 740, type: !3913, scopeLine: 743, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !363, retainedNodes: !271)
!4590 = !DILocalVariable(name: "tree", arg: 1, scope: !4589, file: !364, line: 741, type: !366)
!4591 = !DILocation(line: 741, column: 19, scope: !4589)
!4592 = !DILocalVariable(name: "max_code", arg: 2, scope: !4589, file: !364, line: 742, type: !28)
!4593 = !DILocation(line: 742, column: 9, scope: !4589)
!4594 = !DILocalVariable(name: "n", scope: !4589, file: !364, line: 744, type: !28)
!4595 = !DILocation(line: 744, column: 9, scope: !4589)
!4596 = !DILocalVariable(name: "prevlen", scope: !4589, file: !364, line: 745, type: !28)
!4597 = !DILocation(line: 745, column: 9, scope: !4589)
!4598 = !DILocalVariable(name: "curlen", scope: !4589, file: !364, line: 746, type: !28)
!4599 = !DILocation(line: 746, column: 9, scope: !4589)
!4600 = !DILocalVariable(name: "nextlen", scope: !4589, file: !364, line: 747, type: !28)
!4601 = !DILocation(line: 747, column: 9, scope: !4589)
!4602 = !DILocation(line: 747, column: 19, scope: !4589)
!4603 = !DILocation(line: 747, column: 27, scope: !4589)
!4604 = !DILocalVariable(name: "count", scope: !4589, file: !364, line: 748, type: !28)
!4605 = !DILocation(line: 748, column: 9, scope: !4589)
!4606 = !DILocalVariable(name: "max_count", scope: !4589, file: !364, line: 749, type: !28)
!4607 = !DILocation(line: 749, column: 9, scope: !4589)
!4608 = !DILocalVariable(name: "min_count", scope: !4589, file: !364, line: 750, type: !28)
!4609 = !DILocation(line: 750, column: 9, scope: !4589)
!4610 = !DILocation(line: 753, column: 9, scope: !4611)
!4611 = distinct !DILexicalBlock(scope: !4589, file: !364, line: 753, column: 9)
!4612 = !DILocation(line: 753, column: 17, scope: !4611)
!4613 = !DILocation(line: 753, column: 9, scope: !4589)
!4614 = !DILocation(line: 753, column: 33, scope: !4611)
!4615 = !DILocation(line: 753, column: 50, scope: !4611)
!4616 = !DILocation(line: 753, column: 23, scope: !4611)
!4617 = !DILocation(line: 755, column: 12, scope: !4618)
!4618 = distinct !DILexicalBlock(scope: !4589, file: !364, line: 755, column: 5)
!4619 = !DILocation(line: 755, column: 10, scope: !4618)
!4620 = !DILocation(line: 755, column: 17, scope: !4621)
!4621 = distinct !DILexicalBlock(scope: !4618, file: !364, line: 755, column: 5)
!4622 = !DILocation(line: 755, column: 22, scope: !4621)
!4623 = !DILocation(line: 755, column: 19, scope: !4621)
!4624 = !DILocation(line: 755, column: 5, scope: !4618)
!4625 = !DILocation(line: 756, column: 18, scope: !4626)
!4626 = distinct !DILexicalBlock(scope: !4621, file: !364, line: 755, column: 37)
!4627 = !DILocation(line: 756, column: 16, scope: !4626)
!4628 = !DILocation(line: 756, column: 37, scope: !4626)
!4629 = !DILocation(line: 756, column: 42, scope: !4626)
!4630 = !DILocation(line: 756, column: 43, scope: !4626)
!4631 = !DILocation(line: 756, column: 47, scope: !4626)
!4632 = !DILocation(line: 756, column: 35, scope: !4626)
!4633 = !DILocation(line: 757, column: 13, scope: !4634)
!4634 = distinct !DILexicalBlock(scope: !4626, file: !364, line: 757, column: 13)
!4635 = !DILocation(line: 757, column: 23, scope: !4634)
!4636 = !DILocation(line: 757, column: 21, scope: !4634)
!4637 = !DILocation(line: 757, column: 33, scope: !4634)
!4638 = !DILocation(line: 757, column: 36, scope: !4634)
!4639 = !DILocation(line: 757, column: 46, scope: !4634)
!4640 = !DILocation(line: 757, column: 43, scope: !4634)
!4641 = !DILocation(line: 757, column: 13, scope: !4626)
!4642 = !DILocation(line: 758, column: 13, scope: !4643)
!4643 = distinct !DILexicalBlock(scope: !4634, file: !364, line: 757, column: 55)
!4644 = !DILocation(line: 759, column: 20, scope: !4645)
!4645 = distinct !DILexicalBlock(scope: !4634, file: !364, line: 759, column: 20)
!4646 = !DILocation(line: 759, column: 28, scope: !4645)
!4647 = !DILocation(line: 759, column: 26, scope: !4645)
!4648 = !DILocation(line: 759, column: 20, scope: !4634)
!4649 = !DILocation(line: 760, column: 13, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4645, file: !364, line: 759, column: 39)
!4651 = !DILocation(line: 760, column: 18, scope: !4652)
!4652 = distinct !DILexicalBlock(scope: !4650, file: !364, line: 760, column: 16)
!4653 = !DILocation(line: 760, column: 46, scope: !4652)
!4654 = !DILocation(line: 760, column: 55, scope: !4650)
!4655 = !DILocation(line: 760, column: 63, scope: !4650)
!4656 = distinct !{!4656, !4649, !4657, !816}
!4657 = !DILocation(line: 760, column: 67, scope: !4650)
!4658 = !DILocation(line: 762, column: 9, scope: !4650)
!4659 = !DILocation(line: 762, column: 20, scope: !4660)
!4660 = distinct !DILexicalBlock(scope: !4645, file: !364, line: 762, column: 20)
!4661 = !DILocation(line: 762, column: 27, scope: !4660)
!4662 = !DILocation(line: 762, column: 20, scope: !4645)
!4663 = !DILocation(line: 763, column: 17, scope: !4664)
!4664 = distinct !DILexicalBlock(scope: !4665, file: !364, line: 763, column: 17)
!4665 = distinct !DILexicalBlock(scope: !4660, file: !364, line: 762, column: 33)
!4666 = !DILocation(line: 763, column: 27, scope: !4664)
!4667 = !DILocation(line: 763, column: 24, scope: !4664)
!4668 = !DILocation(line: 763, column: 17, scope: !4665)
!4669 = !DILocation(line: 764, column: 17, scope: !4670)
!4670 = distinct !DILexicalBlock(scope: !4664, file: !364, line: 763, column: 36)
!4671 = !DILocation(line: 764, column: 50, scope: !4670)
!4672 = !DILocation(line: 765, column: 13, scope: !4670)
!4673 = !DILocation(line: 767, column: 13, scope: !4665)
!4674 = !DILocation(line: 767, column: 52, scope: !4665)
!4675 = !DILocation(line: 767, column: 57, scope: !4665)
!4676 = !DILocation(line: 767, column: 42, scope: !4665)
!4677 = !DILocation(line: 769, column: 9, scope: !4665)
!4678 = !DILocation(line: 769, column: 20, scope: !4679)
!4679 = distinct !DILexicalBlock(scope: !4660, file: !364, line: 769, column: 20)
!4680 = !DILocation(line: 769, column: 26, scope: !4679)
!4681 = !DILocation(line: 769, column: 20, scope: !4660)
!4682 = !DILocation(line: 770, column: 13, scope: !4683)
!4683 = distinct !DILexicalBlock(scope: !4679, file: !364, line: 769, column: 33)
!4684 = !DILocation(line: 770, column: 54, scope: !4683)
!4685 = !DILocation(line: 770, column: 59, scope: !4683)
!4686 = !DILocation(line: 770, column: 44, scope: !4683)
!4687 = !DILocation(line: 772, column: 9, scope: !4683)
!4688 = !DILocation(line: 773, column: 13, scope: !4689)
!4689 = distinct !DILexicalBlock(scope: !4679, file: !364, line: 772, column: 16)
!4690 = !DILocation(line: 773, column: 56, scope: !4689)
!4691 = !DILocation(line: 773, column: 61, scope: !4689)
!4692 = !DILocation(line: 773, column: 46, scope: !4689)
!4693 = !DILocation(line: 775, column: 15, scope: !4626)
!4694 = !DILocation(line: 775, column: 30, scope: !4626)
!4695 = !DILocation(line: 775, column: 28, scope: !4626)
!4696 = !DILocation(line: 776, column: 13, scope: !4697)
!4697 = distinct !DILexicalBlock(scope: !4626, file: !364, line: 776, column: 13)
!4698 = !DILocation(line: 776, column: 21, scope: !4697)
!4699 = !DILocation(line: 776, column: 13, scope: !4626)
!4700 = !DILocation(line: 777, column: 23, scope: !4701)
!4701 = distinct !DILexicalBlock(scope: !4697, file: !364, line: 776, column: 27)
!4702 = !DILocation(line: 777, column: 40, scope: !4701)
!4703 = !DILocation(line: 778, column: 9, scope: !4701)
!4704 = !DILocation(line: 778, column: 20, scope: !4705)
!4705 = distinct !DILexicalBlock(scope: !4697, file: !364, line: 778, column: 20)
!4706 = !DILocation(line: 778, column: 30, scope: !4705)
!4707 = !DILocation(line: 778, column: 27, scope: !4705)
!4708 = !DILocation(line: 778, column: 20, scope: !4697)
!4709 = !DILocation(line: 779, column: 23, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4705, file: !364, line: 778, column: 39)
!4711 = !DILocation(line: 779, column: 38, scope: !4710)
!4712 = !DILocation(line: 780, column: 9, scope: !4710)
!4713 = !DILocation(line: 781, column: 23, scope: !4714)
!4714 = distinct !DILexicalBlock(scope: !4705, file: !364, line: 780, column: 16)
!4715 = !DILocation(line: 781, column: 38, scope: !4714)
!4716 = !DILocation(line: 783, column: 5, scope: !4626)
!4717 = !DILocation(line: 755, column: 33, scope: !4621)
!4718 = !DILocation(line: 755, column: 5, scope: !4621)
!4719 = distinct !{!4719, !4624, !4720, !816}
!4720 = !DILocation(line: 783, column: 5, scope: !4618)
!4721 = !DILocation(line: 784, column: 1, scope: !4589)
!4722 = distinct !DISubprogram(name: "scan_tree", scope: !364, file: !364, line: 696, type: !3913, scopeLine: 699, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !363, retainedNodes: !271)
!4723 = !DILocalVariable(name: "tree", arg: 1, scope: !4722, file: !364, line: 697, type: !366)
!4724 = !DILocation(line: 697, column: 19, scope: !4722)
!4725 = !DILocalVariable(name: "max_code", arg: 2, scope: !4722, file: !364, line: 698, type: !28)
!4726 = !DILocation(line: 698, column: 9, scope: !4722)
!4727 = !DILocalVariable(name: "n", scope: !4722, file: !364, line: 700, type: !28)
!4728 = !DILocation(line: 700, column: 9, scope: !4722)
!4729 = !DILocalVariable(name: "prevlen", scope: !4722, file: !364, line: 701, type: !28)
!4730 = !DILocation(line: 701, column: 9, scope: !4722)
!4731 = !DILocalVariable(name: "curlen", scope: !4722, file: !364, line: 702, type: !28)
!4732 = !DILocation(line: 702, column: 9, scope: !4722)
!4733 = !DILocalVariable(name: "nextlen", scope: !4722, file: !364, line: 703, type: !28)
!4734 = !DILocation(line: 703, column: 9, scope: !4722)
!4735 = !DILocation(line: 703, column: 19, scope: !4722)
!4736 = !DILocation(line: 703, column: 27, scope: !4722)
!4737 = !DILocalVariable(name: "count", scope: !4722, file: !364, line: 704, type: !28)
!4738 = !DILocation(line: 704, column: 9, scope: !4722)
!4739 = !DILocalVariable(name: "max_count", scope: !4722, file: !364, line: 705, type: !28)
!4740 = !DILocation(line: 705, column: 9, scope: !4722)
!4741 = !DILocalVariable(name: "min_count", scope: !4722, file: !364, line: 706, type: !28)
!4742 = !DILocation(line: 706, column: 9, scope: !4722)
!4743 = !DILocation(line: 708, column: 9, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !4722, file: !364, line: 708, column: 9)
!4745 = !DILocation(line: 708, column: 17, scope: !4744)
!4746 = !DILocation(line: 708, column: 9, scope: !4722)
!4747 = !DILocation(line: 708, column: 33, scope: !4744)
!4748 = !DILocation(line: 708, column: 50, scope: !4744)
!4749 = !DILocation(line: 708, column: 23, scope: !4744)
!4750 = !DILocation(line: 709, column: 5, scope: !4722)
!4751 = !DILocation(line: 709, column: 10, scope: !4722)
!4752 = !DILocation(line: 709, column: 18, scope: !4722)
!4753 = !DILocation(line: 709, column: 22, scope: !4722)
!4754 = !DILocation(line: 709, column: 26, scope: !4722)
!4755 = !DILocation(line: 711, column: 12, scope: !4756)
!4756 = distinct !DILexicalBlock(scope: !4722, file: !364, line: 711, column: 5)
!4757 = !DILocation(line: 711, column: 10, scope: !4756)
!4758 = !DILocation(line: 711, column: 17, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4756, file: !364, line: 711, column: 5)
!4760 = !DILocation(line: 711, column: 22, scope: !4759)
!4761 = !DILocation(line: 711, column: 19, scope: !4759)
!4762 = !DILocation(line: 711, column: 5, scope: !4756)
!4763 = !DILocation(line: 712, column: 18, scope: !4764)
!4764 = distinct !DILexicalBlock(scope: !4759, file: !364, line: 711, column: 37)
!4765 = !DILocation(line: 712, column: 16, scope: !4764)
!4766 = !DILocation(line: 712, column: 37, scope: !4764)
!4767 = !DILocation(line: 712, column: 42, scope: !4764)
!4768 = !DILocation(line: 712, column: 43, scope: !4764)
!4769 = !DILocation(line: 712, column: 47, scope: !4764)
!4770 = !DILocation(line: 712, column: 35, scope: !4764)
!4771 = !DILocation(line: 713, column: 13, scope: !4772)
!4772 = distinct !DILexicalBlock(scope: !4764, file: !364, line: 713, column: 13)
!4773 = !DILocation(line: 713, column: 23, scope: !4772)
!4774 = !DILocation(line: 713, column: 21, scope: !4772)
!4775 = !DILocation(line: 713, column: 33, scope: !4772)
!4776 = !DILocation(line: 713, column: 36, scope: !4772)
!4777 = !DILocation(line: 713, column: 46, scope: !4772)
!4778 = !DILocation(line: 713, column: 43, scope: !4772)
!4779 = !DILocation(line: 713, column: 13, scope: !4764)
!4780 = !DILocation(line: 714, column: 13, scope: !4781)
!4781 = distinct !DILexicalBlock(scope: !4772, file: !364, line: 713, column: 55)
!4782 = !DILocation(line: 715, column: 20, scope: !4783)
!4783 = distinct !DILexicalBlock(scope: !4772, file: !364, line: 715, column: 20)
!4784 = !DILocation(line: 715, column: 28, scope: !4783)
!4785 = !DILocation(line: 715, column: 26, scope: !4783)
!4786 = !DILocation(line: 715, column: 20, scope: !4772)
!4787 = !DILocation(line: 716, column: 37, scope: !4788)
!4788 = distinct !DILexicalBlock(scope: !4783, file: !364, line: 715, column: 39)
!4789 = !DILocation(line: 716, column: 21, scope: !4788)
!4790 = !DILocation(line: 716, column: 13, scope: !4788)
!4791 = !DILocation(line: 716, column: 29, scope: !4788)
!4792 = !DILocation(line: 716, column: 34, scope: !4788)
!4793 = !DILocation(line: 717, column: 9, scope: !4788)
!4794 = !DILocation(line: 717, column: 20, scope: !4795)
!4795 = distinct !DILexicalBlock(scope: !4783, file: !364, line: 717, column: 20)
!4796 = !DILocation(line: 717, column: 27, scope: !4795)
!4797 = !DILocation(line: 717, column: 20, scope: !4783)
!4798 = !DILocation(line: 718, column: 17, scope: !4799)
!4799 = distinct !DILexicalBlock(scope: !4800, file: !364, line: 718, column: 17)
!4800 = distinct !DILexicalBlock(scope: !4795, file: !364, line: 717, column: 33)
!4801 = !DILocation(line: 718, column: 27, scope: !4799)
!4802 = !DILocation(line: 718, column: 24, scope: !4799)
!4803 = !DILocation(line: 718, column: 17, scope: !4800)
!4804 = !DILocation(line: 718, column: 44, scope: !4799)
!4805 = !DILocation(line: 718, column: 36, scope: !4799)
!4806 = !DILocation(line: 718, column: 52, scope: !4799)
!4807 = !DILocation(line: 718, column: 56, scope: !4799)
!4808 = !DILocation(line: 719, column: 34, scope: !4800)
!4809 = !DILocation(line: 720, column: 9, scope: !4800)
!4810 = !DILocation(line: 720, column: 20, scope: !4811)
!4811 = distinct !DILexicalBlock(scope: !4795, file: !364, line: 720, column: 20)
!4812 = !DILocation(line: 720, column: 26, scope: !4811)
!4813 = !DILocation(line: 720, column: 20, scope: !4795)
!4814 = !DILocation(line: 721, column: 36, scope: !4815)
!4815 = distinct !DILexicalBlock(scope: !4811, file: !364, line: 720, column: 33)
!4816 = !DILocation(line: 722, column: 9, scope: !4815)
!4817 = !DILocation(line: 723, column: 38, scope: !4818)
!4818 = distinct !DILexicalBlock(scope: !4811, file: !364, line: 722, column: 16)
!4819 = !DILocation(line: 725, column: 15, scope: !4764)
!4820 = !DILocation(line: 725, column: 30, scope: !4764)
!4821 = !DILocation(line: 725, column: 28, scope: !4764)
!4822 = !DILocation(line: 726, column: 13, scope: !4823)
!4823 = distinct !DILexicalBlock(scope: !4764, file: !364, line: 726, column: 13)
!4824 = !DILocation(line: 726, column: 21, scope: !4823)
!4825 = !DILocation(line: 726, column: 13, scope: !4764)
!4826 = !DILocation(line: 727, column: 23, scope: !4827)
!4827 = distinct !DILexicalBlock(scope: !4823, file: !364, line: 726, column: 27)
!4828 = !DILocation(line: 727, column: 40, scope: !4827)
!4829 = !DILocation(line: 728, column: 9, scope: !4827)
!4830 = !DILocation(line: 728, column: 20, scope: !4831)
!4831 = distinct !DILexicalBlock(scope: !4823, file: !364, line: 728, column: 20)
!4832 = !DILocation(line: 728, column: 30, scope: !4831)
!4833 = !DILocation(line: 728, column: 27, scope: !4831)
!4834 = !DILocation(line: 728, column: 20, scope: !4823)
!4835 = !DILocation(line: 729, column: 23, scope: !4836)
!4836 = distinct !DILexicalBlock(scope: !4831, file: !364, line: 728, column: 39)
!4837 = !DILocation(line: 729, column: 38, scope: !4836)
!4838 = !DILocation(line: 730, column: 9, scope: !4836)
!4839 = !DILocation(line: 731, column: 23, scope: !4840)
!4840 = distinct !DILexicalBlock(scope: !4831, file: !364, line: 730, column: 16)
!4841 = !DILocation(line: 731, column: 38, scope: !4840)
!4842 = !DILocation(line: 733, column: 5, scope: !4764)
!4843 = !DILocation(line: 711, column: 33, scope: !4759)
!4844 = !DILocation(line: 711, column: 5, scope: !4759)
!4845 = distinct !{!4845, !4762, !4846, !816}
!4846 = !DILocation(line: 733, column: 5, scope: !4756)
!4847 = !DILocation(line: 734, column: 1, scope: !4722)
!4848 = distinct !DISubprogram(name: "pqdownheap", scope: !364, file: !364, line: 451, type: !3913, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !363, retainedNodes: !271)
!4849 = !DILocalVariable(name: "tree", arg: 1, scope: !4848, file: !364, line: 452, type: !366)
!4850 = !DILocation(line: 452, column: 19, scope: !4848)
!4851 = !DILocalVariable(name: "k", arg: 2, scope: !4848, file: !364, line: 453, type: !28)
!4852 = !DILocation(line: 453, column: 9, scope: !4848)
!4853 = !DILocalVariable(name: "v", scope: !4848, file: !364, line: 455, type: !28)
!4854 = !DILocation(line: 455, column: 9, scope: !4848)
!4855 = !DILocation(line: 455, column: 18, scope: !4848)
!4856 = !DILocation(line: 455, column: 13, scope: !4848)
!4857 = !DILocalVariable(name: "j", scope: !4848, file: !364, line: 456, type: !28)
!4858 = !DILocation(line: 456, column: 9, scope: !4848)
!4859 = !DILocation(line: 456, column: 13, scope: !4848)
!4860 = !DILocation(line: 456, column: 15, scope: !4848)
!4861 = !DILocation(line: 457, column: 5, scope: !4848)
!4862 = !DILocation(line: 457, column: 12, scope: !4848)
!4863 = !DILocation(line: 457, column: 17, scope: !4848)
!4864 = !DILocation(line: 457, column: 14, scope: !4848)
!4865 = !DILocation(line: 459, column: 13, scope: !4866)
!4866 = distinct !DILexicalBlock(scope: !4867, file: !364, line: 459, column: 13)
!4867 = distinct !DILexicalBlock(scope: !4848, file: !364, line: 457, column: 27)
!4868 = !DILocation(line: 459, column: 17, scope: !4866)
!4869 = !DILocation(line: 459, column: 15, scope: !4866)
!4870 = !DILocation(line: 459, column: 26, scope: !4866)
!4871 = !DILocation(line: 459, column: 29, scope: !4866)
!4872 = !DILocation(line: 459, column: 13, scope: !4867)
!4873 = !DILocation(line: 459, column: 65, scope: !4866)
!4874 = !DILocation(line: 459, column: 64, scope: !4866)
!4875 = !DILocation(line: 462, column: 13, scope: !4876)
!4876 = distinct !DILexicalBlock(scope: !4867, file: !364, line: 462, column: 13)
!4877 = !DILocation(line: 462, column: 13, scope: !4867)
!4878 = !DILocation(line: 462, column: 40, scope: !4876)
!4879 = !DILocation(line: 465, column: 24, scope: !4867)
!4880 = !DILocation(line: 465, column: 19, scope: !4867)
!4881 = !DILocation(line: 465, column: 14, scope: !4867)
!4882 = !DILocation(line: 465, column: 9, scope: !4867)
!4883 = !DILocation(line: 465, column: 17, scope: !4867)
!4884 = !DILocation(line: 465, column: 33, scope: !4867)
!4885 = !DILocation(line: 465, column: 31, scope: !4867)
!4886 = !DILocation(line: 468, column: 11, scope: !4867)
!4887 = distinct !{!4887, !4861, !4888, !816}
!4888 = !DILocation(line: 469, column: 5, scope: !4848)
!4889 = !DILocation(line: 470, column: 15, scope: !4848)
!4890 = !DILocation(line: 470, column: 10, scope: !4848)
!4891 = !DILocation(line: 470, column: 5, scope: !4848)
!4892 = !DILocation(line: 470, column: 13, scope: !4848)
!4893 = !DILocation(line: 471, column: 1, scope: !4848)
!4894 = distinct !DISubprogram(name: "gen_bitlen", scope: !364, file: !364, line: 483, type: !4233, scopeLine: 485, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !363, retainedNodes: !271)
!4895 = !DILocalVariable(name: "desc", arg: 1, scope: !4894, file: !364, line: 484, type: !380)
!4896 = !DILocation(line: 484, column: 21, scope: !4894)
!4897 = !DILocalVariable(name: "tree", scope: !4894, file: !364, line: 486, type: !366)
!4898 = !DILocation(line: 486, column: 19, scope: !4894)
!4899 = !DILocation(line: 486, column: 27, scope: !4894)
!4900 = !DILocation(line: 486, column: 33, scope: !4894)
!4901 = !DILocalVariable(name: "extra", scope: !4894, file: !364, line: 487, type: !30)
!4902 = !DILocation(line: 487, column: 15, scope: !4894)
!4903 = !DILocation(line: 487, column: 27, scope: !4894)
!4904 = !DILocation(line: 487, column: 33, scope: !4894)
!4905 = !DILocalVariable(name: "base", scope: !4894, file: !364, line: 488, type: !28)
!4906 = !DILocation(line: 488, column: 9, scope: !4894)
!4907 = !DILocation(line: 488, column: 27, scope: !4894)
!4908 = !DILocation(line: 488, column: 33, scope: !4894)
!4909 = !DILocalVariable(name: "max_code", scope: !4894, file: !364, line: 489, type: !28)
!4910 = !DILocation(line: 489, column: 9, scope: !4894)
!4911 = !DILocation(line: 489, column: 27, scope: !4894)
!4912 = !DILocation(line: 489, column: 33, scope: !4894)
!4913 = !DILocalVariable(name: "max_length", scope: !4894, file: !364, line: 490, type: !28)
!4914 = !DILocation(line: 490, column: 9, scope: !4894)
!4915 = !DILocation(line: 490, column: 27, scope: !4894)
!4916 = !DILocation(line: 490, column: 33, scope: !4894)
!4917 = !DILocalVariable(name: "stree", scope: !4894, file: !364, line: 491, type: !366)
!4918 = !DILocation(line: 491, column: 19, scope: !4894)
!4919 = !DILocation(line: 491, column: 27, scope: !4894)
!4920 = !DILocation(line: 491, column: 33, scope: !4894)
!4921 = !DILocalVariable(name: "h", scope: !4894, file: !364, line: 492, type: !28)
!4922 = !DILocation(line: 492, column: 9, scope: !4894)
!4923 = !DILocalVariable(name: "n", scope: !4894, file: !364, line: 493, type: !28)
!4924 = !DILocation(line: 493, column: 9, scope: !4894)
!4925 = !DILocalVariable(name: "m", scope: !4894, file: !364, line: 493, type: !28)
!4926 = !DILocation(line: 493, column: 12, scope: !4894)
!4927 = !DILocalVariable(name: "bits", scope: !4894, file: !364, line: 494, type: !28)
!4928 = !DILocation(line: 494, column: 9, scope: !4894)
!4929 = !DILocalVariable(name: "xbits", scope: !4894, file: !364, line: 495, type: !28)
!4930 = !DILocation(line: 495, column: 9, scope: !4894)
!4931 = !DILocalVariable(name: "f", scope: !4894, file: !364, line: 496, type: !98)
!4932 = !DILocation(line: 496, column: 9, scope: !4894)
!4933 = !DILocalVariable(name: "overflow", scope: !4894, file: !364, line: 497, type: !28)
!4934 = !DILocation(line: 497, column: 9, scope: !4894)
!4935 = !DILocation(line: 499, column: 15, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !4894, file: !364, line: 499, column: 5)
!4937 = !DILocation(line: 499, column: 10, scope: !4936)
!4938 = !DILocation(line: 499, column: 20, scope: !4939)
!4939 = distinct !DILexicalBlock(scope: !4936, file: !364, line: 499, column: 5)
!4940 = !DILocation(line: 499, column: 25, scope: !4939)
!4941 = !DILocation(line: 499, column: 5, scope: !4936)
!4942 = !DILocation(line: 499, column: 55, scope: !4939)
!4943 = !DILocation(line: 499, column: 46, scope: !4939)
!4944 = !DILocation(line: 499, column: 61, scope: !4939)
!4945 = !DILocation(line: 499, column: 42, scope: !4939)
!4946 = !DILocation(line: 499, column: 5, scope: !4939)
!4947 = distinct !{!4947, !4941, !4948, !816}
!4948 = !DILocation(line: 499, column: 63, scope: !4936)
!4949 = !DILocation(line: 504, column: 5, scope: !4894)
!4950 = !DILocation(line: 504, column: 15, scope: !4894)
!4951 = !DILocation(line: 504, column: 10, scope: !4894)
!4952 = !DILocation(line: 504, column: 26, scope: !4894)
!4953 = !DILocation(line: 504, column: 30, scope: !4894)
!4954 = !DILocation(line: 506, column: 14, scope: !4955)
!4955 = distinct !DILexicalBlock(scope: !4894, file: !364, line: 506, column: 5)
!4956 = !DILocation(line: 506, column: 22, scope: !4955)
!4957 = !DILocation(line: 506, column: 12, scope: !4955)
!4958 = !DILocation(line: 506, column: 10, scope: !4955)
!4959 = !DILocation(line: 506, column: 26, scope: !4960)
!4960 = distinct !DILexicalBlock(scope: !4955, file: !364, line: 506, column: 5)
!4961 = !DILocation(line: 506, column: 28, scope: !4960)
!4962 = !DILocation(line: 506, column: 5, scope: !4955)
!4963 = !DILocation(line: 507, column: 18, scope: !4964)
!4964 = distinct !DILexicalBlock(scope: !4960, file: !364, line: 506, column: 46)
!4965 = !DILocation(line: 507, column: 13, scope: !4964)
!4966 = !DILocation(line: 507, column: 11, scope: !4964)
!4967 = !DILocation(line: 508, column: 16, scope: !4964)
!4968 = !DILocation(line: 508, column: 21, scope: !4964)
!4969 = !DILocation(line: 508, column: 26, scope: !4964)
!4970 = !DILocation(line: 508, column: 29, scope: !4964)
!4971 = !DILocation(line: 508, column: 34, scope: !4964)
!4972 = !DILocation(line: 508, column: 38, scope: !4964)
!4973 = !DILocation(line: 508, column: 14, scope: !4964)
!4974 = !DILocation(line: 509, column: 13, scope: !4975)
!4975 = distinct !DILexicalBlock(scope: !4964, file: !364, line: 509, column: 13)
!4976 = !DILocation(line: 509, column: 20, scope: !4975)
!4977 = !DILocation(line: 509, column: 18, scope: !4975)
!4978 = !DILocation(line: 509, column: 13, scope: !4964)
!4979 = !DILocation(line: 509, column: 39, scope: !4975)
!4980 = !DILocation(line: 509, column: 37, scope: !4975)
!4981 = !DILocation(line: 509, column: 59, scope: !4975)
!4982 = !DILocation(line: 509, column: 32, scope: !4975)
!4983 = !DILocation(line: 510, column: 28, scope: !4964)
!4984 = !DILocation(line: 510, column: 23, scope: !4964)
!4985 = !DILocation(line: 510, column: 9, scope: !4964)
!4986 = !DILocation(line: 510, column: 14, scope: !4964)
!4987 = !DILocation(line: 510, column: 17, scope: !4964)
!4988 = !DILocation(line: 510, column: 21, scope: !4964)
!4989 = !DILocation(line: 513, column: 13, scope: !4990)
!4990 = distinct !DILexicalBlock(scope: !4964, file: !364, line: 513, column: 13)
!4991 = !DILocation(line: 513, column: 17, scope: !4990)
!4992 = !DILocation(line: 513, column: 15, scope: !4990)
!4993 = !DILocation(line: 513, column: 13, scope: !4964)
!4994 = !DILocation(line: 513, column: 27, scope: !4990)
!4995 = !DILocation(line: 515, column: 18, scope: !4964)
!4996 = !DILocation(line: 515, column: 9, scope: !4964)
!4997 = !DILocation(line: 515, column: 23, scope: !4964)
!4998 = !DILocation(line: 516, column: 15, scope: !4964)
!4999 = !DILocation(line: 517, column: 13, scope: !5000)
!5000 = distinct !DILexicalBlock(scope: !4964, file: !364, line: 517, column: 13)
!5001 = !DILocation(line: 517, column: 18, scope: !5000)
!5002 = !DILocation(line: 517, column: 15, scope: !5000)
!5003 = !DILocation(line: 517, column: 13, scope: !4964)
!5004 = !DILocation(line: 517, column: 32, scope: !5000)
!5005 = !DILocation(line: 517, column: 38, scope: !5000)
!5006 = !DILocation(line: 517, column: 40, scope: !5000)
!5007 = !DILocation(line: 517, column: 39, scope: !5000)
!5008 = !DILocation(line: 517, column: 30, scope: !5000)
!5009 = !DILocation(line: 517, column: 24, scope: !5000)
!5010 = !DILocation(line: 518, column: 13, scope: !4964)
!5011 = !DILocation(line: 518, column: 18, scope: !4964)
!5012 = !DILocation(line: 518, column: 21, scope: !4964)
!5013 = !DILocation(line: 518, column: 11, scope: !4964)
!5014 = !DILocation(line: 519, column: 25, scope: !4964)
!5015 = !DILocation(line: 519, column: 20, scope: !4964)
!5016 = !DILocation(line: 519, column: 30, scope: !4964)
!5017 = !DILocation(line: 519, column: 37, scope: !4964)
!5018 = !DILocation(line: 519, column: 35, scope: !4964)
!5019 = !DILocation(line: 519, column: 29, scope: !4964)
!5020 = !DILocation(line: 519, column: 27, scope: !4964)
!5021 = !DILocation(line: 519, column: 17, scope: !4964)
!5022 = !DILocation(line: 520, column: 13, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !4964, file: !364, line: 520, column: 13)
!5024 = !DILocation(line: 520, column: 13, scope: !4964)
!5025 = !DILocation(line: 520, column: 39, scope: !5023)
!5026 = !DILocation(line: 520, column: 34, scope: !5023)
!5027 = !DILocation(line: 520, column: 44, scope: !5023)
!5028 = !DILocation(line: 520, column: 50, scope: !5023)
!5029 = !DILocation(line: 520, column: 53, scope: !5023)
!5030 = !DILocation(line: 520, column: 59, scope: !5023)
!5031 = !DILocation(line: 520, column: 57, scope: !5023)
!5032 = !DILocation(line: 520, column: 43, scope: !5023)
!5033 = !DILocation(line: 520, column: 41, scope: !5023)
!5034 = !DILocation(line: 520, column: 31, scope: !5023)
!5035 = !DILocation(line: 520, column: 20, scope: !5023)
!5036 = !DILocation(line: 521, column: 5, scope: !4964)
!5037 = !DILocation(line: 506, column: 42, scope: !4960)
!5038 = !DILocation(line: 506, column: 5, scope: !4960)
!5039 = distinct !{!5039, !4962, !5040, !816}
!5040 = !DILocation(line: 521, column: 5, scope: !4955)
!5041 = !DILocation(line: 522, column: 9, scope: !5042)
!5042 = distinct !DILexicalBlock(scope: !4894, file: !364, line: 522, column: 9)
!5043 = !DILocation(line: 522, column: 18, scope: !5042)
!5044 = !DILocation(line: 522, column: 9, scope: !4894)
!5045 = !DILocation(line: 522, column: 24, scope: !5042)
!5046 = !DILocation(line: 528, column: 5, scope: !4894)
!5047 = !DILocation(line: 529, column: 16, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !4894, file: !364, line: 528, column: 8)
!5049 = !DILocation(line: 529, column: 26, scope: !5048)
!5050 = !DILocation(line: 529, column: 14, scope: !5048)
!5051 = !DILocation(line: 530, column: 9, scope: !5048)
!5052 = !DILocation(line: 530, column: 25, scope: !5048)
!5053 = !DILocation(line: 530, column: 16, scope: !5048)
!5054 = !DILocation(line: 530, column: 31, scope: !5048)
!5055 = !DILocation(line: 530, column: 41, scope: !5048)
!5056 = distinct !{!5056, !5051, !5055, !816}
!5057 = !DILocation(line: 531, column: 18, scope: !5048)
!5058 = !DILocation(line: 531, column: 9, scope: !5048)
!5059 = !DILocation(line: 531, column: 23, scope: !5048)
!5060 = !DILocation(line: 532, column: 18, scope: !5048)
!5061 = !DILocation(line: 532, column: 22, scope: !5048)
!5062 = !DILocation(line: 532, column: 9, scope: !5048)
!5063 = !DILocation(line: 532, column: 26, scope: !5048)
!5064 = !DILocation(line: 533, column: 18, scope: !5048)
!5065 = !DILocation(line: 533, column: 9, scope: !5048)
!5066 = !DILocation(line: 533, column: 29, scope: !5048)
!5067 = !DILocation(line: 537, column: 18, scope: !5048)
!5068 = !DILocation(line: 538, column: 5, scope: !5048)
!5069 = !DILocation(line: 538, column: 14, scope: !4894)
!5070 = !DILocation(line: 538, column: 23, scope: !4894)
!5071 = distinct !{!5071, !5046, !5072, !816}
!5072 = !DILocation(line: 538, column: 26, scope: !4894)
!5073 = !DILocation(line: 545, column: 17, scope: !5074)
!5074 = distinct !DILexicalBlock(scope: !4894, file: !364, line: 545, column: 5)
!5075 = !DILocation(line: 545, column: 15, scope: !5074)
!5076 = !DILocation(line: 545, column: 10, scope: !5074)
!5077 = !DILocation(line: 545, column: 29, scope: !5078)
!5078 = distinct !DILexicalBlock(scope: !5074, file: !364, line: 545, column: 5)
!5079 = !DILocation(line: 545, column: 34, scope: !5078)
!5080 = !DILocation(line: 545, column: 5, scope: !5074)
!5081 = !DILocation(line: 546, column: 22, scope: !5082)
!5082 = distinct !DILexicalBlock(scope: !5078, file: !364, line: 545, column: 48)
!5083 = !DILocation(line: 546, column: 13, scope: !5082)
!5084 = !DILocation(line: 546, column: 11, scope: !5082)
!5085 = !DILocation(line: 547, column: 9, scope: !5082)
!5086 = !DILocation(line: 547, column: 16, scope: !5082)
!5087 = !DILocation(line: 547, column: 18, scope: !5082)
!5088 = !DILocation(line: 548, column: 22, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !5082, file: !364, line: 547, column: 24)
!5090 = !DILocation(line: 548, column: 17, scope: !5089)
!5091 = !DILocation(line: 548, column: 15, scope: !5089)
!5092 = !DILocation(line: 549, column: 17, scope: !5093)
!5093 = distinct !DILexicalBlock(scope: !5089, file: !364, line: 549, column: 17)
!5094 = !DILocation(line: 549, column: 21, scope: !5093)
!5095 = !DILocation(line: 549, column: 19, scope: !5093)
!5096 = !DILocation(line: 549, column: 17, scope: !5089)
!5097 = !DILocation(line: 549, column: 31, scope: !5093)
!5098 = distinct !{!5098, !5085, !5099, !816}
!5099 = !DILocation(line: 556, column: 9, scope: !5082)
!5100 = !DILocation(line: 550, column: 17, scope: !5101)
!5101 = distinct !DILexicalBlock(scope: !5089, file: !364, line: 550, column: 17)
!5102 = !DILocation(line: 550, column: 22, scope: !5101)
!5103 = !DILocation(line: 550, column: 25, scope: !5101)
!5104 = !DILocation(line: 550, column: 43, scope: !5101)
!5105 = !DILocation(line: 550, column: 29, scope: !5101)
!5106 = !DILocation(line: 550, column: 17, scope: !5089)
!5107 = !DILocation(line: 552, column: 35, scope: !5108)
!5108 = distinct !DILexicalBlock(scope: !5101, file: !364, line: 550, column: 49)
!5109 = !DILocation(line: 552, column: 29, scope: !5108)
!5110 = !DILocation(line: 552, column: 46, scope: !5108)
!5111 = !DILocation(line: 552, column: 51, scope: !5108)
!5112 = !DILocation(line: 552, column: 54, scope: !5108)
!5113 = !DILocation(line: 552, column: 40, scope: !5108)
!5114 = !DILocation(line: 552, column: 39, scope: !5108)
!5115 = !DILocation(line: 552, column: 65, scope: !5108)
!5116 = !DILocation(line: 552, column: 70, scope: !5108)
!5117 = !DILocation(line: 552, column: 73, scope: !5108)
!5118 = !DILocation(line: 552, column: 59, scope: !5108)
!5119 = !DILocation(line: 552, column: 58, scope: !5108)
!5120 = !DILocation(line: 552, column: 25, scope: !5108)
!5121 = !DILocation(line: 553, column: 36, scope: !5108)
!5122 = !DILocation(line: 553, column: 31, scope: !5108)
!5123 = !DILocation(line: 553, column: 17, scope: !5108)
!5124 = !DILocation(line: 553, column: 22, scope: !5108)
!5125 = !DILocation(line: 553, column: 25, scope: !5108)
!5126 = !DILocation(line: 553, column: 29, scope: !5108)
!5127 = !DILocation(line: 554, column: 13, scope: !5108)
!5128 = !DILocation(line: 555, column: 14, scope: !5089)
!5129 = !DILocation(line: 557, column: 5, scope: !5082)
!5130 = !DILocation(line: 545, column: 44, scope: !5078)
!5131 = !DILocation(line: 545, column: 5, scope: !5078)
!5132 = distinct !{!5132, !5080, !5133, !816}
!5133 = !DILocation(line: 557, column: 5, scope: !5074)
!5134 = !DILocation(line: 558, column: 1, scope: !4894)
!5135 = distinct !DISubprogram(name: "ct_tally", scope: !364, file: !364, line: 958, type: !160, scopeLine: 961, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !363, retainedNodes: !271)
!5136 = !DILocalVariable(name: "dist", arg: 1, scope: !5135, file: !364, line: 959, type: !28)
!5137 = !DILocation(line: 959, column: 9, scope: !5135)
!5138 = !DILocalVariable(name: "lc", arg: 2, scope: !5135, file: !364, line: 960, type: !28)
!5139 = !DILocation(line: 960, column: 9, scope: !5135)
!5140 = !DILocation(line: 962, column: 30, scope: !5135)
!5141 = !DILocation(line: 962, column: 25, scope: !5135)
!5142 = !DILocation(line: 962, column: 19, scope: !5135)
!5143 = !DILocation(line: 962, column: 5, scope: !5135)
!5144 = !DILocation(line: 962, column: 23, scope: !5135)
!5145 = !DILocation(line: 963, column: 9, scope: !5146)
!5146 = distinct !DILexicalBlock(scope: !5135, file: !364, line: 963, column: 9)
!5147 = !DILocation(line: 963, column: 14, scope: !5146)
!5148 = !DILocation(line: 963, column: 9, scope: !5135)
!5149 = !DILocation(line: 965, column: 19, scope: !5150)
!5150 = distinct !DILexicalBlock(scope: !5146, file: !364, line: 963, column: 20)
!5151 = !DILocation(line: 965, column: 9, scope: !5150)
!5152 = !DILocation(line: 965, column: 23, scope: !5150)
!5153 = !DILocation(line: 965, column: 27, scope: !5150)
!5154 = !DILocation(line: 966, column: 5, scope: !5150)
!5155 = !DILocation(line: 968, column: 13, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !5146, file: !364, line: 966, column: 12)
!5157 = !DILocation(line: 973, column: 31, scope: !5156)
!5158 = !DILocation(line: 973, column: 19, scope: !5156)
!5159 = !DILocation(line: 973, column: 34, scope: !5156)
!5160 = !DILocation(line: 973, column: 43, scope: !5156)
!5161 = !DILocation(line: 973, column: 9, scope: !5156)
!5162 = !DILocation(line: 973, column: 47, scope: !5156)
!5163 = !DILocation(line: 973, column: 51, scope: !5156)
!5164 = !DILocation(line: 974, column: 19, scope: !5156)
!5165 = !DILocation(line: 974, column: 9, scope: !5156)
!5166 = !DILocation(line: 974, column: 33, scope: !5156)
!5167 = !DILocation(line: 974, column: 37, scope: !5156)
!5168 = !DILocation(line: 976, column: 35, scope: !5156)
!5169 = !DILocation(line: 976, column: 30, scope: !5156)
!5170 = !DILocation(line: 976, column: 24, scope: !5156)
!5171 = !DILocation(line: 976, column: 9, scope: !5156)
!5172 = !DILocation(line: 976, column: 28, scope: !5156)
!5173 = !DILocation(line: 977, column: 18, scope: !5156)
!5174 = !DILocation(line: 977, column: 15, scope: !5156)
!5175 = !DILocation(line: 979, column: 14, scope: !5135)
!5176 = !DILocation(line: 982, column: 10, scope: !5177)
!5177 = distinct !DILexicalBlock(scope: !5135, file: !364, line: 982, column: 9)
!5178 = !DILocation(line: 982, column: 19, scope: !5177)
!5179 = !DILocation(line: 982, column: 24, scope: !5177)
!5180 = !DILocation(line: 982, column: 9, scope: !5135)
!5181 = !DILocation(line: 983, column: 34, scope: !5182)
!5182 = distinct !DILexicalBlock(scope: !5177, file: !364, line: 982, column: 30)
!5183 = !DILocation(line: 983, column: 28, scope: !5182)
!5184 = !DILocation(line: 983, column: 9, scope: !5182)
!5185 = !DILocation(line: 983, column: 32, scope: !5182)
!5186 = !DILocation(line: 984, column: 15, scope: !5182)
!5187 = !DILocation(line: 984, column: 29, scope: !5182)
!5188 = !DILocation(line: 985, column: 5, scope: !5182)
!5189 = !DILocation(line: 987, column: 9, scope: !5190)
!5190 = distinct !DILexicalBlock(scope: !5135, file: !364, line: 987, column: 9)
!5191 = !DILocation(line: 987, column: 15, scope: !5190)
!5192 = !DILocation(line: 987, column: 19, scope: !5190)
!5193 = !DILocation(line: 987, column: 23, scope: !5190)
!5194 = !DILocation(line: 987, column: 32, scope: !5190)
!5195 = !DILocation(line: 987, column: 41, scope: !5190)
!5196 = !DILocation(line: 987, column: 9, scope: !5135)
!5197 = !DILocalVariable(name: "out_length", scope: !5198, file: !364, line: 989, type: !95)
!5198 = distinct !DILexicalBlock(scope: !5190, file: !364, line: 987, column: 47)
!5199 = !DILocation(line: 989, column: 13, scope: !5198)
!5200 = !DILocation(line: 989, column: 31, scope: !5198)
!5201 = !DILocation(line: 989, column: 26, scope: !5198)
!5202 = !DILocation(line: 989, column: 39, scope: !5198)
!5203 = !DILocalVariable(name: "in_length", scope: !5198, file: !364, line: 990, type: !95)
!5204 = !DILocation(line: 990, column: 13, scope: !5198)
!5205 = !DILocation(line: 990, column: 30, scope: !5198)
!5206 = !DILocation(line: 990, column: 25, scope: !5198)
!5207 = !DILocation(line: 990, column: 39, scope: !5198)
!5208 = !DILocation(line: 990, column: 38, scope: !5198)
!5209 = !DILocalVariable(name: "dcode", scope: !5198, file: !364, line: 991, type: !28)
!5210 = !DILocation(line: 991, column: 13, scope: !5198)
!5211 = !DILocation(line: 992, column: 20, scope: !5212)
!5212 = distinct !DILexicalBlock(scope: !5198, file: !364, line: 992, column: 9)
!5213 = !DILocation(line: 992, column: 14, scope: !5212)
!5214 = !DILocation(line: 992, column: 25, scope: !5215)
!5215 = distinct !DILexicalBlock(scope: !5212, file: !364, line: 992, column: 9)
!5216 = !DILocation(line: 992, column: 31, scope: !5215)
!5217 = !DILocation(line: 992, column: 9, scope: !5212)
!5218 = !DILocation(line: 993, column: 42, scope: !5219)
!5219 = distinct !DILexicalBlock(scope: !5215, file: !364, line: 992, column: 51)
!5220 = !DILocation(line: 993, column: 32, scope: !5219)
!5221 = !DILocation(line: 993, column: 49, scope: !5219)
!5222 = !DILocation(line: 993, column: 27, scope: !5219)
!5223 = !DILocation(line: 993, column: 70, scope: !5219)
!5224 = !DILocation(line: 993, column: 58, scope: !5219)
!5225 = !DILocation(line: 993, column: 57, scope: !5219)
!5226 = !DILocation(line: 993, column: 53, scope: !5219)
!5227 = !DILocation(line: 993, column: 24, scope: !5219)
!5228 = !DILocation(line: 994, column: 9, scope: !5219)
!5229 = !DILocation(line: 992, column: 47, scope: !5215)
!5230 = !DILocation(line: 992, column: 9, scope: !5215)
!5231 = distinct !{!5231, !5217, !5232, !816}
!5232 = !DILocation(line: 994, column: 9, scope: !5212)
!5233 = !DILocation(line: 995, column: 20, scope: !5198)
!5234 = !DILocation(line: 999, column: 13, scope: !5235)
!5235 = distinct !DILexicalBlock(scope: !5198, file: !364, line: 999, column: 13)
!5236 = !DILocation(line: 999, column: 25, scope: !5235)
!5237 = !DILocation(line: 999, column: 33, scope: !5235)
!5238 = !DILocation(line: 999, column: 23, scope: !5235)
!5239 = !DILocation(line: 999, column: 36, scope: !5235)
!5240 = !DILocation(line: 999, column: 39, scope: !5235)
!5241 = !DILocation(line: 999, column: 52, scope: !5235)
!5242 = !DILocation(line: 999, column: 61, scope: !5235)
!5243 = !DILocation(line: 999, column: 50, scope: !5235)
!5244 = !DILocation(line: 999, column: 13, scope: !5198)
!5245 = !DILocation(line: 999, column: 65, scope: !5235)
!5246 = !DILocation(line: 1000, column: 5, scope: !5198)
!5247 = !DILocation(line: 1001, column: 13, scope: !5135)
!5248 = !DILocation(line: 1001, column: 22, scope: !5135)
!5249 = !DILocation(line: 1001, column: 39, scope: !5135)
!5250 = !DILocation(line: 1001, column: 42, scope: !5135)
!5251 = !DILocation(line: 1001, column: 52, scope: !5135)
!5252 = !DILocation(line: 1001, column: 5, scope: !5135)
!5253 = !DILocation(line: 1006, column: 1, scope: !5135)
!5254 = distinct !DISubprogram(name: "bi_init", scope: !497, file: !497, line: 97, type: !5255, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !496, retainedNodes: !271)
!5255 = !DISubroutineType(types: !5256)
!5256 = !{null, !509}
!5257 = !DILocalVariable(name: "zipfile", arg: 1, scope: !5254, file: !497, line: 98, type: !509)
!5258 = !DILocation(line: 98, column: 12, scope: !5254)
!5259 = !DILocation(line: 100, column: 14, scope: !5254)
!5260 = !DILocation(line: 100, column: 12, scope: !5254)
!5261 = !DILocation(line: 101, column: 12, scope: !5254)
!5262 = !DILocation(line: 102, column: 14, scope: !5254)
!5263 = !DILocation(line: 110, column: 9, scope: !5264)
!5264 = distinct !DILexicalBlock(scope: !5254, file: !497, line: 110, column: 9)
!5265 = !DILocation(line: 110, column: 15, scope: !5264)
!5266 = !DILocation(line: 110, column: 9, scope: !5254)
!5267 = !DILocation(line: 111, column: 12, scope: !5268)
!5268 = distinct !DILexicalBlock(scope: !5264, file: !497, line: 110, column: 27)
!5269 = !DILocation(line: 112, column: 5, scope: !5268)
!5270 = !DILocation(line: 113, column: 1, scope: !5254)
!5271 = distinct !DISubprogram(name: "send_bits", scope: !497, file: !497, line: 119, type: !300, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !496, retainedNodes: !271)
!5272 = !DILocalVariable(name: "value", arg: 1, scope: !5271, file: !497, line: 120, type: !28)
!5273 = !DILocation(line: 120, column: 9, scope: !5271)
!5274 = !DILocalVariable(name: "length", arg: 2, scope: !5271, file: !497, line: 121, type: !28)
!5275 = !DILocation(line: 121, column: 9, scope: !5271)
!5276 = !DILocation(line: 132, column: 9, scope: !5277)
!5277 = distinct !DILexicalBlock(scope: !5271, file: !497, line: 132, column: 9)
!5278 = !DILocation(line: 132, column: 36, scope: !5277)
!5279 = !DILocation(line: 132, column: 34, scope: !5277)
!5280 = !DILocation(line: 132, column: 18, scope: !5277)
!5281 = !DILocation(line: 132, column: 9, scope: !5271)
!5282 = !DILocation(line: 133, column: 20, scope: !5283)
!5283 = distinct !DILexicalBlock(scope: !5277, file: !497, line: 132, column: 44)
!5284 = !DILocation(line: 133, column: 29, scope: !5283)
!5285 = !DILocation(line: 133, column: 26, scope: !5283)
!5286 = !DILocation(line: 133, column: 16, scope: !5283)
!5287 = !DILocation(line: 134, column: 9, scope: !5288)
!5288 = distinct !DILexicalBlock(scope: !5289, file: !497, line: 134, column: 9)
!5289 = distinct !DILexicalBlock(scope: !5283, file: !497, line: 134, column: 9)
!5290 = !DILocation(line: 134, column: 9, scope: !5289)
!5291 = !DILocation(line: 134, column: 9, scope: !5292)
!5292 = distinct !DILexicalBlock(scope: !5288, file: !497, line: 134, column: 9)
!5293 = !DILocation(line: 134, column: 9, scope: !5294)
!5294 = distinct !DILexicalBlock(scope: !5295, file: !497, line: 134, column: 9)
!5295 = distinct !DILexicalBlock(scope: !5288, file: !497, line: 134, column: 9)
!5296 = !DILocation(line: 134, column: 9, scope: !5297)
!5297 = distinct !DILexicalBlock(scope: !5294, file: !497, line: 134, column: 9)
!5298 = !DILocation(line: 134, column: 9, scope: !5299)
!5299 = distinct !DILexicalBlock(scope: !5295, file: !497, line: 134, column: 9)
!5300 = !DILocation(line: 134, column: 9, scope: !5301)
!5301 = distinct !DILexicalBlock(scope: !5299, file: !497, line: 134, column: 9)
!5302 = !DILocation(line: 135, column: 23, scope: !5283)
!5303 = !DILocation(line: 135, column: 18, scope: !5283)
!5304 = !DILocation(line: 135, column: 44, scope: !5283)
!5305 = !DILocation(line: 135, column: 42, scope: !5283)
!5306 = !DILocation(line: 135, column: 29, scope: !5283)
!5307 = !DILocation(line: 135, column: 16, scope: !5283)
!5308 = !DILocation(line: 136, column: 21, scope: !5283)
!5309 = !DILocation(line: 136, column: 28, scope: !5283)
!5310 = !DILocation(line: 136, column: 18, scope: !5283)
!5311 = !DILocation(line: 137, column: 5, scope: !5283)
!5312 = !DILocation(line: 138, column: 19, scope: !5313)
!5313 = distinct !DILexicalBlock(scope: !5277, file: !497, line: 137, column: 12)
!5314 = !DILocation(line: 138, column: 28, scope: !5313)
!5315 = !DILocation(line: 138, column: 25, scope: !5313)
!5316 = !DILocation(line: 138, column: 16, scope: !5313)
!5317 = !DILocation(line: 139, column: 21, scope: !5313)
!5318 = !DILocation(line: 139, column: 18, scope: !5313)
!5319 = !DILocation(line: 141, column: 1, scope: !5271)
!5320 = distinct !DISubprogram(name: "bi_reverse", scope: !497, file: !497, line: 148, type: !5321, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !496, retainedNodes: !271)
!5321 = !DISubroutineType(types: !5322)
!5322 = !{!7, !7, !28}
!5323 = !DILocalVariable(name: "code", arg: 1, scope: !5320, file: !497, line: 149, type: !7)
!5324 = !DILocation(line: 149, column: 14, scope: !5320)
!5325 = !DILocalVariable(name: "len", arg: 2, scope: !5320, file: !497, line: 150, type: !28)
!5326 = !DILocation(line: 150, column: 9, scope: !5320)
!5327 = !DILocalVariable(name: "res", scope: !5320, file: !497, line: 152, type: !7)
!5328 = !DILocation(line: 152, column: 23, scope: !5320)
!5329 = !DILocation(line: 153, column: 5, scope: !5320)
!5330 = !DILocation(line: 154, column: 16, scope: !5331)
!5331 = distinct !DILexicalBlock(scope: !5320, file: !497, line: 153, column: 8)
!5332 = !DILocation(line: 154, column: 21, scope: !5331)
!5333 = !DILocation(line: 154, column: 13, scope: !5331)
!5334 = !DILocation(line: 155, column: 14, scope: !5331)
!5335 = !DILocation(line: 155, column: 25, scope: !5331)
!5336 = !DILocation(line: 156, column: 5, scope: !5331)
!5337 = !DILocation(line: 156, column: 14, scope: !5320)
!5338 = !DILocation(line: 156, column: 20, scope: !5320)
!5339 = distinct !{!5339, !5329, !5340, !816}
!5340 = !DILocation(line: 156, column: 23, scope: !5320)
!5341 = !DILocation(line: 157, column: 12, scope: !5320)
!5342 = !DILocation(line: 157, column: 16, scope: !5320)
!5343 = !DILocation(line: 157, column: 5, scope: !5320)
!5344 = distinct !DISubprogram(name: "bi_windup", scope: !497, file: !497, line: 163, type: !269, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !496, retainedNodes: !271)
!5345 = !DILocation(line: 165, column: 9, scope: !5346)
!5346 = distinct !DILexicalBlock(scope: !5344, file: !497, line: 165, column: 9)
!5347 = !DILocation(line: 165, column: 18, scope: !5346)
!5348 = !DILocation(line: 165, column: 9, scope: !5344)
!5349 = !DILocation(line: 166, column: 9, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5351, file: !497, line: 166, column: 9)
!5351 = distinct !DILexicalBlock(scope: !5352, file: !497, line: 166, column: 9)
!5352 = distinct !DILexicalBlock(scope: !5346, file: !497, line: 165, column: 23)
!5353 = !DILocation(line: 166, column: 9, scope: !5351)
!5354 = !DILocation(line: 166, column: 9, scope: !5355)
!5355 = distinct !DILexicalBlock(scope: !5350, file: !497, line: 166, column: 9)
!5356 = !DILocation(line: 166, column: 9, scope: !5357)
!5357 = distinct !DILexicalBlock(scope: !5358, file: !497, line: 166, column: 9)
!5358 = distinct !DILexicalBlock(scope: !5350, file: !497, line: 166, column: 9)
!5359 = !DILocation(line: 166, column: 9, scope: !5360)
!5360 = distinct !DILexicalBlock(scope: !5357, file: !497, line: 166, column: 9)
!5361 = !DILocation(line: 166, column: 9, scope: !5362)
!5362 = distinct !DILexicalBlock(scope: !5358, file: !497, line: 166, column: 9)
!5363 = !DILocation(line: 166, column: 9, scope: !5364)
!5364 = distinct !DILexicalBlock(scope: !5362, file: !497, line: 166, column: 9)
!5365 = !DILocation(line: 167, column: 5, scope: !5352)
!5366 = !DILocation(line: 167, column: 16, scope: !5367)
!5367 = distinct !DILexicalBlock(scope: !5346, file: !497, line: 167, column: 16)
!5368 = !DILocation(line: 167, column: 25, scope: !5367)
!5369 = !DILocation(line: 167, column: 16, scope: !5346)
!5370 = !DILocation(line: 168, column: 9, scope: !5371)
!5371 = distinct !DILexicalBlock(scope: !5372, file: !497, line: 168, column: 9)
!5372 = distinct !DILexicalBlock(scope: !5367, file: !497, line: 167, column: 30)
!5373 = !DILocation(line: 168, column: 9, scope: !5374)
!5374 = distinct !DILexicalBlock(scope: !5371, file: !497, line: 168, column: 9)
!5375 = !DILocation(line: 169, column: 5, scope: !5372)
!5376 = !DILocation(line: 170, column: 12, scope: !5344)
!5377 = !DILocation(line: 171, column: 14, scope: !5344)
!5378 = !DILocation(line: 175, column: 1, scope: !5344)
!5379 = distinct !DISubprogram(name: "copy_block", scope: !497, file: !497, line: 181, type: !5380, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !496, retainedNodes: !271)
!5380 = !DISubroutineType(types: !5381)
!5381 = !{null, !39, !7, !28}
!5382 = !DILocalVariable(name: "buf", arg: 1, scope: !5379, file: !497, line: 182, type: !39)
!5383 = !DILocation(line: 182, column: 15, scope: !5379)
!5384 = !DILocalVariable(name: "len", arg: 2, scope: !5379, file: !497, line: 183, type: !7)
!5385 = !DILocation(line: 183, column: 14, scope: !5379)
!5386 = !DILocalVariable(name: "header", arg: 3, scope: !5379, file: !497, line: 184, type: !28)
!5387 = !DILocation(line: 184, column: 14, scope: !5379)
!5388 = !DILocation(line: 186, column: 5, scope: !5379)
!5389 = !DILocation(line: 188, column: 9, scope: !5390)
!5390 = distinct !DILexicalBlock(scope: !5379, file: !497, line: 188, column: 9)
!5391 = !DILocation(line: 188, column: 9, scope: !5379)
!5392 = !DILocation(line: 189, column: 9, scope: !5393)
!5393 = distinct !DILexicalBlock(scope: !5394, file: !497, line: 189, column: 9)
!5394 = distinct !DILexicalBlock(scope: !5395, file: !497, line: 189, column: 9)
!5395 = distinct !DILexicalBlock(scope: !5390, file: !497, line: 188, column: 17)
!5396 = !DILocation(line: 189, column: 9, scope: !5394)
!5397 = !DILocation(line: 189, column: 9, scope: !5398)
!5398 = distinct !DILexicalBlock(scope: !5393, file: !497, line: 189, column: 9)
!5399 = !DILocation(line: 189, column: 9, scope: !5400)
!5400 = distinct !DILexicalBlock(scope: !5401, file: !497, line: 189, column: 9)
!5401 = distinct !DILexicalBlock(scope: !5393, file: !497, line: 189, column: 9)
!5402 = !DILocation(line: 189, column: 9, scope: !5403)
!5403 = distinct !DILexicalBlock(scope: !5400, file: !497, line: 189, column: 9)
!5404 = !DILocation(line: 189, column: 9, scope: !5405)
!5405 = distinct !DILexicalBlock(scope: !5401, file: !497, line: 189, column: 9)
!5406 = !DILocation(line: 189, column: 9, scope: !5407)
!5407 = distinct !DILexicalBlock(scope: !5405, file: !497, line: 189, column: 9)
!5408 = !DILocation(line: 190, column: 9, scope: !5409)
!5409 = distinct !DILexicalBlock(scope: !5410, file: !497, line: 190, column: 9)
!5410 = distinct !DILexicalBlock(scope: !5395, file: !497, line: 190, column: 9)
!5411 = !DILocation(line: 190, column: 9, scope: !5410)
!5412 = !DILocation(line: 190, column: 9, scope: !5413)
!5413 = distinct !DILexicalBlock(scope: !5409, file: !497, line: 190, column: 9)
!5414 = !DILocation(line: 190, column: 9, scope: !5415)
!5415 = distinct !DILexicalBlock(scope: !5416, file: !497, line: 190, column: 9)
!5416 = distinct !DILexicalBlock(scope: !5409, file: !497, line: 190, column: 9)
!5417 = !DILocation(line: 190, column: 9, scope: !5418)
!5418 = distinct !DILexicalBlock(scope: !5415, file: !497, line: 190, column: 9)
!5419 = !DILocation(line: 190, column: 9, scope: !5420)
!5420 = distinct !DILexicalBlock(scope: !5416, file: !497, line: 190, column: 9)
!5421 = !DILocation(line: 190, column: 9, scope: !5422)
!5422 = distinct !DILexicalBlock(scope: !5420, file: !497, line: 190, column: 9)
!5423 = !DILocation(line: 194, column: 5, scope: !5395)
!5424 = !DILocation(line: 198, column: 5, scope: !5379)
!5425 = !DILocation(line: 198, column: 15, scope: !5379)
!5426 = !DILocation(line: 203, column: 2, scope: !5427)
!5427 = distinct !DILexicalBlock(scope: !5428, file: !497, line: 203, column: 2)
!5428 = distinct !DILexicalBlock(scope: !5379, file: !497, line: 198, column: 19)
!5429 = !DILocation(line: 203, column: 2, scope: !5430)
!5430 = distinct !DILexicalBlock(scope: !5427, file: !497, line: 203, column: 2)
!5431 = distinct !{!5431, !5424, !5432, !816}
!5432 = !DILocation(line: 204, column: 5, scope: !5379)
!5433 = !DILocation(line: 205, column: 1, scope: !5379)
!5434 = distinct !DISubprogram(name: "check_zipfile", scope: !513, file: !513, line: 51, type: !1623, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !512, retainedNodes: !271)
!5435 = !DILocalVariable(name: "in", arg: 1, scope: !5434, file: !513, line: 52, type: !28)
!5436 = !DILocation(line: 52, column: 9, scope: !5434)
!5437 = !DILocalVariable(name: "h", scope: !5434, file: !513, line: 54, type: !312)
!5438 = !DILocation(line: 54, column: 10, scope: !5434)
!5439 = !DILocation(line: 54, column: 22, scope: !5434)
!5440 = !DILocation(line: 54, column: 20, scope: !5434)
!5441 = !DILocation(line: 56, column: 11, scope: !5434)
!5442 = !DILocation(line: 56, column: 9, scope: !5434)
!5443 = !DILocation(line: 59, column: 23, scope: !5434)
!5444 = !DILocation(line: 59, column: 21, scope: !5434)
!5445 = !DILocation(line: 59, column: 40, scope: !5434)
!5446 = !DILocation(line: 59, column: 38, scope: !5434)
!5447 = !DILocation(line: 59, column: 11, scope: !5434)
!5448 = !DILocation(line: 61, column: 9, scope: !5449)
!5449 = distinct !DILexicalBlock(scope: !5434, file: !513, line: 61, column: 9)
!5450 = !DILocation(line: 61, column: 17, scope: !5449)
!5451 = !DILocation(line: 61, column: 15, scope: !5449)
!5452 = !DILocation(line: 61, column: 24, scope: !5449)
!5453 = !DILocation(line: 61, column: 27, scope: !5449)
!5454 = !DILocation(line: 61, column: 33, scope: !5449)
!5455 = !DILocation(line: 61, column: 9, scope: !5434)
!5456 = !DILocation(line: 62, column: 10, scope: !5457)
!5457 = distinct !DILexicalBlock(scope: !5449, file: !513, line: 61, column: 44)
!5458 = !DILocation(line: 63, column: 3, scope: !5457)
!5459 = !DILocation(line: 62, column: 2, scope: !5457)
!5460 = !DILocation(line: 64, column: 12, scope: !5457)
!5461 = !DILocation(line: 65, column: 2, scope: !5457)
!5462 = !DILocation(line: 67, column: 14, scope: !5434)
!5463 = !DILocation(line: 67, column: 12, scope: !5434)
!5464 = !DILocation(line: 68, column: 9, scope: !5465)
!5465 = distinct !DILexicalBlock(scope: !5434, file: !513, line: 68, column: 9)
!5466 = !DILocation(line: 68, column: 16, scope: !5465)
!5467 = !DILocation(line: 68, column: 26, scope: !5465)
!5468 = !DILocation(line: 68, column: 29, scope: !5465)
!5469 = !DILocation(line: 68, column: 36, scope: !5465)
!5470 = !DILocation(line: 68, column: 9, scope: !5434)
!5471 = !DILocation(line: 69, column: 10, scope: !5472)
!5472 = distinct !DILexicalBlock(scope: !5465, file: !513, line: 68, column: 49)
!5473 = !DILocation(line: 71, column: 3, scope: !5472)
!5474 = !DILocation(line: 69, column: 2, scope: !5472)
!5475 = !DILocation(line: 72, column: 12, scope: !5472)
!5476 = !DILocation(line: 73, column: 2, scope: !5472)
!5477 = !DILocation(line: 77, column: 20, scope: !5478)
!5478 = distinct !DILexicalBlock(scope: !5434, file: !513, line: 77, column: 9)
!5479 = !DILocation(line: 77, column: 30, scope: !5478)
!5480 = !DILocation(line: 77, column: 18, scope: !5478)
!5481 = !DILocation(line: 77, column: 40, scope: !5478)
!5482 = !DILocation(line: 77, column: 9, scope: !5434)
!5483 = !DILocation(line: 78, column: 10, scope: !5484)
!5484 = distinct !DILexicalBlock(scope: !5478, file: !513, line: 77, column: 46)
!5485 = !DILocation(line: 79, column: 3, scope: !5484)
!5486 = !DILocation(line: 78, column: 2, scope: !5484)
!5487 = !DILocation(line: 80, column: 12, scope: !5484)
!5488 = !DILocation(line: 81, column: 2, scope: !5484)
!5489 = !DILocation(line: 85, column: 19, scope: !5434)
!5490 = !DILocation(line: 85, column: 29, scope: !5434)
!5491 = !DILocation(line: 85, column: 39, scope: !5434)
!5492 = !DILocation(line: 85, column: 16, scope: !5434)
!5493 = !DILocation(line: 86, column: 11, scope: !5434)
!5494 = !DILocation(line: 89, column: 5, scope: !5434)
!5495 = !DILocation(line: 90, column: 1, scope: !5434)
!5496 = distinct !DISubprogram(name: "unzip", scope: !513, file: !513, line: 99, type: !160, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !512, retainedNodes: !271)
!5497 = !DILocalVariable(name: "in", arg: 1, scope: !5496, file: !513, line: 100, type: !28)
!5498 = !DILocation(line: 100, column: 9, scope: !5496)
!5499 = !DILocalVariable(name: "out", arg: 2, scope: !5496, file: !513, line: 100, type: !28)
!5500 = !DILocation(line: 100, column: 13, scope: !5496)
!5501 = !DILocalVariable(name: "orig_crc", scope: !5496, file: !513, line: 102, type: !95)
!5502 = !DILocation(line: 102, column: 9, scope: !5496)
!5503 = !DILocalVariable(name: "orig_len", scope: !5496, file: !513, line: 103, type: !95)
!5504 = !DILocation(line: 103, column: 9, scope: !5496)
!5505 = !DILocalVariable(name: "n", scope: !5496, file: !513, line: 104, type: !28)
!5506 = !DILocation(line: 104, column: 9, scope: !5496)
!5507 = !DILocalVariable(name: "buf", scope: !5496, file: !513, line: 105, type: !5508)
!5508 = !DICompositeType(tag: DW_TAG_array_type, baseType: !92, size: 128, elements: !415)
!5509 = !DILocation(line: 105, column: 9, scope: !5496)
!5510 = !DILocation(line: 107, column: 11, scope: !5496)
!5511 = !DILocation(line: 107, column: 9, scope: !5496)
!5512 = !DILocation(line: 108, column: 11, scope: !5496)
!5513 = !DILocation(line: 108, column: 9, scope: !5496)
!5514 = !DILocation(line: 110, column: 5, scope: !5496)
!5515 = !DILocation(line: 112, column: 9, scope: !5516)
!5516 = distinct !DILexicalBlock(scope: !5496, file: !513, line: 112, column: 9)
!5517 = !DILocation(line: 112, column: 15, scope: !5516)
!5518 = !DILocation(line: 112, column: 19, scope: !5516)
!5519 = !DILocation(line: 112, column: 9, scope: !5496)
!5520 = !DILocation(line: 113, column: 13, scope: !5521)
!5521 = distinct !DILexicalBlock(scope: !5516, file: !513, line: 112, column: 31)
!5522 = !DILocation(line: 113, column: 11, scope: !5521)
!5523 = !DILocation(line: 114, column: 13, scope: !5521)
!5524 = !DILocation(line: 114, column: 11, scope: !5521)
!5525 = !DILocation(line: 115, column: 5, scope: !5521)
!5526 = !DILocation(line: 118, column: 9, scope: !5527)
!5527 = distinct !DILexicalBlock(scope: !5496, file: !513, line: 118, column: 9)
!5528 = !DILocation(line: 118, column: 16, scope: !5527)
!5529 = !DILocation(line: 118, column: 9, scope: !5496)
!5530 = !DILocalVariable(name: "res", scope: !5531, file: !513, line: 120, type: !28)
!5531 = distinct !DILexicalBlock(scope: !5527, file: !513, line: 118, column: 30)
!5532 = !DILocation(line: 120, column: 6, scope: !5531)
!5533 = !DILocation(line: 120, column: 12, scope: !5531)
!5534 = !DILocation(line: 122, column: 6, scope: !5535)
!5535 = distinct !DILexicalBlock(scope: !5531, file: !513, line: 122, column: 6)
!5536 = !DILocation(line: 122, column: 10, scope: !5535)
!5537 = !DILocation(line: 122, column: 6, scope: !5531)
!5538 = !DILocation(line: 123, column: 6, scope: !5539)
!5539 = distinct !DILexicalBlock(scope: !5535, file: !513, line: 122, column: 16)
!5540 = !DILocation(line: 124, column: 2, scope: !5539)
!5541 = !DILocation(line: 124, column: 13, scope: !5542)
!5542 = distinct !DILexicalBlock(scope: !5535, file: !513, line: 124, column: 13)
!5543 = !DILocation(line: 124, column: 17, scope: !5542)
!5544 = !DILocation(line: 124, column: 13, scope: !5535)
!5545 = !DILocation(line: 125, column: 6, scope: !5546)
!5546 = distinct !DILexicalBlock(scope: !5542, file: !513, line: 124, column: 23)
!5547 = !DILocation(line: 126, column: 2, scope: !5546)
!5548 = !DILocation(line: 128, column: 5, scope: !5531)
!5549 = !DILocation(line: 128, column: 16, scope: !5550)
!5550 = distinct !DILexicalBlock(scope: !5527, file: !513, line: 128, column: 16)
!5551 = !DILocation(line: 128, column: 22, scope: !5550)
!5552 = !DILocation(line: 128, column: 25, scope: !5550)
!5553 = !DILocation(line: 128, column: 32, scope: !5550)
!5554 = !DILocation(line: 128, column: 16, scope: !5527)
!5555 = !DILocalVariable(name: "n", scope: !5556, file: !513, line: 130, type: !95)
!5556 = distinct !DILexicalBlock(scope: !5550, file: !513, line: 128, column: 43)
!5557 = !DILocation(line: 130, column: 15, scope: !5556)
!5558 = !DILocation(line: 130, column: 19, scope: !5556)
!5559 = !DILocation(line: 132, column: 6, scope: !5560)
!5560 = distinct !DILexicalBlock(scope: !5556, file: !513, line: 132, column: 6)
!5561 = !DILocation(line: 132, column: 11, scope: !5560)
!5562 = !DILocation(line: 132, column: 33, scope: !5560)
!5563 = !DILocation(line: 132, column: 32, scope: !5560)
!5564 = !DILocation(line: 132, column: 30, scope: !5560)
!5565 = !DILocation(line: 132, column: 8, scope: !5560)
!5566 = !DILocation(line: 132, column: 6, scope: !5556)
!5567 = !DILocation(line: 134, column: 14, scope: !5568)
!5568 = distinct !DILexicalBlock(scope: !5560, file: !513, line: 132, column: 63)
!5569 = !DILocation(line: 134, column: 44, scope: !5568)
!5570 = !DILocation(line: 134, column: 47, scope: !5568)
!5571 = !DILocation(line: 134, column: 6, scope: !5568)
!5572 = !DILocation(line: 135, column: 6, scope: !5568)
!5573 = !DILocation(line: 136, column: 2, scope: !5568)
!5574 = !DILocation(line: 137, column: 2, scope: !5556)
!5575 = !DILocation(line: 137, column: 10, scope: !5556)
!5576 = !DILocalVariable(name: "c", scope: !5577, file: !513, line: 138, type: !92)
!5577 = distinct !DILexicalBlock(scope: !5556, file: !513, line: 137, column: 14)
!5578 = !DILocation(line: 138, column: 10, scope: !5577)
!5579 = !DILocation(line: 138, column: 19, scope: !5577)
!5580 = !DILocation(line: 138, column: 14, scope: !5577)
!5581 = !DILocation(line: 142, column: 6, scope: !5582)
!5582 = distinct !DILexicalBlock(scope: !5577, file: !513, line: 142, column: 6)
!5583 = !DILocation(line: 142, column: 6, scope: !5584)
!5584 = distinct !DILexicalBlock(scope: !5582, file: !513, line: 142, column: 6)
!5585 = distinct !{!5585, !5574, !5586, !816}
!5586 = !DILocation(line: 143, column: 2, scope: !5556)
!5587 = !DILocation(line: 144, column: 2, scope: !5556)
!5588 = !DILocation(line: 145, column: 5, scope: !5556)
!5589 = !DILocation(line: 146, column: 2, scope: !5590)
!5590 = distinct !DILexicalBlock(scope: !5550, file: !513, line: 145, column: 12)
!5591 = !DILocation(line: 150, column: 10, scope: !5592)
!5592 = distinct !DILexicalBlock(scope: !5496, file: !513, line: 150, column: 9)
!5593 = !DILocation(line: 150, column: 9, scope: !5496)
!5594 = !DILocation(line: 154, column: 9, scope: !5595)
!5595 = distinct !DILexicalBlock(scope: !5596, file: !513, line: 154, column: 2)
!5596 = distinct !DILexicalBlock(scope: !5592, file: !513, line: 150, column: 17)
!5597 = !DILocation(line: 154, column: 7, scope: !5595)
!5598 = !DILocation(line: 154, column: 14, scope: !5599)
!5599 = distinct !DILexicalBlock(scope: !5595, file: !513, line: 154, column: 2)
!5600 = !DILocation(line: 154, column: 16, scope: !5599)
!5601 = !DILocation(line: 154, column: 2, scope: !5595)
!5602 = !DILocation(line: 155, column: 20, scope: !5603)
!5603 = distinct !DILexicalBlock(scope: !5599, file: !513, line: 154, column: 26)
!5604 = !DILocation(line: 155, column: 15, scope: !5603)
!5605 = !DILocation(line: 155, column: 10, scope: !5603)
!5606 = !DILocation(line: 155, column: 6, scope: !5603)
!5607 = !DILocation(line: 155, column: 13, scope: !5603)
!5608 = !DILocation(line: 156, column: 2, scope: !5603)
!5609 = !DILocation(line: 154, column: 22, scope: !5599)
!5610 = !DILocation(line: 154, column: 2, scope: !5599)
!5611 = distinct !{!5611, !5601, !5612, !816}
!5612 = !DILocation(line: 156, column: 2, scope: !5595)
!5613 = !DILocation(line: 157, column: 13, scope: !5596)
!5614 = !DILocation(line: 157, column: 11, scope: !5596)
!5615 = !DILocation(line: 158, column: 13, scope: !5596)
!5616 = !DILocation(line: 158, column: 11, scope: !5596)
!5617 = !DILocation(line: 160, column: 5, scope: !5596)
!5618 = !DILocation(line: 160, column: 16, scope: !5619)
!5619 = distinct !DILexicalBlock(scope: !5592, file: !513, line: 160, column: 16)
!5620 = !DILocation(line: 160, column: 16, scope: !5592)
!5621 = !DILocation(line: 166, column: 9, scope: !5622)
!5622 = distinct !DILexicalBlock(scope: !5623, file: !513, line: 166, column: 2)
!5623 = distinct !DILexicalBlock(scope: !5619, file: !513, line: 160, column: 28)
!5624 = !DILocation(line: 166, column: 7, scope: !5622)
!5625 = !DILocation(line: 166, column: 14, scope: !5626)
!5626 = distinct !DILexicalBlock(scope: !5622, file: !513, line: 166, column: 2)
!5627 = !DILocation(line: 166, column: 16, scope: !5626)
!5628 = !DILocation(line: 166, column: 2, scope: !5622)
!5629 = !DILocation(line: 167, column: 20, scope: !5630)
!5630 = distinct !DILexicalBlock(scope: !5626, file: !513, line: 166, column: 31)
!5631 = !DILocation(line: 167, column: 15, scope: !5630)
!5632 = !DILocation(line: 167, column: 10, scope: !5630)
!5633 = !DILocation(line: 167, column: 6, scope: !5630)
!5634 = !DILocation(line: 167, column: 13, scope: !5630)
!5635 = !DILocation(line: 168, column: 2, scope: !5630)
!5636 = !DILocation(line: 166, column: 27, scope: !5626)
!5637 = !DILocation(line: 166, column: 2, scope: !5626)
!5638 = distinct !{!5638, !5628, !5639, !816}
!5639 = !DILocation(line: 168, column: 2, scope: !5622)
!5640 = !DILocation(line: 169, column: 13, scope: !5623)
!5641 = !DILocation(line: 169, column: 11, scope: !5623)
!5642 = !DILocation(line: 170, column: 13, scope: !5623)
!5643 = !DILocation(line: 170, column: 11, scope: !5623)
!5644 = !DILocation(line: 171, column: 5, scope: !5623)
!5645 = !DILocation(line: 174, column: 9, scope: !5646)
!5646 = distinct !DILexicalBlock(scope: !5496, file: !513, line: 174, column: 9)
!5647 = !DILocation(line: 174, column: 21, scope: !5646)
!5648 = !DILocation(line: 174, column: 18, scope: !5646)
!5649 = !DILocation(line: 174, column: 9, scope: !5496)
!5650 = !DILocation(line: 175, column: 2, scope: !5651)
!5651 = distinct !DILexicalBlock(scope: !5646, file: !513, line: 174, column: 40)
!5652 = !DILocation(line: 176, column: 5, scope: !5651)
!5653 = !DILocation(line: 177, column: 9, scope: !5654)
!5654 = distinct !DILexicalBlock(scope: !5496, file: !513, line: 177, column: 9)
!5655 = !DILocation(line: 177, column: 26, scope: !5654)
!5656 = !DILocation(line: 177, column: 18, scope: !5654)
!5657 = !DILocation(line: 177, column: 9, scope: !5496)
!5658 = !DILocation(line: 178, column: 2, scope: !5659)
!5659 = distinct !DILexicalBlock(scope: !5654, file: !513, line: 177, column: 37)
!5660 = !DILocation(line: 179, column: 5, scope: !5659)
!5661 = !DILocation(line: 182, column: 9, scope: !5662)
!5662 = distinct !DILexicalBlock(scope: !5496, file: !513, line: 182, column: 9)
!5663 = !DILocation(line: 182, column: 15, scope: !5662)
!5664 = !DILocation(line: 182, column: 18, scope: !5662)
!5665 = !DILocation(line: 182, column: 24, scope: !5662)
!5666 = !DILocation(line: 182, column: 30, scope: !5662)
!5667 = !DILocation(line: 182, column: 28, scope: !5662)
!5668 = !DILocation(line: 182, column: 37, scope: !5662)
!5669 = !DILocation(line: 182, column: 40, scope: !5662)
!5670 = !DILocation(line: 182, column: 56, scope: !5662)
!5671 = !DILocation(line: 182, column: 9, scope: !5496)
!5672 = !DILocation(line: 183, column: 6, scope: !5673)
!5673 = distinct !DILexicalBlock(scope: !5674, file: !513, line: 183, column: 6)
!5674 = distinct !DILexicalBlock(scope: !5662, file: !513, line: 182, column: 67)
!5675 = !DILocation(line: 183, column: 6, scope: !5674)
!5676 = !DILocation(line: 184, column: 6, scope: !5677)
!5677 = distinct !DILexicalBlock(scope: !5678, file: !513, line: 184, column: 6)
!5678 = distinct !DILexicalBlock(scope: !5679, file: !513, line: 184, column: 6)
!5679 = distinct !DILexicalBlock(scope: !5673, file: !513, line: 183, column: 17)
!5680 = !DILocation(line: 184, column: 6, scope: !5678)
!5681 = !DILocation(line: 184, column: 6, scope: !5682)
!5682 = distinct !DILexicalBlock(scope: !5678, file: !513, line: 184, column: 6)
!5683 = !DILocation(line: 187, column: 2, scope: !5679)
!5684 = !DILocation(line: 189, column: 14, scope: !5685)
!5685 = distinct !DILexicalBlock(scope: !5673, file: !513, line: 187, column: 9)
!5686 = !DILocation(line: 191, column: 7, scope: !5685)
!5687 = !DILocation(line: 189, column: 6, scope: !5685)
!5688 = !DILocation(line: 192, column: 16, scope: !5685)
!5689 = !DILocation(line: 193, column: 25, scope: !5685)
!5690 = !DILocation(line: 193, column: 17, scope: !5685)
!5691 = !DILocation(line: 194, column: 6, scope: !5685)
!5692 = !DILocation(line: 196, column: 5, scope: !5674)
!5693 = !DILocation(line: 197, column: 24, scope: !5496)
!5694 = !DILocation(line: 197, column: 16, scope: !5496)
!5695 = !DILocation(line: 198, column: 5, scope: !5496)
!5696 = !DILocation(line: 199, column: 1, scope: !5496)
!5697 = distinct !DISubprogram(name: "huft_build", scope: !525, file: !525, line: 271, type: !5698, scopeLine: 284, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !524, retainedNodes: !271)
!5698 = !DISubroutineType(types: !5699)
!5699 = !{!28, !5700, !7, !7, !493, !493, !5701, !30}
!5700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!5701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !527, size: 64)
!5702 = !DILocalVariable(name: "b", arg: 1, scope: !5697, file: !525, line: 272, type: !5700)
!5703 = !DILocation(line: 272, column: 11, scope: !5697)
!5704 = !DILocalVariable(name: "n", arg: 2, scope: !5697, file: !525, line: 273, type: !7)
!5705 = !DILocation(line: 273, column: 10, scope: !5697)
!5706 = !DILocalVariable(name: "s", arg: 3, scope: !5697, file: !525, line: 274, type: !7)
!5707 = !DILocation(line: 274, column: 10, scope: !5697)
!5708 = !DILocalVariable(name: "d", arg: 4, scope: !5697, file: !525, line: 275, type: !493)
!5709 = !DILocation(line: 275, column: 6, scope: !5697)
!5710 = !DILocalVariable(name: "e", arg: 5, scope: !5697, file: !525, line: 276, type: !493)
!5711 = !DILocation(line: 276, column: 6, scope: !5697)
!5712 = !DILocalVariable(name: "t", arg: 6, scope: !5697, file: !525, line: 277, type: !5701)
!5713 = !DILocation(line: 277, column: 15, scope: !5697)
!5714 = !DILocalVariable(name: "m", arg: 7, scope: !5697, file: !525, line: 278, type: !30)
!5715 = !DILocation(line: 278, column: 6, scope: !5697)
!5716 = !DILocalVariable(name: "a", scope: !5697, file: !525, line: 285, type: !7)
!5717 = !DILocation(line: 285, column: 12, scope: !5697)
!5718 = !DILocalVariable(name: "c", scope: !5697, file: !525, line: 286, type: !5719)
!5719 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 544, elements: !562)
!5720 = !DILocation(line: 286, column: 12, scope: !5697)
!5721 = !DILocalVariable(name: "f", scope: !5697, file: !525, line: 287, type: !7)
!5722 = !DILocation(line: 287, column: 12, scope: !5697)
!5723 = !DILocalVariable(name: "g", scope: !5697, file: !525, line: 288, type: !28)
!5724 = !DILocation(line: 288, column: 7, scope: !5697)
!5725 = !DILocalVariable(name: "h", scope: !5697, file: !525, line: 289, type: !28)
!5726 = !DILocation(line: 289, column: 7, scope: !5697)
!5727 = !DILocalVariable(name: "i", scope: !5697, file: !525, line: 290, type: !7)
!5728 = !DILocation(line: 290, column: 21, scope: !5697)
!5729 = !DILocalVariable(name: "j", scope: !5697, file: !525, line: 291, type: !7)
!5730 = !DILocation(line: 291, column: 21, scope: !5697)
!5731 = !DILocalVariable(name: "k", scope: !5697, file: !525, line: 292, type: !28)
!5732 = !DILocation(line: 292, column: 16, scope: !5697)
!5733 = !DILocalVariable(name: "l", scope: !5697, file: !525, line: 293, type: !28)
!5734 = !DILocation(line: 293, column: 7, scope: !5697)
!5735 = !DILocalVariable(name: "p", scope: !5697, file: !525, line: 294, type: !5700)
!5736 = !DILocation(line: 294, column: 22, scope: !5697)
!5737 = !DILocalVariable(name: "q", scope: !5697, file: !525, line: 295, type: !527)
!5738 = !DILocation(line: 295, column: 25, scope: !5697)
!5739 = !DILocalVariable(name: "r", scope: !5697, file: !525, line: 296, type: !528)
!5740 = !DILocation(line: 296, column: 15, scope: !5697)
!5741 = !DILocalVariable(name: "u", scope: !5697, file: !525, line: 297, type: !5742)
!5742 = !DICompositeType(tag: DW_TAG_array_type, baseType: !527, size: 1024, elements: !415)
!5743 = !DILocation(line: 297, column: 16, scope: !5697)
!5744 = !DILocalVariable(name: "v", scope: !5697, file: !525, line: 298, type: !5745)
!5745 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 9216, elements: !405)
!5746 = !DILocation(line: 298, column: 12, scope: !5697)
!5747 = !DILocalVariable(name: "w", scope: !5697, file: !525, line: 299, type: !28)
!5748 = !DILocation(line: 299, column: 16, scope: !5697)
!5749 = !DILocalVariable(name: "x", scope: !5697, file: !525, line: 300, type: !5719)
!5750 = !DILocation(line: 300, column: 12, scope: !5697)
!5751 = !DILocalVariable(name: "xp", scope: !5697, file: !525, line: 301, type: !5700)
!5752 = !DILocation(line: 301, column: 13, scope: !5697)
!5753 = !DILocalVariable(name: "y", scope: !5697, file: !525, line: 302, type: !28)
!5754 = !DILocation(line: 302, column: 7, scope: !5697)
!5755 = !DILocalVariable(name: "z", scope: !5697, file: !525, line: 303, type: !7)
!5756 = !DILocation(line: 303, column: 12, scope: !5697)
!5757 = !DILocation(line: 307, column: 3, scope: !5697)
!5758 = !DILocation(line: 308, column: 7, scope: !5697)
!5759 = !DILocation(line: 308, column: 5, scope: !5697)
!5760 = !DILocation(line: 308, column: 15, scope: !5697)
!5761 = !DILocation(line: 308, column: 13, scope: !5697)
!5762 = !DILocation(line: 309, column: 3, scope: !5697)
!5763 = !DILocation(line: 312, column: 8, scope: !5764)
!5764 = distinct !DILexicalBlock(scope: !5697, file: !525, line: 309, column: 6)
!5765 = !DILocation(line: 312, column: 7, scope: !5764)
!5766 = !DILocation(line: 312, column: 5, scope: !5764)
!5767 = !DILocation(line: 312, column: 10, scope: !5764)
!5768 = !DILocation(line: 313, column: 6, scope: !5764)
!5769 = !DILocation(line: 314, column: 3, scope: !5764)
!5770 = !DILocation(line: 314, column: 12, scope: !5697)
!5771 = distinct !{!5771, !5762, !5772, !816}
!5772 = !DILocation(line: 314, column: 15, scope: !5697)
!5773 = !DILocation(line: 315, column: 7, scope: !5774)
!5774 = distinct !DILexicalBlock(scope: !5697, file: !525, line: 315, column: 7)
!5775 = !DILocation(line: 315, column: 15, scope: !5774)
!5776 = !DILocation(line: 315, column: 12, scope: !5774)
!5777 = !DILocation(line: 315, column: 7, scope: !5697)
!5778 = !DILocation(line: 317, column: 6, scope: !5779)
!5779 = distinct !DILexicalBlock(scope: !5774, file: !525, line: 316, column: 3)
!5780 = !DILocation(line: 317, column: 8, scope: !5779)
!5781 = !DILocation(line: 318, column: 6, scope: !5779)
!5782 = !DILocation(line: 318, column: 8, scope: !5779)
!5783 = !DILocation(line: 319, column: 5, scope: !5779)
!5784 = !DILocation(line: 324, column: 8, scope: !5697)
!5785 = !DILocation(line: 324, column: 7, scope: !5697)
!5786 = !DILocation(line: 324, column: 5, scope: !5697)
!5787 = !DILocation(line: 325, column: 10, scope: !5788)
!5788 = distinct !DILexicalBlock(scope: !5697, file: !525, line: 325, column: 3)
!5789 = !DILocation(line: 325, column: 8, scope: !5788)
!5790 = !DILocation(line: 325, column: 15, scope: !5791)
!5791 = distinct !DILexicalBlock(scope: !5788, file: !525, line: 325, column: 3)
!5792 = !DILocation(line: 325, column: 17, scope: !5791)
!5793 = !DILocation(line: 325, column: 3, scope: !5788)
!5794 = !DILocation(line: 326, column: 11, scope: !5795)
!5795 = distinct !DILexicalBlock(scope: !5791, file: !525, line: 326, column: 9)
!5796 = !DILocation(line: 326, column: 9, scope: !5795)
!5797 = !DILocation(line: 326, column: 9, scope: !5791)
!5798 = !DILocation(line: 327, column: 7, scope: !5795)
!5799 = !DILocation(line: 326, column: 12, scope: !5795)
!5800 = !DILocation(line: 325, column: 27, scope: !5791)
!5801 = !DILocation(line: 325, column: 3, scope: !5791)
!5802 = distinct !{!5802, !5793, !5803, !816}
!5803 = !DILocation(line: 327, column: 7, scope: !5788)
!5804 = !DILocation(line: 328, column: 7, scope: !5697)
!5805 = !DILocation(line: 328, column: 5, scope: !5697)
!5806 = !DILocation(line: 329, column: 17, scope: !5807)
!5807 = distinct !DILexicalBlock(scope: !5697, file: !525, line: 329, column: 7)
!5808 = !DILocation(line: 329, column: 21, scope: !5807)
!5809 = !DILocation(line: 329, column: 19, scope: !5807)
!5810 = !DILocation(line: 329, column: 7, scope: !5697)
!5811 = !DILocation(line: 330, column: 9, scope: !5807)
!5812 = !DILocation(line: 330, column: 7, scope: !5807)
!5813 = !DILocation(line: 330, column: 5, scope: !5807)
!5814 = !DILocation(line: 331, column: 10, scope: !5815)
!5815 = distinct !DILexicalBlock(scope: !5697, file: !525, line: 331, column: 3)
!5816 = !DILocation(line: 331, column: 8, scope: !5815)
!5817 = !DILocation(line: 331, column: 18, scope: !5818)
!5818 = distinct !DILexicalBlock(scope: !5815, file: !525, line: 331, column: 3)
!5819 = !DILocation(line: 331, column: 3, scope: !5815)
!5820 = !DILocation(line: 332, column: 11, scope: !5821)
!5821 = distinct !DILexicalBlock(scope: !5818, file: !525, line: 332, column: 9)
!5822 = !DILocation(line: 332, column: 9, scope: !5821)
!5823 = !DILocation(line: 332, column: 9, scope: !5818)
!5824 = !DILocation(line: 333, column: 7, scope: !5821)
!5825 = !DILocation(line: 332, column: 12, scope: !5821)
!5826 = !DILocation(line: 331, column: 22, scope: !5818)
!5827 = !DILocation(line: 331, column: 3, scope: !5818)
!5828 = distinct !{!5828, !5819, !5829, !816}
!5829 = !DILocation(line: 333, column: 7, scope: !5815)
!5830 = !DILocation(line: 334, column: 7, scope: !5697)
!5831 = !DILocation(line: 334, column: 5, scope: !5697)
!5832 = !DILocation(line: 335, column: 17, scope: !5833)
!5833 = distinct !DILexicalBlock(scope: !5697, file: !525, line: 335, column: 7)
!5834 = !DILocation(line: 335, column: 21, scope: !5833)
!5835 = !DILocation(line: 335, column: 19, scope: !5833)
!5836 = !DILocation(line: 335, column: 7, scope: !5697)
!5837 = !DILocation(line: 336, column: 9, scope: !5833)
!5838 = !DILocation(line: 336, column: 7, scope: !5833)
!5839 = !DILocation(line: 336, column: 5, scope: !5833)
!5840 = !DILocation(line: 337, column: 8, scope: !5697)
!5841 = !DILocation(line: 337, column: 4, scope: !5697)
!5842 = !DILocation(line: 337, column: 6, scope: !5697)
!5843 = !DILocation(line: 341, column: 17, scope: !5844)
!5844 = distinct !DILexicalBlock(scope: !5697, file: !525, line: 341, column: 3)
!5845 = !DILocation(line: 341, column: 14, scope: !5844)
!5846 = !DILocation(line: 341, column: 10, scope: !5844)
!5847 = !DILocation(line: 341, column: 8, scope: !5844)
!5848 = !DILocation(line: 341, column: 20, scope: !5849)
!5849 = distinct !DILexicalBlock(scope: !5844, file: !525, line: 341, column: 3)
!5850 = !DILocation(line: 341, column: 24, scope: !5849)
!5851 = !DILocation(line: 341, column: 22, scope: !5849)
!5852 = !DILocation(line: 341, column: 3, scope: !5844)
!5853 = !DILocation(line: 342, column: 17, scope: !5854)
!5854 = distinct !DILexicalBlock(scope: !5849, file: !525, line: 342, column: 9)
!5855 = !DILocation(line: 342, column: 15, scope: !5854)
!5856 = !DILocation(line: 342, column: 12, scope: !5854)
!5857 = !DILocation(line: 342, column: 21, scope: !5854)
!5858 = !DILocation(line: 342, column: 9, scope: !5849)
!5859 = !DILocation(line: 343, column: 7, scope: !5854)
!5860 = !DILocation(line: 342, column: 23, scope: !5854)
!5861 = !DILocation(line: 341, column: 28, scope: !5849)
!5862 = !DILocation(line: 341, column: 34, scope: !5849)
!5863 = !DILocation(line: 341, column: 3, scope: !5849)
!5864 = distinct !{!5864, !5852, !5865, !816}
!5865 = !DILocation(line: 343, column: 14, scope: !5844)
!5866 = !DILocation(line: 344, column: 15, scope: !5867)
!5867 = distinct !DILexicalBlock(scope: !5697, file: !525, line: 344, column: 7)
!5868 = !DILocation(line: 344, column: 13, scope: !5867)
!5869 = !DILocation(line: 344, column: 10, scope: !5867)
!5870 = !DILocation(line: 344, column: 19, scope: !5867)
!5871 = !DILocation(line: 344, column: 7, scope: !5697)
!5872 = !DILocation(line: 345, column: 5, scope: !5867)
!5873 = !DILocation(line: 346, column: 11, scope: !5697)
!5874 = !DILocation(line: 346, column: 5, scope: !5697)
!5875 = !DILocation(line: 346, column: 3, scope: !5697)
!5876 = !DILocation(line: 346, column: 8, scope: !5697)
!5877 = !DILocation(line: 350, column: 12, scope: !5697)
!5878 = !DILocation(line: 350, column: 3, scope: !5697)
!5879 = !DILocation(line: 350, column: 8, scope: !5697)
!5880 = !DILocation(line: 351, column: 7, scope: !5697)
!5881 = !DILocation(line: 351, column: 9, scope: !5697)
!5882 = !DILocation(line: 351, column: 5, scope: !5697)
!5883 = !DILocation(line: 351, column: 20, scope: !5697)
!5884 = !DILocation(line: 351, column: 22, scope: !5697)
!5885 = !DILocation(line: 351, column: 18, scope: !5697)
!5886 = !DILocation(line: 352, column: 3, scope: !5697)
!5887 = !DILocation(line: 352, column: 10, scope: !5697)
!5888 = !DILocation(line: 353, column: 21, scope: !5889)
!5889 = distinct !DILexicalBlock(scope: !5697, file: !525, line: 352, column: 15)
!5890 = !DILocation(line: 353, column: 19, scope: !5889)
!5891 = !DILocation(line: 353, column: 16, scope: !5889)
!5892 = !DILocation(line: 353, column: 8, scope: !5889)
!5893 = !DILocation(line: 353, column: 11, scope: !5889)
!5894 = distinct !{!5894, !5886, !5895, !816}
!5895 = !DILocation(line: 354, column: 3, scope: !5697)
!5896 = !DILocation(line: 358, column: 7, scope: !5697)
!5897 = !DILocation(line: 358, column: 5, scope: !5697)
!5898 = !DILocation(line: 358, column: 13, scope: !5697)
!5899 = !DILocation(line: 359, column: 3, scope: !5697)
!5900 = !DILocation(line: 360, column: 16, scope: !5901)
!5901 = distinct !DILexicalBlock(scope: !5902, file: !525, line: 360, column: 9)
!5902 = distinct !DILexicalBlock(scope: !5697, file: !525, line: 359, column: 6)
!5903 = !DILocation(line: 360, column: 14, scope: !5901)
!5904 = !DILocation(line: 360, column: 12, scope: !5901)
!5905 = !DILocation(line: 360, column: 20, scope: !5901)
!5906 = !DILocation(line: 360, column: 9, scope: !5902)
!5907 = !DILocation(line: 361, column: 19, scope: !5901)
!5908 = !DILocation(line: 361, column: 11, scope: !5901)
!5909 = !DILocation(line: 361, column: 9, scope: !5901)
!5910 = !DILocation(line: 361, column: 13, scope: !5901)
!5911 = !DILocation(line: 361, column: 7, scope: !5901)
!5912 = !DILocation(line: 361, column: 17, scope: !5901)
!5913 = !DILocation(line: 362, column: 3, scope: !5902)
!5914 = !DILocation(line: 362, column: 12, scope: !5697)
!5915 = !DILocation(line: 362, column: 18, scope: !5697)
!5916 = !DILocation(line: 362, column: 16, scope: !5697)
!5917 = distinct !{!5917, !5899, !5918, !816}
!5918 = !DILocation(line: 362, column: 19, scope: !5697)
!5919 = !DILocation(line: 366, column: 12, scope: !5697)
!5920 = !DILocation(line: 366, column: 3, scope: !5697)
!5921 = !DILocation(line: 366, column: 8, scope: !5697)
!5922 = !DILocation(line: 367, column: 7, scope: !5697)
!5923 = !DILocation(line: 367, column: 5, scope: !5697)
!5924 = !DILocation(line: 368, column: 5, scope: !5697)
!5925 = !DILocation(line: 369, column: 8, scope: !5697)
!5926 = !DILocation(line: 369, column: 7, scope: !5697)
!5927 = !DILocation(line: 369, column: 5, scope: !5697)
!5928 = !DILocation(line: 370, column: 3, scope: !5697)
!5929 = !DILocation(line: 370, column: 8, scope: !5697)
!5930 = !DILocation(line: 371, column: 5, scope: !5697)
!5931 = !DILocation(line: 372, column: 5, scope: !5697)
!5932 = !DILocation(line: 375, column: 3, scope: !5697)
!5933 = !DILocation(line: 375, column: 10, scope: !5934)
!5934 = distinct !DILexicalBlock(scope: !5935, file: !525, line: 375, column: 3)
!5935 = distinct !DILexicalBlock(scope: !5697, file: !525, line: 375, column: 3)
!5936 = !DILocation(line: 375, column: 15, scope: !5934)
!5937 = !DILocation(line: 375, column: 12, scope: !5934)
!5938 = !DILocation(line: 375, column: 3, scope: !5935)
!5939 = !DILocation(line: 377, column: 11, scope: !5940)
!5940 = distinct !DILexicalBlock(scope: !5934, file: !525, line: 376, column: 3)
!5941 = !DILocation(line: 377, column: 9, scope: !5940)
!5942 = !DILocation(line: 377, column: 7, scope: !5940)
!5943 = !DILocation(line: 378, column: 5, scope: !5940)
!5944 = !DILocation(line: 378, column: 13, scope: !5940)
!5945 = !DILocation(line: 382, column: 7, scope: !5946)
!5946 = distinct !DILexicalBlock(scope: !5940, file: !525, line: 379, column: 5)
!5947 = !DILocation(line: 382, column: 14, scope: !5946)
!5948 = !DILocation(line: 382, column: 18, scope: !5946)
!5949 = !DILocation(line: 382, column: 22, scope: !5946)
!5950 = !DILocation(line: 382, column: 20, scope: !5946)
!5951 = !DILocation(line: 382, column: 16, scope: !5946)
!5952 = !DILocation(line: 384, column: 10, scope: !5953)
!5953 = distinct !DILexicalBlock(scope: !5946, file: !525, line: 383, column: 7)
!5954 = !DILocation(line: 385, column: 14, scope: !5953)
!5955 = !DILocation(line: 385, column: 11, scope: !5953)
!5956 = !DILocation(line: 388, column: 18, scope: !5953)
!5957 = !DILocation(line: 388, column: 22, scope: !5953)
!5958 = !DILocation(line: 388, column: 20, scope: !5953)
!5959 = !DILocation(line: 388, column: 16, scope: !5953)
!5960 = !DILocation(line: 388, column: 37, scope: !5953)
!5961 = !DILocation(line: 388, column: 25, scope: !5953)
!5962 = !DILocation(line: 388, column: 13, scope: !5953)
!5963 = !DILocation(line: 388, column: 41, scope: !5953)
!5964 = !DILocation(line: 388, column: 45, scope: !5953)
!5965 = !DILocation(line: 388, column: 11, scope: !5953)
!5966 = !DILocation(line: 389, column: 28, scope: !5967)
!5967 = distinct !DILexicalBlock(scope: !5953, file: !525, line: 389, column: 13)
!5968 = !DILocation(line: 389, column: 32, scope: !5967)
!5969 = !DILocation(line: 389, column: 30, scope: !5967)
!5970 = !DILocation(line: 389, column: 26, scope: !5967)
!5971 = !DILocation(line: 389, column: 20, scope: !5967)
!5972 = !DILocation(line: 389, column: 16, scope: !5967)
!5973 = !DILocation(line: 389, column: 38, scope: !5967)
!5974 = !DILocation(line: 389, column: 40, scope: !5967)
!5975 = !DILocation(line: 389, column: 36, scope: !5967)
!5976 = !DILocation(line: 389, column: 13, scope: !5953)
!5977 = !DILocation(line: 391, column: 16, scope: !5978)
!5978 = distinct !DILexicalBlock(scope: !5967, file: !525, line: 390, column: 9)
!5979 = !DILocation(line: 391, column: 18, scope: !5978)
!5980 = !DILocation(line: 391, column: 13, scope: !5978)
!5981 = !DILocation(line: 392, column: 16, scope: !5978)
!5982 = !DILocation(line: 392, column: 20, scope: !5978)
!5983 = !DILocation(line: 392, column: 18, scope: !5978)
!5984 = !DILocation(line: 392, column: 14, scope: !5978)
!5985 = !DILocation(line: 393, column: 11, scope: !5978)
!5986 = !DILocation(line: 393, column: 18, scope: !5978)
!5987 = !DILocation(line: 393, column: 24, scope: !5978)
!5988 = !DILocation(line: 393, column: 22, scope: !5978)
!5989 = !DILocation(line: 395, column: 20, scope: !5990)
!5990 = distinct !DILexicalBlock(scope: !5991, file: !525, line: 395, column: 17)
!5991 = distinct !DILexicalBlock(scope: !5978, file: !525, line: 394, column: 11)
!5992 = !DILocation(line: 395, column: 31, scope: !5990)
!5993 = !DILocation(line: 395, column: 30, scope: !5990)
!5994 = !DILocation(line: 395, column: 27, scope: !5990)
!5995 = !DILocation(line: 395, column: 17, scope: !5991)
!5996 = !DILocation(line: 396, column: 15, scope: !5990)
!5997 = !DILocation(line: 397, column: 19, scope: !5991)
!5998 = !DILocation(line: 397, column: 18, scope: !5991)
!5999 = !DILocation(line: 397, column: 15, scope: !5991)
!6000 = distinct !{!6000, !5985, !6001, !816}
!6001 = !DILocation(line: 398, column: 11, scope: !5978)
!6002 = !DILocation(line: 399, column: 9, scope: !5978)
!6003 = !DILocation(line: 400, column: 18, scope: !5953)
!6004 = !DILocation(line: 400, column: 15, scope: !5953)
!6005 = !DILocation(line: 400, column: 11, scope: !5953)
!6006 = !DILocation(line: 403, column: 41, scope: !6007)
!6007 = distinct !DILexicalBlock(scope: !5953, file: !525, line: 403, column: 13)
!6008 = !DILocation(line: 403, column: 43, scope: !6007)
!6009 = !DILocation(line: 403, column: 40, scope: !6007)
!6010 = !DILocation(line: 403, column: 47, scope: !6007)
!6011 = !DILocation(line: 403, column: 33, scope: !6007)
!6012 = !DILocation(line: 403, column: 18, scope: !6007)
!6013 = !DILocation(line: 403, column: 16, scope: !6007)
!6014 = !DILocation(line: 403, column: 70, scope: !6007)
!6015 = !DILocation(line: 403, column: 13, scope: !5953)
!6016 = !DILocation(line: 406, column: 15, scope: !6017)
!6017 = distinct !DILexicalBlock(scope: !6018, file: !525, line: 406, column: 15)
!6018 = distinct !DILexicalBlock(scope: !6007, file: !525, line: 405, column: 9)
!6019 = !DILocation(line: 406, column: 15, scope: !6018)
!6020 = !DILocation(line: 407, column: 23, scope: !6017)
!6021 = !DILocation(line: 407, column: 13, scope: !6017)
!6022 = !DILocation(line: 408, column: 11, scope: !6018)
!6023 = !DILocation(line: 410, column: 18, scope: !5953)
!6024 = !DILocation(line: 410, column: 20, scope: !5953)
!6025 = !DILocation(line: 410, column: 15, scope: !5953)
!6026 = !DILocation(line: 411, column: 14, scope: !5953)
!6027 = !DILocation(line: 411, column: 16, scope: !5953)
!6028 = !DILocation(line: 411, column: 10, scope: !5953)
!6029 = !DILocation(line: 411, column: 12, scope: !5953)
!6030 = !DILocation(line: 412, column: 17, scope: !5953)
!6031 = !DILocation(line: 412, column: 20, scope: !5953)
!6032 = !DILocation(line: 412, column: 22, scope: !5953)
!6033 = !DILocation(line: 412, column: 13, scope: !5953)
!6034 = !DILocation(line: 412, column: 26, scope: !5953)
!6035 = !DILocation(line: 413, column: 16, scope: !5953)
!6036 = !DILocation(line: 413, column: 11, scope: !5953)
!6037 = !DILocation(line: 413, column: 9, scope: !5953)
!6038 = !DILocation(line: 413, column: 14, scope: !5953)
!6039 = !DILocation(line: 416, column: 13, scope: !6040)
!6040 = distinct !DILexicalBlock(scope: !5953, file: !525, line: 416, column: 13)
!6041 = !DILocation(line: 416, column: 13, scope: !5953)
!6042 = !DILocation(line: 418, column: 18, scope: !6043)
!6043 = distinct !DILexicalBlock(scope: !6040, file: !525, line: 417, column: 9)
!6044 = !DILocation(line: 418, column: 13, scope: !6043)
!6045 = !DILocation(line: 418, column: 11, scope: !6043)
!6046 = !DILocation(line: 418, column: 16, scope: !6043)
!6047 = !DILocation(line: 419, column: 22, scope: !6043)
!6048 = !DILocation(line: 419, column: 17, scope: !6043)
!6049 = !DILocation(line: 419, column: 13, scope: !6043)
!6050 = !DILocation(line: 419, column: 15, scope: !6043)
!6051 = !DILocation(line: 420, column: 28, scope: !6043)
!6052 = !DILocation(line: 420, column: 26, scope: !6043)
!6053 = !DILocation(line: 420, column: 17, scope: !6043)
!6054 = !DILocation(line: 420, column: 13, scope: !6043)
!6055 = !DILocation(line: 420, column: 15, scope: !6043)
!6056 = !DILocation(line: 421, column: 19, scope: !6043)
!6057 = !DILocation(line: 421, column: 13, scope: !6043)
!6058 = !DILocation(line: 421, column: 15, scope: !6043)
!6059 = !DILocation(line: 421, column: 17, scope: !6043)
!6060 = !DILocation(line: 422, column: 15, scope: !6043)
!6061 = !DILocation(line: 422, column: 21, scope: !6043)
!6062 = !DILocation(line: 422, column: 25, scope: !6043)
!6063 = !DILocation(line: 422, column: 23, scope: !6043)
!6064 = !DILocation(line: 422, column: 17, scope: !6043)
!6065 = !DILocation(line: 422, column: 13, scope: !6043)
!6066 = !DILocation(line: 423, column: 13, scope: !6043)
!6067 = !DILocation(line: 423, column: 14, scope: !6043)
!6068 = !DILocation(line: 423, column: 11, scope: !6043)
!6069 = !DILocation(line: 423, column: 18, scope: !6043)
!6070 = !DILocation(line: 423, column: 23, scope: !6043)
!6071 = !DILocation(line: 424, column: 9, scope: !6043)
!6072 = distinct !{!6072, !5945, !6073, !816}
!6073 = !DILocation(line: 425, column: 7, scope: !5946)
!6074 = !DILocation(line: 428, column: 19, scope: !5946)
!6075 = !DILocation(line: 428, column: 23, scope: !5946)
!6076 = !DILocation(line: 428, column: 21, scope: !5946)
!6077 = !DILocation(line: 428, column: 13, scope: !5946)
!6078 = !DILocation(line: 428, column: 9, scope: !5946)
!6079 = !DILocation(line: 428, column: 11, scope: !5946)
!6080 = !DILocation(line: 429, column: 11, scope: !6081)
!6081 = distinct !DILexicalBlock(scope: !5946, file: !525, line: 429, column: 11)
!6082 = !DILocation(line: 429, column: 16, scope: !6081)
!6083 = !DILocation(line: 429, column: 20, scope: !6081)
!6084 = !DILocation(line: 429, column: 18, scope: !6081)
!6085 = !DILocation(line: 429, column: 13, scope: !6081)
!6086 = !DILocation(line: 429, column: 11, scope: !5946)
!6087 = !DILocation(line: 430, column: 11, scope: !6081)
!6088 = !DILocation(line: 430, column: 13, scope: !6081)
!6089 = !DILocation(line: 430, column: 9, scope: !6081)
!6090 = !DILocation(line: 431, column: 17, scope: !6091)
!6091 = distinct !DILexicalBlock(scope: !6081, file: !525, line: 431, column: 16)
!6092 = !DILocation(line: 431, column: 16, scope: !6091)
!6093 = !DILocation(line: 431, column: 21, scope: !6091)
!6094 = !DILocation(line: 431, column: 19, scope: !6091)
!6095 = !DILocation(line: 431, column: 16, scope: !6081)
!6096 = !DILocation(line: 433, column: 22, scope: !6097)
!6097 = distinct !DILexicalBlock(scope: !6091, file: !525, line: 432, column: 7)
!6098 = !DILocation(line: 433, column: 21, scope: !6097)
!6099 = !DILocation(line: 433, column: 24, scope: !6097)
!6100 = !DILocation(line: 433, column: 15, scope: !6097)
!6101 = !DILocation(line: 433, column: 11, scope: !6097)
!6102 = !DILocation(line: 433, column: 13, scope: !6097)
!6103 = !DILocation(line: 434, column: 24, scope: !6097)
!6104 = !DILocation(line: 434, column: 23, scope: !6097)
!6105 = !DILocation(line: 434, column: 17, scope: !6097)
!6106 = !DILocation(line: 434, column: 11, scope: !6097)
!6107 = !DILocation(line: 434, column: 13, scope: !6097)
!6108 = !DILocation(line: 434, column: 15, scope: !6097)
!6109 = !DILocation(line: 435, column: 3, scope: !6097)
!6110 = !DILocation(line: 436, column: 7, scope: !6097)
!6111 = !DILocation(line: 439, column: 20, scope: !6112)
!6112 = distinct !DILexicalBlock(scope: !6091, file: !525, line: 438, column: 7)
!6113 = !DILocation(line: 439, column: 23, scope: !6112)
!6114 = !DILocation(line: 439, column: 22, scope: !6112)
!6115 = !DILocation(line: 439, column: 27, scope: !6112)
!6116 = !DILocation(line: 439, column: 25, scope: !6112)
!6117 = !DILocation(line: 439, column: 15, scope: !6112)
!6118 = !DILocation(line: 439, column: 11, scope: !6112)
!6119 = !DILocation(line: 439, column: 13, scope: !6112)
!6120 = !DILocation(line: 440, column: 17, scope: !6112)
!6121 = !DILocation(line: 440, column: 21, scope: !6112)
!6122 = !DILocation(line: 440, column: 19, scope: !6112)
!6123 = !DILocation(line: 440, column: 26, scope: !6112)
!6124 = !DILocation(line: 440, column: 24, scope: !6112)
!6125 = !DILocation(line: 440, column: 11, scope: !6112)
!6126 = !DILocation(line: 440, column: 13, scope: !6112)
!6127 = !DILocation(line: 440, column: 15, scope: !6112)
!6128 = !DILocation(line: 444, column: 17, scope: !5946)
!6129 = !DILocation(line: 444, column: 21, scope: !5946)
!6130 = !DILocation(line: 444, column: 19, scope: !5946)
!6131 = !DILocation(line: 444, column: 13, scope: !5946)
!6132 = !DILocation(line: 444, column: 9, scope: !5946)
!6133 = !DILocation(line: 445, column: 16, scope: !6134)
!6134 = distinct !DILexicalBlock(scope: !5946, file: !525, line: 445, column: 7)
!6135 = !DILocation(line: 445, column: 21, scope: !6134)
!6136 = !DILocation(line: 445, column: 18, scope: !6134)
!6137 = !DILocation(line: 445, column: 14, scope: !6134)
!6138 = !DILocation(line: 445, column: 12, scope: !6134)
!6139 = !DILocation(line: 445, column: 24, scope: !6140)
!6140 = distinct !DILexicalBlock(scope: !6134, file: !525, line: 445, column: 7)
!6141 = !DILocation(line: 445, column: 28, scope: !6140)
!6142 = !DILocation(line: 445, column: 26, scope: !6140)
!6143 = !DILocation(line: 445, column: 7, scope: !6134)
!6144 = !DILocation(line: 446, column: 9, scope: !6140)
!6145 = !DILocation(line: 446, column: 11, scope: !6140)
!6146 = !DILocation(line: 446, column: 16, scope: !6140)
!6147 = !DILocation(line: 445, column: 36, scope: !6140)
!6148 = !DILocation(line: 445, column: 33, scope: !6140)
!6149 = !DILocation(line: 445, column: 7, scope: !6140)
!6150 = distinct !{!6150, !6143, !6151, !816}
!6151 = !DILocation(line: 446, column: 16, scope: !6134)
!6152 = !DILocation(line: 449, column: 22, scope: !6153)
!6153 = distinct !DILexicalBlock(scope: !5946, file: !525, line: 449, column: 7)
!6154 = !DILocation(line: 449, column: 24, scope: !6153)
!6155 = !DILocation(line: 449, column: 18, scope: !6153)
!6156 = !DILocation(line: 449, column: 14, scope: !6153)
!6157 = !DILocation(line: 449, column: 12, scope: !6153)
!6158 = !DILocation(line: 449, column: 30, scope: !6159)
!6159 = distinct !DILexicalBlock(scope: !6153, file: !525, line: 449, column: 7)
!6160 = !DILocation(line: 449, column: 34, scope: !6159)
!6161 = !DILocation(line: 449, column: 32, scope: !6159)
!6162 = !DILocation(line: 449, column: 7, scope: !6153)
!6163 = !DILocation(line: 450, column: 14, scope: !6159)
!6164 = !DILocation(line: 450, column: 11, scope: !6159)
!6165 = !DILocation(line: 450, column: 9, scope: !6159)
!6166 = !DILocation(line: 449, column: 39, scope: !6159)
!6167 = !DILocation(line: 449, column: 7, scope: !6159)
!6168 = distinct !{!6168, !6162, !6169, !816}
!6169 = !DILocation(line: 450, column: 14, scope: !6153)
!6170 = !DILocation(line: 451, column: 12, scope: !5946)
!6171 = !DILocation(line: 451, column: 9, scope: !5946)
!6172 = !DILocation(line: 454, column: 7, scope: !5946)
!6173 = !DILocation(line: 454, column: 15, scope: !5946)
!6174 = !DILocation(line: 454, column: 26, scope: !5946)
!6175 = !DILocation(line: 454, column: 23, scope: !5946)
!6176 = !DILocation(line: 454, column: 29, scope: !5946)
!6177 = !DILocation(line: 454, column: 17, scope: !5946)
!6178 = !DILocation(line: 454, column: 40, scope: !5946)
!6179 = !DILocation(line: 454, column: 38, scope: !5946)
!6180 = !DILocation(line: 454, column: 35, scope: !5946)
!6181 = !DILocation(line: 456, column: 10, scope: !6182)
!6182 = distinct !DILexicalBlock(scope: !5946, file: !525, line: 455, column: 7)
!6183 = !DILocation(line: 457, column: 14, scope: !6182)
!6184 = !DILocation(line: 457, column: 11, scope: !6182)
!6185 = distinct !{!6185, !6172, !6186, !816}
!6186 = !DILocation(line: 458, column: 7, scope: !5946)
!6187 = distinct !{!6187, !5943, !6188, !816}
!6188 = !DILocation(line: 459, column: 5, scope: !5940)
!6189 = !DILocation(line: 460, column: 3, scope: !5940)
!6190 = !DILocation(line: 375, column: 19, scope: !5934)
!6191 = !DILocation(line: 375, column: 3, scope: !5934)
!6192 = distinct !{!6192, !5938, !6193, !816}
!6193 = !DILocation(line: 460, column: 3, scope: !5935)
!6194 = !DILocation(line: 464, column: 10, scope: !5697)
!6195 = !DILocation(line: 464, column: 12, scope: !5697)
!6196 = !DILocation(line: 464, column: 17, scope: !5697)
!6197 = !DILocation(line: 464, column: 20, scope: !5697)
!6198 = !DILocation(line: 464, column: 22, scope: !5697)
!6199 = !DILocation(line: 0, scope: !5697)
!6200 = !DILocation(line: 464, column: 3, scope: !5697)
!6201 = !DILocation(line: 465, column: 1, scope: !5697)
!6202 = distinct !DISubprogram(name: "huft_free", scope: !525, file: !525, line: 469, type: !6203, scopeLine: 474, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !524, retainedNodes: !271)
!6203 = !DISubroutineType(types: !6204)
!6204 = !{!28, !527}
!6205 = !DILocalVariable(name: "t", arg: 1, scope: !6202, file: !525, line: 470, type: !527)
!6206 = !DILocation(line: 470, column: 14, scope: !6202)
!6207 = !DILocalVariable(name: "p", scope: !6202, file: !525, line: 475, type: !527)
!6208 = !DILocation(line: 475, column: 25, scope: !6202)
!6209 = !DILocalVariable(name: "q", scope: !6202, file: !525, line: 475, type: !527)
!6210 = !DILocation(line: 475, column: 29, scope: !6202)
!6211 = !DILocation(line: 479, column: 7, scope: !6202)
!6212 = !DILocation(line: 479, column: 5, scope: !6202)
!6213 = !DILocation(line: 480, column: 3, scope: !6202)
!6214 = !DILocation(line: 480, column: 10, scope: !6202)
!6215 = !DILocation(line: 480, column: 12, scope: !6202)
!6216 = !DILocation(line: 482, column: 10, scope: !6217)
!6217 = distinct !DILexicalBlock(scope: !6202, file: !525, line: 481, column: 3)
!6218 = !DILocation(line: 482, column: 16, scope: !6217)
!6219 = !DILocation(line: 482, column: 18, scope: !6217)
!6220 = !DILocation(line: 482, column: 7, scope: !6217)
!6221 = !DILocation(line: 483, column: 17, scope: !6217)
!6222 = !DILocation(line: 483, column: 10, scope: !6217)
!6223 = !DILocation(line: 483, column: 5, scope: !6217)
!6224 = !DILocation(line: 484, column: 9, scope: !6217)
!6225 = !DILocation(line: 484, column: 7, scope: !6217)
!6226 = distinct !{!6226, !6213, !6227, !816}
!6227 = !DILocation(line: 485, column: 3, scope: !6202)
!6228 = !DILocation(line: 486, column: 3, scope: !6202)
!6229 = distinct !DISubprogram(name: "inflate_codes", scope: !525, file: !525, line: 490, type: !6230, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !524, retainedNodes: !271)
!6230 = !DISubroutineType(types: !6231)
!6231 = !{!28, !527, !527, !28, !28}
!6232 = !DILocalVariable(name: "tl", arg: 1, scope: !6229, file: !525, line: 491, type: !527)
!6233 = !DILocation(line: 491, column: 14, scope: !6229)
!6234 = !DILocalVariable(name: "td", arg: 2, scope: !6229, file: !525, line: 491, type: !527)
!6235 = !DILocation(line: 491, column: 19, scope: !6229)
!6236 = !DILocalVariable(name: "bl", arg: 3, scope: !6229, file: !525, line: 492, type: !28)
!6237 = !DILocation(line: 492, column: 5, scope: !6229)
!6238 = !DILocalVariable(name: "bd", arg: 4, scope: !6229, file: !525, line: 492, type: !28)
!6239 = !DILocation(line: 492, column: 9, scope: !6229)
!6240 = !DILocalVariable(name: "e", scope: !6229, file: !525, line: 496, type: !7)
!6241 = !DILocation(line: 496, column: 21, scope: !6229)
!6242 = !DILocalVariable(name: "n", scope: !6229, file: !525, line: 497, type: !7)
!6243 = !DILocation(line: 497, column: 12, scope: !6229)
!6244 = !DILocalVariable(name: "d", scope: !6229, file: !525, line: 497, type: !7)
!6245 = !DILocation(line: 497, column: 15, scope: !6229)
!6246 = !DILocalVariable(name: "w", scope: !6229, file: !525, line: 498, type: !7)
!6247 = !DILocation(line: 498, column: 12, scope: !6229)
!6248 = !DILocalVariable(name: "t", scope: !6229, file: !525, line: 499, type: !527)
!6249 = !DILocation(line: 499, column: 16, scope: !6229)
!6250 = !DILocalVariable(name: "ml", scope: !6229, file: !525, line: 500, type: !7)
!6251 = !DILocation(line: 500, column: 12, scope: !6229)
!6252 = !DILocalVariable(name: "md", scope: !6229, file: !525, line: 500, type: !7)
!6253 = !DILocation(line: 500, column: 16, scope: !6229)
!6254 = !DILocalVariable(name: "b", scope: !6229, file: !525, line: 501, type: !95)
!6255 = !DILocation(line: 501, column: 16, scope: !6229)
!6256 = !DILocalVariable(name: "k", scope: !6229, file: !525, line: 502, type: !7)
!6257 = !DILocation(line: 502, column: 21, scope: !6229)
!6258 = !DILocation(line: 506, column: 7, scope: !6229)
!6259 = !DILocation(line: 506, column: 5, scope: !6229)
!6260 = !DILocation(line: 507, column: 7, scope: !6229)
!6261 = !DILocation(line: 507, column: 5, scope: !6229)
!6262 = !DILocation(line: 508, column: 7, scope: !6229)
!6263 = !DILocation(line: 508, column: 5, scope: !6229)
!6264 = !DILocation(line: 511, column: 18, scope: !6229)
!6265 = !DILocation(line: 511, column: 8, scope: !6229)
!6266 = !DILocation(line: 511, column: 6, scope: !6229)
!6267 = !DILocation(line: 512, column: 18, scope: !6229)
!6268 = !DILocation(line: 512, column: 8, scope: !6229)
!6269 = !DILocation(line: 512, column: 6, scope: !6229)
!6270 = !DILocation(line: 513, column: 3, scope: !6229)
!6271 = !DILocation(line: 515, column: 5, scope: !6272)
!6272 = distinct !DILexicalBlock(scope: !6273, file: !525, line: 515, column: 5)
!6273 = distinct !DILexicalBlock(scope: !6274, file: !525, line: 514, column: 3)
!6274 = distinct !DILexicalBlock(scope: !6275, file: !525, line: 513, column: 3)
!6275 = distinct !DILexicalBlock(scope: !6229, file: !525, line: 513, column: 3)
!6276 = !DILocation(line: 515, column: 5, scope: !6277)
!6277 = distinct !DILexicalBlock(scope: !6272, file: !525, line: 515, column: 5)
!6278 = distinct !{!6278, !6271, !6271, !816}
!6279 = !DILocation(line: 516, column: 19, scope: !6280)
!6280 = distinct !DILexicalBlock(scope: !6273, file: !525, line: 516, column: 9)
!6281 = !DILocation(line: 516, column: 35, scope: !6280)
!6282 = !DILocation(line: 516, column: 25, scope: !6280)
!6283 = !DILocation(line: 516, column: 39, scope: !6280)
!6284 = !DILocation(line: 516, column: 37, scope: !6280)
!6285 = !DILocation(line: 516, column: 22, scope: !6280)
!6286 = !DILocation(line: 516, column: 17, scope: !6280)
!6287 = !DILocation(line: 516, column: 45, scope: !6280)
!6288 = !DILocation(line: 516, column: 14, scope: !6280)
!6289 = !DILocation(line: 516, column: 12, scope: !6280)
!6290 = !DILocation(line: 516, column: 48, scope: !6280)
!6291 = !DILocation(line: 516, column: 9, scope: !6273)
!6292 = !DILocation(line: 517, column: 7, scope: !6280)
!6293 = !DILocation(line: 518, column: 13, scope: !6294)
!6294 = distinct !DILexicalBlock(scope: !6295, file: !525, line: 518, column: 13)
!6295 = distinct !DILexicalBlock(scope: !6280, file: !525, line: 517, column: 10)
!6296 = !DILocation(line: 518, column: 15, scope: !6294)
!6297 = !DILocation(line: 518, column: 13, scope: !6295)
!6298 = !DILocation(line: 519, column: 11, scope: !6294)
!6299 = !DILocation(line: 520, column: 9, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6295, file: !525, line: 520, column: 9)
!6301 = !DILocation(line: 521, column: 11, scope: !6295)
!6302 = !DILocation(line: 522, column: 9, scope: !6303)
!6303 = distinct !DILexicalBlock(scope: !6295, file: !525, line: 522, column: 9)
!6304 = !DILocation(line: 522, column: 9, scope: !6305)
!6305 = distinct !DILexicalBlock(scope: !6303, file: !525, line: 522, column: 9)
!6306 = distinct !{!6306, !6302, !6302, !816}
!6307 = !DILocation(line: 523, column: 7, scope: !6295)
!6308 = !DILocation(line: 523, column: 26, scope: !6280)
!6309 = !DILocation(line: 523, column: 29, scope: !6280)
!6310 = !DILocation(line: 523, column: 31, scope: !6280)
!6311 = !DILocation(line: 523, column: 46, scope: !6280)
!6312 = !DILocation(line: 523, column: 36, scope: !6280)
!6313 = !DILocation(line: 523, column: 60, scope: !6280)
!6314 = !DILocation(line: 523, column: 50, scope: !6280)
!6315 = !DILocation(line: 523, column: 48, scope: !6280)
!6316 = !DILocation(line: 523, column: 33, scope: !6280)
!6317 = !DILocation(line: 523, column: 24, scope: !6280)
!6318 = !DILocation(line: 523, column: 66, scope: !6280)
!6319 = !DILocation(line: 523, column: 21, scope: !6280)
!6320 = !DILocation(line: 523, column: 19, scope: !6280)
!6321 = !DILocation(line: 523, column: 69, scope: !6280)
!6322 = distinct !{!6322, !6292, !6323, !816}
!6323 = !DILocation(line: 523, column: 73, scope: !6280)
!6324 = !DILocation(line: 524, column: 5, scope: !6325)
!6325 = distinct !DILexicalBlock(scope: !6273, file: !525, line: 524, column: 5)
!6326 = !DILocation(line: 525, column: 9, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6273, file: !525, line: 525, column: 9)
!6328 = !DILocation(line: 525, column: 11, scope: !6327)
!6329 = !DILocation(line: 525, column: 9, scope: !6273)
!6330 = !DILocation(line: 527, column: 25, scope: !6331)
!6331 = distinct !DILexicalBlock(scope: !6327, file: !525, line: 526, column: 5)
!6332 = !DILocation(line: 527, column: 28, scope: !6331)
!6333 = !DILocation(line: 527, column: 30, scope: !6331)
!6334 = !DILocation(line: 527, column: 20, scope: !6331)
!6335 = !DILocation(line: 527, column: 14, scope: !6331)
!6336 = !DILocation(line: 527, column: 7, scope: !6331)
!6337 = !DILocation(line: 527, column: 18, scope: !6331)
!6338 = !DILocation(line: 529, column: 11, scope: !6339)
!6339 = distinct !DILexicalBlock(scope: !6331, file: !525, line: 529, column: 11)
!6340 = !DILocation(line: 529, column: 13, scope: !6339)
!6341 = !DILocation(line: 529, column: 11, scope: !6331)
!6342 = !DILocation(line: 531, column: 9, scope: !6343)
!6343 = distinct !DILexicalBlock(scope: !6339, file: !525, line: 530, column: 7)
!6344 = !DILocation(line: 532, column: 11, scope: !6343)
!6345 = !DILocation(line: 533, column: 7, scope: !6343)
!6346 = !DILocation(line: 534, column: 5, scope: !6331)
!6347 = !DILocation(line: 538, column: 11, scope: !6348)
!6348 = distinct !DILexicalBlock(scope: !6349, file: !525, line: 538, column: 11)
!6349 = distinct !DILexicalBlock(scope: !6327, file: !525, line: 536, column: 5)
!6350 = !DILocation(line: 538, column: 13, scope: !6348)
!6351 = !DILocation(line: 538, column: 11, scope: !6349)
!6352 = !DILocation(line: 539, column: 9, scope: !6348)
!6353 = !DILocation(line: 542, column: 7, scope: !6354)
!6354 = distinct !DILexicalBlock(scope: !6349, file: !525, line: 542, column: 7)
!6355 = !DILocation(line: 542, column: 7, scope: !6356)
!6356 = distinct !DILexicalBlock(scope: !6354, file: !525, line: 542, column: 7)
!6357 = distinct !{!6357, !6353, !6353, !816}
!6358 = !DILocation(line: 543, column: 11, scope: !6349)
!6359 = !DILocation(line: 543, column: 14, scope: !6349)
!6360 = !DILocation(line: 543, column: 16, scope: !6349)
!6361 = !DILocation(line: 543, column: 31, scope: !6349)
!6362 = !DILocation(line: 543, column: 21, scope: !6349)
!6363 = !DILocation(line: 543, column: 45, scope: !6349)
!6364 = !DILocation(line: 543, column: 35, scope: !6349)
!6365 = !DILocation(line: 543, column: 33, scope: !6349)
!6366 = !DILocation(line: 543, column: 18, scope: !6349)
!6367 = !DILocation(line: 543, column: 9, scope: !6349)
!6368 = !DILocation(line: 544, column: 7, scope: !6369)
!6369 = distinct !DILexicalBlock(scope: !6349, file: !525, line: 544, column: 7)
!6370 = !DILocation(line: 547, column: 7, scope: !6371)
!6371 = distinct !DILexicalBlock(scope: !6349, file: !525, line: 547, column: 7)
!6372 = !DILocation(line: 547, column: 7, scope: !6373)
!6373 = distinct !DILexicalBlock(scope: !6371, file: !525, line: 547, column: 7)
!6374 = distinct !{!6374, !6370, !6370, !816}
!6375 = !DILocation(line: 548, column: 21, scope: !6376)
!6376 = distinct !DILexicalBlock(scope: !6349, file: !525, line: 548, column: 11)
!6377 = !DILocation(line: 548, column: 37, scope: !6376)
!6378 = !DILocation(line: 548, column: 27, scope: !6376)
!6379 = !DILocation(line: 548, column: 41, scope: !6376)
!6380 = !DILocation(line: 548, column: 39, scope: !6376)
!6381 = !DILocation(line: 548, column: 24, scope: !6376)
!6382 = !DILocation(line: 548, column: 19, scope: !6376)
!6383 = !DILocation(line: 548, column: 47, scope: !6376)
!6384 = !DILocation(line: 548, column: 16, scope: !6376)
!6385 = !DILocation(line: 548, column: 14, scope: !6376)
!6386 = !DILocation(line: 548, column: 50, scope: !6376)
!6387 = !DILocation(line: 548, column: 11, scope: !6349)
!6388 = !DILocation(line: 549, column: 9, scope: !6376)
!6389 = !DILocation(line: 550, column: 15, scope: !6390)
!6390 = distinct !DILexicalBlock(scope: !6391, file: !525, line: 550, column: 15)
!6391 = distinct !DILexicalBlock(scope: !6376, file: !525, line: 549, column: 12)
!6392 = !DILocation(line: 550, column: 17, scope: !6390)
!6393 = !DILocation(line: 550, column: 15, scope: !6391)
!6394 = !DILocation(line: 551, column: 13, scope: !6390)
!6395 = !DILocation(line: 552, column: 11, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !6391, file: !525, line: 552, column: 11)
!6397 = !DILocation(line: 553, column: 13, scope: !6391)
!6398 = !DILocation(line: 554, column: 11, scope: !6399)
!6399 = distinct !DILexicalBlock(scope: !6391, file: !525, line: 554, column: 11)
!6400 = !DILocation(line: 554, column: 11, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !6399, file: !525, line: 554, column: 11)
!6402 = distinct !{!6402, !6398, !6398, !816}
!6403 = !DILocation(line: 555, column: 9, scope: !6391)
!6404 = !DILocation(line: 555, column: 28, scope: !6376)
!6405 = !DILocation(line: 555, column: 31, scope: !6376)
!6406 = !DILocation(line: 555, column: 33, scope: !6376)
!6407 = !DILocation(line: 555, column: 48, scope: !6376)
!6408 = !DILocation(line: 555, column: 38, scope: !6376)
!6409 = !DILocation(line: 555, column: 62, scope: !6376)
!6410 = !DILocation(line: 555, column: 52, scope: !6376)
!6411 = !DILocation(line: 555, column: 50, scope: !6376)
!6412 = !DILocation(line: 555, column: 35, scope: !6376)
!6413 = !DILocation(line: 555, column: 26, scope: !6376)
!6414 = !DILocation(line: 555, column: 68, scope: !6376)
!6415 = !DILocation(line: 555, column: 23, scope: !6376)
!6416 = !DILocation(line: 555, column: 21, scope: !6376)
!6417 = !DILocation(line: 555, column: 71, scope: !6376)
!6418 = distinct !{!6418, !6388, !6419, !816}
!6419 = !DILocation(line: 555, column: 75, scope: !6376)
!6420 = !DILocation(line: 556, column: 7, scope: !6421)
!6421 = distinct !DILexicalBlock(scope: !6349, file: !525, line: 556, column: 7)
!6422 = !DILocation(line: 557, column: 7, scope: !6423)
!6423 = distinct !DILexicalBlock(scope: !6349, file: !525, line: 557, column: 7)
!6424 = !DILocation(line: 557, column: 7, scope: !6425)
!6425 = distinct !DILexicalBlock(scope: !6423, file: !525, line: 557, column: 7)
!6426 = distinct !{!6426, !6422, !6422, !816}
!6427 = !DILocation(line: 558, column: 11, scope: !6349)
!6428 = !DILocation(line: 558, column: 15, scope: !6349)
!6429 = !DILocation(line: 558, column: 18, scope: !6349)
!6430 = !DILocation(line: 558, column: 20, scope: !6349)
!6431 = !DILocation(line: 558, column: 13, scope: !6349)
!6432 = !DILocation(line: 558, column: 35, scope: !6349)
!6433 = !DILocation(line: 558, column: 25, scope: !6349)
!6434 = !DILocation(line: 558, column: 49, scope: !6349)
!6435 = !DILocation(line: 558, column: 39, scope: !6349)
!6436 = !DILocation(line: 558, column: 37, scope: !6349)
!6437 = !DILocation(line: 558, column: 22, scope: !6349)
!6438 = !DILocation(line: 558, column: 9, scope: !6349)
!6439 = !DILocation(line: 559, column: 7, scope: !6440)
!6440 = distinct !DILexicalBlock(scope: !6349, file: !525, line: 559, column: 7)
!6441 = !DILocation(line: 563, column: 7, scope: !6349)
!6442 = !DILocation(line: 564, column: 36, scope: !6443)
!6443 = distinct !DILexicalBlock(scope: !6349, file: !525, line: 563, column: 10)
!6444 = !DILocation(line: 564, column: 50, scope: !6443)
!6445 = !DILocation(line: 564, column: 48, scope: !6443)
!6446 = !DILocation(line: 564, column: 33, scope: !6443)
!6447 = !DILocation(line: 564, column: 54, scope: !6443)
!6448 = !DILocation(line: 564, column: 58, scope: !6443)
!6449 = !DILocation(line: 564, column: 30, scope: !6443)
!6450 = !DILocation(line: 564, column: 22, scope: !6443)
!6451 = !DILocation(line: 564, column: 64, scope: !6443)
!6452 = !DILocation(line: 564, column: 62, scope: !6443)
!6453 = !DILocation(line: 564, column: 19, scope: !6443)
!6454 = !DILocation(line: 564, column: 68, scope: !6443)
!6455 = !DILocation(line: 564, column: 72, scope: !6443)
!6456 = !DILocation(line: 564, column: 17, scope: !6443)
!6457 = !DILocation(line: 564, column: 11, scope: !6443)
!6458 = !DILocation(line: 566, column: 13, scope: !6459)
!6459 = distinct !DILexicalBlock(scope: !6443, file: !525, line: 566, column: 13)
!6460 = !DILocation(line: 566, column: 17, scope: !6459)
!6461 = !DILocation(line: 566, column: 15, scope: !6459)
!6462 = !DILocation(line: 566, column: 22, scope: !6459)
!6463 = !DILocation(line: 566, column: 19, scope: !6459)
!6464 = !DILocation(line: 566, column: 13, scope: !6443)
!6465 = !DILocation(line: 568, column: 26, scope: !6466)
!6466 = distinct !DILexicalBlock(scope: !6459, file: !525, line: 567, column: 9)
!6467 = !DILocation(line: 568, column: 24, scope: !6466)
!6468 = !DILocation(line: 568, column: 37, scope: !6466)
!6469 = !DILocation(line: 568, column: 35, scope: !6466)
!6470 = !DILocation(line: 568, column: 40, scope: !6466)
!6471 = !DILocation(line: 568, column: 11, scope: !6466)
!6472 = !DILocation(line: 569, column: 16, scope: !6466)
!6473 = !DILocation(line: 569, column: 13, scope: !6466)
!6474 = !DILocation(line: 570, column: 16, scope: !6466)
!6475 = !DILocation(line: 570, column: 13, scope: !6466)
!6476 = !DILocation(line: 571, column: 9, scope: !6466)
!6477 = !DILocation(line: 574, column: 11, scope: !6459)
!6478 = !DILocation(line: 575, column: 33, scope: !6479)
!6479 = distinct !DILexicalBlock(scope: !6459, file: !525, line: 574, column: 14)
!6480 = !DILocation(line: 575, column: 26, scope: !6479)
!6481 = !DILocation(line: 575, column: 20, scope: !6479)
!6482 = !DILocation(line: 575, column: 13, scope: !6479)
!6483 = !DILocation(line: 575, column: 24, scope: !6479)
!6484 = !DILocation(line: 577, column: 11, scope: !6479)
!6485 = !DILocation(line: 577, column: 20, scope: !6459)
!6486 = distinct !{!6486, !6477, !6487, !816}
!6487 = !DILocation(line: 577, column: 23, scope: !6459)
!6488 = !DILocation(line: 578, column: 13, scope: !6489)
!6489 = distinct !DILexicalBlock(scope: !6443, file: !525, line: 578, column: 13)
!6490 = !DILocation(line: 578, column: 15, scope: !6489)
!6491 = !DILocation(line: 578, column: 13, scope: !6443)
!6492 = !DILocation(line: 580, column: 11, scope: !6493)
!6493 = distinct !DILexicalBlock(scope: !6489, file: !525, line: 579, column: 9)
!6494 = !DILocation(line: 581, column: 13, scope: !6493)
!6495 = !DILocation(line: 582, column: 9, scope: !6493)
!6496 = !DILocation(line: 583, column: 7, scope: !6443)
!6497 = !DILocation(line: 583, column: 16, scope: !6349)
!6498 = distinct !{!6498, !6441, !6499, !816}
!6499 = !DILocation(line: 583, column: 17, scope: !6349)
!6500 = !DILocation(line: 513, column: 3, scope: !6274)
!6501 = distinct !{!6501, !6502, !6503}
!6502 = !DILocation(line: 513, column: 3, scope: !6275)
!6503 = !DILocation(line: 585, column: 3, scope: !6275)
!6504 = !DILocation(line: 589, column: 8, scope: !6229)
!6505 = !DILocation(line: 589, column: 6, scope: !6229)
!6506 = !DILocation(line: 590, column: 8, scope: !6229)
!6507 = !DILocation(line: 590, column: 6, scope: !6229)
!6508 = !DILocation(line: 591, column: 8, scope: !6229)
!6509 = !DILocation(line: 591, column: 6, scope: !6229)
!6510 = !DILocation(line: 594, column: 3, scope: !6229)
!6511 = !DILocation(line: 595, column: 1, scope: !6229)
!6512 = distinct !DISubprogram(name: "inflate_stored", scope: !525, file: !525, line: 599, type: !2204, scopeLine: 601, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !524, retainedNodes: !271)
!6513 = !DILocalVariable(name: "n", scope: !6512, file: !525, line: 602, type: !7)
!6514 = !DILocation(line: 602, column: 12, scope: !6512)
!6515 = !DILocalVariable(name: "w", scope: !6512, file: !525, line: 603, type: !7)
!6516 = !DILocation(line: 603, column: 12, scope: !6512)
!6517 = !DILocalVariable(name: "b", scope: !6512, file: !525, line: 604, type: !95)
!6518 = !DILocation(line: 604, column: 16, scope: !6512)
!6519 = !DILocalVariable(name: "k", scope: !6512, file: !525, line: 605, type: !7)
!6520 = !DILocation(line: 605, column: 21, scope: !6512)
!6521 = !DILocation(line: 609, column: 7, scope: !6512)
!6522 = !DILocation(line: 609, column: 5, scope: !6512)
!6523 = !DILocation(line: 610, column: 7, scope: !6512)
!6524 = !DILocation(line: 610, column: 5, scope: !6512)
!6525 = !DILocation(line: 611, column: 7, scope: !6512)
!6526 = !DILocation(line: 611, column: 5, scope: !6512)
!6527 = !DILocation(line: 615, column: 7, scope: !6512)
!6528 = !DILocation(line: 615, column: 9, scope: !6512)
!6529 = !DILocation(line: 615, column: 5, scope: !6512)
!6530 = !DILocation(line: 616, column: 3, scope: !6531)
!6531 = distinct !DILexicalBlock(scope: !6512, file: !525, line: 616, column: 3)
!6532 = !DILocation(line: 620, column: 3, scope: !6533)
!6533 = distinct !DILexicalBlock(scope: !6512, file: !525, line: 620, column: 3)
!6534 = !DILocation(line: 620, column: 3, scope: !6535)
!6535 = distinct !DILexicalBlock(scope: !6533, file: !525, line: 620, column: 3)
!6536 = distinct !{!6536, !6532, !6532, !816}
!6537 = !DILocation(line: 621, column: 18, scope: !6512)
!6538 = !DILocation(line: 621, column: 8, scope: !6512)
!6539 = !DILocation(line: 621, column: 20, scope: !6512)
!6540 = !DILocation(line: 621, column: 5, scope: !6512)
!6541 = !DILocation(line: 622, column: 3, scope: !6542)
!6542 = distinct !DILexicalBlock(scope: !6512, file: !525, line: 622, column: 3)
!6543 = !DILocation(line: 623, column: 3, scope: !6544)
!6544 = distinct !DILexicalBlock(scope: !6512, file: !525, line: 623, column: 3)
!6545 = !DILocation(line: 623, column: 3, scope: !6546)
!6546 = distinct !DILexicalBlock(scope: !6544, file: !525, line: 623, column: 3)
!6547 = distinct !{!6547, !6543, !6543, !816}
!6548 = !DILocation(line: 624, column: 7, scope: !6549)
!6549 = distinct !DILexicalBlock(scope: !6512, file: !525, line: 624, column: 7)
!6550 = !DILocation(line: 624, column: 25, scope: !6549)
!6551 = !DILocation(line: 624, column: 24, scope: !6549)
!6552 = !DILocation(line: 624, column: 28, scope: !6549)
!6553 = !DILocation(line: 624, column: 12, scope: !6549)
!6554 = !DILocation(line: 624, column: 9, scope: !6549)
!6555 = !DILocation(line: 624, column: 7, scope: !6512)
!6556 = !DILocation(line: 625, column: 5, scope: !6549)
!6557 = !DILocation(line: 626, column: 3, scope: !6558)
!6558 = distinct !DILexicalBlock(scope: !6512, file: !525, line: 626, column: 3)
!6559 = !DILocation(line: 630, column: 3, scope: !6512)
!6560 = !DILocation(line: 630, column: 11, scope: !6512)
!6561 = !DILocation(line: 632, column: 5, scope: !6562)
!6562 = distinct !DILexicalBlock(scope: !6563, file: !525, line: 632, column: 5)
!6563 = distinct !DILexicalBlock(scope: !6512, file: !525, line: 631, column: 3)
!6564 = !DILocation(line: 632, column: 5, scope: !6565)
!6565 = distinct !DILexicalBlock(scope: !6562, file: !525, line: 632, column: 5)
!6566 = distinct !{!6566, !6561, !6561, !816}
!6567 = !DILocation(line: 633, column: 23, scope: !6563)
!6568 = !DILocation(line: 633, column: 18, scope: !6563)
!6569 = !DILocation(line: 633, column: 12, scope: !6563)
!6570 = !DILocation(line: 633, column: 5, scope: !6563)
!6571 = !DILocation(line: 633, column: 16, scope: !6563)
!6572 = !DILocation(line: 634, column: 9, scope: !6573)
!6573 = distinct !DILexicalBlock(scope: !6563, file: !525, line: 634, column: 9)
!6574 = !DILocation(line: 634, column: 11, scope: !6573)
!6575 = !DILocation(line: 634, column: 9, scope: !6563)
!6576 = !DILocation(line: 636, column: 7, scope: !6577)
!6577 = distinct !DILexicalBlock(scope: !6573, file: !525, line: 635, column: 5)
!6578 = !DILocation(line: 637, column: 9, scope: !6577)
!6579 = !DILocation(line: 638, column: 5, scope: !6577)
!6580 = !DILocation(line: 639, column: 5, scope: !6581)
!6581 = distinct !DILexicalBlock(scope: !6563, file: !525, line: 639, column: 5)
!6582 = distinct !{!6582, !6559, !6583, !816}
!6583 = !DILocation(line: 640, column: 3, scope: !6512)
!6584 = !DILocation(line: 644, column: 8, scope: !6512)
!6585 = !DILocation(line: 644, column: 6, scope: !6512)
!6586 = !DILocation(line: 645, column: 8, scope: !6512)
!6587 = !DILocation(line: 645, column: 6, scope: !6512)
!6588 = !DILocation(line: 646, column: 8, scope: !6512)
!6589 = !DILocation(line: 646, column: 6, scope: !6512)
!6590 = !DILocation(line: 647, column: 3, scope: !6512)
!6591 = !DILocation(line: 648, column: 1, scope: !6512)
!6592 = distinct !DISubprogram(name: "inflate_fixed", scope: !525, file: !525, line: 652, type: !2204, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !524, retainedNodes: !271)
!6593 = !DILocalVariable(name: "i", scope: !6592, file: !525, line: 657, type: !28)
!6594 = !DILocation(line: 657, column: 7, scope: !6592)
!6595 = !DILocalVariable(name: "tl", scope: !6592, file: !525, line: 658, type: !527)
!6596 = !DILocation(line: 658, column: 16, scope: !6592)
!6597 = !DILocalVariable(name: "td", scope: !6592, file: !525, line: 659, type: !527)
!6598 = !DILocation(line: 659, column: 16, scope: !6592)
!6599 = !DILocalVariable(name: "bl", scope: !6592, file: !525, line: 660, type: !28)
!6600 = !DILocation(line: 660, column: 7, scope: !6592)
!6601 = !DILocalVariable(name: "bd", scope: !6592, file: !525, line: 661, type: !28)
!6602 = !DILocation(line: 661, column: 7, scope: !6592)
!6603 = !DILocalVariable(name: "l", scope: !6592, file: !525, line: 662, type: !5745)
!6604 = !DILocation(line: 662, column: 12, scope: !6592)
!6605 = !DILocation(line: 666, column: 10, scope: !6606)
!6606 = distinct !DILexicalBlock(scope: !6592, file: !525, line: 666, column: 3)
!6607 = !DILocation(line: 666, column: 8, scope: !6606)
!6608 = !DILocation(line: 666, column: 15, scope: !6609)
!6609 = distinct !DILexicalBlock(scope: !6606, file: !525, line: 666, column: 3)
!6610 = !DILocation(line: 666, column: 17, scope: !6609)
!6611 = !DILocation(line: 666, column: 3, scope: !6606)
!6612 = !DILocation(line: 667, column: 7, scope: !6609)
!6613 = !DILocation(line: 667, column: 5, scope: !6609)
!6614 = !DILocation(line: 667, column: 10, scope: !6609)
!6615 = !DILocation(line: 666, column: 25, scope: !6609)
!6616 = !DILocation(line: 666, column: 3, scope: !6609)
!6617 = distinct !{!6617, !6611, !6618, !816}
!6618 = !DILocation(line: 667, column: 12, scope: !6606)
!6619 = !DILocation(line: 668, column: 3, scope: !6592)
!6620 = !DILocation(line: 668, column: 10, scope: !6621)
!6621 = distinct !DILexicalBlock(scope: !6622, file: !525, line: 668, column: 3)
!6622 = distinct !DILexicalBlock(scope: !6592, file: !525, line: 668, column: 3)
!6623 = !DILocation(line: 668, column: 12, scope: !6621)
!6624 = !DILocation(line: 668, column: 3, scope: !6622)
!6625 = !DILocation(line: 669, column: 7, scope: !6621)
!6626 = !DILocation(line: 669, column: 5, scope: !6621)
!6627 = !DILocation(line: 669, column: 10, scope: !6621)
!6628 = !DILocation(line: 668, column: 20, scope: !6621)
!6629 = !DILocation(line: 668, column: 3, scope: !6621)
!6630 = distinct !{!6630, !6624, !6631, !816}
!6631 = !DILocation(line: 669, column: 12, scope: !6622)
!6632 = !DILocation(line: 670, column: 3, scope: !6592)
!6633 = !DILocation(line: 670, column: 10, scope: !6634)
!6634 = distinct !DILexicalBlock(scope: !6635, file: !525, line: 670, column: 3)
!6635 = distinct !DILexicalBlock(scope: !6592, file: !525, line: 670, column: 3)
!6636 = !DILocation(line: 670, column: 12, scope: !6634)
!6637 = !DILocation(line: 670, column: 3, scope: !6635)
!6638 = !DILocation(line: 671, column: 7, scope: !6634)
!6639 = !DILocation(line: 671, column: 5, scope: !6634)
!6640 = !DILocation(line: 671, column: 10, scope: !6634)
!6641 = !DILocation(line: 670, column: 20, scope: !6634)
!6642 = !DILocation(line: 670, column: 3, scope: !6634)
!6643 = distinct !{!6643, !6637, !6644, !816}
!6644 = !DILocation(line: 671, column: 12, scope: !6635)
!6645 = !DILocation(line: 672, column: 3, scope: !6592)
!6646 = !DILocation(line: 672, column: 10, scope: !6647)
!6647 = distinct !DILexicalBlock(scope: !6648, file: !525, line: 672, column: 3)
!6648 = distinct !DILexicalBlock(scope: !6592, file: !525, line: 672, column: 3)
!6649 = !DILocation(line: 672, column: 12, scope: !6647)
!6650 = !DILocation(line: 672, column: 3, scope: !6648)
!6651 = !DILocation(line: 673, column: 7, scope: !6647)
!6652 = !DILocation(line: 673, column: 5, scope: !6647)
!6653 = !DILocation(line: 673, column: 10, scope: !6647)
!6654 = !DILocation(line: 672, column: 20, scope: !6647)
!6655 = !DILocation(line: 672, column: 3, scope: !6647)
!6656 = distinct !{!6656, !6650, !6657, !816}
!6657 = !DILocation(line: 673, column: 12, scope: !6648)
!6658 = !DILocation(line: 674, column: 6, scope: !6592)
!6659 = !DILocation(line: 675, column: 23, scope: !6660)
!6660 = distinct !DILexicalBlock(scope: !6592, file: !525, line: 675, column: 7)
!6661 = !DILocation(line: 675, column: 12, scope: !6660)
!6662 = !DILocation(line: 675, column: 10, scope: !6660)
!6663 = !DILocation(line: 675, column: 63, scope: !6660)
!6664 = !DILocation(line: 675, column: 7, scope: !6592)
!6665 = !DILocation(line: 676, column: 12, scope: !6660)
!6666 = !DILocation(line: 676, column: 5, scope: !6660)
!6667 = !DILocation(line: 680, column: 10, scope: !6668)
!6668 = distinct !DILexicalBlock(scope: !6592, file: !525, line: 680, column: 3)
!6669 = !DILocation(line: 680, column: 8, scope: !6668)
!6670 = !DILocation(line: 680, column: 15, scope: !6671)
!6671 = distinct !DILexicalBlock(scope: !6668, file: !525, line: 680, column: 3)
!6672 = !DILocation(line: 680, column: 17, scope: !6671)
!6673 = !DILocation(line: 680, column: 3, scope: !6668)
!6674 = !DILocation(line: 681, column: 7, scope: !6671)
!6675 = !DILocation(line: 681, column: 5, scope: !6671)
!6676 = !DILocation(line: 681, column: 10, scope: !6671)
!6677 = !DILocation(line: 680, column: 24, scope: !6671)
!6678 = !DILocation(line: 680, column: 3, scope: !6671)
!6679 = distinct !{!6679, !6673, !6680, !816}
!6680 = !DILocation(line: 681, column: 12, scope: !6668)
!6681 = !DILocation(line: 682, column: 6, scope: !6592)
!6682 = !DILocation(line: 683, column: 23, scope: !6683)
!6683 = distinct !DILexicalBlock(scope: !6592, file: !525, line: 683, column: 7)
!6684 = !DILocation(line: 683, column: 12, scope: !6683)
!6685 = !DILocation(line: 683, column: 10, scope: !6683)
!6686 = !DILocation(line: 683, column: 60, scope: !6683)
!6687 = !DILocation(line: 683, column: 7, scope: !6592)
!6688 = !DILocation(line: 685, column: 15, scope: !6689)
!6689 = distinct !DILexicalBlock(scope: !6683, file: !525, line: 684, column: 3)
!6690 = !DILocation(line: 685, column: 5, scope: !6689)
!6691 = !DILocation(line: 686, column: 12, scope: !6689)
!6692 = !DILocation(line: 686, column: 5, scope: !6689)
!6693 = !DILocation(line: 691, column: 21, scope: !6694)
!6694 = distinct !DILexicalBlock(scope: !6592, file: !525, line: 691, column: 7)
!6695 = !DILocation(line: 691, column: 25, scope: !6694)
!6696 = !DILocation(line: 691, column: 29, scope: !6694)
!6697 = !DILocation(line: 691, column: 33, scope: !6694)
!6698 = !DILocation(line: 691, column: 7, scope: !6694)
!6699 = !DILocation(line: 691, column: 7, scope: !6592)
!6700 = !DILocation(line: 692, column: 5, scope: !6694)
!6701 = !DILocation(line: 696, column: 13, scope: !6592)
!6702 = !DILocation(line: 696, column: 3, scope: !6592)
!6703 = !DILocation(line: 697, column: 13, scope: !6592)
!6704 = !DILocation(line: 697, column: 3, scope: !6592)
!6705 = !DILocation(line: 698, column: 3, scope: !6592)
!6706 = !DILocation(line: 699, column: 1, scope: !6592)
!6707 = distinct !DISubprogram(name: "inflate_dynamic", scope: !525, file: !525, line: 703, type: !2204, scopeLine: 705, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !524, retainedNodes: !271)
!6708 = !DILocalVariable(name: "i", scope: !6707, file: !525, line: 706, type: !28)
!6709 = !DILocation(line: 706, column: 7, scope: !6707)
!6710 = !DILocalVariable(name: "j", scope: !6707, file: !525, line: 707, type: !7)
!6711 = !DILocation(line: 707, column: 12, scope: !6707)
!6712 = !DILocalVariable(name: "l", scope: !6707, file: !525, line: 708, type: !7)
!6713 = !DILocation(line: 708, column: 12, scope: !6707)
!6714 = !DILocalVariable(name: "m", scope: !6707, file: !525, line: 709, type: !7)
!6715 = !DILocation(line: 709, column: 12, scope: !6707)
!6716 = !DILocalVariable(name: "n", scope: !6707, file: !525, line: 710, type: !7)
!6717 = !DILocation(line: 710, column: 12, scope: !6707)
!6718 = !DILocalVariable(name: "tl", scope: !6707, file: !525, line: 711, type: !527)
!6719 = !DILocation(line: 711, column: 16, scope: !6707)
!6720 = !DILocalVariable(name: "td", scope: !6707, file: !525, line: 712, type: !527)
!6721 = !DILocation(line: 712, column: 16, scope: !6707)
!6722 = !DILocalVariable(name: "bl", scope: !6707, file: !525, line: 713, type: !28)
!6723 = !DILocation(line: 713, column: 7, scope: !6707)
!6724 = !DILocalVariable(name: "bd", scope: !6707, file: !525, line: 714, type: !28)
!6725 = !DILocation(line: 714, column: 7, scope: !6707)
!6726 = !DILocalVariable(name: "nb", scope: !6707, file: !525, line: 715, type: !7)
!6727 = !DILocation(line: 715, column: 12, scope: !6707)
!6728 = !DILocalVariable(name: "nl", scope: !6707, file: !525, line: 716, type: !7)
!6729 = !DILocation(line: 716, column: 12, scope: !6707)
!6730 = !DILocalVariable(name: "nd", scope: !6707, file: !525, line: 717, type: !7)
!6731 = !DILocation(line: 717, column: 12, scope: !6707)
!6732 = !DILocalVariable(name: "ll", scope: !6707, file: !525, line: 721, type: !6733)
!6733 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 10112, elements: !6734)
!6734 = !{!6735}
!6735 = !DISubrange(count: 316)
!6736 = !DILocation(line: 721, column: 12, scope: !6707)
!6737 = !DILocalVariable(name: "b", scope: !6707, file: !525, line: 723, type: !95)
!6738 = !DILocation(line: 723, column: 16, scope: !6707)
!6739 = !DILocalVariable(name: "k", scope: !6707, file: !525, line: 724, type: !7)
!6740 = !DILocation(line: 724, column: 21, scope: !6707)
!6741 = !DILocation(line: 728, column: 7, scope: !6707)
!6742 = !DILocation(line: 728, column: 5, scope: !6707)
!6743 = !DILocation(line: 729, column: 7, scope: !6707)
!6744 = !DILocation(line: 729, column: 5, scope: !6707)
!6745 = !DILocation(line: 733, column: 3, scope: !6746)
!6746 = distinct !DILexicalBlock(scope: !6707, file: !525, line: 733, column: 3)
!6747 = !DILocation(line: 733, column: 3, scope: !6748)
!6748 = distinct !DILexicalBlock(scope: !6746, file: !525, line: 733, column: 3)
!6749 = distinct !{!6749, !6745, !6745, !816}
!6750 = !DILocation(line: 734, column: 25, scope: !6707)
!6751 = !DILocation(line: 734, column: 15, scope: !6707)
!6752 = !DILocation(line: 734, column: 27, scope: !6707)
!6753 = !DILocation(line: 734, column: 12, scope: !6707)
!6754 = !DILocation(line: 734, column: 6, scope: !6707)
!6755 = !DILocation(line: 735, column: 3, scope: !6756)
!6756 = distinct !DILexicalBlock(scope: !6707, file: !525, line: 735, column: 3)
!6757 = !DILocation(line: 736, column: 3, scope: !6758)
!6758 = distinct !DILexicalBlock(scope: !6707, file: !525, line: 736, column: 3)
!6759 = !DILocation(line: 736, column: 3, scope: !6760)
!6760 = distinct !DILexicalBlock(scope: !6758, file: !525, line: 736, column: 3)
!6761 = distinct !{!6761, !6757, !6757, !816}
!6762 = !DILocation(line: 737, column: 23, scope: !6707)
!6763 = !DILocation(line: 737, column: 13, scope: !6707)
!6764 = !DILocation(line: 737, column: 25, scope: !6707)
!6765 = !DILocation(line: 737, column: 10, scope: !6707)
!6766 = !DILocation(line: 737, column: 6, scope: !6707)
!6767 = !DILocation(line: 738, column: 3, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !6707, file: !525, line: 738, column: 3)
!6769 = !DILocation(line: 739, column: 3, scope: !6770)
!6770 = distinct !DILexicalBlock(scope: !6707, file: !525, line: 739, column: 3)
!6771 = !DILocation(line: 739, column: 3, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6770, file: !525, line: 739, column: 3)
!6773 = distinct !{!6773, !6769, !6769, !816}
!6774 = !DILocation(line: 740, column: 23, scope: !6707)
!6775 = !DILocation(line: 740, column: 13, scope: !6707)
!6776 = !DILocation(line: 740, column: 25, scope: !6707)
!6777 = !DILocation(line: 740, column: 10, scope: !6707)
!6778 = !DILocation(line: 740, column: 6, scope: !6707)
!6779 = !DILocation(line: 741, column: 3, scope: !6780)
!6780 = distinct !DILexicalBlock(scope: !6707, file: !525, line: 741, column: 3)
!6781 = !DILocation(line: 745, column: 7, scope: !6782)
!6782 = distinct !DILexicalBlock(scope: !6707, file: !525, line: 745, column: 7)
!6783 = !DILocation(line: 745, column: 10, scope: !6782)
!6784 = !DILocation(line: 745, column: 16, scope: !6782)
!6785 = !DILocation(line: 745, column: 19, scope: !6782)
!6786 = !DILocation(line: 745, column: 22, scope: !6782)
!6787 = !DILocation(line: 745, column: 7, scope: !6707)
!6788 = !DILocation(line: 747, column: 5, scope: !6782)
!6789 = !DILocation(line: 751, column: 10, scope: !6790)
!6790 = distinct !DILexicalBlock(scope: !6707, file: !525, line: 751, column: 3)
!6791 = !DILocation(line: 751, column: 8, scope: !6790)
!6792 = !DILocation(line: 751, column: 15, scope: !6793)
!6793 = distinct !DILexicalBlock(scope: !6790, file: !525, line: 751, column: 3)
!6794 = !DILocation(line: 751, column: 19, scope: !6793)
!6795 = !DILocation(line: 751, column: 17, scope: !6793)
!6796 = !DILocation(line: 751, column: 3, scope: !6790)
!6797 = !DILocation(line: 753, column: 5, scope: !6798)
!6798 = distinct !DILexicalBlock(scope: !6799, file: !525, line: 753, column: 5)
!6799 = distinct !DILexicalBlock(scope: !6793, file: !525, line: 752, column: 3)
!6800 = !DILocation(line: 753, column: 5, scope: !6801)
!6801 = distinct !DILexicalBlock(scope: !6798, file: !525, line: 753, column: 5)
!6802 = distinct !{!6802, !6797, !6797, !816}
!6803 = !DILocation(line: 754, column: 31, scope: !6799)
!6804 = !DILocation(line: 754, column: 21, scope: !6799)
!6805 = !DILocation(line: 754, column: 33, scope: !6799)
!6806 = !DILocation(line: 754, column: 15, scope: !6799)
!6807 = !DILocation(line: 754, column: 8, scope: !6799)
!6808 = !DILocation(line: 754, column: 5, scope: !6799)
!6809 = !DILocation(line: 754, column: 19, scope: !6799)
!6810 = !DILocation(line: 755, column: 5, scope: !6811)
!6811 = distinct !DILexicalBlock(scope: !6799, file: !525, line: 755, column: 5)
!6812 = !DILocation(line: 756, column: 3, scope: !6799)
!6813 = !DILocation(line: 751, column: 24, scope: !6793)
!6814 = !DILocation(line: 751, column: 3, scope: !6793)
!6815 = distinct !{!6815, !6796, !6816, !816}
!6816 = !DILocation(line: 756, column: 3, scope: !6790)
!6817 = !DILocation(line: 757, column: 3, scope: !6707)
!6818 = !DILocation(line: 757, column: 10, scope: !6819)
!6819 = distinct !DILexicalBlock(scope: !6820, file: !525, line: 757, column: 3)
!6820 = distinct !DILexicalBlock(scope: !6707, file: !525, line: 757, column: 3)
!6821 = !DILocation(line: 757, column: 12, scope: !6819)
!6822 = !DILocation(line: 757, column: 3, scope: !6820)
!6823 = !DILocation(line: 758, column: 15, scope: !6819)
!6824 = !DILocation(line: 758, column: 8, scope: !6819)
!6825 = !DILocation(line: 758, column: 5, scope: !6819)
!6826 = !DILocation(line: 758, column: 19, scope: !6819)
!6827 = !DILocation(line: 757, column: 19, scope: !6819)
!6828 = !DILocation(line: 757, column: 3, scope: !6819)
!6829 = distinct !{!6829, !6822, !6830, !816}
!6830 = !DILocation(line: 758, column: 21, scope: !6820)
!6831 = !DILocation(line: 762, column: 6, scope: !6707)
!6832 = !DILocation(line: 763, column: 23, scope: !6833)
!6833 = distinct !DILexicalBlock(scope: !6707, file: !525, line: 763, column: 7)
!6834 = !DILocation(line: 763, column: 12, scope: !6833)
!6835 = !DILocation(line: 763, column: 10, scope: !6833)
!6836 = !DILocation(line: 763, column: 58, scope: !6833)
!6837 = !DILocation(line: 763, column: 7, scope: !6707)
!6838 = !DILocation(line: 765, column: 9, scope: !6839)
!6839 = distinct !DILexicalBlock(scope: !6840, file: !525, line: 765, column: 9)
!6840 = distinct !DILexicalBlock(scope: !6833, file: !525, line: 764, column: 3)
!6841 = !DILocation(line: 765, column: 11, scope: !6839)
!6842 = !DILocation(line: 765, column: 9, scope: !6840)
!6843 = !DILocation(line: 766, column: 17, scope: !6839)
!6844 = !DILocation(line: 766, column: 7, scope: !6839)
!6845 = !DILocation(line: 767, column: 12, scope: !6840)
!6846 = !DILocation(line: 767, column: 5, scope: !6840)
!6847 = !DILocation(line: 772, column: 7, scope: !6707)
!6848 = !DILocation(line: 772, column: 12, scope: !6707)
!6849 = !DILocation(line: 772, column: 10, scope: !6707)
!6850 = !DILocation(line: 772, column: 5, scope: !6707)
!6851 = !DILocation(line: 773, column: 17, scope: !6707)
!6852 = !DILocation(line: 773, column: 7, scope: !6707)
!6853 = !DILocation(line: 773, column: 5, scope: !6707)
!6854 = !DILocation(line: 774, column: 9, scope: !6707)
!6855 = !DILocation(line: 774, column: 5, scope: !6707)
!6856 = !DILocation(line: 775, column: 3, scope: !6707)
!6857 = !DILocation(line: 775, column: 20, scope: !6707)
!6858 = !DILocation(line: 775, column: 24, scope: !6707)
!6859 = !DILocation(line: 775, column: 22, scope: !6707)
!6860 = !DILocation(line: 777, column: 5, scope: !6861)
!6861 = distinct !DILexicalBlock(scope: !6862, file: !525, line: 777, column: 5)
!6862 = distinct !DILexicalBlock(scope: !6707, file: !525, line: 776, column: 3)
!6863 = !DILocation(line: 777, column: 5, scope: !6864)
!6864 = distinct !DILexicalBlock(scope: !6861, file: !525, line: 777, column: 5)
!6865 = distinct !{!6865, !6860, !6860, !816}
!6866 = !DILocation(line: 778, column: 15, scope: !6862)
!6867 = !DILocation(line: 778, column: 31, scope: !6862)
!6868 = !DILocation(line: 778, column: 21, scope: !6862)
!6869 = !DILocation(line: 778, column: 35, scope: !6862)
!6870 = !DILocation(line: 778, column: 33, scope: !6862)
!6871 = !DILocation(line: 778, column: 18, scope: !6862)
!6872 = !DILocation(line: 778, column: 13, scope: !6862)
!6873 = !DILocation(line: 778, column: 40, scope: !6862)
!6874 = !DILocation(line: 778, column: 9, scope: !6862)
!6875 = !DILocation(line: 778, column: 7, scope: !6862)
!6876 = !DILocation(line: 779, column: 5, scope: !6877)
!6877 = distinct !DILexicalBlock(scope: !6862, file: !525, line: 779, column: 5)
!6878 = !DILocation(line: 780, column: 9, scope: !6862)
!6879 = !DILocation(line: 780, column: 13, scope: !6862)
!6880 = !DILocation(line: 780, column: 15, scope: !6862)
!6881 = !DILocation(line: 780, column: 7, scope: !6862)
!6882 = !DILocation(line: 781, column: 9, scope: !6883)
!6883 = distinct !DILexicalBlock(scope: !6862, file: !525, line: 781, column: 9)
!6884 = !DILocation(line: 781, column: 11, scope: !6883)
!6885 = !DILocation(line: 781, column: 9, scope: !6862)
!6886 = !DILocation(line: 782, column: 21, scope: !6883)
!6887 = !DILocation(line: 782, column: 19, scope: !6883)
!6888 = !DILocation(line: 782, column: 11, scope: !6883)
!6889 = !DILocation(line: 782, column: 7, scope: !6883)
!6890 = !DILocation(line: 782, column: 15, scope: !6883)
!6891 = !DILocation(line: 783, column: 14, scope: !6892)
!6892 = distinct !DILexicalBlock(scope: !6883, file: !525, line: 783, column: 14)
!6893 = !DILocation(line: 783, column: 16, scope: !6892)
!6894 = !DILocation(line: 783, column: 14, scope: !6883)
!6895 = !DILocation(line: 785, column: 7, scope: !6896)
!6896 = distinct !DILexicalBlock(scope: !6897, file: !525, line: 785, column: 7)
!6897 = distinct !DILexicalBlock(scope: !6892, file: !525, line: 784, column: 5)
!6898 = !DILocation(line: 785, column: 7, scope: !6899)
!6899 = distinct !DILexicalBlock(scope: !6896, file: !525, line: 785, column: 7)
!6900 = distinct !{!6900, !6895, !6895, !816}
!6901 = !DILocation(line: 786, column: 26, scope: !6897)
!6902 = !DILocation(line: 786, column: 16, scope: !6897)
!6903 = !DILocation(line: 786, column: 28, scope: !6897)
!6904 = !DILocation(line: 786, column: 13, scope: !6897)
!6905 = !DILocation(line: 786, column: 9, scope: !6897)
!6906 = !DILocation(line: 787, column: 7, scope: !6907)
!6907 = distinct !DILexicalBlock(scope: !6897, file: !525, line: 787, column: 7)
!6908 = !DILocation(line: 788, column: 21, scope: !6909)
!6909 = distinct !DILexicalBlock(scope: !6897, file: !525, line: 788, column: 11)
!6910 = !DILocation(line: 788, column: 25, scope: !6909)
!6911 = !DILocation(line: 788, column: 23, scope: !6909)
!6912 = !DILocation(line: 788, column: 29, scope: !6909)
!6913 = !DILocation(line: 788, column: 27, scope: !6909)
!6914 = !DILocation(line: 788, column: 11, scope: !6897)
!6915 = !DILocation(line: 789, column: 9, scope: !6909)
!6916 = !DILocation(line: 790, column: 7, scope: !6897)
!6917 = !DILocation(line: 790, column: 15, scope: !6897)
!6918 = !DILocation(line: 791, column: 19, scope: !6897)
!6919 = !DILocation(line: 791, column: 13, scope: !6897)
!6920 = !DILocation(line: 791, column: 9, scope: !6897)
!6921 = !DILocation(line: 791, column: 17, scope: !6897)
!6922 = distinct !{!6922, !6916, !6918, !816}
!6923 = !DILocation(line: 792, column: 5, scope: !6897)
!6924 = !DILocation(line: 793, column: 14, scope: !6925)
!6925 = distinct !DILexicalBlock(scope: !6892, file: !525, line: 793, column: 14)
!6926 = !DILocation(line: 793, column: 16, scope: !6925)
!6927 = !DILocation(line: 793, column: 14, scope: !6892)
!6928 = !DILocation(line: 795, column: 7, scope: !6929)
!6929 = distinct !DILexicalBlock(scope: !6930, file: !525, line: 795, column: 7)
!6930 = distinct !DILexicalBlock(scope: !6925, file: !525, line: 794, column: 5)
!6931 = !DILocation(line: 795, column: 7, scope: !6932)
!6932 = distinct !DILexicalBlock(scope: !6929, file: !525, line: 795, column: 7)
!6933 = distinct !{!6933, !6928, !6928, !816}
!6934 = !DILocation(line: 796, column: 26, scope: !6930)
!6935 = !DILocation(line: 796, column: 16, scope: !6930)
!6936 = !DILocation(line: 796, column: 28, scope: !6930)
!6937 = !DILocation(line: 796, column: 13, scope: !6930)
!6938 = !DILocation(line: 796, column: 9, scope: !6930)
!6939 = !DILocation(line: 797, column: 7, scope: !6940)
!6940 = distinct !DILexicalBlock(scope: !6930, file: !525, line: 797, column: 7)
!6941 = !DILocation(line: 798, column: 21, scope: !6942)
!6942 = distinct !DILexicalBlock(scope: !6930, file: !525, line: 798, column: 11)
!6943 = !DILocation(line: 798, column: 25, scope: !6942)
!6944 = !DILocation(line: 798, column: 23, scope: !6942)
!6945 = !DILocation(line: 798, column: 29, scope: !6942)
!6946 = !DILocation(line: 798, column: 27, scope: !6942)
!6947 = !DILocation(line: 798, column: 11, scope: !6930)
!6948 = !DILocation(line: 799, column: 9, scope: !6942)
!6949 = !DILocation(line: 800, column: 7, scope: !6930)
!6950 = !DILocation(line: 800, column: 15, scope: !6930)
!6951 = !DILocation(line: 801, column: 13, scope: !6930)
!6952 = !DILocation(line: 801, column: 9, scope: !6930)
!6953 = !DILocation(line: 801, column: 17, scope: !6930)
!6954 = distinct !{!6954, !6949, !6955, !816}
!6955 = !DILocation(line: 801, column: 19, scope: !6930)
!6956 = !DILocation(line: 802, column: 9, scope: !6930)
!6957 = !DILocation(line: 803, column: 5, scope: !6930)
!6958 = !DILocation(line: 806, column: 7, scope: !6959)
!6959 = distinct !DILexicalBlock(scope: !6960, file: !525, line: 806, column: 7)
!6960 = distinct !DILexicalBlock(scope: !6925, file: !525, line: 805, column: 5)
!6961 = !DILocation(line: 806, column: 7, scope: !6962)
!6962 = distinct !DILexicalBlock(scope: !6959, file: !525, line: 806, column: 7)
!6963 = distinct !{!6963, !6958, !6958, !816}
!6964 = !DILocation(line: 807, column: 27, scope: !6960)
!6965 = !DILocation(line: 807, column: 17, scope: !6960)
!6966 = !DILocation(line: 807, column: 29, scope: !6960)
!6967 = !DILocation(line: 807, column: 14, scope: !6960)
!6968 = !DILocation(line: 807, column: 9, scope: !6960)
!6969 = !DILocation(line: 808, column: 7, scope: !6970)
!6970 = distinct !DILexicalBlock(scope: !6960, file: !525, line: 808, column: 7)
!6971 = !DILocation(line: 809, column: 21, scope: !6972)
!6972 = distinct !DILexicalBlock(scope: !6960, file: !525, line: 809, column: 11)
!6973 = !DILocation(line: 809, column: 25, scope: !6972)
!6974 = !DILocation(line: 809, column: 23, scope: !6972)
!6975 = !DILocation(line: 809, column: 29, scope: !6972)
!6976 = !DILocation(line: 809, column: 27, scope: !6972)
!6977 = !DILocation(line: 809, column: 11, scope: !6960)
!6978 = !DILocation(line: 810, column: 9, scope: !6972)
!6979 = !DILocation(line: 811, column: 7, scope: !6960)
!6980 = !DILocation(line: 811, column: 15, scope: !6960)
!6981 = !DILocation(line: 812, column: 13, scope: !6960)
!6982 = !DILocation(line: 812, column: 9, scope: !6960)
!6983 = !DILocation(line: 812, column: 17, scope: !6960)
!6984 = distinct !{!6984, !6979, !6985, !816}
!6985 = !DILocation(line: 812, column: 19, scope: !6960)
!6986 = !DILocation(line: 813, column: 9, scope: !6960)
!6987 = distinct !{!6987, !6856, !6988, !816}
!6988 = !DILocation(line: 815, column: 3, scope: !6707)
!6989 = !DILocation(line: 819, column: 13, scope: !6707)
!6990 = !DILocation(line: 819, column: 3, scope: !6707)
!6991 = !DILocation(line: 823, column: 8, scope: !6707)
!6992 = !DILocation(line: 823, column: 6, scope: !6707)
!6993 = !DILocation(line: 824, column: 8, scope: !6707)
!6994 = !DILocation(line: 824, column: 6, scope: !6707)
!6995 = !DILocation(line: 828, column: 8, scope: !6707)
!6996 = !DILocation(line: 828, column: 6, scope: !6707)
!6997 = !DILocation(line: 829, column: 23, scope: !6998)
!6998 = distinct !DILexicalBlock(scope: !6707, file: !525, line: 829, column: 7)
!6999 = !DILocation(line: 829, column: 27, scope: !6998)
!7000 = !DILocation(line: 829, column: 12, scope: !6998)
!7001 = !DILocation(line: 829, column: 10, scope: !6998)
!7002 = !DILocation(line: 829, column: 63, scope: !6998)
!7003 = !DILocation(line: 829, column: 7, scope: !6707)
!7004 = !DILocation(line: 831, column: 9, scope: !7005)
!7005 = distinct !DILexicalBlock(scope: !7006, file: !525, line: 831, column: 9)
!7006 = distinct !DILexicalBlock(scope: !6998, file: !525, line: 830, column: 3)
!7007 = !DILocation(line: 831, column: 11, scope: !7005)
!7008 = !DILocation(line: 831, column: 9, scope: !7006)
!7009 = !DILocation(line: 832, column: 15, scope: !7010)
!7010 = distinct !DILexicalBlock(scope: !7005, file: !525, line: 831, column: 17)
!7011 = !DILocation(line: 832, column: 7, scope: !7010)
!7012 = !DILocation(line: 833, column: 17, scope: !7010)
!7013 = !DILocation(line: 833, column: 7, scope: !7010)
!7014 = !DILocation(line: 834, column: 5, scope: !7010)
!7015 = !DILocation(line: 835, column: 12, scope: !7006)
!7016 = !DILocation(line: 835, column: 5, scope: !7006)
!7017 = !DILocation(line: 837, column: 8, scope: !6707)
!7018 = !DILocation(line: 837, column: 6, scope: !6707)
!7019 = !DILocation(line: 838, column: 23, scope: !7020)
!7020 = distinct !DILexicalBlock(scope: !6707, file: !525, line: 838, column: 7)
!7021 = !DILocation(line: 838, column: 28, scope: !7020)
!7022 = !DILocation(line: 838, column: 26, scope: !7020)
!7023 = !DILocation(line: 838, column: 32, scope: !7020)
!7024 = !DILocation(line: 838, column: 12, scope: !7020)
!7025 = !DILocation(line: 838, column: 10, scope: !7020)
!7026 = !DILocation(line: 838, column: 66, scope: !7020)
!7027 = !DILocation(line: 838, column: 7, scope: !6707)
!7028 = !DILocation(line: 840, column: 9, scope: !7029)
!7029 = distinct !DILexicalBlock(scope: !7030, file: !525, line: 840, column: 9)
!7030 = distinct !DILexicalBlock(scope: !7020, file: !525, line: 839, column: 3)
!7031 = !DILocation(line: 840, column: 11, scope: !7029)
!7032 = !DILocation(line: 840, column: 9, scope: !7030)
!7033 = !DILocation(line: 841, column: 15, scope: !7034)
!7034 = distinct !DILexicalBlock(scope: !7029, file: !525, line: 840, column: 17)
!7035 = !DILocation(line: 841, column: 7, scope: !7034)
!7036 = !DILocation(line: 846, column: 17, scope: !7034)
!7037 = !DILocation(line: 846, column: 7, scope: !7034)
!7038 = !DILocation(line: 847, column: 5, scope: !7034)
!7039 = !DILocation(line: 848, column: 15, scope: !7030)
!7040 = !DILocation(line: 848, column: 5, scope: !7030)
!7041 = !DILocation(line: 849, column: 12, scope: !7030)
!7042 = !DILocation(line: 849, column: 5, scope: !7030)
!7043 = !DILocation(line: 855, column: 21, scope: !7044)
!7044 = distinct !DILexicalBlock(scope: !6707, file: !525, line: 855, column: 7)
!7045 = !DILocation(line: 855, column: 25, scope: !7044)
!7046 = !DILocation(line: 855, column: 29, scope: !7044)
!7047 = !DILocation(line: 855, column: 33, scope: !7044)
!7048 = !DILocation(line: 855, column: 7, scope: !7044)
!7049 = !DILocation(line: 855, column: 7, scope: !6707)
!7050 = !DILocation(line: 856, column: 5, scope: !7044)
!7051 = !DILocation(line: 860, column: 13, scope: !6707)
!7052 = !DILocation(line: 860, column: 3, scope: !6707)
!7053 = !DILocation(line: 861, column: 13, scope: !6707)
!7054 = !DILocation(line: 861, column: 3, scope: !6707)
!7055 = !DILocation(line: 862, column: 3, scope: !6707)
!7056 = !DILocation(line: 863, column: 1, scope: !6707)
!7057 = distinct !DISubprogram(name: "inflate_block", scope: !525, file: !525, line: 867, type: !7058, scopeLine: 870, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !524, retainedNodes: !271)
!7058 = !DISubroutineType(types: !7059)
!7059 = !{!28, !30}
!7060 = !DILocalVariable(name: "e", arg: 1, scope: !7057, file: !525, line: 868, type: !30)
!7061 = !DILocation(line: 868, column: 6, scope: !7057)
!7062 = !DILocalVariable(name: "t", scope: !7057, file: !525, line: 871, type: !7)
!7063 = !DILocation(line: 871, column: 12, scope: !7057)
!7064 = !DILocalVariable(name: "b", scope: !7057, file: !525, line: 872, type: !95)
!7065 = !DILocation(line: 872, column: 16, scope: !7057)
!7066 = !DILocalVariable(name: "k", scope: !7057, file: !525, line: 873, type: !7)
!7067 = !DILocation(line: 873, column: 21, scope: !7057)
!7068 = !DILocation(line: 877, column: 7, scope: !7057)
!7069 = !DILocation(line: 877, column: 5, scope: !7057)
!7070 = !DILocation(line: 878, column: 7, scope: !7057)
!7071 = !DILocation(line: 878, column: 5, scope: !7057)
!7072 = !DILocation(line: 882, column: 3, scope: !7073)
!7073 = distinct !DILexicalBlock(scope: !7057, file: !525, line: 882, column: 3)
!7074 = !DILocation(line: 882, column: 3, scope: !7075)
!7075 = distinct !DILexicalBlock(scope: !7073, file: !525, line: 882, column: 3)
!7076 = distinct !{!7076, !7072, !7072, !816}
!7077 = !DILocation(line: 883, column: 13, scope: !7057)
!7078 = !DILocation(line: 883, column: 8, scope: !7057)
!7079 = !DILocation(line: 883, column: 15, scope: !7057)
!7080 = !DILocation(line: 883, column: 4, scope: !7057)
!7081 = !DILocation(line: 883, column: 6, scope: !7057)
!7082 = !DILocation(line: 884, column: 3, scope: !7083)
!7083 = distinct !DILexicalBlock(scope: !7057, file: !525, line: 884, column: 3)
!7084 = !DILocation(line: 888, column: 3, scope: !7085)
!7085 = distinct !DILexicalBlock(scope: !7057, file: !525, line: 888, column: 3)
!7086 = !DILocation(line: 888, column: 3, scope: !7087)
!7087 = distinct !DILexicalBlock(scope: !7085, file: !525, line: 888, column: 3)
!7088 = distinct !{!7088, !7084, !7084, !816}
!7089 = !DILocation(line: 889, column: 17, scope: !7057)
!7090 = !DILocation(line: 889, column: 7, scope: !7057)
!7091 = !DILocation(line: 889, column: 19, scope: !7057)
!7092 = !DILocation(line: 889, column: 5, scope: !7057)
!7093 = !DILocation(line: 890, column: 3, scope: !7094)
!7094 = distinct !DILexicalBlock(scope: !7057, file: !525, line: 890, column: 3)
!7095 = !DILocation(line: 894, column: 8, scope: !7057)
!7096 = !DILocation(line: 894, column: 6, scope: !7057)
!7097 = !DILocation(line: 895, column: 8, scope: !7057)
!7098 = !DILocation(line: 895, column: 6, scope: !7057)
!7099 = !DILocation(line: 899, column: 7, scope: !7100)
!7100 = distinct !DILexicalBlock(scope: !7057, file: !525, line: 899, column: 7)
!7101 = !DILocation(line: 899, column: 9, scope: !7100)
!7102 = !DILocation(line: 899, column: 7, scope: !7057)
!7103 = !DILocation(line: 900, column: 12, scope: !7100)
!7104 = !DILocation(line: 900, column: 5, scope: !7100)
!7105 = !DILocation(line: 901, column: 7, scope: !7106)
!7106 = distinct !DILexicalBlock(scope: !7057, file: !525, line: 901, column: 7)
!7107 = !DILocation(line: 901, column: 9, scope: !7106)
!7108 = !DILocation(line: 901, column: 7, scope: !7057)
!7109 = !DILocation(line: 902, column: 12, scope: !7106)
!7110 = !DILocation(line: 902, column: 5, scope: !7106)
!7111 = !DILocation(line: 903, column: 7, scope: !7112)
!7112 = distinct !DILexicalBlock(scope: !7057, file: !525, line: 903, column: 7)
!7113 = !DILocation(line: 903, column: 9, scope: !7112)
!7114 = !DILocation(line: 903, column: 7, scope: !7057)
!7115 = !DILocation(line: 904, column: 12, scope: !7112)
!7116 = !DILocation(line: 904, column: 5, scope: !7112)
!7117 = !DILocation(line: 908, column: 3, scope: !7057)
!7118 = !DILocation(line: 909, column: 1, scope: !7057)
!7119 = distinct !DISubprogram(name: "inflate", scope: !525, file: !525, line: 913, type: !2204, scopeLine: 915, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !524, retainedNodes: !271)
!7120 = !DILocalVariable(name: "e", scope: !7119, file: !525, line: 916, type: !28)
!7121 = !DILocation(line: 916, column: 7, scope: !7119)
!7122 = !DILocalVariable(name: "r", scope: !7119, file: !525, line: 917, type: !28)
!7123 = !DILocation(line: 917, column: 7, scope: !7119)
!7124 = !DILocalVariable(name: "h", scope: !7119, file: !525, line: 918, type: !7)
!7125 = !DILocation(line: 918, column: 12, scope: !7119)
!7126 = !DILocation(line: 922, column: 6, scope: !7119)
!7127 = !DILocation(line: 923, column: 6, scope: !7119)
!7128 = !DILocation(line: 924, column: 6, scope: !7119)
!7129 = !DILocation(line: 928, column: 5, scope: !7119)
!7130 = !DILocation(line: 929, column: 3, scope: !7119)
!7131 = !DILocation(line: 930, column: 11, scope: !7132)
!7132 = distinct !DILexicalBlock(scope: !7119, file: !525, line: 929, column: 6)
!7133 = !DILocation(line: 931, column: 14, scope: !7134)
!7134 = distinct !DILexicalBlock(scope: !7132, file: !525, line: 931, column: 9)
!7135 = !DILocation(line: 931, column: 12, scope: !7134)
!7136 = !DILocation(line: 931, column: 33, scope: !7134)
!7137 = !DILocation(line: 931, column: 9, scope: !7132)
!7138 = !DILocation(line: 932, column: 14, scope: !7134)
!7139 = !DILocation(line: 932, column: 7, scope: !7134)
!7140 = !DILocation(line: 933, column: 9, scope: !7141)
!7141 = distinct !DILexicalBlock(scope: !7132, file: !525, line: 933, column: 9)
!7142 = !DILocation(line: 933, column: 17, scope: !7141)
!7143 = !DILocation(line: 933, column: 15, scope: !7141)
!7144 = !DILocation(line: 933, column: 9, scope: !7132)
!7145 = !DILocation(line: 934, column: 11, scope: !7141)
!7146 = !DILocation(line: 934, column: 9, scope: !7141)
!7147 = !DILocation(line: 934, column: 7, scope: !7141)
!7148 = !DILocation(line: 935, column: 3, scope: !7132)
!7149 = !DILocation(line: 935, column: 13, scope: !7119)
!7150 = !DILocation(line: 935, column: 12, scope: !7119)
!7151 = distinct !{!7151, !7130, !7152, !816}
!7152 = !DILocation(line: 935, column: 14, scope: !7119)
!7153 = !DILocation(line: 940, column: 3, scope: !7119)
!7154 = !DILocation(line: 940, column: 10, scope: !7119)
!7155 = !DILocation(line: 940, column: 13, scope: !7119)
!7156 = !DILocation(line: 941, column: 8, scope: !7157)
!7157 = distinct !DILexicalBlock(scope: !7119, file: !525, line: 940, column: 19)
!7158 = !DILocation(line: 942, column: 10, scope: !7157)
!7159 = distinct !{!7159, !7153, !7160, !816}
!7160 = !DILocation(line: 943, column: 3, scope: !7119)
!7161 = !DILocation(line: 946, column: 3, scope: !7119)
!7162 = !DILocation(line: 953, column: 3, scope: !7119)
!7163 = !DILocation(line: 954, column: 1, scope: !7119)
!7164 = distinct !DISubprogram(name: "copy", scope: !567, file: !567, line: 39, type: !160, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !570, retainedNodes: !271)
!7165 = !DILocalVariable(name: "in", arg: 1, scope: !7164, file: !567, line: 40, type: !28)
!7166 = !DILocation(line: 40, column: 9, scope: !7164)
!7167 = !DILocalVariable(name: "out", arg: 2, scope: !7164, file: !567, line: 40, type: !28)
!7168 = !DILocation(line: 40, column: 13, scope: !7164)
!7169 = !DILocation(line: 42, column: 5, scope: !7164)
!7170 = !DILocation(line: 42, column: 11, scope: !7164)
!7171 = !DILocation(line: 43, column: 5, scope: !7164)
!7172 = !DILocation(line: 43, column: 12, scope: !7164)
!7173 = !DILocation(line: 43, column: 19, scope: !7164)
!7174 = !DILocation(line: 43, column: 24, scope: !7164)
!7175 = !DILocation(line: 43, column: 32, scope: !7164)
!7176 = !DILocation(line: 43, column: 39, scope: !7164)
!7177 = !DILocation(line: 0, scope: !7164)
!7178 = !DILocation(line: 44, column: 12, scope: !7179)
!7179 = distinct !DILexicalBlock(scope: !7164, file: !567, line: 43, column: 47)
!7180 = !DILocation(line: 44, column: 31, scope: !7179)
!7181 = !DILocation(line: 44, column: 2, scope: !7179)
!7182 = !DILocation(line: 45, column: 15, scope: !7179)
!7183 = !DILocation(line: 45, column: 12, scope: !7179)
!7184 = !DILocation(line: 46, column: 16, scope: !7179)
!7185 = !DILocation(line: 46, column: 11, scope: !7179)
!7186 = !DILocation(line: 46, column: 9, scope: !7179)
!7187 = distinct !{!7187, !7171, !7188, !816}
!7188 = !DILocation(line: 47, column: 5, scope: !7164)
!7189 = !DILocation(line: 48, column: 14, scope: !7190)
!7190 = distinct !DILexicalBlock(scope: !7164, file: !567, line: 48, column: 9)
!7191 = !DILocation(line: 48, column: 21, scope: !7190)
!7192 = !DILocation(line: 48, column: 28, scope: !7190)
!7193 = !DILocation(line: 48, column: 31, scope: !7190)
!7194 = !DILocation(line: 48, column: 37, scope: !7190)
!7195 = !DILocation(line: 48, column: 9, scope: !7164)
!7196 = !DILocation(line: 49, column: 2, scope: !7197)
!7197 = distinct !DILexicalBlock(scope: !7190, file: !567, line: 48, column: 43)
!7198 = !DILocation(line: 50, column: 5, scope: !7197)
!7199 = !DILocation(line: 51, column: 16, scope: !7164)
!7200 = !DILocation(line: 51, column: 14, scope: !7164)
!7201 = !DILocation(line: 52, column: 5, scope: !7164)
!7202 = distinct !DISubprogram(name: "write_buf", scope: !567, file: !567, line: 149, type: !7203, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !570, retainedNodes: !271)
!7203 = !DISubroutineType(types: !7204)
!7204 = !{null, !28, !321, !7}
!7205 = !DILocalVariable(name: "fd", arg: 1, scope: !7202, file: !567, line: 150, type: !28)
!7206 = !DILocation(line: 150, column: 15, scope: !7202)
!7207 = !DILocalVariable(name: "buf", arg: 2, scope: !7202, file: !567, line: 151, type: !321)
!7208 = !DILocation(line: 151, column: 15, scope: !7202)
!7209 = !DILocalVariable(name: "cnt", arg: 3, scope: !7202, file: !567, line: 152, type: !7)
!7210 = !DILocation(line: 152, column: 15, scope: !7202)
!7211 = !DILocalVariable(name: "n", scope: !7202, file: !567, line: 154, type: !7)
!7212 = !DILocation(line: 154, column: 15, scope: !7202)
!7213 = !DILocation(line: 156, column: 5, scope: !7202)
!7214 = !DILocation(line: 156, column: 23, scope: !7202)
!7215 = !DILocation(line: 156, column: 27, scope: !7202)
!7216 = !DILocation(line: 156, column: 32, scope: !7202)
!7217 = !DILocation(line: 156, column: 17, scope: !7202)
!7218 = !DILocation(line: 156, column: 15, scope: !7202)
!7219 = !DILocation(line: 156, column: 41, scope: !7202)
!7220 = !DILocation(line: 156, column: 38, scope: !7202)
!7221 = !DILocation(line: 157, column: 6, scope: !7222)
!7222 = distinct !DILexicalBlock(scope: !7223, file: !567, line: 157, column: 6)
!7223 = distinct !DILexicalBlock(scope: !7202, file: !567, line: 156, column: 46)
!7224 = !DILocation(line: 157, column: 8, scope: !7222)
!7225 = !DILocation(line: 157, column: 6, scope: !7223)
!7226 = !DILocation(line: 158, column: 6, scope: !7227)
!7227 = distinct !DILexicalBlock(scope: !7222, file: !567, line: 157, column: 27)
!7228 = !DILocation(line: 159, column: 2, scope: !7227)
!7229 = !DILocation(line: 160, column: 9, scope: !7223)
!7230 = !DILocation(line: 160, column: 6, scope: !7223)
!7231 = !DILocation(line: 161, column: 23, scope: !7223)
!7232 = !DILocation(line: 161, column: 27, scope: !7223)
!7233 = !DILocation(line: 161, column: 26, scope: !7223)
!7234 = !DILocation(line: 161, column: 6, scope: !7223)
!7235 = distinct !{!7235, !7213, !7236, !816}
!7236 = !DILocation(line: 162, column: 5, scope: !7202)
!7237 = !DILocation(line: 163, column: 1, scope: !7202)
!7238 = distinct !DISubprogram(name: "read_error", scope: !567, file: !567, line: 349, type: !269, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !570, retainedNodes: !271)
!7239 = !DILocation(line: 351, column: 13, scope: !7238)
!7240 = !DILocation(line: 351, column: 31, scope: !7238)
!7241 = !DILocation(line: 351, column: 5, scope: !7238)
!7242 = !DILocation(line: 352, column: 9, scope: !7243)
!7243 = distinct !DILexicalBlock(scope: !7238, file: !567, line: 352, column: 9)
!7244 = !DILocation(line: 352, column: 15, scope: !7243)
!7245 = !DILocation(line: 352, column: 9, scope: !7238)
!7246 = !DILocation(line: 353, column: 2, scope: !7247)
!7247 = distinct !DILexicalBlock(scope: !7243, file: !567, line: 352, column: 21)
!7248 = !DILocation(line: 354, column: 5, scope: !7247)
!7249 = !DILocation(line: 355, column: 10, scope: !7250)
!7250 = distinct !DILexicalBlock(scope: !7243, file: !567, line: 354, column: 12)
!7251 = !DILocation(line: 355, column: 2, scope: !7250)
!7252 = !DILocation(line: 357, column: 5, scope: !7238)
!7253 = !DILocation(line: 358, column: 1, scope: !7238)
!7254 = distinct !DISubprogram(name: "write_error", scope: !567, file: !567, line: 360, type: !269, scopeLine: 361, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !570, retainedNodes: !271)
!7255 = !DILocation(line: 362, column: 13, scope: !7254)
!7256 = !DILocation(line: 362, column: 31, scope: !7254)
!7257 = !DILocation(line: 362, column: 5, scope: !7254)
!7258 = !DILocation(line: 363, column: 5, scope: !7254)
!7259 = !DILocation(line: 364, column: 5, scope: !7254)
!7260 = !DILocation(line: 365, column: 1, scope: !7254)
!7261 = !DILocalVariable(name: "s", arg: 1, scope: !566, file: !567, line: 61, type: !312)
!7262 = !DILocation(line: 61, column: 10, scope: !566)
!7263 = !DILocalVariable(name: "n", arg: 2, scope: !566, file: !567, line: 62, type: !7)
!7264 = !DILocation(line: 62, column: 14, scope: !566)
!7265 = !DILocalVariable(name: "c", scope: !566, file: !567, line: 64, type: !95)
!7266 = !DILocation(line: 64, column: 18, scope: !566)
!7267 = !DILocation(line: 68, column: 9, scope: !7268)
!7268 = distinct !DILexicalBlock(scope: !566, file: !567, line: 68, column: 9)
!7269 = !DILocation(line: 68, column: 11, scope: !7268)
!7270 = !DILocation(line: 68, column: 9, scope: !566)
!7271 = !DILocation(line: 69, column: 4, scope: !7272)
!7272 = distinct !DILexicalBlock(scope: !7268, file: !567, line: 68, column: 20)
!7273 = !DILocation(line: 70, column: 5, scope: !7272)
!7274 = !DILocation(line: 71, column: 6, scope: !7275)
!7275 = distinct !DILexicalBlock(scope: !7268, file: !567, line: 70, column: 12)
!7276 = !DILocation(line: 71, column: 4, scope: !7275)
!7277 = !DILocation(line: 72, column: 13, scope: !7278)
!7278 = distinct !DILexicalBlock(scope: !7275, file: !567, line: 72, column: 13)
!7279 = !DILocation(line: 72, column: 13, scope: !7275)
!7280 = !DILocation(line: 72, column: 16, scope: !7278)
!7281 = !DILocation(line: 73, column: 34, scope: !7282)
!7282 = distinct !DILexicalBlock(scope: !7278, file: !567, line: 72, column: 19)
!7283 = !DILocation(line: 73, column: 29, scope: !7282)
!7284 = !DILocation(line: 73, column: 41, scope: !7282)
!7285 = !DILocation(line: 73, column: 39, scope: !7282)
!7286 = !DILocation(line: 73, column: 38, scope: !7282)
!7287 = !DILocation(line: 73, column: 36, scope: !7282)
!7288 = !DILocation(line: 73, column: 46, scope: !7282)
!7289 = !DILocation(line: 73, column: 17, scope: !7282)
!7290 = !DILocation(line: 73, column: 57, scope: !7282)
!7291 = !DILocation(line: 73, column: 59, scope: !7282)
!7292 = !DILocation(line: 73, column: 54, scope: !7282)
!7293 = !DILocation(line: 73, column: 15, scope: !7282)
!7294 = !DILocation(line: 74, column: 9, scope: !7282)
!7295 = !DILocation(line: 74, column: 18, scope: !7278)
!7296 = distinct !{!7296, !7280, !7297, !816}
!7297 = !DILocation(line: 74, column: 21, scope: !7278)
!7298 = !DILocation(line: 76, column: 11, scope: !566)
!7299 = !DILocation(line: 76, column: 9, scope: !566)
!7300 = !DILocation(line: 77, column: 12, scope: !566)
!7301 = !DILocation(line: 77, column: 14, scope: !566)
!7302 = !DILocation(line: 77, column: 5, scope: !566)
!7303 = distinct !DISubprogram(name: "clear_bufs", scope: !567, file: !567, line: 83, type: !269, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !570, retainedNodes: !271)
!7304 = !DILocation(line: 85, column: 12, scope: !7303)
!7305 = !DILocation(line: 86, column: 20, scope: !7303)
!7306 = !DILocation(line: 86, column: 12, scope: !7303)
!7307 = !DILocation(line: 87, column: 26, scope: !7303)
!7308 = !DILocation(line: 87, column: 14, scope: !7303)
!7309 = !DILocation(line: 88, column: 1, scope: !7303)
!7310 = distinct !DISubprogram(name: "fill_inbuf", scope: !567, file: !567, line: 93, type: !1623, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !570, retainedNodes: !271)
!7311 = !DILocalVariable(name: "eof_ok", arg: 1, scope: !7310, file: !567, line: 94, type: !28)
!7312 = !DILocation(line: 94, column: 9, scope: !7310)
!7313 = !DILocalVariable(name: "len", scope: !7310, file: !567, line: 96, type: !28)
!7314 = !DILocation(line: 96, column: 9, scope: !7310)
!7315 = !DILocation(line: 99, column: 12, scope: !7310)
!7316 = !DILocation(line: 100, column: 5, scope: !7310)
!7317 = !DILocation(line: 100, column: 11, scope: !7310)
!7318 = !DILocation(line: 101, column: 5, scope: !7310)
!7319 = !DILocation(line: 102, column: 13, scope: !7320)
!7320 = distinct !DILexicalBlock(scope: !7310, file: !567, line: 101, column: 8)
!7321 = !DILocation(line: 102, column: 31, scope: !7320)
!7322 = !DILocation(line: 102, column: 30, scope: !7320)
!7323 = !DILocation(line: 102, column: 48, scope: !7320)
!7324 = !DILocation(line: 102, column: 47, scope: !7320)
!7325 = !DILocation(line: 102, column: 39, scope: !7320)
!7326 = !DILocation(line: 102, column: 8, scope: !7320)
!7327 = !DILocation(line: 102, column: 6, scope: !7320)
!7328 = !DILocation(line: 103, column: 13, scope: !7329)
!7329 = distinct !DILexicalBlock(scope: !7320, file: !567, line: 103, column: 13)
!7330 = !DILocation(line: 103, column: 17, scope: !7329)
!7331 = !DILocation(line: 103, column: 22, scope: !7329)
!7332 = !DILocation(line: 103, column: 25, scope: !7329)
!7333 = !DILocation(line: 103, column: 29, scope: !7329)
!7334 = !DILocation(line: 103, column: 13, scope: !7320)
!7335 = !DILocation(line: 103, column: 37, scope: !7329)
!7336 = !DILocation(line: 104, column: 12, scope: !7320)
!7337 = !DILocation(line: 104, column: 9, scope: !7320)
!7338 = !DILocation(line: 105, column: 5, scope: !7320)
!7339 = !DILocation(line: 105, column: 14, scope: !7310)
!7340 = !DILocation(line: 105, column: 21, scope: !7310)
!7341 = distinct !{!7341, !7318, !7342, !816}
!7342 = !DILocation(line: 105, column: 31, scope: !7310)
!7343 = !DILocation(line: 107, column: 9, scope: !7344)
!7344 = distinct !DILexicalBlock(scope: !7310, file: !567, line: 107, column: 9)
!7345 = !DILocation(line: 107, column: 16, scope: !7344)
!7346 = !DILocation(line: 107, column: 9, scope: !7310)
!7347 = !DILocation(line: 108, column: 6, scope: !7348)
!7348 = distinct !DILexicalBlock(scope: !7349, file: !567, line: 108, column: 6)
!7349 = distinct !DILexicalBlock(scope: !7344, file: !567, line: 107, column: 22)
!7350 = !DILocation(line: 108, column: 6, scope: !7349)
!7351 = !DILocation(line: 108, column: 14, scope: !7348)
!7352 = !DILocation(line: 109, column: 2, scope: !7349)
!7353 = !DILocation(line: 110, column: 5, scope: !7349)
!7354 = !DILocation(line: 111, column: 22, scope: !7310)
!7355 = !DILocation(line: 111, column: 17, scope: !7310)
!7356 = !DILocation(line: 111, column: 14, scope: !7310)
!7357 = !DILocation(line: 112, column: 11, scope: !7310)
!7358 = !DILocation(line: 113, column: 12, scope: !7310)
!7359 = !DILocation(line: 113, column: 5, scope: !7310)
!7360 = !DILocation(line: 114, column: 1, scope: !7310)
!7361 = distinct !DISubprogram(name: "flush_outbuf", scope: !567, file: !567, line: 120, type: !269, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !570, retainedNodes: !271)
!7362 = !DILocation(line: 122, column: 9, scope: !7363)
!7363 = distinct !DILexicalBlock(scope: !7361, file: !567, line: 122, column: 9)
!7364 = !DILocation(line: 122, column: 16, scope: !7363)
!7365 = !DILocation(line: 122, column: 9, scope: !7361)
!7366 = !DILocation(line: 122, column: 22, scope: !7363)
!7367 = !DILocation(line: 124, column: 15, scope: !7361)
!7368 = !DILocation(line: 124, column: 36, scope: !7361)
!7369 = !DILocation(line: 124, column: 5, scope: !7361)
!7370 = !DILocation(line: 125, column: 23, scope: !7361)
!7371 = !DILocation(line: 125, column: 18, scope: !7361)
!7372 = !DILocation(line: 125, column: 15, scope: !7361)
!7373 = !DILocation(line: 126, column: 12, scope: !7361)
!7374 = !DILocation(line: 127, column: 1, scope: !7361)
!7375 = distinct !DISubprogram(name: "flush_window", scope: !567, file: !567, line: 133, type: !269, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !570, retainedNodes: !271)
!7376 = !DILocation(line: 135, column: 9, scope: !7377)
!7377 = distinct !DILexicalBlock(scope: !7375, file: !567, line: 135, column: 9)
!7378 = !DILocation(line: 135, column: 16, scope: !7377)
!7379 = !DILocation(line: 135, column: 9, scope: !7375)
!7380 = !DILocation(line: 135, column: 22, scope: !7377)
!7381 = !DILocation(line: 136, column: 20, scope: !7375)
!7382 = !DILocation(line: 136, column: 5, scope: !7375)
!7383 = !DILocation(line: 138, column: 10, scope: !7384)
!7384 = distinct !DILexicalBlock(scope: !7375, file: !567, line: 138, column: 9)
!7385 = !DILocation(line: 138, column: 9, scope: !7375)
!7386 = !DILocation(line: 139, column: 12, scope: !7387)
!7387 = distinct !DILexicalBlock(scope: !7384, file: !567, line: 138, column: 16)
!7388 = !DILocation(line: 139, column: 33, scope: !7387)
!7389 = !DILocation(line: 139, column: 2, scope: !7387)
!7390 = !DILocation(line: 140, column: 5, scope: !7387)
!7391 = !DILocation(line: 141, column: 23, scope: !7375)
!7392 = !DILocation(line: 141, column: 18, scope: !7375)
!7393 = !DILocation(line: 141, column: 15, scope: !7375)
!7394 = !DILocation(line: 142, column: 12, scope: !7375)
!7395 = !DILocation(line: 143, column: 1, scope: !7375)
!7396 = distinct !DISubprogram(name: "strlwr", scope: !567, file: !567, line: 168, type: !292, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !570, retainedNodes: !271)
!7397 = !DILocalVariable(name: "s", arg: 1, scope: !7396, file: !567, line: 169, type: !39)
!7398 = !DILocation(line: 169, column: 11, scope: !7396)
!7399 = !DILocalVariable(name: "t", scope: !7396, file: !567, line: 171, type: !39)
!7400 = !DILocation(line: 171, column: 11, scope: !7396)
!7401 = !DILocation(line: 172, column: 14, scope: !7402)
!7402 = distinct !DILexicalBlock(scope: !7396, file: !567, line: 172, column: 5)
!7403 = !DILocation(line: 172, column: 12, scope: !7402)
!7404 = !DILocation(line: 172, column: 10, scope: !7402)
!7405 = !DILocation(line: 172, column: 18, scope: !7406)
!7406 = distinct !DILexicalBlock(scope: !7402, file: !567, line: 172, column: 5)
!7407 = !DILocation(line: 172, column: 17, scope: !7406)
!7408 = !DILocation(line: 172, column: 5, scope: !7402)
!7409 = !DILocation(line: 172, column: 31, scope: !7406)
!7410 = !DILocation(line: 172, column: 27, scope: !7406)
!7411 = !DILocation(line: 172, column: 29, scope: !7406)
!7412 = !DILocation(line: 172, column: 26, scope: !7406)
!7413 = !DILocation(line: 172, column: 22, scope: !7406)
!7414 = !DILocation(line: 172, column: 5, scope: !7406)
!7415 = distinct !{!7415, !7408, !7416, !816}
!7416 = !DILocation(line: 172, column: 31, scope: !7402)
!7417 = !DILocation(line: 173, column: 12, scope: !7396)
!7418 = !DILocation(line: 173, column: 5, scope: !7396)
!7419 = distinct !DISubprogram(name: "basename", scope: !567, file: !567, line: 181, type: !292, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !570, retainedNodes: !271)
!7420 = !DILocalVariable(name: "fname", arg: 1, scope: !7419, file: !567, line: 182, type: !39)
!7421 = !DILocation(line: 182, column: 11, scope: !7419)
!7422 = !DILocalVariable(name: "p", scope: !7419, file: !567, line: 184, type: !39)
!7423 = !DILocation(line: 184, column: 11, scope: !7419)
!7424 = !DILocation(line: 186, column: 22, scope: !7425)
!7425 = distinct !DILexicalBlock(scope: !7419, file: !567, line: 186, column: 9)
!7426 = !DILocation(line: 186, column: 14, scope: !7425)
!7427 = !DILocation(line: 186, column: 12, scope: !7425)
!7428 = !DILocation(line: 186, column: 41, scope: !7425)
!7429 = !DILocation(line: 186, column: 9, scope: !7419)
!7430 = !DILocation(line: 186, column: 58, scope: !7425)
!7431 = !DILocation(line: 186, column: 59, scope: !7425)
!7432 = !DILocation(line: 186, column: 56, scope: !7425)
!7433 = !DILocation(line: 186, column: 50, scope: !7425)
!7434 = !DILocation(line: 197, column: 12, scope: !7419)
!7435 = !DILocation(line: 197, column: 5, scope: !7419)
!7436 = distinct !DISubprogram(name: "make_simple_name", scope: !567, file: !567, line: 208, type: !1001, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !570, retainedNodes: !271)
!7437 = !DILocalVariable(name: "name", arg: 1, scope: !7436, file: !567, line: 209, type: !39)
!7438 = !DILocation(line: 209, column: 11, scope: !7436)
!7439 = !DILocalVariable(name: "p", scope: !7436, file: !567, line: 211, type: !39)
!7440 = !DILocation(line: 211, column: 11, scope: !7436)
!7441 = !DILocation(line: 211, column: 23, scope: !7436)
!7442 = !DILocation(line: 211, column: 15, scope: !7436)
!7443 = !DILocation(line: 212, column: 9, scope: !7444)
!7444 = distinct !DILexicalBlock(scope: !7436, file: !567, line: 212, column: 9)
!7445 = !DILocation(line: 212, column: 11, scope: !7444)
!7446 = !DILocation(line: 212, column: 9, scope: !7436)
!7447 = !DILocation(line: 212, column: 20, scope: !7444)
!7448 = !DILocation(line: 213, column: 9, scope: !7449)
!7449 = distinct !DILexicalBlock(scope: !7436, file: !567, line: 213, column: 9)
!7450 = !DILocation(line: 213, column: 14, scope: !7449)
!7451 = !DILocation(line: 213, column: 11, scope: !7449)
!7452 = !DILocation(line: 213, column: 9, scope: !7436)
!7453 = !DILocation(line: 213, column: 21, scope: !7449)
!7454 = !DILocation(line: 213, column: 20, scope: !7449)
!7455 = !DILocation(line: 214, column: 5, scope: !7436)
!7456 = !DILocation(line: 215, column: 14, scope: !7457)
!7457 = distinct !DILexicalBlock(scope: !7458, file: !567, line: 215, column: 13)
!7458 = distinct !DILexicalBlock(scope: !7436, file: !567, line: 214, column: 8)
!7459 = !DILocation(line: 215, column: 13, scope: !7457)
!7460 = !DILocation(line: 215, column: 18, scope: !7457)
!7461 = !DILocation(line: 215, column: 13, scope: !7458)
!7462 = !DILocation(line: 215, column: 27, scope: !7457)
!7463 = !DILocation(line: 215, column: 29, scope: !7457)
!7464 = !DILocation(line: 215, column: 26, scope: !7457)
!7465 = !DILocation(line: 216, column: 5, scope: !7458)
!7466 = !DILocation(line: 216, column: 14, scope: !7436)
!7467 = !DILocation(line: 216, column: 19, scope: !7436)
!7468 = !DILocation(line: 216, column: 16, scope: !7436)
!7469 = distinct !{!7469, !7455, !7470, !816}
!7470 = !DILocation(line: 216, column: 23, scope: !7436)
!7471 = !DILocation(line: 217, column: 1, scope: !7436)
!7472 = distinct !DISubprogram(name: "add_envopt", scope: !567, file: !567, line: 279, type: !7473, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !570, retainedNodes: !271)
!7473 = !DISubroutineType(types: !7474)
!7474 = !{!39, !30, !7475, !39}
!7475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 64)
!7476 = !DILocalVariable(name: "argcp", arg: 1, scope: !7472, file: !567, line: 280, type: !30)
!7477 = !DILocation(line: 280, column: 10, scope: !7472)
!7478 = !DILocalVariable(name: "argvp", arg: 2, scope: !7472, file: !567, line: 281, type: !7475)
!7479 = !DILocation(line: 281, column: 13, scope: !7472)
!7480 = !DILocalVariable(name: "env", arg: 3, scope: !7472, file: !567, line: 282, type: !39)
!7481 = !DILocation(line: 282, column: 11, scope: !7472)
!7482 = !DILocalVariable(name: "p", scope: !7472, file: !567, line: 284, type: !39)
!7483 = !DILocation(line: 284, column: 11, scope: !7472)
!7484 = !DILocalVariable(name: "oargv", scope: !7472, file: !567, line: 285, type: !136)
!7485 = !DILocation(line: 285, column: 12, scope: !7472)
!7486 = !DILocalVariable(name: "nargv", scope: !7472, file: !567, line: 286, type: !136)
!7487 = !DILocation(line: 286, column: 12, scope: !7472)
!7488 = !DILocalVariable(name: "oargc", scope: !7472, file: !567, line: 287, type: !28)
!7489 = !DILocation(line: 287, column: 10, scope: !7472)
!7490 = !DILocation(line: 287, column: 19, scope: !7472)
!7491 = !DILocation(line: 287, column: 18, scope: !7472)
!7492 = !DILocalVariable(name: "nargc", scope: !7472, file: !567, line: 288, type: !28)
!7493 = !DILocation(line: 288, column: 10, scope: !7472)
!7494 = !DILocation(line: 290, column: 25, scope: !7472)
!7495 = !DILocation(line: 290, column: 18, scope: !7472)
!7496 = !DILocation(line: 290, column: 9, scope: !7472)
!7497 = !DILocation(line: 291, column: 9, scope: !7498)
!7498 = distinct !DILexicalBlock(scope: !7472, file: !567, line: 291, column: 9)
!7499 = !DILocation(line: 291, column: 13, scope: !7498)
!7500 = !DILocation(line: 291, column: 9, scope: !7472)
!7501 = !DILocation(line: 291, column: 22, scope: !7498)
!7502 = !DILocation(line: 293, column: 31, scope: !7472)
!7503 = !DILocation(line: 293, column: 24, scope: !7472)
!7504 = !DILocation(line: 293, column: 35, scope: !7472)
!7505 = !DILocation(line: 293, column: 16, scope: !7472)
!7506 = !DILocation(line: 293, column: 7, scope: !7472)
!7507 = !DILocation(line: 294, column: 18, scope: !7472)
!7508 = !DILocation(line: 294, column: 21, scope: !7472)
!7509 = !DILocation(line: 294, column: 11, scope: !7472)
!7510 = !DILocation(line: 294, column: 9, scope: !7472)
!7511 = !DILocation(line: 296, column: 14, scope: !7512)
!7512 = distinct !DILexicalBlock(scope: !7472, file: !567, line: 296, column: 5)
!7513 = !DILocation(line: 296, column: 12, scope: !7512)
!7514 = !DILocation(line: 296, column: 10, scope: !7512)
!7515 = !DILocation(line: 296, column: 20, scope: !7516)
!7516 = distinct !DILexicalBlock(scope: !7512, file: !567, line: 296, column: 5)
!7517 = !DILocation(line: 296, column: 19, scope: !7516)
!7518 = !DILocation(line: 296, column: 5, scope: !7512)
!7519 = !DILocation(line: 297, column: 14, scope: !7520)
!7520 = distinct !DILexicalBlock(scope: !7516, file: !567, line: 296, column: 33)
!7521 = !DILocation(line: 297, column: 7, scope: !7520)
!7522 = !DILocation(line: 297, column: 4, scope: !7520)
!7523 = !DILocation(line: 298, column: 7, scope: !7524)
!7524 = distinct !DILexicalBlock(scope: !7520, file: !567, line: 298, column: 6)
!7525 = !DILocation(line: 298, column: 6, scope: !7524)
!7526 = !DILocation(line: 298, column: 9, scope: !7524)
!7527 = !DILocation(line: 298, column: 6, scope: !7520)
!7528 = !DILocation(line: 298, column: 18, scope: !7524)
!7529 = !DILocation(line: 300, column: 15, scope: !7520)
!7530 = !DILocation(line: 300, column: 7, scope: !7520)
!7531 = !DILocation(line: 300, column: 4, scope: !7520)
!7532 = !DILocation(line: 301, column: 7, scope: !7533)
!7533 = distinct !DILexicalBlock(scope: !7520, file: !567, line: 301, column: 6)
!7534 = !DILocation(line: 301, column: 6, scope: !7533)
!7535 = !DILocation(line: 301, column: 6, scope: !7520)
!7536 = !DILocation(line: 301, column: 12, scope: !7533)
!7537 = !DILocation(line: 301, column: 15, scope: !7533)
!7538 = !DILocation(line: 301, column: 10, scope: !7533)
!7539 = !DILocation(line: 302, column: 5, scope: !7520)
!7540 = !DILocation(line: 296, column: 28, scope: !7516)
!7541 = !DILocation(line: 296, column: 5, scope: !7516)
!7542 = distinct !{!7542, !7518, !7543, !816}
!7543 = !DILocation(line: 302, column: 5, scope: !7512)
!7544 = !DILocation(line: 303, column: 9, scope: !7545)
!7545 = distinct !DILexicalBlock(scope: !7472, file: !567, line: 303, column: 9)
!7546 = !DILocation(line: 303, column: 15, scope: !7545)
!7547 = !DILocation(line: 303, column: 9, scope: !7472)
!7548 = !DILocation(line: 304, column: 7, scope: !7549)
!7549 = distinct !DILexicalBlock(scope: !7545, file: !567, line: 303, column: 21)
!7550 = !DILocation(line: 304, column: 2, scope: !7549)
!7551 = !DILocation(line: 305, column: 2, scope: !7549)
!7552 = !DILocation(line: 307, column: 15, scope: !7472)
!7553 = !DILocation(line: 307, column: 6, scope: !7472)
!7554 = !DILocation(line: 307, column: 12, scope: !7472)
!7555 = !DILocation(line: 311, column: 29, scope: !7472)
!7556 = !DILocation(line: 311, column: 28, scope: !7472)
!7557 = !DILocation(line: 311, column: 34, scope: !7472)
!7558 = !DILocation(line: 311, column: 21, scope: !7472)
!7559 = !DILocation(line: 311, column: 13, scope: !7472)
!7560 = !DILocation(line: 311, column: 11, scope: !7472)
!7561 = !DILocation(line: 312, column: 9, scope: !7562)
!7562 = distinct !DILexicalBlock(scope: !7472, file: !567, line: 312, column: 9)
!7563 = !DILocation(line: 312, column: 15, scope: !7562)
!7564 = !DILocation(line: 312, column: 9, scope: !7472)
!7565 = !DILocation(line: 312, column: 24, scope: !7562)
!7566 = !DILocation(line: 313, column: 15, scope: !7472)
!7567 = !DILocation(line: 313, column: 14, scope: !7472)
!7568 = !DILocation(line: 313, column: 12, scope: !7472)
!7569 = !DILocation(line: 314, column: 14, scope: !7472)
!7570 = !DILocation(line: 314, column: 6, scope: !7472)
!7571 = !DILocation(line: 314, column: 12, scope: !7472)
!7572 = !DILocation(line: 317, column: 14, scope: !7573)
!7573 = distinct !DILexicalBlock(scope: !7472, file: !567, line: 317, column: 9)
!7574 = !DILocation(line: 317, column: 17, scope: !7573)
!7575 = !DILocation(line: 317, column: 9, scope: !7472)
!7576 = !DILocation(line: 317, column: 22, scope: !7573)
!7577 = !DILocation(line: 318, column: 25, scope: !7472)
!7578 = !DILocation(line: 318, column: 18, scope: !7472)
!7579 = !DILocation(line: 318, column: 12, scope: !7472)
!7580 = !DILocation(line: 318, column: 16, scope: !7472)
!7581 = !DILocation(line: 321, column: 14, scope: !7582)
!7582 = distinct !DILexicalBlock(scope: !7472, file: !567, line: 321, column: 5)
!7583 = !DILocation(line: 321, column: 12, scope: !7582)
!7584 = !DILocation(line: 321, column: 10, scope: !7582)
!7585 = !DILocation(line: 321, column: 19, scope: !7586)
!7586 = distinct !DILexicalBlock(scope: !7582, file: !567, line: 321, column: 5)
!7587 = !DILocation(line: 321, column: 25, scope: !7586)
!7588 = !DILocation(line: 321, column: 5, scope: !7582)
!7589 = !DILocation(line: 322, column: 14, scope: !7590)
!7590 = distinct !DILexicalBlock(scope: !7586, file: !567, line: 321, column: 39)
!7591 = !DILocation(line: 322, column: 7, scope: !7590)
!7592 = !DILocation(line: 322, column: 4, scope: !7590)
!7593 = !DILocation(line: 323, column: 15, scope: !7590)
!7594 = !DILocation(line: 323, column: 9, scope: !7590)
!7595 = !DILocation(line: 323, column: 13, scope: !7590)
!7596 = !DILocation(line: 324, column: 2, scope: !7590)
!7597 = !DILocation(line: 324, column: 11, scope: !7590)
!7598 = !DILocation(line: 324, column: 9, scope: !7590)
!7599 = distinct !{!7599, !7596, !7600, !816}
!7600 = !DILocation(line: 324, column: 15, scope: !7590)
!7601 = !DILocation(line: 325, column: 5, scope: !7590)
!7602 = !DILocation(line: 321, column: 35, scope: !7586)
!7603 = !DILocation(line: 321, column: 5, scope: !7586)
!7604 = distinct !{!7604, !7588, !7605, !816}
!7605 = !DILocation(line: 325, column: 5, scope: !7582)
!7606 = !DILocation(line: 328, column: 5, scope: !7472)
!7607 = !DILocation(line: 328, column: 17, scope: !7472)
!7608 = !DILocation(line: 328, column: 41, scope: !7472)
!7609 = !DILocation(line: 328, column: 34, scope: !7472)
!7610 = !DILocation(line: 328, column: 28, scope: !7472)
!7611 = !DILocation(line: 328, column: 32, scope: !7472)
!7612 = distinct !{!7612, !7606, !7613, !816}
!7613 = !DILocation(line: 328, column: 43, scope: !7472)
!7614 = !DILocation(line: 329, column: 6, scope: !7472)
!7615 = !DILocation(line: 329, column: 12, scope: !7472)
!7616 = !DILocation(line: 330, column: 12, scope: !7472)
!7617 = !DILocation(line: 330, column: 5, scope: !7472)
!7618 = !DILocation(line: 331, column: 1, scope: !7472)
!7619 = distinct !DISubprogram(name: "xmalloc", scope: !567, file: !567, line: 397, type: !7620, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !570, retainedNodes: !271)
!7620 = !DISubroutineType(types: !7621)
!7621 = !{!321, !7}
!7622 = !DILocalVariable(name: "size", arg: 1, scope: !7619, file: !567, line: 398, type: !7)
!7623 = !DILocation(line: 398, column: 14, scope: !7619)
!7624 = !DILocalVariable(name: "cp", scope: !7619, file: !567, line: 400, type: !321)
!7625 = !DILocation(line: 400, column: 11, scope: !7619)
!7626 = !DILocation(line: 400, column: 31, scope: !7619)
!7627 = !DILocation(line: 400, column: 23, scope: !7619)
!7628 = !DILocation(line: 402, column: 9, scope: !7629)
!7629 = distinct !DILexicalBlock(scope: !7619, file: !567, line: 402, column: 9)
!7630 = !DILocation(line: 402, column: 12, scope: !7629)
!7631 = !DILocation(line: 402, column: 9, scope: !7619)
!7632 = !DILocation(line: 402, column: 21, scope: !7629)
!7633 = !DILocation(line: 403, column: 12, scope: !7619)
!7634 = !DILocation(line: 403, column: 5, scope: !7619)
!7635 = distinct !DISubprogram(name: "error", scope: !567, file: !567, line: 336, type: !1001, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !570, retainedNodes: !271)
!7636 = !DILocalVariable(name: "m", arg: 1, scope: !7635, file: !567, line: 337, type: !39)
!7637 = !DILocation(line: 337, column: 11, scope: !7635)
!7638 = !DILocation(line: 339, column: 13, scope: !7635)
!7639 = !DILocation(line: 339, column: 39, scope: !7635)
!7640 = !DILocation(line: 339, column: 57, scope: !7635)
!7641 = !DILocation(line: 339, column: 5, scope: !7635)
!7642 = !DILocation(line: 340, column: 5, scope: !7635)
!7643 = !DILocation(line: 341, column: 1, scope: !7635)
!7644 = distinct !DISubprogram(name: "warn", scope: !567, file: !567, line: 343, type: !7645, scopeLine: 345, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !570, retainedNodes: !271)
!7645 = !DISubroutineType(types: !7646)
!7646 = !{null, !39, !39}
!7647 = !DILocalVariable(name: "a", arg: 1, scope: !7644, file: !567, line: 344, type: !39)
!7648 = !DILocation(line: 344, column: 11, scope: !7644)
!7649 = !DILocalVariable(name: "b", arg: 2, scope: !7644, file: !567, line: 344, type: !39)
!7650 = !DILocation(line: 344, column: 15, scope: !7644)
!7651 = !DILocation(line: 346, column: 5, scope: !7652)
!7652 = distinct !DILexicalBlock(scope: !7653, file: !567, line: 346, column: 5)
!7653 = distinct !DILexicalBlock(scope: !7644, file: !567, line: 346, column: 5)
!7654 = !DILocation(line: 346, column: 5, scope: !7653)
!7655 = !DILocation(line: 346, column: 5, scope: !7656)
!7656 = distinct !DILexicalBlock(scope: !7653, file: !567, line: 346, column: 5)
!7657 = !DILocation(line: 347, column: 1, scope: !7644)
!7658 = distinct !DISubprogram(name: "display_ratio", scope: !567, file: !567, line: 370, type: !7659, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !570, retainedNodes: !271)
!7659 = !DISubroutineType(types: !7660)
!7660 = !{null, !61, !61, !7661}
!7661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7662, size: 64)
!7662 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !33, line: 7, baseType: !7663)
!7663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !35, line: 49, size: 1728, elements: !7664)
!7664 = !{!7665, !7666, !7667, !7668, !7669, !7670, !7671, !7672, !7673, !7674, !7675, !7676, !7677, !7678, !7680, !7681, !7682, !7683, !7684, !7685, !7686, !7687, !7688, !7689, !7690, !7691, !7692, !7693, !7694}
!7665 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !7663, file: !35, line: 51, baseType: !28, size: 32)
!7666 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !7663, file: !35, line: 54, baseType: !39, size: 64, offset: 64)
!7667 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !7663, file: !35, line: 55, baseType: !39, size: 64, offset: 128)
!7668 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !7663, file: !35, line: 56, baseType: !39, size: 64, offset: 192)
!7669 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !7663, file: !35, line: 57, baseType: !39, size: 64, offset: 256)
!7670 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !7663, file: !35, line: 58, baseType: !39, size: 64, offset: 320)
!7671 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !7663, file: !35, line: 59, baseType: !39, size: 64, offset: 384)
!7672 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !7663, file: !35, line: 60, baseType: !39, size: 64, offset: 448)
!7673 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !7663, file: !35, line: 61, baseType: !39, size: 64, offset: 512)
!7674 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !7663, file: !35, line: 64, baseType: !39, size: 64, offset: 576)
!7675 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !7663, file: !35, line: 65, baseType: !39, size: 64, offset: 640)
!7676 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !7663, file: !35, line: 66, baseType: !39, size: 64, offset: 704)
!7677 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !7663, file: !35, line: 68, baseType: !52, size: 64, offset: 768)
!7678 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !7663, file: !35, line: 70, baseType: !7679, size: 64, offset: 832)
!7679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7663, size: 64)
!7680 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !7663, file: !35, line: 72, baseType: !28, size: 32, offset: 896)
!7681 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !7663, file: !35, line: 73, baseType: !28, size: 32, offset: 928)
!7682 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !7663, file: !35, line: 74, baseType: !59, size: 64, offset: 960)
!7683 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !7663, file: !35, line: 77, baseType: !63, size: 16, offset: 1024)
!7684 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !7663, file: !35, line: 78, baseType: !65, size: 8, offset: 1040)
!7685 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !7663, file: !35, line: 79, baseType: !67, size: 8, offset: 1048)
!7686 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !7663, file: !35, line: 81, baseType: !71, size: 64, offset: 1088)
!7687 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !7663, file: !35, line: 89, baseType: !74, size: 64, offset: 1152)
!7688 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !7663, file: !35, line: 91, baseType: !76, size: 64, offset: 1216)
!7689 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !7663, file: !35, line: 92, baseType: !79, size: 64, offset: 1280)
!7690 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !7663, file: !35, line: 93, baseType: !7679, size: 64, offset: 1344)
!7691 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !7663, file: !35, line: 94, baseType: !22, size: 64, offset: 1408)
!7692 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !7663, file: !35, line: 95, baseType: !84, size: 64, offset: 1472)
!7693 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !7663, file: !35, line: 96, baseType: !28, size: 32, offset: 1536)
!7694 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !7663, file: !35, line: 98, baseType: !89, size: 160, offset: 1568)
!7695 = !DILocalVariable(name: "num", arg: 1, scope: !7658, file: !567, line: 371, type: !61)
!7696 = !DILocation(line: 371, column: 10, scope: !7658)
!7697 = !DILocalVariable(name: "den", arg: 2, scope: !7658, file: !567, line: 372, type: !61)
!7698 = !DILocation(line: 372, column: 10, scope: !7658)
!7699 = !DILocalVariable(name: "file", arg: 3, scope: !7658, file: !567, line: 373, type: !7661)
!7700 = !DILocation(line: 373, column: 11, scope: !7658)
!7701 = !DILocalVariable(name: "ratio", scope: !7658, file: !567, line: 375, type: !61)
!7702 = !DILocation(line: 375, column: 10, scope: !7658)
!7703 = !DILocation(line: 377, column: 9, scope: !7704)
!7704 = distinct !DILexicalBlock(scope: !7658, file: !567, line: 377, column: 9)
!7705 = !DILocation(line: 377, column: 13, scope: !7704)
!7706 = !DILocation(line: 377, column: 9, scope: !7658)
!7707 = !DILocation(line: 378, column: 8, scope: !7708)
!7708 = distinct !DILexicalBlock(scope: !7704, file: !567, line: 377, column: 19)
!7709 = !DILocation(line: 379, column: 5, scope: !7708)
!7710 = !DILocation(line: 379, column: 16, scope: !7711)
!7711 = distinct !DILexicalBlock(scope: !7704, file: !567, line: 379, column: 16)
!7712 = !DILocation(line: 379, column: 20, scope: !7711)
!7713 = !DILocation(line: 379, column: 16, scope: !7704)
!7714 = !DILocation(line: 380, column: 16, scope: !7715)
!7715 = distinct !DILexicalBlock(scope: !7711, file: !567, line: 379, column: 32)
!7716 = !DILocation(line: 380, column: 15, scope: !7715)
!7717 = !DILocation(line: 380, column: 20, scope: !7715)
!7718 = !DILocation(line: 380, column: 19, scope: !7715)
!7719 = !DILocation(line: 380, column: 8, scope: !7715)
!7720 = !DILocation(line: 381, column: 5, scope: !7715)
!7721 = !DILocation(line: 382, column: 10, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !7711, file: !567, line: 381, column: 12)
!7723 = !DILocation(line: 382, column: 15, scope: !7722)
!7724 = !DILocation(line: 382, column: 18, scope: !7722)
!7725 = !DILocation(line: 382, column: 13, scope: !7722)
!7726 = !DILocation(line: 382, column: 8, scope: !7722)
!7727 = !DILocation(line: 384, column: 9, scope: !7728)
!7728 = distinct !DILexicalBlock(scope: !7658, file: !567, line: 384, column: 9)
!7729 = !DILocation(line: 384, column: 15, scope: !7728)
!7730 = !DILocation(line: 384, column: 9, scope: !7658)
!7731 = !DILocation(line: 385, column: 12, scope: !7732)
!7732 = distinct !DILexicalBlock(scope: !7728, file: !567, line: 384, column: 20)
!7733 = !DILocation(line: 385, column: 2, scope: !7732)
!7734 = !DILocation(line: 386, column: 11, scope: !7732)
!7735 = !DILocation(line: 386, column: 10, scope: !7732)
!7736 = !DILocation(line: 386, column: 8, scope: !7732)
!7737 = !DILocation(line: 387, column: 5, scope: !7732)
!7738 = !DILocation(line: 388, column: 12, scope: !7739)
!7739 = distinct !DILexicalBlock(scope: !7728, file: !567, line: 387, column: 12)
!7740 = !DILocation(line: 388, column: 2, scope: !7739)
!7741 = !DILocation(line: 390, column: 13, scope: !7658)
!7742 = !DILocation(line: 390, column: 34, scope: !7658)
!7743 = !DILocation(line: 390, column: 40, scope: !7658)
!7744 = !DILocation(line: 390, column: 47, scope: !7658)
!7745 = !DILocation(line: 390, column: 53, scope: !7658)
!7746 = !DILocation(line: 390, column: 5, scope: !7658)
!7747 = !DILocation(line: 391, column: 1, scope: !7658)
!7748 = distinct !DISubprogram(name: "lzw", scope: !579, file: !579, line: 16, type: !160, scopeLine: 18, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !578, retainedNodes: !271)
!7749 = !DILocalVariable(name: "in", arg: 1, scope: !7748, file: !579, line: 17, type: !28)
!7750 = !DILocation(line: 17, column: 9, scope: !7748)
!7751 = !DILocalVariable(name: "out", arg: 2, scope: !7748, file: !579, line: 17, type: !28)
!7752 = !DILocation(line: 17, column: 13, scope: !7748)
!7753 = !DILocation(line: 19, column: 9, scope: !7754)
!7754 = distinct !DILexicalBlock(scope: !7748, file: !579, line: 19, column: 9)
!7755 = !DILocation(line: 19, column: 9, scope: !7748)
!7756 = !DILocation(line: 19, column: 19, scope: !7754)
!7757 = !DILocation(line: 20, column: 14, scope: !7748)
!7758 = !DILocation(line: 21, column: 13, scope: !7748)
!7759 = !DILocation(line: 21, column: 5, scope: !7748)
!7760 = !DILocation(line: 22, column: 9, scope: !7761)
!7761 = distinct !DILexicalBlock(scope: !7748, file: !579, line: 22, column: 9)
!7762 = !DILocation(line: 22, column: 15, scope: !7761)
!7763 = !DILocation(line: 22, column: 12, scope: !7761)
!7764 = !DILocation(line: 22, column: 9, scope: !7748)
!7765 = !DILocation(line: 23, column: 19, scope: !7766)
!7766 = distinct !DILexicalBlock(scope: !7761, file: !579, line: 22, column: 20)
!7767 = !DILocation(line: 24, column: 5, scope: !7766)
!7768 = !DILocation(line: 25, column: 5, scope: !7748)
!7769 = !DILocation(line: 26, column: 1, scope: !7748)
!7770 = distinct !DISubprogram(name: "unlzw", scope: !584, file: !584, line: 192, type: !160, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !583, retainedNodes: !271)
!7771 = !DILocalVariable(name: "in", arg: 1, scope: !7770, file: !584, line: 193, type: !28)
!7772 = !DILocation(line: 193, column: 9, scope: !7770)
!7773 = !DILocalVariable(name: "out", arg: 2, scope: !7770, file: !584, line: 193, type: !28)
!7774 = !DILocation(line: 193, column: 13, scope: !7770)
!7775 = !DILocalVariable(name: "stackp", scope: !7770, file: !584, line: 195, type: !587)
!7776 = !DILocation(line: 195, column: 24, scope: !7770)
!7777 = !DILocalVariable(name: "code", scope: !7770, file: !584, line: 196, type: !7778)
!7778 = !DIDerivedType(tag: DW_TAG_typedef, name: "code_int", file: !584, line: 29, baseType: !61)
!7779 = !DILocation(line: 196, column: 23, scope: !7770)
!7780 = !DILocalVariable(name: "finchar", scope: !7770, file: !584, line: 197, type: !28)
!7781 = !DILocation(line: 197, column: 23, scope: !7770)
!7782 = !DILocalVariable(name: "oldcode", scope: !7770, file: !584, line: 198, type: !7778)
!7783 = !DILocation(line: 198, column: 23, scope: !7770)
!7784 = !DILocalVariable(name: "incode", scope: !7770, file: !584, line: 199, type: !7778)
!7785 = !DILocation(line: 199, column: 23, scope: !7770)
!7786 = !DILocalVariable(name: "inbits", scope: !7770, file: !584, line: 200, type: !61)
!7787 = !DILocation(line: 200, column: 23, scope: !7770)
!7788 = !DILocalVariable(name: "posbits", scope: !7770, file: !584, line: 201, type: !61)
!7789 = !DILocation(line: 201, column: 23, scope: !7770)
!7790 = !DILocalVariable(name: "outpos", scope: !7770, file: !584, line: 202, type: !28)
!7791 = !DILocation(line: 202, column: 23, scope: !7770)
!7792 = !DILocalVariable(name: "bitmask", scope: !7770, file: !584, line: 204, type: !7)
!7793 = !DILocation(line: 204, column: 23, scope: !7770)
!7794 = !DILocalVariable(name: "free_ent", scope: !7770, file: !584, line: 205, type: !7778)
!7795 = !DILocation(line: 205, column: 23, scope: !7770)
!7796 = !DILocalVariable(name: "maxcode", scope: !7770, file: !584, line: 206, type: !7778)
!7797 = !DILocation(line: 206, column: 23, scope: !7770)
!7798 = !DILocalVariable(name: "maxmaxcode", scope: !7770, file: !584, line: 207, type: !7778)
!7799 = !DILocation(line: 207, column: 23, scope: !7770)
!7800 = !DILocalVariable(name: "n_bits", scope: !7770, file: !584, line: 208, type: !28)
!7801 = !DILocation(line: 208, column: 23, scope: !7770)
!7802 = !DILocalVariable(name: "rsize", scope: !7770, file: !584, line: 209, type: !28)
!7803 = !DILocation(line: 209, column: 23, scope: !7770)
!7804 = !DILocation(line: 215, column: 15, scope: !7770)
!7805 = !DILocation(line: 215, column: 13, scope: !7770)
!7806 = !DILocation(line: 216, column: 18, scope: !7770)
!7807 = !DILocation(line: 216, column: 26, scope: !7770)
!7808 = !DILocation(line: 216, column: 16, scope: !7770)
!7809 = !DILocation(line: 217, column: 10, scope: !7810)
!7810 = distinct !DILexicalBlock(scope: !7770, file: !584, line: 217, column: 9)
!7811 = !DILocation(line: 217, column: 18, scope: !7810)
!7812 = !DILocation(line: 217, column: 34, scope: !7810)
!7813 = !DILocation(line: 217, column: 9, scope: !7770)
!7814 = !DILocation(line: 218, column: 2, scope: !7815)
!7815 = distinct !DILexicalBlock(scope: !7816, file: !584, line: 218, column: 2)
!7816 = distinct !DILexicalBlock(scope: !7817, file: !584, line: 218, column: 2)
!7817 = distinct !DILexicalBlock(scope: !7810, file: !584, line: 217, column: 40)
!7818 = !DILocation(line: 218, column: 2, scope: !7816)
!7819 = !DILocation(line: 218, column: 2, scope: !7820)
!7820 = distinct !DILexicalBlock(scope: !7816, file: !584, line: 218, column: 2)
!7821 = !DILocation(line: 220, column: 5, scope: !7817)
!7822 = !DILocation(line: 221, column: 13, scope: !7770)
!7823 = !DILocation(line: 222, column: 18, scope: !7770)
!7824 = !DILocation(line: 222, column: 16, scope: !7770)
!7825 = !DILocation(line: 224, column: 9, scope: !7826)
!7826 = distinct !DILexicalBlock(scope: !7770, file: !584, line: 224, column: 9)
!7827 = !DILocation(line: 224, column: 17, scope: !7826)
!7828 = !DILocation(line: 224, column: 9, scope: !7770)
!7829 = !DILocation(line: 225, column: 10, scope: !7830)
!7830 = distinct !DILexicalBlock(scope: !7826, file: !584, line: 224, column: 25)
!7831 = !DILocation(line: 227, column: 3, scope: !7830)
!7832 = !DILocation(line: 227, column: 21, scope: !7830)
!7833 = !DILocation(line: 225, column: 2, scope: !7830)
!7834 = !DILocation(line: 228, column: 12, scope: !7830)
!7835 = !DILocation(line: 229, column: 2, scope: !7830)
!7836 = !DILocation(line: 231, column: 13, scope: !7770)
!7837 = !DILocation(line: 231, column: 11, scope: !7770)
!7838 = !DILocation(line: 232, column: 15, scope: !7770)
!7839 = !DILocation(line: 232, column: 13, scope: !7770)
!7840 = !DILocation(line: 233, column: 19, scope: !7770)
!7841 = !DILocation(line: 233, column: 17, scope: !7770)
!7842 = !DILocation(line: 233, column: 26, scope: !7770)
!7843 = !DILocation(line: 233, column: 13, scope: !7770)
!7844 = !DILocation(line: 234, column: 13, scope: !7770)
!7845 = !DILocation(line: 235, column: 13, scope: !7770)
!7846 = !DILocation(line: 236, column: 12, scope: !7770)
!7847 = !DILocation(line: 237, column: 15, scope: !7770)
!7848 = !DILocation(line: 237, column: 20, scope: !7770)
!7849 = !DILocation(line: 237, column: 13, scope: !7770)
!7850 = !DILocation(line: 239, column: 18, scope: !7770)
!7851 = !DILocation(line: 239, column: 17, scope: !7770)
!7852 = !DILocation(line: 239, column: 16, scope: !7770)
!7853 = !DILocation(line: 239, column: 14, scope: !7770)
!7854 = !DILocation(line: 241, column: 5, scope: !7770)
!7855 = !DILocation(line: 243, column: 15, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7770, file: !584, line: 243, column: 5)
!7857 = !DILocation(line: 243, column: 10, scope: !7856)
!7858 = !DILocation(line: 243, column: 23, scope: !7859)
!7859 = distinct !DILexicalBlock(scope: !7856, file: !584, line: 243, column: 5)
!7860 = !DILocation(line: 243, column: 28, scope: !7859)
!7861 = !DILocation(line: 243, column: 5, scope: !7856)
!7862 = !DILocation(line: 244, column: 34, scope: !7863)
!7863 = distinct !DILexicalBlock(scope: !7859, file: !584, line: 243, column: 43)
!7864 = !DILocation(line: 244, column: 23, scope: !7863)
!7865 = !DILocation(line: 244, column: 2, scope: !7863)
!7866 = !DILocation(line: 244, column: 21, scope: !7863)
!7867 = !DILocation(line: 245, column: 5, scope: !7863)
!7868 = !DILocation(line: 243, column: 35, scope: !7859)
!7869 = !DILocation(line: 243, column: 5, scope: !7859)
!7870 = distinct !{!7870, !7861, !7871, !816}
!7871 = !DILocation(line: 245, column: 5, scope: !7856)
!7872 = !DILocation(line: 246, column: 5, scope: !7770)
!7873 = !DILocalVariable(name: "i", scope: !7874, file: !584, line: 247, type: !28)
!7874 = distinct !DILexicalBlock(scope: !7770, file: !584, line: 246, column: 8)
!7875 = !DILocation(line: 247, column: 11, scope: !7874)
!7876 = !DILocalVariable(name: "e", scope: !7874, file: !584, line: 248, type: !28)
!7877 = !DILocation(line: 248, column: 7, scope: !7874)
!7878 = !DILocalVariable(name: "o", scope: !7874, file: !584, line: 249, type: !28)
!7879 = !DILocation(line: 249, column: 7, scope: !7874)
!7880 = !DILocation(line: 249, column: 2, scope: !7874)
!7881 = !DILabel(scope: !7874, name: "resetbuf", file: !584, line: 251)
!7882 = !DILocation(line: 251, column: 5, scope: !7874)
!7883 = !DILocation(line: 252, column: 6, scope: !7874)
!7884 = !DILocation(line: 252, column: 19, scope: !7874)
!7885 = !DILocation(line: 252, column: 26, scope: !7874)
!7886 = !DILocation(line: 252, column: 18, scope: !7874)
!7887 = !DILocation(line: 252, column: 16, scope: !7874)
!7888 = !DILocation(line: 252, column: 12, scope: !7874)
!7889 = !DILocation(line: 252, column: 4, scope: !7874)
!7890 = !DILocation(line: 254, column: 9, scope: !7891)
!7891 = distinct !DILexicalBlock(scope: !7874, file: !584, line: 254, column: 2)
!7892 = !DILocation(line: 254, column: 7, scope: !7891)
!7893 = !DILocation(line: 254, column: 15, scope: !7894)
!7894 = distinct !DILexicalBlock(scope: !7891, file: !584, line: 254, column: 2)
!7895 = !DILocation(line: 254, column: 19, scope: !7894)
!7896 = !DILocation(line: 254, column: 17, scope: !7894)
!7897 = !DILocation(line: 254, column: 2, scope: !7891)
!7898 = !DILocation(line: 255, column: 23, scope: !7899)
!7899 = distinct !DILexicalBlock(scope: !7894, file: !584, line: 254, column: 28)
!7900 = !DILocation(line: 255, column: 25, scope: !7899)
!7901 = !DILocation(line: 255, column: 24, scope: !7899)
!7902 = !DILocation(line: 255, column: 17, scope: !7899)
!7903 = !DILocation(line: 255, column: 12, scope: !7899)
!7904 = !DILocation(line: 255, column: 6, scope: !7899)
!7905 = !DILocation(line: 255, column: 15, scope: !7899)
!7906 = !DILocation(line: 256, column: 2, scope: !7899)
!7907 = !DILocation(line: 254, column: 23, scope: !7894)
!7908 = !DILocation(line: 254, column: 2, scope: !7894)
!7909 = distinct !{!7909, !7897, !7910, !816}
!7910 = !DILocation(line: 256, column: 2, scope: !7891)
!7911 = !DILocation(line: 257, column: 11, scope: !7874)
!7912 = !DILocation(line: 257, column: 9, scope: !7874)
!7913 = !DILocation(line: 258, column: 10, scope: !7874)
!7914 = !DILocation(line: 260, column: 6, scope: !7915)
!7915 = distinct !DILexicalBlock(scope: !7874, file: !584, line: 260, column: 6)
!7916 = !DILocation(line: 260, column: 13, scope: !7915)
!7917 = !DILocation(line: 260, column: 6, scope: !7874)
!7918 = !DILocation(line: 261, column: 24, scope: !7919)
!7919 = distinct !DILexicalBlock(scope: !7920, file: !584, line: 261, column: 10)
!7920 = distinct !DILexicalBlock(scope: !7915, file: !584, line: 260, column: 28)
!7921 = !DILocation(line: 261, column: 41, scope: !7919)
!7922 = !DILocation(line: 261, column: 40, scope: !7919)
!7923 = !DILocation(line: 261, column: 19, scope: !7919)
!7924 = !DILocation(line: 261, column: 17, scope: !7919)
!7925 = !DILocation(line: 261, column: 60, scope: !7919)
!7926 = !DILocation(line: 261, column: 10, scope: !7920)
!7927 = !DILocation(line: 262, column: 3, scope: !7928)
!7928 = distinct !DILexicalBlock(scope: !7919, file: !584, line: 261, column: 68)
!7929 = !DILocation(line: 263, column: 6, scope: !7928)
!7930 = !DILocation(line: 264, column: 16, scope: !7920)
!7931 = !DILocation(line: 264, column: 13, scope: !7920)
!7932 = !DILocation(line: 265, column: 23, scope: !7920)
!7933 = !DILocation(line: 265, column: 18, scope: !7920)
!7934 = !DILocation(line: 265, column: 15, scope: !7920)
!7935 = !DILocation(line: 266, column: 2, scope: !7920)
!7936 = !DILocation(line: 267, column: 13, scope: !7874)
!7937 = !DILocation(line: 267, column: 19, scope: !7874)
!7938 = !DILocation(line: 267, column: 12, scope: !7874)
!7939 = !DILocation(line: 267, column: 34, scope: !7874)
!7940 = !DILocation(line: 267, column: 28, scope: !7874)
!7941 = !DILocation(line: 267, column: 43, scope: !7874)
!7942 = !DILocation(line: 267, column: 50, scope: !7874)
!7943 = !DILocation(line: 267, column: 49, scope: !7874)
!7944 = !DILocation(line: 267, column: 41, scope: !7874)
!7945 = !DILocation(line: 267, column: 57, scope: !7874)
!7946 = !DILocation(line: 268, column: 12, scope: !7874)
!7947 = !DILocation(line: 268, column: 6, scope: !7874)
!7948 = !DILocation(line: 268, column: 18, scope: !7874)
!7949 = !DILocation(line: 268, column: 24, scope: !7874)
!7950 = !DILocation(line: 268, column: 30, scope: !7874)
!7951 = !DILocation(line: 268, column: 23, scope: !7874)
!7952 = !DILocation(line: 268, column: 22, scope: !7874)
!7953 = !DILocation(line: 267, column: 9, scope: !7874)
!7954 = !DILocation(line: 270, column: 2, scope: !7874)
!7955 = !DILocation(line: 270, column: 9, scope: !7874)
!7956 = !DILocation(line: 270, column: 18, scope: !7874)
!7957 = !DILocation(line: 270, column: 16, scope: !7874)
!7958 = !DILocation(line: 271, column: 10, scope: !7959)
!7959 = distinct !DILexicalBlock(scope: !7960, file: !584, line: 271, column: 10)
!7960 = distinct !DILexicalBlock(scope: !7874, file: !584, line: 270, column: 27)
!7961 = !DILocation(line: 271, column: 21, scope: !7959)
!7962 = !DILocation(line: 271, column: 19, scope: !7959)
!7963 = !DILocation(line: 271, column: 10, scope: !7960)
!7964 = !DILocation(line: 272, column: 15, scope: !7965)
!7965 = distinct !DILexicalBlock(scope: !7959, file: !584, line: 271, column: 30)
!7966 = !DILocation(line: 272, column: 22, scope: !7965)
!7967 = !DILocation(line: 273, column: 9, scope: !7965)
!7968 = !DILocation(line: 273, column: 15, scope: !7965)
!7969 = !DILocation(line: 273, column: 8, scope: !7965)
!7970 = !DILocation(line: 273, column: 21, scope: !7965)
!7971 = !DILocation(line: 273, column: 28, scope: !7965)
!7972 = !DILocation(line: 273, column: 32, scope: !7965)
!7973 = !DILocation(line: 273, column: 38, scope: !7965)
!7974 = !DILocation(line: 273, column: 31, scope: !7965)
!7975 = !DILocation(line: 273, column: 30, scope: !7965)
!7976 = !DILocation(line: 273, column: 45, scope: !7965)
!7977 = !DILocation(line: 273, column: 51, scope: !7965)
!7978 = !DILocation(line: 273, column: 44, scope: !7965)
!7979 = !DILocation(line: 273, column: 43, scope: !7965)
!7980 = !DILocation(line: 273, column: 19, scope: !7965)
!7981 = !DILocation(line: 272, column: 26, scope: !7965)
!7982 = !DILocation(line: 272, column: 11, scope: !7965)
!7983 = !DILocation(line: 274, column: 3, scope: !7965)
!7984 = !DILocation(line: 275, column: 7, scope: !7985)
!7985 = distinct !DILexicalBlock(scope: !7965, file: !584, line: 275, column: 7)
!7986 = !DILocation(line: 275, column: 17, scope: !7985)
!7987 = !DILocation(line: 275, column: 14, scope: !7985)
!7988 = !DILocation(line: 275, column: 7, scope: !7965)
!7989 = !DILocation(line: 276, column: 17, scope: !7990)
!7990 = distinct !DILexicalBlock(scope: !7985, file: !584, line: 275, column: 26)
!7991 = !DILocation(line: 276, column: 15, scope: !7990)
!7992 = !DILocation(line: 277, column: 3, scope: !7990)
!7993 = !DILocation(line: 278, column: 17, scope: !7994)
!7994 = distinct !DILexicalBlock(scope: !7985, file: !584, line: 277, column: 10)
!7995 = !DILocation(line: 278, column: 32, scope: !7994)
!7996 = !DILocation(line: 278, column: 15, scope: !7994)
!7997 = !DILocation(line: 280, column: 17, scope: !7965)
!7998 = !DILocation(line: 280, column: 15, scope: !7965)
!7999 = !DILocation(line: 280, column: 24, scope: !7965)
!8000 = !DILocation(line: 280, column: 11, scope: !7965)
!8001 = !DILocation(line: 281, column: 3, scope: !7965)
!8002 = !DILocalVariable(name: "p", scope: !8003, file: !584, line: 283, type: !587)
!8003 = distinct !DILexicalBlock(scope: !7960, file: !584, line: 283, column: 6)
!8004 = !DILocation(line: 283, column: 6, scope: !8003)
!8005 = !DILocation(line: 286, column: 10, scope: !8006)
!8006 = distinct !DILexicalBlock(scope: !7960, file: !584, line: 286, column: 10)
!8007 = !DILocation(line: 286, column: 18, scope: !8006)
!8008 = !DILocation(line: 286, column: 10, scope: !7960)
!8009 = !DILocation(line: 287, column: 7, scope: !8010)
!8010 = distinct !DILexicalBlock(scope: !8011, file: !584, line: 287, column: 7)
!8011 = distinct !DILexicalBlock(scope: !8006, file: !584, line: 286, column: 25)
!8012 = !DILocation(line: 287, column: 12, scope: !8010)
!8013 = !DILocation(line: 287, column: 7, scope: !8011)
!8014 = !DILocation(line: 287, column: 20, scope: !8010)
!8015 = !DILocation(line: 288, column: 58, scope: !8011)
!8016 = !DILocation(line: 288, column: 57, scope: !8011)
!8017 = !DILocation(line: 288, column: 44, scope: !8011)
!8018 = !DILocation(line: 288, column: 42, scope: !8011)
!8019 = !DILocation(line: 288, column: 22, scope: !8011)
!8020 = !DILocation(line: 288, column: 16, scope: !8011)
!8021 = !DILocation(line: 288, column: 3, scope: !8011)
!8022 = !DILocation(line: 288, column: 20, scope: !8011)
!8023 = !DILocation(line: 289, column: 3, scope: !8011)
!8024 = distinct !{!8024, !7954, !8025, !816}
!8025 = !DILocation(line: 369, column: 2, scope: !7874)
!8026 = !DILocation(line: 291, column: 10, scope: !8027)
!8027 = distinct !DILexicalBlock(scope: !7960, file: !584, line: 291, column: 10)
!8028 = !DILocation(line: 291, column: 15, scope: !8027)
!8029 = !DILocation(line: 291, column: 24, scope: !8027)
!8030 = !DILocation(line: 291, column: 27, scope: !8027)
!8031 = !DILocation(line: 291, column: 10, scope: !7960)
!8032 = !DILocation(line: 292, column: 3, scope: !8033)
!8033 = distinct !DILexicalBlock(scope: !8027, file: !584, line: 291, column: 39)
!8034 = !DILocation(line: 293, column: 12, scope: !8033)
!8035 = !DILocation(line: 294, column: 15, scope: !8033)
!8036 = !DILocation(line: 294, column: 22, scope: !8033)
!8037 = !DILocation(line: 295, column: 9, scope: !8033)
!8038 = !DILocation(line: 295, column: 15, scope: !8033)
!8039 = !DILocation(line: 295, column: 8, scope: !8033)
!8040 = !DILocation(line: 295, column: 21, scope: !8033)
!8041 = !DILocation(line: 295, column: 28, scope: !8033)
!8042 = !DILocation(line: 295, column: 32, scope: !8033)
!8043 = !DILocation(line: 295, column: 38, scope: !8033)
!8044 = !DILocation(line: 295, column: 31, scope: !8033)
!8045 = !DILocation(line: 295, column: 30, scope: !8033)
!8046 = !DILocation(line: 295, column: 45, scope: !8033)
!8047 = !DILocation(line: 295, column: 51, scope: !8033)
!8048 = !DILocation(line: 295, column: 44, scope: !8033)
!8049 = !DILocation(line: 295, column: 43, scope: !8033)
!8050 = !DILocation(line: 295, column: 19, scope: !8033)
!8051 = !DILocation(line: 294, column: 26, scope: !8033)
!8052 = !DILocation(line: 294, column: 11, scope: !8033)
!8053 = !DILocation(line: 296, column: 13, scope: !8033)
!8054 = !DILocation(line: 296, column: 11, scope: !8033)
!8055 = !DILocation(line: 297, column: 17, scope: !8033)
!8056 = !DILocation(line: 297, column: 15, scope: !8033)
!8057 = !DILocation(line: 297, column: 24, scope: !8033)
!8058 = !DILocation(line: 297, column: 11, scope: !8033)
!8059 = !DILocation(line: 298, column: 3, scope: !8033)
!8060 = !DILocation(line: 300, column: 15, scope: !7960)
!8061 = !DILocation(line: 300, column: 13, scope: !7960)
!8062 = !DILocation(line: 301, column: 13, scope: !7960)
!8063 = !DILocation(line: 303, column: 10, scope: !8064)
!8064 = distinct !DILexicalBlock(scope: !7960, file: !584, line: 303, column: 10)
!8065 = !DILocation(line: 303, column: 18, scope: !8064)
!8066 = !DILocation(line: 303, column: 15, scope: !8064)
!8067 = !DILocation(line: 303, column: 10, scope: !7960)
!8068 = !DILocation(line: 304, column: 7, scope: !8069)
!8069 = distinct !DILexicalBlock(scope: !8070, file: !584, line: 304, column: 7)
!8070 = distinct !DILexicalBlock(scope: !8064, file: !584, line: 303, column: 28)
!8071 = !DILocation(line: 304, column: 14, scope: !8069)
!8072 = !DILocation(line: 304, column: 12, scope: !8069)
!8073 = !DILocation(line: 304, column: 7, scope: !8070)
!8074 = !DILocation(line: 317, column: 12, scope: !8075)
!8075 = distinct !DILexicalBlock(scope: !8076, file: !584, line: 317, column: 11)
!8076 = distinct !DILexicalBlock(scope: !8069, file: !584, line: 304, column: 24)
!8077 = !DILocation(line: 317, column: 17, scope: !8075)
!8078 = !DILocation(line: 317, column: 20, scope: !8075)
!8079 = !DILocation(line: 317, column: 27, scope: !8075)
!8080 = !DILocation(line: 317, column: 11, scope: !8076)
!8081 = !DILocation(line: 318, column: 14, scope: !8082)
!8082 = distinct !DILexicalBlock(scope: !8075, file: !584, line: 317, column: 32)
!8083 = !DILocation(line: 318, column: 34, scope: !8082)
!8084 = !DILocation(line: 318, column: 4, scope: !8082)
!8085 = !DILocation(line: 319, column: 22, scope: !8082)
!8086 = !DILocation(line: 319, column: 17, scope: !8082)
!8087 = !DILocation(line: 319, column: 14, scope: !8082)
!8088 = !DILocation(line: 320, column: 7, scope: !8082)
!8089 = !DILocation(line: 321, column: 13, scope: !8076)
!8090 = !DILocation(line: 321, column: 7, scope: !8076)
!8091 = !DILocation(line: 323, column: 3, scope: !8076)
!8092 = !DILocation(line: 324, column: 26, scope: !8070)
!8093 = !DILocation(line: 324, column: 15, scope: !8070)
!8094 = !DILocation(line: 324, column: 4, scope: !8070)
!8095 = !DILocation(line: 324, column: 13, scope: !8070)
!8096 = !DILocation(line: 325, column: 10, scope: !8070)
!8097 = !DILocation(line: 325, column: 8, scope: !8070)
!8098 = !DILocation(line: 326, column: 6, scope: !8070)
!8099 = !DILocation(line: 328, column: 6, scope: !7960)
!8100 = !DILocation(line: 328, column: 27, scope: !7960)
!8101 = !DILocation(line: 328, column: 32, scope: !7960)
!8102 = !DILocation(line: 330, column: 15, scope: !8103)
!8103 = distinct !DILexicalBlock(scope: !7960, file: !584, line: 328, column: 54)
!8104 = !DILocation(line: 330, column: 4, scope: !8103)
!8105 = !DILocation(line: 330, column: 13, scope: !8103)
!8106 = !DILocation(line: 331, column: 10, scope: !8103)
!8107 = !DILocation(line: 331, column: 8, scope: !8103)
!8108 = distinct !{!8108, !8099, !8109, !816}
!8109 = !DILocation(line: 332, column: 6, scope: !7960)
!8110 = !DILocation(line: 333, column: 40, scope: !7960)
!8111 = !DILocation(line: 333, column: 38, scope: !7960)
!8112 = !DILocation(line: 333, column: 18, scope: !7960)
!8113 = !DILocation(line: 333, column: 7, scope: !7960)
!8114 = !DILocation(line: 333, column: 16, scope: !7960)
!8115 = !DILocalVariable(name: "i", scope: !8116, file: !584, line: 337, type: !28)
!8116 = distinct !DILexicalBlock(scope: !7960, file: !584, line: 336, column: 6)
!8117 = !DILocation(line: 337, column: 12, scope: !8116)
!8118 = !DILocation(line: 339, column: 7, scope: !8119)
!8119 = distinct !DILexicalBlock(scope: !8116, file: !584, line: 339, column: 7)
!8120 = !DILocation(line: 339, column: 29, scope: !8119)
!8121 = !DILocation(line: 339, column: 28, scope: !8119)
!8122 = !DILocation(line: 339, column: 19, scope: !8119)
!8123 = !DILocation(line: 339, column: 17, scope: !8119)
!8124 = !DILocation(line: 339, column: 13, scope: !8119)
!8125 = !DILocation(line: 339, column: 38, scope: !8119)
!8126 = !DILocation(line: 339, column: 7, scope: !8116)
!8127 = !DILocation(line: 340, column: 7, scope: !8128)
!8128 = distinct !DILexicalBlock(scope: !8119, file: !584, line: 339, column: 52)
!8129 = !DILocation(line: 341, column: 8, scope: !8130)
!8130 = distinct !DILexicalBlock(scope: !8131, file: !584, line: 341, column: 8)
!8131 = distinct !DILexicalBlock(scope: !8128, file: !584, line: 340, column: 10)
!8132 = !DILocation(line: 341, column: 22, scope: !8130)
!8133 = !DILocation(line: 341, column: 21, scope: !8130)
!8134 = !DILocation(line: 341, column: 10, scope: !8130)
!8135 = !DILocation(line: 341, column: 8, scope: !8131)
!8136 = !DILocation(line: 341, column: 44, scope: !8130)
!8137 = !DILocation(line: 341, column: 43, scope: !8130)
!8138 = !DILocation(line: 341, column: 32, scope: !8130)
!8139 = !DILocation(line: 341, column: 30, scope: !8130)
!8140 = !DILocation(line: 343, column: 8, scope: !8141)
!8141 = distinct !DILexicalBlock(scope: !8131, file: !584, line: 343, column: 8)
!8142 = !DILocation(line: 343, column: 10, scope: !8141)
!8143 = !DILocation(line: 343, column: 8, scope: !8131)
!8144 = !DILocation(line: 344, column: 22, scope: !8145)
!8145 = distinct !DILexicalBlock(scope: !8141, file: !584, line: 343, column: 15)
!8146 = !DILocation(line: 344, column: 21, scope: !8145)
!8147 = !DILocation(line: 344, column: 30, scope: !8145)
!8148 = !DILocation(line: 344, column: 38, scope: !8145)
!8149 = !DILocation(line: 344, column: 8, scope: !8145)
!8150 = !DILocation(line: 345, column: 18, scope: !8145)
!8151 = !DILocation(line: 345, column: 15, scope: !8145)
!8152 = !DILocation(line: 346, column: 4, scope: !8145)
!8153 = !DILocation(line: 347, column: 8, scope: !8154)
!8154 = distinct !DILexicalBlock(scope: !8131, file: !584, line: 347, column: 8)
!8155 = !DILocation(line: 347, column: 15, scope: !8154)
!8156 = !DILocation(line: 347, column: 8, scope: !8131)
!8157 = !DILocation(line: 348, column: 13, scope: !8158)
!8158 = distinct !DILexicalBlock(scope: !8159, file: !584, line: 348, column: 12)
!8159 = distinct !DILexicalBlock(scope: !8154, file: !584, line: 347, column: 29)
!8160 = !DILocation(line: 348, column: 12, scope: !8159)
!8161 = !DILocation(line: 349, column: 15, scope: !8162)
!8162 = distinct !DILexicalBlock(scope: !8158, file: !584, line: 348, column: 19)
!8163 = !DILocation(line: 349, column: 35, scope: !8162)
!8164 = !DILocation(line: 349, column: 5, scope: !8162)
!8165 = !DILocation(line: 350, column: 23, scope: !8162)
!8166 = !DILocation(line: 350, column: 18, scope: !8162)
!8167 = !DILocation(line: 350, column: 15, scope: !8162)
!8168 = !DILocation(line: 351, column: 8, scope: !8162)
!8169 = !DILocation(line: 352, column: 15, scope: !8159)
!8170 = !DILocation(line: 353, column: 4, scope: !8159)
!8171 = !DILocation(line: 354, column: 13, scope: !8131)
!8172 = !DILocation(line: 354, column: 10, scope: !8131)
!8173 = !DILocation(line: 355, column: 7, scope: !8131)
!8174 = !DILocation(line: 355, column: 31, scope: !8128)
!8175 = !DILocation(line: 355, column: 30, scope: !8128)
!8176 = !DILocation(line: 355, column: 21, scope: !8128)
!8177 = !DILocation(line: 355, column: 19, scope: !8128)
!8178 = !DILocation(line: 355, column: 40, scope: !8128)
!8179 = distinct !{!8179, !8127, !8180, !816}
!8180 = !DILocation(line: 355, column: 43, scope: !8128)
!8181 = !DILocation(line: 356, column: 3, scope: !8128)
!8182 = !DILocation(line: 357, column: 21, scope: !8183)
!8183 = distinct !DILexicalBlock(scope: !8119, file: !584, line: 356, column: 10)
!8184 = !DILocation(line: 357, column: 20, scope: !8183)
!8185 = !DILocation(line: 357, column: 29, scope: !8183)
!8186 = !DILocation(line: 357, column: 37, scope: !8183)
!8187 = !DILocation(line: 357, column: 7, scope: !8183)
!8188 = !DILocation(line: 358, column: 17, scope: !8183)
!8189 = !DILocation(line: 358, column: 14, scope: !8183)
!8190 = !DILocation(line: 362, column: 18, scope: !8191)
!8191 = distinct !DILexicalBlock(scope: !7960, file: !584, line: 362, column: 10)
!8192 = !DILocation(line: 362, column: 16, scope: !8191)
!8193 = !DILocation(line: 362, column: 30, scope: !8191)
!8194 = !DILocation(line: 362, column: 28, scope: !8191)
!8195 = !DILocation(line: 362, column: 10, scope: !7960)
!8196 = !DILocation(line: 364, column: 40, scope: !8197)
!8197 = distinct !DILexicalBlock(scope: !8191, file: !584, line: 362, column: 42)
!8198 = !DILocation(line: 364, column: 24, scope: !8197)
!8199 = !DILocation(line: 364, column: 3, scope: !8197)
!8200 = !DILocation(line: 364, column: 22, scope: !8197)
!8201 = !DILocation(line: 365, column: 35, scope: !8197)
!8202 = !DILocation(line: 365, column: 24, scope: !8197)
!8203 = !DILocation(line: 365, column: 3, scope: !8197)
!8204 = !DILocation(line: 365, column: 22, scope: !8197)
!8205 = !DILocation(line: 366, column: 14, scope: !8197)
!8206 = !DILocation(line: 366, column: 18, scope: !8197)
!8207 = !DILocation(line: 366, column: 12, scope: !8197)
!8208 = !DILocation(line: 367, column: 6, scope: !8197)
!8209 = !DILocation(line: 368, column: 16, scope: !7960)
!8210 = !DILocation(line: 368, column: 14, scope: !7960)
!8211 = !DILocation(line: 370, column: 5, scope: !7874)
!8212 = !DILocation(line: 370, column: 14, scope: !7770)
!8213 = !DILocation(line: 370, column: 20, scope: !7770)
!8214 = distinct !{!8214, !7872, !8215, !816}
!8215 = !DILocation(line: 370, column: 24, scope: !7770)
!8216 = !DILocation(line: 372, column: 10, scope: !8217)
!8217 = distinct !DILexicalBlock(scope: !7770, file: !584, line: 372, column: 9)
!8218 = !DILocation(line: 372, column: 15, scope: !8217)
!8219 = !DILocation(line: 372, column: 18, scope: !8217)
!8220 = !DILocation(line: 372, column: 25, scope: !8217)
!8221 = !DILocation(line: 372, column: 9, scope: !7770)
!8222 = !DILocation(line: 373, column: 12, scope: !8223)
!8223 = distinct !DILexicalBlock(scope: !8217, file: !584, line: 372, column: 30)
!8224 = !DILocation(line: 373, column: 32, scope: !8223)
!8225 = !DILocation(line: 373, column: 2, scope: !8223)
!8226 = !DILocation(line: 374, column: 20, scope: !8223)
!8227 = !DILocation(line: 374, column: 15, scope: !8223)
!8228 = !DILocation(line: 374, column: 12, scope: !8223)
!8229 = !DILocation(line: 375, column: 5, scope: !8223)
!8230 = !DILocation(line: 376, column: 5, scope: !7770)
!8231 = !DILocation(line: 377, column: 1, scope: !7770)
!8232 = distinct !DISubprogram(name: "unpack", scope: !593, file: !593, line: 185, type: !160, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !592, retainedNodes: !271)
!8233 = !DILocalVariable(name: "in", arg: 1, scope: !8232, file: !593, line: 186, type: !28)
!8234 = !DILocation(line: 186, column: 9, scope: !8232)
!8235 = !DILocalVariable(name: "out", arg: 2, scope: !8232, file: !593, line: 186, type: !28)
!8236 = !DILocation(line: 186, column: 13, scope: !8232)
!8237 = !DILocalVariable(name: "len", scope: !8232, file: !593, line: 188, type: !28)
!8238 = !DILocation(line: 188, column: 9, scope: !8232)
!8239 = !DILocalVariable(name: "eob", scope: !8232, file: !593, line: 189, type: !7)
!8240 = !DILocation(line: 189, column: 14, scope: !8232)
!8241 = !DILocalVariable(name: "peek", scope: !8232, file: !593, line: 190, type: !7)
!8242 = !DILocation(line: 190, column: 23, scope: !8232)
!8243 = !DILocalVariable(name: "peek_mask", scope: !8232, file: !593, line: 191, type: !7)
!8244 = !DILocation(line: 191, column: 14, scope: !8232)
!8245 = !DILocation(line: 193, column: 11, scope: !8232)
!8246 = !DILocation(line: 193, column: 9, scope: !8232)
!8247 = !DILocation(line: 194, column: 11, scope: !8232)
!8248 = !DILocation(line: 194, column: 9, scope: !8232)
!8249 = !DILocation(line: 196, column: 5, scope: !8232)
!8250 = !DILocation(line: 197, column: 5, scope: !8232)
!8251 = !DILocation(line: 198, column: 5, scope: !8232)
!8252 = !DILocation(line: 199, column: 21, scope: !8232)
!8253 = !DILocation(line: 199, column: 19, scope: !8232)
!8254 = !DILocation(line: 199, column: 31, scope: !8232)
!8255 = !DILocation(line: 199, column: 15, scope: !8232)
!8256 = !DILocation(line: 202, column: 18, scope: !8232)
!8257 = !DILocation(line: 202, column: 11, scope: !8232)
!8258 = !DILocation(line: 202, column: 26, scope: !8232)
!8259 = !DILocation(line: 202, column: 9, scope: !8232)
!8260 = !DILocation(line: 206, column: 5, scope: !8232)
!8261 = !DILocation(line: 211, column: 2, scope: !8262)
!8262 = distinct !DILexicalBlock(scope: !8263, file: !593, line: 211, column: 2)
!8263 = distinct !DILexicalBlock(scope: !8264, file: !593, line: 206, column: 14)
!8264 = distinct !DILexicalBlock(scope: !8265, file: !593, line: 206, column: 5)
!8265 = distinct !DILexicalBlock(scope: !8232, file: !593, line: 206, column: 5)
!8266 = distinct !{!8266, !8261, !8261, !816}
!8267 = !DILocation(line: 212, column: 19, scope: !8263)
!8268 = !DILocation(line: 212, column: 8, scope: !8263)
!8269 = !DILocation(line: 212, column: 6, scope: !8263)
!8270 = !DILocation(line: 213, column: 6, scope: !8271)
!8271 = distinct !DILexicalBlock(scope: !8263, file: !593, line: 213, column: 6)
!8272 = !DILocation(line: 213, column: 10, scope: !8271)
!8273 = !DILocation(line: 213, column: 6, scope: !8263)
!8274 = !DILocation(line: 214, column: 15, scope: !8275)
!8275 = distinct !DILexicalBlock(scope: !8271, file: !593, line: 213, column: 15)
!8276 = !DILocation(line: 214, column: 27, scope: !8275)
!8277 = !DILocation(line: 214, column: 25, scope: !8275)
!8278 = !DILocation(line: 214, column: 11, scope: !8275)
!8279 = !DILocation(line: 215, column: 2, scope: !8275)
!8280 = !DILocalVariable(name: "mask", scope: !8281, file: !593, line: 217, type: !95)
!8281 = distinct !DILexicalBlock(scope: !8271, file: !593, line: 215, column: 9)
!8282 = !DILocation(line: 217, column: 10, scope: !8281)
!8283 = !DILocation(line: 217, column: 17, scope: !8281)
!8284 = !DILocation(line: 218, column: 12, scope: !8281)
!8285 = !DILocation(line: 218, column: 10, scope: !8281)
!8286 = !DILocation(line: 219, column: 6, scope: !8281)
!8287 = !DILocation(line: 220, column: 20, scope: !8288)
!8288 = distinct !DILexicalBlock(scope: !8281, file: !593, line: 219, column: 9)
!8289 = !DILocation(line: 220, column: 32, scope: !8288)
!8290 = !DILocation(line: 220, column: 36, scope: !8288)
!8291 = !DILocation(line: 220, column: 40, scope: !8288)
!8292 = !DILocation(line: 220, column: 29, scope: !8288)
!8293 = !DILocation(line: 221, column: 3, scope: !8294)
!8294 = distinct !DILexicalBlock(scope: !8288, file: !593, line: 221, column: 3)
!8295 = distinct !{!8295, !8293, !8293, !816}
!8296 = !DILocation(line: 222, column: 6, scope: !8288)
!8297 = !DILocation(line: 222, column: 15, scope: !8281)
!8298 = !DILocation(line: 222, column: 40, scope: !8281)
!8299 = !DILocation(line: 222, column: 32, scope: !8281)
!8300 = !DILocation(line: 222, column: 20, scope: !8281)
!8301 = distinct !{!8301, !8286, !8302, !816}
!8302 = !DILocation(line: 222, column: 44, scope: !8281)
!8303 = !DILocation(line: 226, column: 6, scope: !8304)
!8304 = distinct !DILexicalBlock(scope: !8263, file: !593, line: 226, column: 6)
!8305 = !DILocation(line: 226, column: 14, scope: !8304)
!8306 = !DILocation(line: 226, column: 11, scope: !8304)
!8307 = !DILocation(line: 226, column: 18, scope: !8304)
!8308 = !DILocation(line: 226, column: 21, scope: !8304)
!8309 = !DILocation(line: 226, column: 28, scope: !8304)
!8310 = !DILocation(line: 226, column: 25, scope: !8304)
!8311 = !DILocation(line: 226, column: 6, scope: !8263)
!8312 = !DILocation(line: 226, column: 37, scope: !8304)
!8313 = !DILocation(line: 227, column: 2, scope: !8314)
!8314 = distinct !DILexicalBlock(scope: !8263, file: !593, line: 227, column: 2)
!8315 = !DILocation(line: 227, column: 2, scope: !8316)
!8316 = distinct !DILexicalBlock(scope: !8314, file: !593, line: 227, column: 2)
!8317 = !DILocation(line: 230, column: 2, scope: !8263)
!8318 = !DILocation(line: 206, column: 5, scope: !8264)
!8319 = distinct !{!8319, !8320, !8321}
!8320 = !DILocation(line: 206, column: 5, scope: !8265)
!8321 = !DILocation(line: 231, column: 5, scope: !8265)
!8322 = !DILocation(line: 233, column: 5, scope: !8232)
!8323 = !DILocation(line: 235, column: 9, scope: !8324)
!8324 = distinct !DILexicalBlock(scope: !8232, file: !593, line: 235, column: 9)
!8325 = !DILocation(line: 235, column: 26, scope: !8324)
!8326 = !DILocation(line: 235, column: 18, scope: !8324)
!8327 = !DILocation(line: 235, column: 9, scope: !8232)
!8328 = !DILocation(line: 236, column: 2, scope: !8329)
!8329 = distinct !DILexicalBlock(scope: !8324, file: !593, line: 235, column: 37)
!8330 = !DILocation(line: 237, column: 5, scope: !8329)
!8331 = !DILocation(line: 238, column: 5, scope: !8232)
!8332 = distinct !DISubprogram(name: "read_tree", scope: !593, file: !593, line: 94, type: !269, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !592, retainedNodes: !271)
!8333 = !DILocalVariable(name: "len", scope: !8332, file: !593, line: 96, type: !28)
!8334 = !DILocation(line: 96, column: 9, scope: !8332)
!8335 = !DILocalVariable(name: "base", scope: !8332, file: !593, line: 97, type: !28)
!8336 = !DILocation(line: 97, column: 9, scope: !8332)
!8337 = !DILocalVariable(name: "n", scope: !8332, file: !593, line: 98, type: !28)
!8338 = !DILocation(line: 98, column: 9, scope: !8332)
!8339 = !DILocation(line: 101, column: 14, scope: !8332)
!8340 = !DILocation(line: 102, column: 12, scope: !8341)
!8341 = distinct !DILexicalBlock(scope: !8332, file: !593, line: 102, column: 5)
!8342 = !DILocation(line: 102, column: 10, scope: !8341)
!8343 = !DILocation(line: 102, column: 17, scope: !8344)
!8344 = distinct !DILexicalBlock(scope: !8341, file: !593, line: 102, column: 5)
!8345 = !DILocation(line: 102, column: 19, scope: !8344)
!8346 = !DILocation(line: 102, column: 5, scope: !8341)
!8347 = !DILocation(line: 102, column: 42, scope: !8344)
!8348 = !DILocation(line: 102, column: 51, scope: !8344)
!8349 = !DILocation(line: 102, column: 64, scope: !8344)
!8350 = !DILocation(line: 102, column: 59, scope: !8344)
!8351 = !DILocation(line: 102, column: 57, scope: !8344)
!8352 = !DILocation(line: 102, column: 39, scope: !8344)
!8353 = !DILocation(line: 102, column: 30, scope: !8344)
!8354 = !DILocation(line: 102, column: 26, scope: !8344)
!8355 = !DILocation(line: 102, column: 5, scope: !8344)
!8356 = distinct !{!8356, !8346, !8357, !816}
!8357 = !DILocation(line: 102, column: 64, scope: !8341)
!8358 = !DILocation(line: 104, column: 20, scope: !8332)
!8359 = !DILocation(line: 104, column: 13, scope: !8332)
!8360 = !DILocation(line: 105, column: 9, scope: !8361)
!8361 = distinct !DILexicalBlock(scope: !8332, file: !593, line: 105, column: 9)
!8362 = !DILocation(line: 105, column: 17, scope: !8361)
!8363 = !DILocation(line: 105, column: 9, scope: !8332)
!8364 = !DILocation(line: 106, column: 2, scope: !8365)
!8365 = distinct !DILexicalBlock(scope: !8361, file: !593, line: 105, column: 31)
!8366 = !DILocation(line: 107, column: 5, scope: !8365)
!8367 = !DILocation(line: 110, column: 7, scope: !8332)
!8368 = !DILocation(line: 111, column: 14, scope: !8369)
!8369 = distinct !DILexicalBlock(scope: !8332, file: !593, line: 111, column: 5)
!8370 = !DILocation(line: 111, column: 10, scope: !8369)
!8371 = !DILocation(line: 111, column: 19, scope: !8372)
!8372 = distinct !DILexicalBlock(scope: !8369, file: !593, line: 111, column: 5)
!8373 = !DILocation(line: 111, column: 26, scope: !8372)
!8374 = !DILocation(line: 111, column: 23, scope: !8372)
!8375 = !DILocation(line: 111, column: 5, scope: !8369)
!8376 = !DILocation(line: 112, column: 21, scope: !8377)
!8377 = distinct !DILexicalBlock(scope: !8372, file: !593, line: 111, column: 42)
!8378 = !DILocation(line: 112, column: 9, scope: !8377)
!8379 = !DILocation(line: 112, column: 2, scope: !8377)
!8380 = !DILocation(line: 112, column: 14, scope: !8377)
!8381 = !DILocation(line: 113, column: 14, scope: !8377)
!8382 = !DILocation(line: 113, column: 7, scope: !8377)
!8383 = !DILocation(line: 113, column: 4, scope: !8377)
!8384 = !DILocation(line: 114, column: 5, scope: !8377)
!8385 = !DILocation(line: 111, column: 38, scope: !8372)
!8386 = !DILocation(line: 111, column: 5, scope: !8372)
!8387 = distinct !{!8387, !8375, !8388, !816}
!8388 = !DILocation(line: 114, column: 5, scope: !8369)
!8389 = !DILocation(line: 115, column: 9, scope: !8390)
!8390 = distinct !DILexicalBlock(scope: !8332, file: !593, line: 115, column: 9)
!8391 = !DILocation(line: 115, column: 11, scope: !8390)
!8392 = !DILocation(line: 115, column: 9, scope: !8332)
!8393 = !DILocation(line: 116, column: 2, scope: !8394)
!8394 = distinct !DILexicalBlock(scope: !8390, file: !593, line: 115, column: 23)
!8395 = !DILocation(line: 117, column: 5, scope: !8394)
!8396 = !DILocation(line: 127, column: 12, scope: !8332)
!8397 = !DILocation(line: 127, column: 5, scope: !8332)
!8398 = !DILocation(line: 127, column: 20, scope: !8332)
!8399 = !DILocation(line: 130, column: 10, scope: !8332)
!8400 = !DILocation(line: 131, column: 14, scope: !8401)
!8401 = distinct !DILexicalBlock(scope: !8332, file: !593, line: 131, column: 5)
!8402 = !DILocation(line: 131, column: 10, scope: !8401)
!8403 = !DILocation(line: 131, column: 19, scope: !8404)
!8404 = distinct !DILexicalBlock(scope: !8401, file: !593, line: 131, column: 5)
!8405 = !DILocation(line: 131, column: 26, scope: !8404)
!8406 = !DILocation(line: 131, column: 23, scope: !8404)
!8407 = !DILocation(line: 131, column: 5, scope: !8401)
!8408 = !DILocation(line: 133, column: 18, scope: !8409)
!8409 = distinct !DILexicalBlock(scope: !8404, file: !593, line: 131, column: 42)
!8410 = !DILocation(line: 133, column: 11, scope: !8409)
!8411 = !DILocation(line: 133, column: 2, scope: !8409)
!8412 = !DILocation(line: 133, column: 16, scope: !8409)
!8413 = !DILocation(line: 135, column: 18, scope: !8414)
!8414 = distinct !DILexicalBlock(scope: !8409, file: !593, line: 135, column: 2)
!8415 = !DILocation(line: 135, column: 11, scope: !8414)
!8416 = !DILocation(line: 135, column: 9, scope: !8414)
!8417 = !DILocation(line: 135, column: 7, scope: !8414)
!8418 = !DILocation(line: 135, column: 24, scope: !8419)
!8419 = distinct !DILexicalBlock(scope: !8414, file: !593, line: 135, column: 2)
!8420 = !DILocation(line: 135, column: 26, scope: !8419)
!8421 = !DILocation(line: 135, column: 2, scope: !8414)
!8422 = !DILocation(line: 136, column: 29, scope: !8423)
!8423 = distinct !DILexicalBlock(scope: !8419, file: !593, line: 135, column: 36)
!8424 = !DILocation(line: 136, column: 24, scope: !8423)
!8425 = !DILocation(line: 136, column: 18, scope: !8423)
!8426 = !DILocation(line: 136, column: 6, scope: !8423)
!8427 = !DILocation(line: 136, column: 22, scope: !8423)
!8428 = !DILocation(line: 137, column: 2, scope: !8423)
!8429 = !DILocation(line: 135, column: 32, scope: !8419)
!8430 = !DILocation(line: 135, column: 2, scope: !8419)
!8431 = distinct !{!8431, !8421, !8432, !816}
!8432 = !DILocation(line: 137, column: 2, scope: !8414)
!8433 = !DILocation(line: 138, column: 5, scope: !8409)
!8434 = !DILocation(line: 131, column: 38, scope: !8404)
!8435 = !DILocation(line: 131, column: 5, scope: !8404)
!8436 = distinct !{!8436, !8407, !8437, !816}
!8437 = !DILocation(line: 138, column: 5, scope: !8401)
!8438 = !DILocation(line: 139, column: 12, scope: !8332)
!8439 = !DILocation(line: 139, column: 5, scope: !8332)
!8440 = !DILocation(line: 139, column: 20, scope: !8332)
!8441 = !DILocation(line: 140, column: 1, scope: !8332)
!8442 = distinct !DISubprogram(name: "build_tree", scope: !593, file: !593, line: 145, type: !269, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !592, retainedNodes: !271)
!8443 = !DILocalVariable(name: "nodes", scope: !8442, file: !593, line: 147, type: !28)
!8444 = !DILocation(line: 147, column: 9, scope: !8442)
!8445 = !DILocalVariable(name: "len", scope: !8442, file: !593, line: 148, type: !28)
!8446 = !DILocation(line: 148, column: 9, scope: !8442)
!8447 = !DILocalVariable(name: "prefixp", scope: !8442, file: !593, line: 149, type: !312)
!8448 = !DILocation(line: 149, column: 10, scope: !8442)
!8449 = !DILocation(line: 151, column: 16, scope: !8450)
!8450 = distinct !DILexicalBlock(scope: !8442, file: !593, line: 151, column: 5)
!8451 = !DILocation(line: 151, column: 14, scope: !8450)
!8452 = !DILocation(line: 151, column: 10, scope: !8450)
!8453 = !DILocation(line: 151, column: 25, scope: !8454)
!8454 = distinct !DILexicalBlock(scope: !8450, file: !593, line: 151, column: 5)
!8455 = !DILocation(line: 151, column: 29, scope: !8454)
!8456 = !DILocation(line: 151, column: 5, scope: !8450)
!8457 = !DILocation(line: 155, column: 8, scope: !8458)
!8458 = distinct !DILexicalBlock(scope: !8454, file: !593, line: 151, column: 42)
!8459 = !DILocation(line: 156, column: 17, scope: !8458)
!8460 = !DILocation(line: 156, column: 10, scope: !8458)
!8461 = !DILocation(line: 156, column: 2, scope: !8458)
!8462 = !DILocation(line: 156, column: 15, scope: !8458)
!8463 = !DILocation(line: 160, column: 19, scope: !8458)
!8464 = !DILocation(line: 160, column: 11, scope: !8458)
!8465 = !DILocation(line: 160, column: 2, scope: !8458)
!8466 = !DILocation(line: 160, column: 16, scope: !8458)
!8467 = !DILocation(line: 162, column: 18, scope: !8458)
!8468 = !DILocation(line: 162, column: 11, scope: !8458)
!8469 = !DILocation(line: 162, column: 8, scope: !8458)
!8470 = !DILocation(line: 163, column: 5, scope: !8458)
!8471 = !DILocation(line: 151, column: 38, scope: !8454)
!8472 = !DILocation(line: 151, column: 5, scope: !8454)
!8473 = distinct !{!8473, !8456, !8474, !816}
!8474 = !DILocation(line: 163, column: 5, scope: !8450)
!8475 = !DILocation(line: 167, column: 17, scope: !8442)
!8476 = !DILocation(line: 167, column: 15, scope: !8442)
!8477 = !DILocation(line: 168, column: 30, scope: !8442)
!8478 = !DILocation(line: 168, column: 28, scope: !8442)
!8479 = !DILocation(line: 168, column: 16, scope: !8442)
!8480 = !DILocation(line: 168, column: 13, scope: !8442)
!8481 = !DILocation(line: 169, column: 14, scope: !8482)
!8482 = distinct !DILexicalBlock(scope: !8442, file: !593, line: 169, column: 5)
!8483 = !DILocation(line: 169, column: 10, scope: !8482)
!8484 = !DILocation(line: 169, column: 19, scope: !8485)
!8485 = distinct !DILexicalBlock(scope: !8482, file: !593, line: 169, column: 5)
!8486 = !DILocation(line: 169, column: 26, scope: !8485)
!8487 = !DILocation(line: 169, column: 23, scope: !8485)
!8488 = !DILocation(line: 169, column: 5, scope: !8482)
!8489 = !DILocalVariable(name: "prefixes", scope: !8490, file: !593, line: 170, type: !28)
!8490 = distinct !DILexicalBlock(scope: !8485, file: !593, line: 169, column: 44)
!8491 = !DILocation(line: 170, column: 6, scope: !8490)
!8492 = !DILocation(line: 170, column: 24, scope: !8490)
!8493 = !DILocation(line: 170, column: 17, scope: !8490)
!8494 = !DILocation(line: 170, column: 33, scope: !8490)
!8495 = !DILocation(line: 170, column: 43, scope: !8490)
!8496 = !DILocation(line: 170, column: 42, scope: !8490)
!8497 = !DILocation(line: 170, column: 29, scope: !8490)
!8498 = !DILocation(line: 171, column: 2, scope: !8490)
!8499 = !DILocation(line: 171, column: 17, scope: !8490)
!8500 = !DILocation(line: 171, column: 39, scope: !8490)
!8501 = !DILocation(line: 171, column: 34, scope: !8490)
!8502 = !DILocation(line: 171, column: 22, scope: !8490)
!8503 = !DILocation(line: 171, column: 32, scope: !8490)
!8504 = distinct !{!8504, !8498, !8500, !816}
!8505 = !DILocation(line: 172, column: 5, scope: !8490)
!8506 = !DILocation(line: 169, column: 40, scope: !8485)
!8507 = !DILocation(line: 169, column: 5, scope: !8485)
!8508 = distinct !{!8508, !8488, !8509, !816}
!8509 = !DILocation(line: 172, column: 5, scope: !8482)
!8510 = !DILocation(line: 174, column: 5, scope: !8442)
!8511 = !DILocation(line: 174, column: 12, scope: !8442)
!8512 = !DILocation(line: 174, column: 20, scope: !8442)
!8513 = !DILocation(line: 174, column: 35, scope: !8442)
!8514 = !DILocation(line: 174, column: 45, scope: !8442)
!8515 = distinct !{!8515, !8510, !8516, !816}
!8516 = !DILocation(line: 174, column: 47, scope: !8442)
!8517 = !DILocation(line: 175, column: 1, scope: !8442)
!8518 = distinct !DISubprogram(name: "unlzh", scope: !618, file: !618, line: 385, type: !160, scopeLine: 388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !617, retainedNodes: !271)
!8519 = !DILocalVariable(name: "in", arg: 1, scope: !8518, file: !618, line: 386, type: !28)
!8520 = !DILocation(line: 386, column: 9, scope: !8518)
!8521 = !DILocalVariable(name: "out", arg: 2, scope: !8518, file: !618, line: 387, type: !28)
!8522 = !DILocation(line: 387, column: 9, scope: !8518)
!8523 = !DILocalVariable(name: "n", scope: !8518, file: !618, line: 389, type: !7)
!8524 = !DILocation(line: 389, column: 14, scope: !8518)
!8525 = !DILocation(line: 390, column: 11, scope: !8518)
!8526 = !DILocation(line: 390, column: 9, scope: !8518)
!8527 = !DILocation(line: 391, column: 11, scope: !8518)
!8528 = !DILocation(line: 391, column: 9, scope: !8518)
!8529 = !DILocation(line: 393, column: 5, scope: !8518)
!8530 = !DILocation(line: 394, column: 5, scope: !8518)
!8531 = !DILocation(line: 394, column: 13, scope: !8518)
!8532 = !DILocation(line: 394, column: 12, scope: !8518)
!8533 = !DILocation(line: 395, column: 6, scope: !8534)
!8534 = distinct !DILexicalBlock(scope: !8518, file: !618, line: 394, column: 19)
!8535 = !DILocation(line: 395, column: 4, scope: !8534)
!8536 = !DILocation(line: 396, column: 7, scope: !8537)
!8537 = distinct !DILexicalBlock(scope: !8534, file: !618, line: 396, column: 6)
!8538 = !DILocation(line: 396, column: 12, scope: !8537)
!8539 = !DILocation(line: 396, column: 15, scope: !8537)
!8540 = !DILocation(line: 396, column: 17, scope: !8537)
!8541 = !DILocation(line: 396, column: 6, scope: !8534)
!8542 = !DILocation(line: 397, column: 16, scope: !8543)
!8543 = distinct !DILexicalBlock(scope: !8537, file: !618, line: 396, column: 22)
!8544 = !DILocation(line: 397, column: 36, scope: !8543)
!8545 = !DILocation(line: 397, column: 6, scope: !8543)
!8546 = !DILocation(line: 398, column: 2, scope: !8543)
!8547 = distinct !{!8547, !8530, !8548, !816}
!8548 = !DILocation(line: 399, column: 5, scope: !8518)
!8549 = !DILocation(line: 400, column: 5, scope: !8518)
!8550 = distinct !DISubprogram(name: "decode_start", scope: !618, file: !618, line: 330, type: !269, scopeLine: 331, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !617, retainedNodes: !271)
!8551 = !DILocation(line: 332, column: 5, scope: !8550)
!8552 = !DILocation(line: 333, column: 7, scope: !8550)
!8553 = !DILocation(line: 334, column: 10, scope: !8550)
!8554 = !DILocation(line: 335, column: 1, scope: !8550)
!8555 = !DILocalVariable(name: "count", arg: 1, scope: !633, file: !618, line: 340, type: !7)
!8556 = !DILocation(line: 340, column: 14, scope: !633)
!8557 = !DILocalVariable(name: "buffer", arg: 2, scope: !633, file: !618, line: 341, type: !312)
!8558 = !DILocation(line: 341, column: 9, scope: !633)
!8559 = !DILocalVariable(name: "r", scope: !633, file: !618, line: 352, type: !7)
!8560 = !DILocation(line: 352, column: 14, scope: !633)
!8561 = !DILocalVariable(name: "c", scope: !633, file: !618, line: 352, type: !7)
!8562 = !DILocation(line: 352, column: 17, scope: !633)
!8563 = !DILocation(line: 354, column: 7, scope: !633)
!8564 = !DILocation(line: 355, column: 5, scope: !633)
!8565 = !DILocation(line: 355, column: 12, scope: !633)
!8566 = !DILocation(line: 355, column: 16, scope: !633)
!8567 = !DILocation(line: 356, column: 14, scope: !8568)
!8568 = distinct !DILexicalBlock(scope: !633, file: !618, line: 355, column: 22)
!8569 = !DILocation(line: 356, column: 21, scope: !8568)
!8570 = !DILocation(line: 356, column: 2, scope: !8568)
!8571 = !DILocation(line: 356, column: 9, scope: !8568)
!8572 = !DILocation(line: 356, column: 12, scope: !8568)
!8573 = !DILocation(line: 357, column: 7, scope: !8568)
!8574 = !DILocation(line: 357, column: 9, scope: !8568)
!8575 = !DILocation(line: 357, column: 14, scope: !8568)
!8576 = !DILocation(line: 357, column: 4, scope: !8568)
!8577 = !DILocation(line: 358, column: 6, scope: !8578)
!8578 = distinct !DILexicalBlock(scope: !8568, file: !618, line: 358, column: 6)
!8579 = !DILocation(line: 358, column: 13, scope: !8578)
!8580 = !DILocation(line: 358, column: 10, scope: !8578)
!8581 = !DILocation(line: 358, column: 6, scope: !8568)
!8582 = !DILocation(line: 358, column: 27, scope: !8578)
!8583 = !DILocation(line: 358, column: 20, scope: !8578)
!8584 = distinct !{!8584, !8564, !8585, !816}
!8585 = !DILocation(line: 359, column: 5, scope: !633)
!8586 = !DILocation(line: 360, column: 5, scope: !633)
!8587 = !DILocation(line: 361, column: 6, scope: !8588)
!8588 = distinct !DILexicalBlock(scope: !8589, file: !618, line: 360, column: 17)
!8589 = distinct !DILexicalBlock(scope: !8590, file: !618, line: 360, column: 5)
!8590 = distinct !DILexicalBlock(scope: !633, file: !618, line: 360, column: 5)
!8591 = !DILocation(line: 361, column: 4, scope: !8588)
!8592 = !DILocation(line: 362, column: 6, scope: !8593)
!8593 = distinct !DILexicalBlock(scope: !8588, file: !618, line: 362, column: 6)
!8594 = !DILocation(line: 362, column: 8, scope: !8593)
!8595 = !DILocation(line: 362, column: 6, scope: !8588)
!8596 = !DILocation(line: 363, column: 11, scope: !8597)
!8597 = distinct !DILexicalBlock(scope: !8593, file: !618, line: 362, column: 15)
!8598 = !DILocation(line: 364, column: 13, scope: !8597)
!8599 = !DILocation(line: 364, column: 6, scope: !8597)
!8600 = !DILocation(line: 366, column: 6, scope: !8601)
!8601 = distinct !DILexicalBlock(scope: !8588, file: !618, line: 366, column: 6)
!8602 = !DILocation(line: 366, column: 8, scope: !8601)
!8603 = !DILocation(line: 366, column: 6, scope: !8588)
!8604 = !DILocation(line: 367, column: 18, scope: !8605)
!8605 = distinct !DILexicalBlock(scope: !8601, file: !618, line: 366, column: 22)
!8606 = !DILocation(line: 367, column: 6, scope: !8605)
!8607 = !DILocation(line: 367, column: 13, scope: !8605)
!8608 = !DILocation(line: 367, column: 16, scope: !8605)
!8609 = !DILocation(line: 368, column: 10, scope: !8610)
!8610 = distinct !DILexicalBlock(scope: !8605, file: !618, line: 368, column: 10)
!8611 = !DILocation(line: 368, column: 17, scope: !8610)
!8612 = !DILocation(line: 368, column: 14, scope: !8610)
!8613 = !DILocation(line: 368, column: 10, scope: !8605)
!8614 = !DILocation(line: 368, column: 31, scope: !8610)
!8615 = !DILocation(line: 368, column: 24, scope: !8610)
!8616 = !DILocation(line: 369, column: 2, scope: !8605)
!8617 = !DILocation(line: 370, column: 10, scope: !8618)
!8618 = distinct !DILexicalBlock(scope: !8601, file: !618, line: 369, column: 9)
!8619 = !DILocation(line: 370, column: 12, scope: !8618)
!8620 = !DILocation(line: 370, column: 8, scope: !8618)
!8621 = !DILocation(line: 371, column: 11, scope: !8618)
!8622 = !DILocation(line: 371, column: 15, scope: !8618)
!8623 = !DILocation(line: 371, column: 13, scope: !8618)
!8624 = !DILocation(line: 371, column: 26, scope: !8618)
!8625 = !DILocation(line: 371, column: 31, scope: !8618)
!8626 = !DILocation(line: 371, column: 8, scope: !8618)
!8627 = !DILocation(line: 372, column: 6, scope: !8618)
!8628 = !DILocation(line: 372, column: 13, scope: !8618)
!8629 = !DILocation(line: 372, column: 17, scope: !8618)
!8630 = !DILocation(line: 373, column: 15, scope: !8631)
!8631 = distinct !DILexicalBlock(scope: !8618, file: !618, line: 372, column: 23)
!8632 = !DILocation(line: 373, column: 22, scope: !8631)
!8633 = !DILocation(line: 373, column: 3, scope: !8631)
!8634 = !DILocation(line: 373, column: 10, scope: !8631)
!8635 = !DILocation(line: 373, column: 13, scope: !8631)
!8636 = !DILocation(line: 374, column: 8, scope: !8631)
!8637 = !DILocation(line: 374, column: 10, scope: !8631)
!8638 = !DILocation(line: 374, column: 15, scope: !8631)
!8639 = !DILocation(line: 374, column: 5, scope: !8631)
!8640 = !DILocation(line: 375, column: 7, scope: !8641)
!8641 = distinct !DILexicalBlock(scope: !8631, file: !618, line: 375, column: 7)
!8642 = !DILocation(line: 375, column: 14, scope: !8641)
!8643 = !DILocation(line: 375, column: 11, scope: !8641)
!8644 = !DILocation(line: 375, column: 7, scope: !8631)
!8645 = !DILocation(line: 375, column: 28, scope: !8641)
!8646 = !DILocation(line: 375, column: 21, scope: !8641)
!8647 = distinct !{!8647, !8627, !8648, !816}
!8648 = !DILocation(line: 376, column: 6, scope: !8618)
!8649 = !DILocation(line: 360, column: 5, scope: !8589)
!8650 = distinct !{!8650, !8651, !8652}
!8651 = !DILocation(line: 360, column: 5, scope: !8590)
!8652 = !DILocation(line: 378, column: 5, scope: !8590)
!8653 = !DILocation(line: 379, column: 1, scope: !633)
!8654 = distinct !DISubprogram(name: "decode_c", scope: !618, file: !618, line: 273, type: !8655, scopeLine: 274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !617, retainedNodes: !271)
!8655 = !DISubroutineType(types: !8656)
!8656 = !{!7}
!8657 = !DILocalVariable(name: "j", scope: !8654, file: !618, line: 275, type: !7)
!8658 = !DILocation(line: 275, column: 14, scope: !8654)
!8659 = !DILocalVariable(name: "mask", scope: !8654, file: !618, line: 275, type: !7)
!8660 = !DILocation(line: 275, column: 17, scope: !8654)
!8661 = !DILocation(line: 277, column: 9, scope: !8662)
!8662 = distinct !DILexicalBlock(scope: !8654, file: !618, line: 277, column: 9)
!8663 = !DILocation(line: 277, column: 19, scope: !8662)
!8664 = !DILocation(line: 277, column: 9, scope: !8654)
!8665 = !DILocation(line: 278, column: 14, scope: !8666)
!8666 = distinct !DILexicalBlock(scope: !8662, file: !618, line: 277, column: 25)
!8667 = !DILocation(line: 278, column: 12, scope: !8666)
!8668 = !DILocation(line: 279, column: 6, scope: !8669)
!8669 = distinct !DILexicalBlock(scope: !8666, file: !618, line: 279, column: 6)
!8670 = !DILocation(line: 279, column: 16, scope: !8669)
!8671 = !DILocation(line: 279, column: 6, scope: !8666)
!8672 = !DILocation(line: 280, column: 6, scope: !8673)
!8673 = distinct !DILexicalBlock(scope: !8669, file: !618, line: 279, column: 22)
!8674 = !DILocation(line: 282, column: 2, scope: !8666)
!8675 = !DILocation(line: 283, column: 2, scope: !8666)
!8676 = !DILocation(line: 284, column: 2, scope: !8666)
!8677 = !DILocation(line: 285, column: 5, scope: !8666)
!8678 = !DILocation(line: 286, column: 14, scope: !8654)
!8679 = !DILocation(line: 287, column: 17, scope: !8654)
!8680 = !DILocation(line: 287, column: 24, scope: !8654)
!8681 = !DILocation(line: 287, column: 9, scope: !8654)
!8682 = !DILocation(line: 287, column: 7, scope: !8654)
!8683 = !DILocation(line: 288, column: 9, scope: !8684)
!8684 = distinct !DILexicalBlock(scope: !8654, file: !618, line: 288, column: 9)
!8685 = !DILocation(line: 288, column: 11, scope: !8684)
!8686 = !DILocation(line: 288, column: 9, scope: !8654)
!8687 = !DILocation(line: 289, column: 7, scope: !8688)
!8688 = distinct !DILexicalBlock(scope: !8684, file: !618, line: 288, column: 18)
!8689 = !DILocation(line: 290, column: 2, scope: !8688)
!8690 = !DILocation(line: 291, column: 10, scope: !8691)
!8691 = distinct !DILexicalBlock(scope: !8692, file: !618, line: 291, column: 10)
!8692 = distinct !DILexicalBlock(scope: !8688, file: !618, line: 290, column: 5)
!8693 = !DILocation(line: 291, column: 19, scope: !8691)
!8694 = !DILocation(line: 291, column: 17, scope: !8691)
!8695 = !DILocation(line: 291, column: 10, scope: !8692)
!8696 = !DILocation(line: 291, column: 35, scope: !8691)
!8697 = !DILocation(line: 291, column: 29, scope: !8691)
!8698 = !DILocation(line: 291, column: 27, scope: !8691)
!8699 = !DILocation(line: 291, column: 25, scope: !8691)
!8700 = !DILocation(line: 292, column: 35, scope: !8691)
!8701 = !DILocation(line: 292, column: 29, scope: !8691)
!8702 = !DILocation(line: 292, column: 27, scope: !8691)
!8703 = !DILocation(line: 293, column: 11, scope: !8692)
!8704 = !DILocation(line: 294, column: 2, scope: !8692)
!8705 = !DILocation(line: 294, column: 11, scope: !8688)
!8706 = !DILocation(line: 294, column: 13, scope: !8688)
!8707 = distinct !{!8707, !8689, !8708, !816}
!8708 = !DILocation(line: 294, column: 18, scope: !8688)
!8709 = !DILocation(line: 295, column: 5, scope: !8688)
!8710 = !DILocation(line: 296, column: 25, scope: !8654)
!8711 = !DILocation(line: 296, column: 19, scope: !8654)
!8712 = !DILocation(line: 296, column: 13, scope: !8654)
!8713 = !DILocation(line: 296, column: 5, scope: !8654)
!8714 = !DILocation(line: 297, column: 12, scope: !8654)
!8715 = !DILocation(line: 297, column: 5, scope: !8654)
!8716 = !DILocation(line: 298, column: 1, scope: !8654)
!8717 = distinct !DISubprogram(name: "decode_p", scope: !618, file: !618, line: 300, type: !8655, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !617, retainedNodes: !271)
!8718 = !DILocalVariable(name: "j", scope: !8717, file: !618, line: 302, type: !7)
!8719 = !DILocation(line: 302, column: 14, scope: !8717)
!8720 = !DILocalVariable(name: "mask", scope: !8717, file: !618, line: 302, type: !7)
!8721 = !DILocation(line: 302, column: 17, scope: !8717)
!8722 = !DILocation(line: 304, column: 18, scope: !8717)
!8723 = !DILocation(line: 304, column: 25, scope: !8717)
!8724 = !DILocation(line: 304, column: 9, scope: !8717)
!8725 = !DILocation(line: 304, column: 7, scope: !8717)
!8726 = !DILocation(line: 305, column: 9, scope: !8727)
!8727 = distinct !DILexicalBlock(scope: !8717, file: !618, line: 305, column: 9)
!8728 = !DILocation(line: 305, column: 11, scope: !8727)
!8729 = !DILocation(line: 305, column: 9, scope: !8717)
!8730 = !DILocation(line: 306, column: 7, scope: !8731)
!8731 = distinct !DILexicalBlock(scope: !8727, file: !618, line: 305, column: 18)
!8732 = !DILocation(line: 307, column: 2, scope: !8731)
!8733 = !DILocation(line: 308, column: 10, scope: !8734)
!8734 = distinct !DILexicalBlock(scope: !8735, file: !618, line: 308, column: 10)
!8735 = distinct !DILexicalBlock(scope: !8731, file: !618, line: 307, column: 5)
!8736 = !DILocation(line: 308, column: 19, scope: !8734)
!8737 = !DILocation(line: 308, column: 17, scope: !8734)
!8738 = !DILocation(line: 308, column: 10, scope: !8735)
!8739 = !DILocation(line: 308, column: 35, scope: !8734)
!8740 = !DILocation(line: 308, column: 29, scope: !8734)
!8741 = !DILocation(line: 308, column: 27, scope: !8734)
!8742 = !DILocation(line: 308, column: 25, scope: !8734)
!8743 = !DILocation(line: 309, column: 35, scope: !8734)
!8744 = !DILocation(line: 309, column: 29, scope: !8734)
!8745 = !DILocation(line: 309, column: 27, scope: !8734)
!8746 = !DILocation(line: 310, column: 11, scope: !8735)
!8747 = !DILocation(line: 311, column: 2, scope: !8735)
!8748 = !DILocation(line: 311, column: 11, scope: !8731)
!8749 = !DILocation(line: 311, column: 13, scope: !8731)
!8750 = distinct !{!8750, !8732, !8751, !816}
!8751 = !DILocation(line: 311, column: 18, scope: !8731)
!8752 = !DILocation(line: 312, column: 5, scope: !8731)
!8753 = !DILocation(line: 313, column: 26, scope: !8717)
!8754 = !DILocation(line: 313, column: 19, scope: !8717)
!8755 = !DILocation(line: 313, column: 13, scope: !8717)
!8756 = !DILocation(line: 313, column: 5, scope: !8717)
!8757 = !DILocation(line: 314, column: 9, scope: !8758)
!8758 = distinct !DILexicalBlock(scope: !8717, file: !618, line: 314, column: 9)
!8759 = !DILocation(line: 314, column: 11, scope: !8758)
!8760 = !DILocation(line: 314, column: 9, scope: !8717)
!8761 = !DILocation(line: 314, column: 39, scope: !8758)
!8762 = !DILocation(line: 314, column: 41, scope: !8758)
!8763 = !DILocation(line: 314, column: 35, scope: !8758)
!8764 = !DILocation(line: 314, column: 64, scope: !8758)
!8765 = !DILocation(line: 314, column: 66, scope: !8758)
!8766 = !DILocation(line: 314, column: 49, scope: !8758)
!8767 = !DILocation(line: 314, column: 47, scope: !8758)
!8768 = !DILocation(line: 314, column: 19, scope: !8758)
!8769 = !DILocation(line: 314, column: 17, scope: !8758)
!8770 = !DILocation(line: 315, column: 12, scope: !8717)
!8771 = !DILocation(line: 315, column: 5, scope: !8717)
!8772 = distinct !DISubprogram(name: "fillbuf", scope: !618, file: !618, line: 109, type: !26, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !617, retainedNodes: !271)
!8773 = !DILocalVariable(name: "n", arg: 1, scope: !8772, file: !618, line: 110, type: !28)
!8774 = !DILocation(line: 110, column: 9, scope: !8772)
!8775 = !DILocation(line: 112, column: 16, scope: !8772)
!8776 = !DILocation(line: 112, column: 12, scope: !8772)
!8777 = !DILocation(line: 113, column: 5, scope: !8772)
!8778 = !DILocation(line: 113, column: 12, scope: !8772)
!8779 = !DILocation(line: 113, column: 16, scope: !8772)
!8780 = !DILocation(line: 113, column: 14, scope: !8772)
!8781 = !DILocation(line: 114, column: 12, scope: !8782)
!8782 = distinct !DILexicalBlock(scope: !8772, file: !618, line: 113, column: 26)
!8783 = !DILocation(line: 114, column: 31, scope: !8782)
!8784 = !DILocation(line: 114, column: 28, scope: !8782)
!8785 = !DILocation(line: 114, column: 22, scope: !8782)
!8786 = !DILocation(line: 114, column: 9, scope: !8782)
!8787 = !DILocation(line: 115, column: 24, scope: !8782)
!8788 = !DILocation(line: 115, column: 12, scope: !8782)
!8789 = !DILocation(line: 116, column: 11, scope: !8790)
!8790 = distinct !DILexicalBlock(scope: !8782, file: !618, line: 116, column: 6)
!8791 = !DILocation(line: 116, column: 21, scope: !8790)
!8792 = !DILocation(line: 116, column: 6, scope: !8782)
!8793 = !DILocation(line: 116, column: 39, scope: !8790)
!8794 = !DILocation(line: 116, column: 29, scope: !8790)
!8795 = !DILocation(line: 117, column: 11, scope: !8782)
!8796 = distinct !{!8796, !8777, !8797, !816}
!8797 = !DILocation(line: 118, column: 5, scope: !8772)
!8798 = !DILocation(line: 119, column: 15, scope: !8772)
!8799 = !DILocation(line: 119, column: 41, scope: !8772)
!8800 = !DILocation(line: 119, column: 38, scope: !8772)
!8801 = !DILocation(line: 119, column: 25, scope: !8772)
!8802 = !DILocation(line: 119, column: 12, scope: !8772)
!8803 = !DILocation(line: 120, column: 1, scope: !8772)
!8804 = distinct !DISubprogram(name: "getbits", scope: !618, file: !618, line: 122, type: !8805, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !617, retainedNodes: !271)
!8805 = !DISubroutineType(types: !8806)
!8806 = !{!7, !28}
!8807 = !DILocalVariable(name: "n", arg: 1, scope: !8804, file: !618, line: 123, type: !28)
!8808 = !DILocation(line: 123, column: 9, scope: !8804)
!8809 = !DILocalVariable(name: "x", scope: !8804, file: !618, line: 125, type: !7)
!8810 = !DILocation(line: 125, column: 14, scope: !8804)
!8811 = !DILocation(line: 127, column: 9, scope: !8804)
!8812 = !DILocation(line: 127, column: 32, scope: !8804)
!8813 = !DILocation(line: 127, column: 30, scope: !8804)
!8814 = !DILocation(line: 127, column: 16, scope: !8804)
!8815 = !DILocation(line: 127, column: 7, scope: !8804)
!8816 = !DILocation(line: 127, column: 45, scope: !8804)
!8817 = !DILocation(line: 127, column: 37, scope: !8804)
!8818 = !DILocation(line: 128, column: 12, scope: !8804)
!8819 = !DILocation(line: 128, column: 5, scope: !8804)
!8820 = distinct !DISubprogram(name: "read_pt_len", scope: !618, file: !618, line: 205, type: !4544, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !617, retainedNodes: !271)
!8821 = !DILocalVariable(name: "nn", arg: 1, scope: !8820, file: !618, line: 206, type: !28)
!8822 = !DILocation(line: 206, column: 9, scope: !8820)
!8823 = !DILocalVariable(name: "nbit", arg: 2, scope: !8820, file: !618, line: 207, type: !28)
!8824 = !DILocation(line: 207, column: 9, scope: !8820)
!8825 = !DILocalVariable(name: "i_special", arg: 3, scope: !8820, file: !618, line: 208, type: !28)
!8826 = !DILocation(line: 208, column: 9, scope: !8820)
!8827 = !DILocalVariable(name: "i", scope: !8820, file: !618, line: 210, type: !28)
!8828 = !DILocation(line: 210, column: 9, scope: !8820)
!8829 = !DILocalVariable(name: "c", scope: !8820, file: !618, line: 210, type: !28)
!8830 = !DILocation(line: 210, column: 12, scope: !8820)
!8831 = !DILocalVariable(name: "n", scope: !8820, file: !618, line: 210, type: !28)
!8832 = !DILocation(line: 210, column: 15, scope: !8820)
!8833 = !DILocalVariable(name: "mask", scope: !8820, file: !618, line: 211, type: !7)
!8834 = !DILocation(line: 211, column: 14, scope: !8820)
!8835 = !DILocation(line: 213, column: 17, scope: !8820)
!8836 = !DILocation(line: 213, column: 9, scope: !8820)
!8837 = !DILocation(line: 213, column: 7, scope: !8820)
!8838 = !DILocation(line: 214, column: 9, scope: !8839)
!8839 = distinct !DILexicalBlock(scope: !8820, file: !618, line: 214, column: 9)
!8840 = !DILocation(line: 214, column: 11, scope: !8839)
!8841 = !DILocation(line: 214, column: 9, scope: !8820)
!8842 = !DILocation(line: 215, column: 14, scope: !8843)
!8843 = distinct !DILexicalBlock(scope: !8839, file: !618, line: 214, column: 17)
!8844 = !DILocation(line: 215, column: 6, scope: !8843)
!8845 = !DILocation(line: 215, column: 4, scope: !8843)
!8846 = !DILocation(line: 216, column: 9, scope: !8847)
!8847 = distinct !DILexicalBlock(scope: !8843, file: !618, line: 216, column: 2)
!8848 = !DILocation(line: 216, column: 7, scope: !8847)
!8849 = !DILocation(line: 216, column: 14, scope: !8850)
!8850 = distinct !DILexicalBlock(scope: !8847, file: !618, line: 216, column: 2)
!8851 = !DILocation(line: 216, column: 18, scope: !8850)
!8852 = !DILocation(line: 216, column: 16, scope: !8850)
!8853 = !DILocation(line: 216, column: 2, scope: !8847)
!8854 = !DILocation(line: 216, column: 34, scope: !8850)
!8855 = !DILocation(line: 216, column: 27, scope: !8850)
!8856 = !DILocation(line: 216, column: 37, scope: !8850)
!8857 = !DILocation(line: 216, column: 23, scope: !8850)
!8858 = !DILocation(line: 216, column: 2, scope: !8850)
!8859 = distinct !{!8859, !8853, !8860, !816}
!8860 = !DILocation(line: 216, column: 39, scope: !8847)
!8861 = !DILocation(line: 217, column: 9, scope: !8862)
!8862 = distinct !DILexicalBlock(scope: !8843, file: !618, line: 217, column: 2)
!8863 = !DILocation(line: 217, column: 7, scope: !8862)
!8864 = !DILocation(line: 217, column: 14, scope: !8865)
!8865 = distinct !DILexicalBlock(scope: !8862, file: !618, line: 217, column: 2)
!8866 = !DILocation(line: 217, column: 16, scope: !8865)
!8867 = !DILocation(line: 217, column: 2, scope: !8862)
!8868 = !DILocation(line: 217, column: 42, scope: !8865)
!8869 = !DILocation(line: 217, column: 37, scope: !8865)
!8870 = !DILocation(line: 217, column: 28, scope: !8865)
!8871 = !DILocation(line: 217, column: 40, scope: !8865)
!8872 = !DILocation(line: 217, column: 24, scope: !8865)
!8873 = !DILocation(line: 217, column: 2, scope: !8865)
!8874 = distinct !{!8874, !8867, !8875, !816}
!8875 = !DILocation(line: 217, column: 42, scope: !8862)
!8876 = !DILocation(line: 218, column: 5, scope: !8843)
!8877 = !DILocation(line: 219, column: 4, scope: !8878)
!8878 = distinct !DILexicalBlock(scope: !8839, file: !618, line: 218, column: 12)
!8879 = !DILocation(line: 220, column: 2, scope: !8878)
!8880 = !DILocation(line: 220, column: 9, scope: !8878)
!8881 = !DILocation(line: 220, column: 13, scope: !8878)
!8882 = !DILocation(line: 220, column: 11, scope: !8878)
!8883 = !DILocation(line: 221, column: 10, scope: !8884)
!8884 = distinct !DILexicalBlock(scope: !8878, file: !618, line: 220, column: 16)
!8885 = !DILocation(line: 221, column: 17, scope: !8884)
!8886 = !DILocation(line: 221, column: 8, scope: !8884)
!8887 = !DILocation(line: 222, column: 10, scope: !8888)
!8888 = distinct !DILexicalBlock(scope: !8884, file: !618, line: 222, column: 10)
!8889 = !DILocation(line: 222, column: 12, scope: !8888)
!8890 = !DILocation(line: 222, column: 10, scope: !8884)
!8891 = !DILocation(line: 223, column: 8, scope: !8892)
!8892 = distinct !DILexicalBlock(scope: !8888, file: !618, line: 222, column: 18)
!8893 = !DILocation(line: 224, column: 3, scope: !8892)
!8894 = !DILocation(line: 224, column: 10, scope: !8892)
!8895 = !DILocation(line: 224, column: 17, scope: !8892)
!8896 = !DILocation(line: 224, column: 15, scope: !8892)
!8897 = !DILocation(line: 224, column: 33, scope: !8898)
!8898 = distinct !DILexicalBlock(scope: !8892, file: !618, line: 224, column: 25)
!8899 = !DILocation(line: 224, column: 42, scope: !8898)
!8900 = distinct !{!8900, !8893, !8901, !816}
!8901 = !DILocation(line: 224, column: 47, scope: !8892)
!8902 = !DILocation(line: 225, column: 6, scope: !8892)
!8903 = !DILocation(line: 226, column: 15, scope: !8884)
!8904 = !DILocation(line: 226, column: 17, scope: !8884)
!8905 = !DILocation(line: 226, column: 14, scope: !8884)
!8906 = !DILocation(line: 226, column: 28, scope: !8884)
!8907 = !DILocation(line: 226, column: 30, scope: !8884)
!8908 = !DILocation(line: 226, column: 6, scope: !8884)
!8909 = !DILocation(line: 227, column: 20, scope: !8884)
!8910 = !DILocation(line: 227, column: 14, scope: !8884)
!8911 = !DILocation(line: 227, column: 6, scope: !8884)
!8912 = !DILocation(line: 227, column: 18, scope: !8884)
!8913 = !DILocation(line: 228, column: 10, scope: !8914)
!8914 = distinct !DILexicalBlock(scope: !8884, file: !618, line: 228, column: 10)
!8915 = !DILocation(line: 228, column: 15, scope: !8914)
!8916 = !DILocation(line: 228, column: 12, scope: !8914)
!8917 = !DILocation(line: 228, column: 10, scope: !8884)
!8918 = !DILocation(line: 229, column: 7, scope: !8919)
!8919 = distinct !DILexicalBlock(scope: !8914, file: !618, line: 228, column: 26)
!8920 = !DILocation(line: 229, column: 5, scope: !8919)
!8921 = !DILocation(line: 230, column: 3, scope: !8919)
!8922 = !DILocation(line: 230, column: 10, scope: !8919)
!8923 = !DILocation(line: 230, column: 14, scope: !8919)
!8924 = !DILocation(line: 230, column: 28, scope: !8919)
!8925 = !DILocation(line: 230, column: 20, scope: !8919)
!8926 = !DILocation(line: 230, column: 32, scope: !8919)
!8927 = distinct !{!8927, !8921, !8928, !816}
!8928 = !DILocation(line: 230, column: 34, scope: !8919)
!8929 = !DILocation(line: 231, column: 6, scope: !8919)
!8930 = distinct !{!8930, !8879, !8931, !816}
!8931 = !DILocation(line: 232, column: 2, scope: !8878)
!8932 = !DILocation(line: 233, column: 2, scope: !8878)
!8933 = !DILocation(line: 233, column: 9, scope: !8878)
!8934 = !DILocation(line: 233, column: 13, scope: !8878)
!8935 = !DILocation(line: 233, column: 11, scope: !8878)
!8936 = !DILocation(line: 233, column: 25, scope: !8878)
!8937 = !DILocation(line: 233, column: 17, scope: !8878)
!8938 = !DILocation(line: 233, column: 29, scope: !8878)
!8939 = distinct !{!8939, !8932, !8940, !816}
!8940 = !DILocation(line: 233, column: 31, scope: !8878)
!8941 = !DILocation(line: 234, column: 13, scope: !8878)
!8942 = !DILocation(line: 234, column: 2, scope: !8878)
!8943 = !DILocation(line: 236, column: 1, scope: !8820)
!8944 = distinct !DISubprogram(name: "read_c_len", scope: !618, file: !618, line: 238, type: !269, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !617, retainedNodes: !271)
!8945 = !DILocalVariable(name: "i", scope: !8944, file: !618, line: 240, type: !28)
!8946 = !DILocation(line: 240, column: 9, scope: !8944)
!8947 = !DILocalVariable(name: "c", scope: !8944, file: !618, line: 240, type: !28)
!8948 = !DILocation(line: 240, column: 12, scope: !8944)
!8949 = !DILocalVariable(name: "n", scope: !8944, file: !618, line: 240, type: !28)
!8950 = !DILocation(line: 240, column: 15, scope: !8944)
!8951 = !DILocalVariable(name: "mask", scope: !8944, file: !618, line: 241, type: !7)
!8952 = !DILocation(line: 241, column: 14, scope: !8944)
!8953 = !DILocation(line: 243, column: 9, scope: !8944)
!8954 = !DILocation(line: 243, column: 7, scope: !8944)
!8955 = !DILocation(line: 244, column: 9, scope: !8956)
!8956 = distinct !DILexicalBlock(scope: !8944, file: !618, line: 244, column: 9)
!8957 = !DILocation(line: 244, column: 11, scope: !8956)
!8958 = !DILocation(line: 244, column: 9, scope: !8944)
!8959 = !DILocation(line: 245, column: 6, scope: !8960)
!8960 = distinct !DILexicalBlock(scope: !8956, file: !618, line: 244, column: 17)
!8961 = !DILocation(line: 245, column: 4, scope: !8960)
!8962 = !DILocation(line: 246, column: 9, scope: !8963)
!8963 = distinct !DILexicalBlock(scope: !8960, file: !618, line: 246, column: 2)
!8964 = !DILocation(line: 246, column: 7, scope: !8963)
!8965 = !DILocation(line: 246, column: 14, scope: !8966)
!8966 = distinct !DILexicalBlock(scope: !8963, file: !618, line: 246, column: 2)
!8967 = !DILocation(line: 246, column: 16, scope: !8966)
!8968 = !DILocation(line: 246, column: 2, scope: !8963)
!8969 = !DILocation(line: 246, column: 33, scope: !8966)
!8970 = !DILocation(line: 246, column: 27, scope: !8966)
!8971 = !DILocation(line: 246, column: 36, scope: !8966)
!8972 = !DILocation(line: 246, column: 23, scope: !8966)
!8973 = !DILocation(line: 246, column: 2, scope: !8966)
!8974 = distinct !{!8974, !8968, !8975, !816}
!8975 = !DILocation(line: 246, column: 38, scope: !8963)
!8976 = !DILocation(line: 247, column: 9, scope: !8977)
!8977 = distinct !DILexicalBlock(scope: !8960, file: !618, line: 247, column: 2)
!8978 = !DILocation(line: 247, column: 7, scope: !8977)
!8979 = !DILocation(line: 247, column: 14, scope: !8980)
!8980 = distinct !DILexicalBlock(scope: !8977, file: !618, line: 247, column: 2)
!8981 = !DILocation(line: 247, column: 16, scope: !8980)
!8982 = !DILocation(line: 247, column: 2, scope: !8977)
!8983 = !DILocation(line: 247, column: 42, scope: !8980)
!8984 = !DILocation(line: 247, column: 37, scope: !8980)
!8985 = !DILocation(line: 247, column: 29, scope: !8980)
!8986 = !DILocation(line: 247, column: 40, scope: !8980)
!8987 = !DILocation(line: 247, column: 25, scope: !8980)
!8988 = !DILocation(line: 247, column: 2, scope: !8980)
!8989 = distinct !{!8989, !8982, !8990, !816}
!8990 = !DILocation(line: 247, column: 42, scope: !8977)
!8991 = !DILocation(line: 248, column: 5, scope: !8960)
!8992 = !DILocation(line: 249, column: 4, scope: !8993)
!8993 = distinct !DILexicalBlock(scope: !8956, file: !618, line: 248, column: 12)
!8994 = !DILocation(line: 250, column: 2, scope: !8993)
!8995 = !DILocation(line: 250, column: 9, scope: !8993)
!8996 = !DILocation(line: 250, column: 13, scope: !8993)
!8997 = !DILocation(line: 250, column: 11, scope: !8993)
!8998 = !DILocation(line: 251, column: 19, scope: !8999)
!8999 = distinct !DILexicalBlock(scope: !8993, file: !618, line: 250, column: 16)
!9000 = !DILocation(line: 251, column: 26, scope: !8999)
!9001 = !DILocation(line: 251, column: 10, scope: !8999)
!9002 = !DILocation(line: 251, column: 8, scope: !8999)
!9003 = !DILocation(line: 252, column: 10, scope: !9004)
!9004 = distinct !DILexicalBlock(scope: !8999, file: !618, line: 252, column: 10)
!9005 = !DILocation(line: 252, column: 12, scope: !9004)
!9006 = !DILocation(line: 252, column: 10, scope: !8999)
!9007 = !DILocation(line: 253, column: 8, scope: !9008)
!9008 = distinct !DILexicalBlock(scope: !9004, file: !618, line: 252, column: 19)
!9009 = !DILocation(line: 254, column: 3, scope: !9008)
!9010 = !DILocation(line: 255, column: 11, scope: !9011)
!9011 = distinct !DILexicalBlock(scope: !9012, file: !618, line: 255, column: 11)
!9012 = distinct !DILexicalBlock(scope: !9008, file: !618, line: 254, column: 6)
!9013 = !DILocation(line: 255, column: 20, scope: !9011)
!9014 = !DILocation(line: 255, column: 18, scope: !9011)
!9015 = !DILocation(line: 255, column: 11, scope: !9012)
!9016 = !DILocation(line: 255, column: 36, scope: !9011)
!9017 = !DILocation(line: 255, column: 30, scope: !9011)
!9018 = !DILocation(line: 255, column: 28, scope: !9011)
!9019 = !DILocation(line: 255, column: 26, scope: !9011)
!9020 = !DILocation(line: 256, column: 36, scope: !9011)
!9021 = !DILocation(line: 256, column: 30, scope: !9011)
!9022 = !DILocation(line: 256, column: 28, scope: !9011)
!9023 = !DILocation(line: 257, column: 12, scope: !9012)
!9024 = !DILocation(line: 258, column: 3, scope: !9012)
!9025 = !DILocation(line: 258, column: 12, scope: !9008)
!9026 = !DILocation(line: 258, column: 14, scope: !9008)
!9027 = distinct !{!9027, !9009, !9028, !816}
!9028 = !DILocation(line: 258, column: 19, scope: !9008)
!9029 = !DILocation(line: 259, column: 6, scope: !9008)
!9030 = !DILocation(line: 260, column: 27, scope: !8999)
!9031 = !DILocation(line: 260, column: 20, scope: !8999)
!9032 = !DILocation(line: 260, column: 14, scope: !8999)
!9033 = !DILocation(line: 260, column: 6, scope: !8999)
!9034 = !DILocation(line: 261, column: 10, scope: !9035)
!9035 = distinct !DILexicalBlock(scope: !8999, file: !618, line: 261, column: 10)
!9036 = !DILocation(line: 261, column: 12, scope: !9035)
!9037 = !DILocation(line: 261, column: 10, scope: !8999)
!9038 = !DILocation(line: 262, column: 12, scope: !9039)
!9039 = distinct !DILexicalBlock(scope: !9040, file: !618, line: 262, column: 12)
!9040 = distinct !DILexicalBlock(scope: !9035, file: !618, line: 261, column: 18)
!9041 = !DILocation(line: 262, column: 14, scope: !9039)
!9042 = !DILocation(line: 262, column: 12, scope: !9040)
!9043 = !DILocation(line: 262, column: 22, scope: !9039)
!9044 = !DILocation(line: 262, column: 20, scope: !9039)
!9045 = !DILocation(line: 263, column: 12, scope: !9046)
!9046 = distinct !DILexicalBlock(scope: !9039, file: !618, line: 263, column: 12)
!9047 = !DILocation(line: 263, column: 14, scope: !9046)
!9048 = !DILocation(line: 263, column: 12, scope: !9039)
!9049 = !DILocation(line: 263, column: 24, scope: !9046)
!9050 = !DILocation(line: 263, column: 35, scope: !9046)
!9051 = !DILocation(line: 263, column: 22, scope: !9046)
!9052 = !DILocation(line: 263, column: 20, scope: !9046)
!9053 = !DILocation(line: 264, column: 24, scope: !9046)
!9054 = !DILocation(line: 264, column: 38, scope: !9046)
!9055 = !DILocation(line: 264, column: 22, scope: !9046)
!9056 = !DILocation(line: 265, column: 3, scope: !9040)
!9057 = !DILocation(line: 265, column: 10, scope: !9040)
!9058 = !DILocation(line: 265, column: 14, scope: !9040)
!9059 = !DILocation(line: 265, column: 27, scope: !9040)
!9060 = !DILocation(line: 265, column: 20, scope: !9040)
!9061 = !DILocation(line: 265, column: 31, scope: !9040)
!9062 = distinct !{!9062, !9056, !9063, !816}
!9063 = !DILocation(line: 265, column: 33, scope: !9040)
!9064 = !DILocation(line: 266, column: 6, scope: !9040)
!9065 = !DILocation(line: 266, column: 26, scope: !9035)
!9066 = !DILocation(line: 266, column: 28, scope: !9035)
!9067 = !DILocation(line: 266, column: 20, scope: !9035)
!9068 = !DILocation(line: 266, column: 13, scope: !9035)
!9069 = !DILocation(line: 266, column: 24, scope: !9035)
!9070 = distinct !{!9070, !8994, !9071, !816}
!9071 = !DILocation(line: 267, column: 2, scope: !8993)
!9072 = !DILocation(line: 268, column: 2, scope: !8993)
!9073 = !DILocation(line: 268, column: 9, scope: !8993)
!9074 = !DILocation(line: 268, column: 11, scope: !8993)
!9075 = !DILocation(line: 268, column: 24, scope: !8993)
!9076 = !DILocation(line: 268, column: 17, scope: !8993)
!9077 = !DILocation(line: 268, column: 28, scope: !8993)
!9078 = distinct !{!9078, !9072, !9079, !816}
!9079 = !DILocation(line: 268, column: 30, scope: !8993)
!9080 = !DILocation(line: 269, column: 2, scope: !8993)
!9081 = !DILocation(line: 271, column: 1, scope: !8944)
!9082 = distinct !DISubprogram(name: "make_table", scope: !618, file: !618, line: 141, type: !9083, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !617, retainedNodes: !271)
!9083 = !DISubroutineType(types: !9084)
!9084 = !{null, !28, !312, !28, !493}
!9085 = !DILocalVariable(name: "nchar", arg: 1, scope: !9082, file: !618, line: 142, type: !28)
!9086 = !DILocation(line: 142, column: 9, scope: !9082)
!9087 = !DILocalVariable(name: "bitlen", arg: 2, scope: !9082, file: !618, line: 143, type: !312)
!9088 = !DILocation(line: 143, column: 9, scope: !9082)
!9089 = !DILocalVariable(name: "tablebits", arg: 3, scope: !9082, file: !618, line: 144, type: !28)
!9090 = !DILocation(line: 144, column: 9, scope: !9082)
!9091 = !DILocalVariable(name: "table", arg: 4, scope: !9082, file: !618, line: 145, type: !493)
!9092 = !DILocation(line: 145, column: 9, scope: !9082)
!9093 = !DILocalVariable(name: "count", scope: !9082, file: !618, line: 147, type: !561)
!9094 = !DILocation(line: 147, column: 9, scope: !9082)
!9095 = !DILocalVariable(name: "weight", scope: !9082, file: !618, line: 147, type: !561)
!9096 = !DILocation(line: 147, column: 20, scope: !9082)
!9097 = !DILocalVariable(name: "start", scope: !9082, file: !618, line: 147, type: !9098)
!9098 = !DICompositeType(tag: DW_TAG_array_type, baseType: !98, size: 288, elements: !273)
!9099 = !DILocation(line: 147, column: 32, scope: !9082)
!9100 = !DILocalVariable(name: "p", scope: !9082, file: !618, line: 147, type: !493)
!9101 = !DILocation(line: 147, column: 44, scope: !9082)
!9102 = !DILocalVariable(name: "i", scope: !9082, file: !618, line: 148, type: !7)
!9103 = !DILocation(line: 148, column: 14, scope: !9082)
!9104 = !DILocalVariable(name: "k", scope: !9082, file: !618, line: 148, type: !7)
!9105 = !DILocation(line: 148, column: 17, scope: !9082)
!9106 = !DILocalVariable(name: "len", scope: !9082, file: !618, line: 148, type: !7)
!9107 = !DILocation(line: 148, column: 20, scope: !9082)
!9108 = !DILocalVariable(name: "ch", scope: !9082, file: !618, line: 148, type: !7)
!9109 = !DILocation(line: 148, column: 25, scope: !9082)
!9110 = !DILocalVariable(name: "jutbits", scope: !9082, file: !618, line: 148, type: !7)
!9111 = !DILocation(line: 148, column: 29, scope: !9082)
!9112 = !DILocalVariable(name: "avail", scope: !9082, file: !618, line: 148, type: !7)
!9113 = !DILocation(line: 148, column: 38, scope: !9082)
!9114 = !DILocalVariable(name: "nextcode", scope: !9082, file: !618, line: 148, type: !7)
!9115 = !DILocation(line: 148, column: 45, scope: !9082)
!9116 = !DILocalVariable(name: "mask", scope: !9082, file: !618, line: 148, type: !7)
!9117 = !DILocation(line: 148, column: 55, scope: !9082)
!9118 = !DILocation(line: 150, column: 12, scope: !9119)
!9119 = distinct !DILexicalBlock(scope: !9082, file: !618, line: 150, column: 5)
!9120 = !DILocation(line: 150, column: 10, scope: !9119)
!9121 = !DILocation(line: 150, column: 17, scope: !9122)
!9122 = distinct !DILexicalBlock(scope: !9119, file: !618, line: 150, column: 5)
!9123 = !DILocation(line: 150, column: 19, scope: !9122)
!9124 = !DILocation(line: 150, column: 5, scope: !9119)
!9125 = !DILocation(line: 150, column: 37, scope: !9122)
!9126 = !DILocation(line: 150, column: 31, scope: !9122)
!9127 = !DILocation(line: 150, column: 40, scope: !9122)
!9128 = !DILocation(line: 150, column: 27, scope: !9122)
!9129 = !DILocation(line: 150, column: 5, scope: !9122)
!9130 = distinct !{!9130, !9124, !9131, !816}
!9131 = !DILocation(line: 150, column: 42, scope: !9119)
!9132 = !DILocation(line: 151, column: 12, scope: !9133)
!9133 = distinct !DILexicalBlock(scope: !9082, file: !618, line: 151, column: 5)
!9134 = !DILocation(line: 151, column: 10, scope: !9133)
!9135 = !DILocation(line: 151, column: 17, scope: !9136)
!9136 = distinct !DILexicalBlock(scope: !9133, file: !618, line: 151, column: 5)
!9137 = !DILocation(line: 151, column: 31, scope: !9136)
!9138 = !DILocation(line: 151, column: 19, scope: !9136)
!9139 = !DILocation(line: 151, column: 5, scope: !9133)
!9140 = !DILocation(line: 151, column: 49, scope: !9136)
!9141 = !DILocation(line: 151, column: 56, scope: !9136)
!9142 = !DILocation(line: 151, column: 43, scope: !9136)
!9143 = !DILocation(line: 151, column: 59, scope: !9136)
!9144 = !DILocation(line: 151, column: 39, scope: !9136)
!9145 = !DILocation(line: 151, column: 5, scope: !9136)
!9146 = distinct !{!9146, !9139, !9147, !816}
!9147 = !DILocation(line: 151, column: 59, scope: !9133)
!9148 = !DILocation(line: 153, column: 5, scope: !9082)
!9149 = !DILocation(line: 153, column: 14, scope: !9082)
!9150 = !DILocation(line: 154, column: 12, scope: !9151)
!9151 = distinct !DILexicalBlock(scope: !9082, file: !618, line: 154, column: 5)
!9152 = !DILocation(line: 154, column: 10, scope: !9151)
!9153 = !DILocation(line: 154, column: 17, scope: !9154)
!9154 = distinct !DILexicalBlock(scope: !9151, file: !618, line: 154, column: 5)
!9155 = !DILocation(line: 154, column: 19, scope: !9154)
!9156 = !DILocation(line: 154, column: 5, scope: !9151)
!9157 = !DILocation(line: 155, column: 23, scope: !9154)
!9158 = !DILocation(line: 155, column: 17, scope: !9154)
!9159 = !DILocation(line: 155, column: 35, scope: !9154)
!9160 = !DILocation(line: 155, column: 29, scope: !9154)
!9161 = !DILocation(line: 155, column: 47, scope: !9154)
!9162 = !DILocation(line: 155, column: 45, scope: !9154)
!9163 = !DILocation(line: 155, column: 38, scope: !9154)
!9164 = !DILocation(line: 155, column: 26, scope: !9154)
!9165 = !DILocation(line: 155, column: 8, scope: !9154)
!9166 = !DILocation(line: 155, column: 10, scope: !9154)
!9167 = !DILocation(line: 155, column: 2, scope: !9154)
!9168 = !DILocation(line: 155, column: 15, scope: !9154)
!9169 = !DILocation(line: 154, column: 27, scope: !9154)
!9170 = !DILocation(line: 154, column: 5, scope: !9154)
!9171 = distinct !{!9171, !9156, !9172, !816}
!9172 = !DILocation(line: 155, column: 49, scope: !9151)
!9173 = !DILocation(line: 156, column: 10, scope: !9174)
!9174 = distinct !DILexicalBlock(scope: !9082, file: !618, line: 156, column: 9)
!9175 = !DILocation(line: 156, column: 20, scope: !9174)
!9176 = !DILocation(line: 156, column: 30, scope: !9174)
!9177 = !DILocation(line: 156, column: 9, scope: !9082)
!9178 = !DILocation(line: 157, column: 2, scope: !9174)
!9179 = !DILocation(line: 159, column: 20, scope: !9082)
!9180 = !DILocation(line: 159, column: 18, scope: !9082)
!9181 = !DILocation(line: 159, column: 13, scope: !9082)
!9182 = !DILocation(line: 160, column: 12, scope: !9183)
!9183 = distinct !DILexicalBlock(scope: !9082, file: !618, line: 160, column: 5)
!9184 = !DILocation(line: 160, column: 10, scope: !9183)
!9185 = !DILocation(line: 160, column: 17, scope: !9186)
!9186 = distinct !DILexicalBlock(scope: !9183, file: !618, line: 160, column: 5)
!9187 = !DILocation(line: 160, column: 32, scope: !9186)
!9188 = !DILocation(line: 160, column: 19, scope: !9186)
!9189 = !DILocation(line: 160, column: 5, scope: !9183)
!9190 = !DILocation(line: 161, column: 15, scope: !9191)
!9191 = distinct !DILexicalBlock(scope: !9186, file: !618, line: 160, column: 48)
!9192 = !DILocation(line: 161, column: 8, scope: !9191)
!9193 = !DILocation(line: 161, column: 2, scope: !9191)
!9194 = !DILocation(line: 161, column: 11, scope: !9191)
!9195 = !DILocation(line: 162, column: 31, scope: !9191)
!9196 = !DILocation(line: 162, column: 43, scope: !9191)
!9197 = !DILocation(line: 162, column: 41, scope: !9191)
!9198 = !DILocation(line: 162, column: 27, scope: !9191)
!9199 = !DILocation(line: 162, column: 14, scope: !9191)
!9200 = !DILocation(line: 162, column: 9, scope: !9191)
!9201 = !DILocation(line: 162, column: 2, scope: !9191)
!9202 = !DILocation(line: 162, column: 12, scope: !9191)
!9203 = !DILocation(line: 163, column: 5, scope: !9191)
!9204 = !DILocation(line: 160, column: 44, scope: !9186)
!9205 = !DILocation(line: 160, column: 5, scope: !9186)
!9206 = distinct !{!9206, !9189, !9207, !816}
!9207 = !DILocation(line: 163, column: 5, scope: !9183)
!9208 = !DILocation(line: 164, column: 5, scope: !9082)
!9209 = !DILocation(line: 164, column: 12, scope: !9082)
!9210 = !DILocation(line: 164, column: 14, scope: !9082)
!9211 = !DILocation(line: 165, column: 36, scope: !9212)
!9212 = distinct !DILexicalBlock(scope: !9082, file: !618, line: 164, column: 21)
!9213 = !DILocation(line: 165, column: 34, scope: !9212)
!9214 = !DILocation(line: 165, column: 27, scope: !9212)
!9215 = !DILocation(line: 165, column: 14, scope: !9212)
!9216 = !DILocation(line: 165, column: 9, scope: !9212)
!9217 = !DILocation(line: 165, column: 2, scope: !9212)
!9218 = !DILocation(line: 165, column: 12, scope: !9212)
!9219 = !DILocation(line: 166, column: 3, scope: !9212)
!9220 = distinct !{!9220, !9208, !9221, !816}
!9221 = !DILocation(line: 167, column: 5, scope: !9082)
!9222 = !DILocation(line: 169, column: 15, scope: !9082)
!9223 = !DILocation(line: 169, column: 25, scope: !9082)
!9224 = !DILocation(line: 169, column: 9, scope: !9082)
!9225 = !DILocation(line: 169, column: 33, scope: !9082)
!9226 = !DILocation(line: 169, column: 30, scope: !9082)
!9227 = !DILocation(line: 169, column: 7, scope: !9082)
!9228 = !DILocation(line: 170, column: 9, scope: !9229)
!9229 = distinct !DILexicalBlock(scope: !9082, file: !618, line: 170, column: 9)
!9230 = !DILocation(line: 170, column: 11, scope: !9229)
!9231 = !DILocation(line: 170, column: 9, scope: !9082)
!9232 = !DILocation(line: 171, column: 11, scope: !9233)
!9233 = distinct !DILexicalBlock(scope: !9229, file: !618, line: 170, column: 17)
!9234 = !DILocation(line: 171, column: 8, scope: !9233)
!9235 = !DILocation(line: 171, column: 4, scope: !9233)
!9236 = !DILocation(line: 172, column: 2, scope: !9233)
!9237 = !DILocation(line: 172, column: 9, scope: !9233)
!9238 = !DILocation(line: 172, column: 14, scope: !9233)
!9239 = !DILocation(line: 172, column: 11, scope: !9233)
!9240 = !DILocation(line: 172, column: 17, scope: !9233)
!9241 = !DILocation(line: 172, column: 24, scope: !9233)
!9242 = !DILocation(line: 172, column: 28, scope: !9233)
!9243 = distinct !{!9243, !9236, !9244, !816}
!9244 = !DILocation(line: 172, column: 30, scope: !9233)
!9245 = !DILocation(line: 173, column: 5, scope: !9233)
!9246 = !DILocation(line: 175, column: 13, scope: !9082)
!9247 = !DILocation(line: 175, column: 11, scope: !9082)
!9248 = !DILocation(line: 176, column: 34, scope: !9082)
!9249 = !DILocation(line: 176, column: 32, scope: !9082)
!9250 = !DILocation(line: 176, column: 25, scope: !9082)
!9251 = !DILocation(line: 176, column: 10, scope: !9082)
!9252 = !DILocation(line: 177, column: 13, scope: !9253)
!9253 = distinct !DILexicalBlock(scope: !9082, file: !618, line: 177, column: 5)
!9254 = !DILocation(line: 177, column: 10, scope: !9253)
!9255 = !DILocation(line: 177, column: 18, scope: !9256)
!9256 = distinct !DILexicalBlock(scope: !9253, file: !618, line: 177, column: 5)
!9257 = !DILocation(line: 177, column: 33, scope: !9256)
!9258 = !DILocation(line: 177, column: 21, scope: !9256)
!9259 = !DILocation(line: 177, column: 5, scope: !9253)
!9260 = !DILocation(line: 178, column: 13, scope: !9261)
!9261 = distinct !DILexicalBlock(scope: !9262, file: !618, line: 178, column: 6)
!9262 = distinct !DILexicalBlock(scope: !9256, file: !618, line: 177, column: 46)
!9263 = !DILocation(line: 178, column: 20, scope: !9261)
!9264 = !DILocation(line: 178, column: 11, scope: !9261)
!9265 = !DILocation(line: 178, column: 25, scope: !9261)
!9266 = !DILocation(line: 178, column: 6, scope: !9262)
!9267 = !DILocation(line: 178, column: 31, scope: !9261)
!9268 = !DILocation(line: 179, column: 19, scope: !9262)
!9269 = !DILocation(line: 179, column: 13, scope: !9262)
!9270 = !DILocation(line: 179, column: 33, scope: !9262)
!9271 = !DILocation(line: 179, column: 26, scope: !9262)
!9272 = !DILocation(line: 179, column: 24, scope: !9262)
!9273 = !DILocation(line: 179, column: 11, scope: !9262)
!9274 = !DILocation(line: 180, column: 6, scope: !9275)
!9275 = distinct !DILexicalBlock(scope: !9262, file: !618, line: 180, column: 6)
!9276 = !DILocation(line: 180, column: 23, scope: !9275)
!9277 = !DILocation(line: 180, column: 10, scope: !9275)
!9278 = !DILocation(line: 180, column: 6, scope: !9262)
!9279 = !DILocation(line: 181, column: 21, scope: !9280)
!9280 = distinct !DILexicalBlock(scope: !9281, file: !618, line: 181, column: 6)
!9281 = distinct !DILexicalBlock(scope: !9275, file: !618, line: 180, column: 34)
!9282 = !DILocation(line: 181, column: 15, scope: !9280)
!9283 = !DILocation(line: 181, column: 13, scope: !9280)
!9284 = !DILocation(line: 181, column: 11, scope: !9280)
!9285 = !DILocation(line: 181, column: 27, scope: !9286)
!9286 = distinct !DILexicalBlock(scope: !9280, file: !618, line: 181, column: 6)
!9287 = !DILocation(line: 181, column: 31, scope: !9286)
!9288 = !DILocation(line: 181, column: 29, scope: !9286)
!9289 = !DILocation(line: 181, column: 6, scope: !9280)
!9290 = !DILocation(line: 181, column: 57, scope: !9286)
!9291 = !DILocation(line: 181, column: 46, scope: !9286)
!9292 = !DILocation(line: 181, column: 52, scope: !9286)
!9293 = !DILocation(line: 181, column: 55, scope: !9286)
!9294 = !DILocation(line: 181, column: 42, scope: !9286)
!9295 = !DILocation(line: 181, column: 6, scope: !9286)
!9296 = distinct !{!9296, !9289, !9297, !816}
!9297 = !DILocation(line: 181, column: 57, scope: !9280)
!9298 = !DILocation(line: 182, column: 2, scope: !9281)
!9299 = !DILocation(line: 183, column: 16, scope: !9300)
!9300 = distinct !DILexicalBlock(scope: !9275, file: !618, line: 182, column: 9)
!9301 = !DILocation(line: 183, column: 10, scope: !9300)
!9302 = !DILocation(line: 183, column: 8, scope: !9300)
!9303 = !DILocation(line: 184, column: 11, scope: !9300)
!9304 = !DILocation(line: 184, column: 17, scope: !9300)
!9305 = !DILocation(line: 184, column: 22, scope: !9300)
!9306 = !DILocation(line: 184, column: 19, scope: !9300)
!9307 = !DILocation(line: 184, column: 8, scope: !9300)
!9308 = !DILocation(line: 185, column: 10, scope: !9300)
!9309 = !DILocation(line: 185, column: 16, scope: !9300)
!9310 = !DILocation(line: 185, column: 14, scope: !9300)
!9311 = !DILocation(line: 185, column: 8, scope: !9300)
!9312 = !DILocation(line: 186, column: 6, scope: !9300)
!9313 = !DILocation(line: 186, column: 13, scope: !9300)
!9314 = !DILocation(line: 186, column: 15, scope: !9300)
!9315 = !DILocation(line: 187, column: 8, scope: !9316)
!9316 = distinct !DILexicalBlock(scope: !9317, file: !618, line: 187, column: 7)
!9317 = distinct !DILexicalBlock(scope: !9300, file: !618, line: 186, column: 21)
!9318 = !DILocation(line: 187, column: 7, scope: !9316)
!9319 = !DILocation(line: 187, column: 10, scope: !9316)
!9320 = !DILocation(line: 187, column: 7, scope: !9317)
!9321 = !DILocation(line: 188, column: 27, scope: !9322)
!9322 = distinct !DILexicalBlock(scope: !9316, file: !618, line: 187, column: 16)
!9323 = !DILocation(line: 188, column: 22, scope: !9322)
!9324 = !DILocation(line: 188, column: 34, scope: !9322)
!9325 = !DILocation(line: 188, column: 13, scope: !9322)
!9326 = !DILocation(line: 188, column: 7, scope: !9322)
!9327 = !DILocation(line: 188, column: 20, scope: !9322)
!9328 = !DILocation(line: 189, column: 17, scope: !9322)
!9329 = !DILocation(line: 189, column: 12, scope: !9322)
!9330 = !DILocation(line: 189, column: 8, scope: !9322)
!9331 = !DILocation(line: 189, column: 10, scope: !9322)
!9332 = !DILocation(line: 190, column: 3, scope: !9322)
!9333 = !DILocation(line: 191, column: 7, scope: !9334)
!9334 = distinct !DILexicalBlock(scope: !9317, file: !618, line: 191, column: 7)
!9335 = !DILocation(line: 191, column: 11, scope: !9334)
!9336 = !DILocation(line: 191, column: 9, scope: !9334)
!9337 = !DILocation(line: 191, column: 7, scope: !9317)
!9338 = !DILocation(line: 191, column: 29, scope: !9334)
!9339 = !DILocation(line: 191, column: 28, scope: !9334)
!9340 = !DILocation(line: 191, column: 22, scope: !9334)
!9341 = !DILocation(line: 191, column: 19, scope: !9334)
!9342 = !DILocation(line: 191, column: 17, scope: !9334)
!9343 = !DILocation(line: 192, column: 28, scope: !9334)
!9344 = !DILocation(line: 192, column: 27, scope: !9334)
!9345 = !DILocation(line: 192, column: 22, scope: !9334)
!9346 = !DILocation(line: 192, column: 19, scope: !9334)
!9347 = !DILocation(line: 193, column: 5, scope: !9317)
!9348 = !DILocation(line: 193, column: 14, scope: !9317)
!9349 = distinct !{!9349, !9312, !9350, !816}
!9350 = !DILocation(line: 194, column: 6, scope: !9300)
!9351 = !DILocation(line: 195, column: 11, scope: !9300)
!9352 = !DILocation(line: 195, column: 7, scope: !9300)
!9353 = !DILocation(line: 195, column: 9, scope: !9300)
!9354 = !DILocation(line: 197, column: 15, scope: !9262)
!9355 = !DILocation(line: 197, column: 8, scope: !9262)
!9356 = !DILocation(line: 197, column: 2, scope: !9262)
!9357 = !DILocation(line: 197, column: 13, scope: !9262)
!9358 = !DILocation(line: 198, column: 5, scope: !9262)
!9359 = !DILocation(line: 177, column: 42, scope: !9256)
!9360 = !DILocation(line: 177, column: 5, scope: !9256)
!9361 = distinct !{!9361, !9259, !9362, !816}
!9362 = !DILocation(line: 198, column: 5, scope: !9253)
!9363 = !DILocation(line: 199, column: 1, scope: !9082)
!9364 = distinct !DISubprogram(name: "huf_decode_start", scope: !618, file: !618, line: 318, type: !269, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !617, retainedNodes: !271)
!9365 = !DILocation(line: 320, column: 5, scope: !9364)
!9366 = !DILocation(line: 320, column: 32, scope: !9364)
!9367 = !DILocation(line: 321, column: 1, scope: !9364)
!9368 = distinct !DISubprogram(name: "init_getbits", scope: !618, file: !618, line: 131, type: !269, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !617, retainedNodes: !271)
!9369 = !DILocation(line: 133, column: 12, scope: !9368)
!9370 = !DILocation(line: 133, column: 28, scope: !9368)
!9371 = !DILocation(line: 133, column: 43, scope: !9368)
!9372 = !DILocation(line: 134, column: 5, scope: !9368)
!9373 = !DILocation(line: 135, column: 1, scope: !9368)
